{"version":3,"file":"desktop.umd.min.js","sources":["../node_modules/@glue42/core/dist/core.es.js","../src/activity/entities/activityEntity.ts","../src/activity/helpers/util.ts","../src/activity/entities/activityType.ts","../src/activity/entities/windowType.ts","../src/activity/contracts/entityEvent.ts","../src/activity/core/activityAGM.ts","../src/activity/entities/attachedActivityDescriptor.ts","../src/activity/helpers/promiseExtensions.ts","../src/activity/entities/activity.ts","../src/activity/helpers/logger.ts","../src/activity/entities/activityWindow.ts","../src/activity/contracts/activityStatus.ts","../src/activity/bridges/gw3Bridge.ts","../src/activity/API/activityMyAPI.ts","../src/activity/helpers/readyMarker.ts","../src/activity/helpers/entityObservableCollection.ts","../src/activity/core/activityManager.ts","../src/activity/API/activityManagementAPI.ts","../src/activity/API/activityAPI.ts","../src/activity/activityModule.ts","../src/app-manager/const/agm-names.ts","../node_modules/callback-registry/lib/index.js","../src/app-manager/helper.ts","../src/app-manager/application.ts","../src/app-manager/instance.ts","../src/app-manager/app-manager.ts","../src/app-manager/entitlements.ts","../src/app-manager/in-memory.ts","../src/app-manager/main.ts","../src/app-manager/snapshot.ts","../src/app-manager/data-subscription.ts","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/encode.js","../node_modules/shortid/lib/decode.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/index.js","../src/windows/jumpList/manager.ts","../src/windows/store.ts","../src/utils.ts","../src/windows/jumpList/actions.ts","../src/windows/jumpList/categories.ts","../src/windows/jumpList/main.ts","../src/windows/window.ts","../src/windows/environment/gd/executor.ts","../src/windows/environment/helpers.ts","../src/windows/environment/gd/gd.ts","../src/windows/group.ts","../src/windows/groups.ts","../src/windows/main.ts","../src/windows/environment/detector.ts","../src/layouts/store.ts","../src/layouts/contextProvider.ts","../src/layouts/transform.ts","../src/layouts/layout.ts","../src/layouts/layouts.ts","../src/layouts/stream/acsStream.ts","../src/layouts/main.ts","../src/displays/displayManager.ts","../src/channels/agm.ts","../src/channels/contexts.ts","../src/channels/channels.ts","../src/channels/main.ts","../src/hotkeys/hotkeys.ts","../src/config.ts","../src/notifications/notification.ts","../src/notifications/panel.ts","../src/notifications/main.ts","../src/themes/themes.ts","../src/intents/intents.ts","../src/prefs/index.ts","../src/cookies/index.ts","../src/glue.ts","../src/factoryCallInfo.ts","../src/hotkeys/main.ts","../src/themes/main.ts","../src/cookies/main.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nvar MetricTypes = {\r\n    STRING: 1,\r\n    NUMBER: 2,\r\n    TIMESTAMP: 3,\r\n    OBJECT: 4\r\n};\n\nfunction getMetricTypeByValue(metric) {\r\n    if (metric.type === MetricTypes.TIMESTAMP) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (metric.type === MetricTypes.NUMBER) {\r\n        return \"number\";\r\n    }\r\n    else if (metric.type === MetricTypes.STRING) {\r\n        return \"string\";\r\n    }\r\n    else if (metric.type === MetricTypes.OBJECT) {\r\n        return \"object\";\r\n    }\r\n    return \"unknown\";\r\n}\r\nfunction getTypeByValue(value) {\r\n    if (value.constructor === Date) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return \"number\";\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        return \"string\";\r\n    }\r\n    else if (typeof value === \"object\") {\r\n        return \"object\";\r\n    }\r\n    else {\r\n        return \"string\";\r\n    }\r\n}\r\nfunction serializeMetric(metric) {\r\n    var serializedMetrics = {};\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"object\") {\r\n        var values = Object.keys(metric.value).reduce(function (memo, key) {\r\n            var innerType = getTypeByValue(metric.value[key]);\r\n            if (innerType === \"object\") {\r\n                var composite = defineNestedComposite(metric.value[key]);\r\n                memo[key] = {\r\n                    type: \"object\",\r\n                    description: \"\",\r\n                    context: {},\r\n                    composite: composite,\r\n                };\r\n            }\r\n            else {\r\n                memo[key] = {\r\n                    type: innerType,\r\n                    description: \"\",\r\n                    context: {},\r\n                };\r\n            }\r\n            return memo;\r\n        }, {});\r\n        serializedMetrics.composite = values;\r\n    }\r\n    serializedMetrics.name = normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name);\r\n    serializedMetrics.type = type;\r\n    serializedMetrics.description = metric.description;\r\n    serializedMetrics.context = {};\r\n    return serializedMetrics;\r\n}\r\nfunction defineNestedComposite(values) {\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var type = getTypeByValue(values[key]);\r\n        if (type === \"object\") {\r\n            memo[key] = {\r\n                type: \"object\",\r\n                description: \"\",\r\n                context: {},\r\n                composite: defineNestedComposite(values[key]),\r\n            };\r\n        }\r\n        else {\r\n            memo[key] = {\r\n                type: type,\r\n                description: \"\",\r\n                context: {},\r\n            };\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction normalizeMetricName(name) {\r\n    if (typeof name !== \"undefined\" && name.length > 0 && name[0] !== \"/\") {\r\n        return \"/\" + name;\r\n    }\r\n    else {\r\n        return name;\r\n    }\r\n}\r\nfunction getMetricValueByType(metric) {\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"timestamp\") {\r\n        return Date.now();\r\n    }\r\n    else {\r\n        return publishNestedComposite(metric.value);\r\n    }\r\n}\r\nfunction publishNestedComposite(values) {\r\n    if (typeof values !== \"object\") {\r\n        return values;\r\n    }\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var value = values[key];\r\n        if (typeof value === \"object\" && value.constructor !== Date) {\r\n            memo[key] = publishNestedComposite(value);\r\n        }\r\n        else if (value.constructor === Date) {\r\n            memo[key] = new Date(value).getTime();\r\n        }\r\n        else if (value.constructor === Boolean) {\r\n            memo[key] = value.toString();\r\n        }\r\n        else {\r\n            memo[key] = value;\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction flatten(arr) {\r\n    return arr.reduce(function (flat, toFlatten) {\r\n        return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\r\n    }, []);\r\n}\r\nfunction getHighestState(arr) {\r\n    return arr.sort(function (a, b) {\r\n        if (!a.state) {\r\n            return 1;\r\n        }\r\n        if (!b.state) {\r\n            return -1;\r\n        }\r\n        return b.state - a.state;\r\n    })[0];\r\n}\r\nfunction aggregateDescription(arr) {\r\n    var msg = \"\";\r\n    arr.forEach(function (m, idx, a) {\r\n        var path = m.path.join(\".\");\r\n        if (idx === a.length - 1) {\r\n            msg += path + \".\" + m.name + \": \" + m.description;\r\n        }\r\n        else {\r\n            msg += path + \".\" + m.name + \": \" + m.description + \",\";\r\n        }\r\n    });\r\n    if (msg.length > 100) {\r\n        return msg.slice(0, 100) + \"...\";\r\n    }\r\n    else {\r\n        return msg;\r\n    }\r\n}\r\nfunction composeMsgForRootStateMetric(system) {\r\n    var aggregatedState = system.root.getAggregateState();\r\n    var merged = flatten(aggregatedState);\r\n    var highestState = getHighestState(merged);\r\n    var aggregateDesc = aggregateDescription(merged);\r\n    return {\r\n        description: aggregateDesc,\r\n        value: highestState.state,\r\n    };\r\n}\n\nfunction gw3 (connection, config) {\r\n    var _this = this;\r\n    if (!connection || typeof connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n    var joinPromise;\r\n    var session;\r\n    var init = function (repo) {\r\n        var resolveReadyPromise;\r\n        joinPromise = new Promise(function (resolve) {\r\n            resolveReadyPromise = resolve;\r\n        });\r\n        session = connection.domain(\"metrics\");\r\n        session.onJoined(function (reconnect) {\r\n            if (!reconnect && resolveReadyPromise) {\r\n                resolveReadyPromise();\r\n                resolveReadyPromise = undefined;\r\n            }\r\n            var rootStateMetric = {\r\n                name: \"/State\",\r\n                type: \"object\",\r\n                composite: {\r\n                    Description: {\r\n                        type: \"string\",\r\n                        description: \"\",\r\n                    },\r\n                    Value: {\r\n                        type: \"number\",\r\n                        description: \"\",\r\n                    },\r\n                },\r\n                description: \"System state\",\r\n                context: {},\r\n            };\r\n            var defineRootMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [rootStateMetric],\r\n            };\r\n            session.send(defineRootMetricsMsg);\r\n            if (reconnect) {\r\n                replayRepo(repo);\r\n            }\r\n        });\r\n        session.join({\r\n            system: config.system,\r\n            service: config.service,\r\n            instance: config.instance\r\n        });\r\n    };\r\n    var replayRepo = function (repo) {\r\n        replaySystem(repo.root);\r\n    };\r\n    var replaySystem = function (system) {\r\n        createSystem(system);\r\n        system.metrics.forEach(function (m) {\r\n            createMetric(m);\r\n        });\r\n        system.subSystems.forEach(function (ss) {\r\n            replaySystem(ss);\r\n        });\r\n    };\r\n    var createSystem = function (system) { return __awaiter(_this, void 0, void 0, function () {\r\n        var metric, createMetricsMsg;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (system.parent === undefined) {\r\n                        return [2];\r\n                    }\r\n                    return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    metric = {\r\n                        name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                        type: \"object\",\r\n                        composite: {\r\n                            Description: {\r\n                                type: \"string\",\r\n                                description: \"\",\r\n                            },\r\n                            Value: {\r\n                                type: \"number\",\r\n                                description: \"\",\r\n                            },\r\n                        },\r\n                        description: \"System state\",\r\n                        context: {},\r\n                    };\r\n                    createMetricsMsg = {\r\n                        type: \"define\",\r\n                        metrics: [metric],\r\n                    };\r\n                    session.send(createMetricsMsg);\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var updateSystem = function (system, state) { return __awaiter(_this, void 0, void 0, function () {\r\n        var shadowedUpdateMetric, stateObj, rootMetric;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    shadowedUpdateMetric = {\r\n                        type: \"publish\",\r\n                        values: [{\r\n                                name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                                value: {\r\n                                    Description: state.description,\r\n                                    Value: state.state,\r\n                                },\r\n                                timestamp: Date.now(),\r\n                            }],\r\n                    };\r\n                    session.send(shadowedUpdateMetric);\r\n                    stateObj = composeMsgForRootStateMetric(system);\r\n                    rootMetric = {\r\n                        type: \"publish\",\r\n                        peer_id: connection.peerId,\r\n                        values: [{\r\n                                name: \"/State\",\r\n                                value: {\r\n                                    Description: stateObj.description,\r\n                                    Value: stateObj.value,\r\n                                },\r\n                                timestamp: Date.now(),\r\n                            }],\r\n                    };\r\n                    session.send(rootMetric);\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var createMetric = function (metric) { return __awaiter(_this, void 0, void 0, function () {\r\n        var metricClone, m, createMetricsMsg;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    metricClone = cloneMetric(metric);\r\n                    return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    m = serializeMetric(metricClone);\r\n                    createMetricsMsg = {\r\n                        type: \"define\",\r\n                        metrics: [m],\r\n                    };\r\n                    session.send(createMetricsMsg);\r\n                    if (typeof metricClone.value !== \"undefined\") {\r\n                        updateMetricCore(metricClone);\r\n                    }\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var updateMetric = function (metric) { return __awaiter(_this, void 0, void 0, function () {\r\n        var metricClone;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    metricClone = cloneMetric(metric);\r\n                    return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    updateMetricCore(metricClone);\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var updateMetricCore = function (metric) {\r\n        if (canUpdate()) {\r\n            var value = getMetricValueByType(metric);\r\n            var publishMetricsMsg = {\r\n                type: \"publish\",\r\n                values: [{\r\n                        name: normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name),\r\n                        value: value,\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            return session.sendFireAndForget(publishMetricsMsg);\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    var cloneMetric = function (metric) {\r\n        var metricClone = __assign({}, metric);\r\n        if (typeof metric.value === \"object\" && metric.value !== null) {\r\n            metricClone.value = __assign({}, metric.value);\r\n        }\r\n        return metricClone;\r\n    };\r\n    var canUpdate = function () {\r\n        var _a;\r\n        try {\r\n            var func = (_a = config.canUpdateMetric) !== null && _a !== void 0 ? _a : (function () { return true; });\r\n            return func();\r\n        }\r\n        catch (_b) {\r\n            return true;\r\n        }\r\n    };\r\n    return {\r\n        init: init,\r\n        createSystem: createSystem,\r\n        updateSystem: updateSystem,\r\n        createMetric: createMetric,\r\n        updateMetric: updateMetric,\r\n    };\r\n}\n\nvar Helpers = {\r\n    validate: function (definition, parent, transport) {\r\n        if (definition === null || typeof definition !== \"object\") {\r\n            throw new Error(\"Missing definition\");\r\n        }\r\n        if (parent === null || typeof parent !== \"object\") {\r\n            throw new Error(\"Missing parent\");\r\n        }\r\n        if (transport === null || typeof transport !== \"object\") {\r\n            throw new Error(\"Missing transport\");\r\n        }\r\n    },\r\n};\n\nvar BaseMetric = (function () {\r\n    function BaseMetric(definition, system, transport, value, type) {\r\n        this.definition = definition;\r\n        this.system = system;\r\n        this.transport = transport;\r\n        this.value = value;\r\n        this.type = type;\r\n        this.path = [];\r\n        Helpers.validate(definition, system, transport);\r\n        this.path = system.path.slice(0);\r\n        this.path.push(system.name);\r\n        this.name = definition.name;\r\n        this.description = definition.description;\r\n        transport.createMetric(this);\r\n    }\r\n    Object.defineProperty(BaseMetric.prototype, \"repo\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this.system) === null || _a === void 0 ? void 0 : _a.repo;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseMetric.prototype, \"id\", {\r\n        get: function () { return this.system.path + \"/\" + name; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BaseMetric.prototype.update = function (newValue) {\r\n        this.value = newValue;\r\n        return this.transport.updateMetric(this);\r\n    };\r\n    return BaseMetric;\r\n}());\n\nvar NumberMetric = (function (_super) {\r\n    __extends(NumberMetric, _super);\r\n    function NumberMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.NUMBER) || this;\r\n    }\r\n    NumberMetric.prototype.incrementBy = function (num) {\r\n        this.update(this.value + num);\r\n    };\r\n    NumberMetric.prototype.increment = function () {\r\n        this.incrementBy(1);\r\n    };\r\n    NumberMetric.prototype.decrement = function () {\r\n        this.incrementBy(-1);\r\n    };\r\n    NumberMetric.prototype.decrementBy = function (num) {\r\n        this.incrementBy(num * -1);\r\n    };\r\n    return NumberMetric;\r\n}(BaseMetric));\n\nvar ObjectMetric = (function (_super) {\r\n    __extends(ObjectMetric, _super);\r\n    function ObjectMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.OBJECT) || this;\r\n    }\r\n    ObjectMetric.prototype.update = function (newValue) {\r\n        this.mergeValues(newValue);\r\n        return this.transport.updateMetric(this);\r\n    };\r\n    ObjectMetric.prototype.mergeValues = function (values) {\r\n        var _this = this;\r\n        return Object.keys(this.value).forEach(function (k) {\r\n            if (typeof values[k] !== \"undefined\") {\r\n                _this.value[k] = values[k];\r\n            }\r\n        });\r\n    };\r\n    return ObjectMetric;\r\n}(BaseMetric));\n\nvar StringMetric = (function (_super) {\r\n    __extends(StringMetric, _super);\r\n    function StringMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.STRING) || this;\r\n    }\r\n    return StringMetric;\r\n}(BaseMetric));\n\nvar TimestampMetric = (function (_super) {\r\n    __extends(TimestampMetric, _super);\r\n    function TimestampMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.TIMESTAMP) || this;\r\n    }\r\n    TimestampMetric.prototype.now = function () {\r\n        this.update(new Date());\r\n    };\r\n    return TimestampMetric;\r\n}(BaseMetric));\n\nfunction system(name, repo, protocol, parent, description) {\r\n    if (!repo) {\r\n        throw new Error(\"Repository is required\");\r\n    }\r\n    if (!protocol) {\r\n        throw new Error(\"Transport is required\");\r\n    }\r\n    var _transport = protocol;\r\n    var _name = name;\r\n    var _description = description || \"\";\r\n    var _repo = repo;\r\n    var _parent = parent;\r\n    var _path = _buildPath(parent);\r\n    var _state = {};\r\n    var id = _arrayToString(_path, \"/\") + name;\r\n    var root = repo.root;\r\n    var _subSystems = [];\r\n    var _metrics = [];\r\n    function subSystem(nameSystem, descriptionSystem) {\r\n        if (!nameSystem || nameSystem.length === 0) {\r\n            throw new Error(\"name is required\");\r\n        }\r\n        var match = _subSystems.filter(function (s) { return s.name === nameSystem; });\r\n        if (match.length > 0) {\r\n            return match[0];\r\n        }\r\n        var _system = system(nameSystem, _repo, _transport, me, descriptionSystem);\r\n        _subSystems.push(_system);\r\n        return _system;\r\n    }\r\n    function setState(state, stateDescription) {\r\n        _state = { state: state, description: stateDescription };\r\n        _transport.updateSystem(me, _state);\r\n    }\r\n    function stringMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.STRING, value, function (metricDef) { return new StringMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function numberMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.NUMBER, value, function (metricDef) { return new NumberMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function objectMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.OBJECT, value, function (metricDef) { return new ObjectMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function timestampMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.TIMESTAMP, value, function (metricDef) { return new TimestampMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function _getOrCreateMetric(metricObject, expectedType, value, createMetric) {\r\n        var metricDef = { name: \"\" };\r\n        if (typeof metricObject === \"string\") {\r\n            metricDef = { name: metricObject };\r\n        }\r\n        else {\r\n            metricDef = metricObject;\r\n        }\r\n        var matching = _metrics.filter(function (shadowedMetric) { return shadowedMetric.name === metricDef.name; });\r\n        if (matching.length > 0) {\r\n            var existing = matching[0];\r\n            if (existing.type !== expectedType) {\r\n                throw new Error(\"A metric named \" + metricDef.name + \" is already defined with different type.\");\r\n            }\r\n            if (typeof value !== \"undefined\") {\r\n                existing\r\n                    .update(value)\r\n                    .catch(function () { });\r\n            }\r\n            return existing;\r\n        }\r\n        var metric = createMetric(metricDef);\r\n        _metrics.push(metric);\r\n        return metric;\r\n    }\r\n    function _buildPath(shadowedSystem) {\r\n        if (!shadowedSystem || !shadowedSystem.parent) {\r\n            return [];\r\n        }\r\n        var path = _buildPath(shadowedSystem.parent);\r\n        path.push(shadowedSystem.name);\r\n        return path;\r\n    }\r\n    function _arrayToString(path, separator) {\r\n        return ((path && path.length > 0) ? path.join(separator) : \"\");\r\n    }\r\n    function getAggregateState() {\r\n        var aggState = [];\r\n        if (Object.keys(_state).length > 0) {\r\n            aggState.push({\r\n                name: _name,\r\n                path: _path,\r\n                state: _state.state,\r\n                description: _state.description,\r\n            });\r\n        }\r\n        _subSystems.forEach(function (shadowedSubSystem) {\r\n            var result = shadowedSubSystem.getAggregateState();\r\n            if (result.length > 0) {\r\n                aggState.push.apply(aggState, result);\r\n            }\r\n        });\r\n        return aggState;\r\n    }\r\n    var me = {\r\n        get name() {\r\n            return _name;\r\n        },\r\n        get description() {\r\n            return _description;\r\n        },\r\n        get repo() {\r\n            return _repo;\r\n        },\r\n        get parent() {\r\n            return _parent;\r\n        },\r\n        path: _path,\r\n        id: id,\r\n        root: root,\r\n        get subSystems() {\r\n            return _subSystems;\r\n        },\r\n        get metrics() {\r\n            return _metrics;\r\n        },\r\n        subSystem: subSystem,\r\n        getState: function () {\r\n            return _state;\r\n        },\r\n        setState: setState,\r\n        stringMetric: stringMetric,\r\n        timestampMetric: timestampMetric,\r\n        objectMetric: objectMetric,\r\n        numberMetric: numberMetric,\r\n        getAggregateState: getAggregateState,\r\n    };\r\n    _transport.createSystem(me);\r\n    return me;\r\n}\n\nvar Repository = (function () {\r\n    function Repository(options, protocol) {\r\n        protocol.init(this);\r\n        this.root = system(\"\", this, protocol);\r\n        this.addSystemMetrics(this.root, options.clickStream || options.clickStream === undefined);\r\n    }\r\n    Repository.prototype.addSystemMetrics = function (rootSystem, useClickStream) {\r\n        if (typeof navigator !== \"undefined\") {\r\n            rootSystem.stringMetric(\"UserAgent\", navigator.userAgent);\r\n        }\r\n        if (useClickStream && typeof document !== \"undefined\") {\r\n            var clickStream_1 = rootSystem.subSystem(\"ClickStream\");\r\n            var documentClickHandler = function (e) {\r\n                var _a;\r\n                if (!e.target) {\r\n                    return;\r\n                }\r\n                var target = e.target;\r\n                var className = target ? (_a = target.getAttribute(\"class\")) !== null && _a !== void 0 ? _a : \"\" : \"\";\r\n                clickStream_1.objectMetric(\"LastBrowserEvent\", {\r\n                    type: \"click\",\r\n                    timestamp: new Date(),\r\n                    target: {\r\n                        className: className,\r\n                        id: target.id,\r\n                        type: \"<\" + target.tagName.toLowerCase() + \">\",\r\n                        href: target.href || \"\",\r\n                    },\r\n                });\r\n            };\r\n            clickStream_1.objectMetric(\"Page\", {\r\n                title: document.title,\r\n                page: window.location.href,\r\n            });\r\n            if (document.addEventListener) {\r\n                document.addEventListener(\"click\", documentClickHandler);\r\n            }\r\n            else {\r\n                document.attachEvent(\"onclick\", documentClickHandler);\r\n            }\r\n        }\r\n        var startTime = rootSystem.stringMetric(\"StartTime\", (new Date()).toString());\r\n        var urlMetric = rootSystem.stringMetric(\"StartURL\", \"\");\r\n        var appNameMetric = rootSystem.stringMetric(\"AppName\", \"\");\r\n        if (typeof window !== \"undefined\") {\r\n            if (typeof window.location !== \"undefined\") {\r\n                var startUrl = window.location.href;\r\n                urlMetric.update(startUrl);\r\n            }\r\n            if (typeof window.glue42gd !== \"undefined\") {\r\n                appNameMetric.update(window.glue42gd.appName);\r\n            }\r\n        }\r\n    };\r\n    return Repository;\r\n}());\n\nvar NullProtocol = (function () {\r\n    function NullProtocol() {\r\n    }\r\n    NullProtocol.prototype.init = function (repo) {\r\n    };\r\n    NullProtocol.prototype.createSystem = function (system) {\r\n        return Promise.resolve();\r\n    };\r\n    NullProtocol.prototype.updateSystem = function (metric, state) {\r\n        return Promise.resolve();\r\n    };\r\n    NullProtocol.prototype.createMetric = function (metric) {\r\n        return Promise.resolve();\r\n    };\r\n    NullProtocol.prototype.updateMetric = function (metric) {\r\n        return Promise.resolve();\r\n    };\r\n    return NullProtocol;\r\n}());\n\nvar PerfTracker = (function () {\r\n    function PerfTracker(api, initialPublishTimeout, publishInterval) {\r\n        this.api = api;\r\n        this.lastCount = 0;\r\n        this.initialPublishTimeout = 10 * 1000;\r\n        this.publishInterval = 60 * 1000;\r\n        this.initialPublishTimeout = initialPublishTimeout !== null && initialPublishTimeout !== void 0 ? initialPublishTimeout : this.initialPublishTimeout;\r\n        this.publishInterval = publishInterval !== null && publishInterval !== void 0 ? publishInterval : this.publishInterval;\r\n        this.scheduleCollection();\r\n        this.system = this.api.subSystem(\"performance\", \"Performance data published by the web application\");\r\n    }\r\n    PerfTracker.prototype.scheduleCollection = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            _this.collect();\r\n            setInterval(function () {\r\n                _this.collect();\r\n            }, _this.publishInterval);\r\n        }, this.initialPublishTimeout);\r\n    };\r\n    PerfTracker.prototype.collect = function () {\r\n        try {\r\n            this.collectMemory();\r\n            this.collectEntries();\r\n        }\r\n        catch (_a) {\r\n        }\r\n    };\r\n    PerfTracker.prototype.collectMemory = function () {\r\n        var memory = window.performance.memory;\r\n        this.system.stringMetric(\"memory\", JSON.stringify({\r\n            totalJSHeapSize: memory.totalJSHeapSize,\r\n            usedJSHeapSize: memory.usedJSHeapSize\r\n        }));\r\n    };\r\n    PerfTracker.prototype.collectEntries = function () {\r\n        var allEntries = window.performance.getEntries();\r\n        if (allEntries.length <= this.lastCount) {\r\n            return;\r\n        }\r\n        this.lastCount = allEntries.length;\r\n        var jsonfiedEntries = allEntries.map(function (i) { return i.toJSON(); });\r\n        this.system.stringMetric(\"entries\", JSON.stringify(jsonfiedEntries));\r\n    };\r\n    return PerfTracker;\r\n}());\n\nvar metrics = (function (options) {\r\n    var protocol;\r\n    if (!options.connection || typeof options.connection !== \"object\") {\r\n        protocol = new NullProtocol();\r\n    }\r\n    else {\r\n        protocol = gw3(options.connection, options);\r\n    }\r\n    var repo = new Repository(options, protocol);\r\n    var rootSystem = repo.root;\r\n    if (!options.disableAutoAppSystem) {\r\n        rootSystem = rootSystem.subSystem(\"App\");\r\n    }\r\n    var api = addFAVSupport(rootSystem);\r\n    initPerf(api, options.pagePerformanceMetrics);\r\n    return api;\r\n});\r\nvar perf;\r\nfunction initPerf(api, config) {\r\n    var _a, _b;\r\n    if (typeof window === \"undefined\") {\r\n        return;\r\n    }\r\n    var perfConfig = (_b = (_a = window === null || window === void 0 ? void 0 : window.glue42gd) === null || _a === void 0 ? void 0 : _a.metrics) === null || _b === void 0 ? void 0 : _b.pagePerformanceMetrics;\r\n    if (perfConfig) {\r\n        config = perfConfig;\r\n    }\r\n    if (config === null || config === void 0 ? void 0 : config.enabled) {\r\n        perf = new PerfTracker(api, config.initialPublishTimeout, config.publishInterval);\r\n    }\r\n}\r\nfunction addFAVSupport(system) {\r\n    var reportingSystem = system.subSystem(\"reporting\");\r\n    var def = {\r\n        name: \"features\"\r\n    };\r\n    var featureMetric;\r\n    var featureMetricFunc = function (name, action, payload) {\r\n        if (typeof name === \"undefined\" || name === \"\") {\r\n            throw new Error(\"name is mandatory\");\r\n        }\r\n        else if (typeof action === \"undefined\" || action === \"\") {\r\n            throw new Error(\"action is mandatory\");\r\n        }\r\n        else if (typeof payload === \"undefined\" || payload === \"\") {\r\n            throw new Error(\"payload is mandatory\");\r\n        }\r\n        if (!featureMetric) {\r\n            featureMetric = reportingSystem.objectMetric(def, { name: name, action: action, payload: payload });\r\n        }\r\n        else {\r\n            featureMetric.update({\r\n                name: name,\r\n                action: action,\r\n                payload: payload\r\n            });\r\n        }\r\n    };\r\n    system.featureMetric = featureMetricFunc;\r\n    return system;\r\n}\n\nfunction createRegistry(options) {\r\n    if (options && options.errorHandling\r\n        && typeof options.errorHandling !== \"function\"\r\n        && options.errorHandling !== \"log\"\r\n        && options.errorHandling !== \"silent\"\r\n        && options.errorHandling !== \"throw\") {\r\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\r\n    }\r\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\r\n    var callbacks = {};\r\n    function add(key, callback, replayArgumentsArr) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        if (replayArgumentsArr) {\r\n            setTimeout(function () {\r\n                replayArgumentsArr.forEach(function (replayArgument) {\r\n                    var _a;\r\n                    if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {\r\n                        try {\r\n                            if (Array.isArray(replayArgument)) {\r\n                                callback.apply(undefined, replayArgument);\r\n                            }\r\n                            else {\r\n                                callback.apply(undefined, [replayArgument]);\r\n                            }\r\n                        }\r\n                        catch (err) {\r\n                            _handleError(err, key);\r\n                        }\r\n                    }\r\n                });\r\n            }, 0);\r\n        }\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            if (!allForKey) {\r\n                return;\r\n            }\r\n            allForKey = allForKey.reduce(function (acc, element, index) {\r\n                if (!(element === callback && acc.length === index)) {\r\n                    acc.push(element);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            if (allForKey.length === 0) {\r\n                delete callbacks[key];\r\n            }\r\n            else {\r\n                callbacks[key] = allForKey;\r\n            }\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n                _handleError(err, key);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    function _handleError(exceptionArtifact, key) {\r\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\r\n        if (_userErrorHandler) {\r\n            _userErrorHandler(errParam);\r\n            return;\r\n        }\r\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\r\n        if (options) {\r\n            switch (options.errorHandling) {\r\n                case \"log\":\r\n                    return console.error(msg);\r\n                case \"silent\":\r\n                    return;\r\n                case \"throw\":\r\n                    throw new Error(msg);\r\n            }\r\n        }\r\n        console.error(msg);\r\n    }\r\n    function clear() {\r\n        callbacks = {};\r\n    }\r\n    function clearKey(key) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            return;\r\n        }\r\n        delete callbacks[key];\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute,\r\n        clear: clear,\r\n        clearKey: clearKey\r\n    };\r\n}\r\ncreateRegistry.default = createRegistry;\r\nvar lib = createRegistry;\n\nvar InProcTransport = (function () {\r\n    function InProcTransport(settings, logger) {\r\n        var _this = this;\r\n        this.registry = lib();\r\n        this.gw = settings.facade;\r\n        this.gw.connect(function (_client, message) {\r\n            _this.messageHandler(message);\r\n        }).then(function (client) {\r\n            _this.client = client;\r\n        });\r\n    }\r\n    Object.defineProperty(InProcTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    InProcTransport.prototype.sendObject = function (msg) {\r\n        if (this.client) {\r\n            this.client.send(msg);\r\n            return Promise.resolve(undefined);\r\n        }\r\n        else {\r\n            return Promise.reject(\"not connected\");\r\n        }\r\n    };\r\n    InProcTransport.prototype.send = function (_msg) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    InProcTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    InProcTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n        return function () { };\r\n    };\r\n    InProcTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.open = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.name = function () {\r\n        return \"in-memory\";\r\n    };\r\n    InProcTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.messageHandler = function (msg) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return InProcTransport;\r\n}());\n\nvar SharedWorkerTransport = (function () {\r\n    function SharedWorkerTransport(workerFile, logger) {\r\n        var _this = this;\r\n        this.logger = logger;\r\n        this.registry = lib();\r\n        this.worker = new SharedWorker(workerFile);\r\n        this.worker.port.onmessage = function (e) {\r\n            _this.messageHandler(e.data);\r\n        };\r\n    }\r\n    Object.defineProperty(SharedWorkerTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SharedWorkerTransport.prototype.sendObject = function (msg) {\r\n        this.worker.port.postMessage(msg);\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.send = function (_msg) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    SharedWorkerTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    SharedWorkerTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n        return function () { };\r\n    };\r\n    SharedWorkerTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.open = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.name = function () {\r\n        return \"shared-worker\";\r\n    };\r\n    SharedWorkerTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.messageHandler = function (msg) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return SharedWorkerTransport;\r\n}());\n\nvar Utils = (function () {\r\n    function Utils() {\r\n    }\r\n    Utils.getGDMajorVersion = function () {\r\n        if (typeof window === \"undefined\") {\r\n            return undefined;\r\n        }\r\n        if (!window.glueDesktop) {\r\n            return undefined;\r\n        }\r\n        if (!window.glueDesktop.version) {\r\n            return undefined;\r\n        }\r\n        var ver = Number(window.glueDesktop.version.substr(0, 1));\r\n        return isNaN(ver) ? undefined : ver;\r\n    };\r\n    Utils.isNode = function () {\r\n        if (typeof Utils._isNode !== \"undefined\") {\r\n            return Utils._isNode;\r\n        }\r\n        if (typeof window !== \"undefined\") {\r\n            Utils._isNode = false;\r\n            return false;\r\n        }\r\n        try {\r\n            Utils._isNode = Object.prototype.toString.call(global.process) === \"[object process]\";\r\n        }\r\n        catch (e) {\r\n            Utils._isNode = false;\r\n        }\r\n        return Utils._isNode;\r\n    };\r\n    return Utils;\r\n}());\n\nvar PromiseWrapper = (function () {\r\n    function PromiseWrapper() {\r\n        var _this = this;\r\n        this.rejected = false;\r\n        this.resolved = false;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = function (t) {\r\n                _this.resolved = true;\r\n                resolve(t);\r\n            };\r\n            _this.reject = function (err) {\r\n                _this.rejected = true;\r\n                reject(err);\r\n            };\r\n        });\r\n    }\r\n    PromiseWrapper.delay = function (time) {\r\n        return new Promise(function (resolve) { return setTimeout(resolve, time); });\r\n    };\r\n    Object.defineProperty(PromiseWrapper.prototype, \"ended\", {\r\n        get: function () {\r\n            return this.rejected || this.resolved;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PromiseWrapper;\r\n}());\n\nvar timers = {};\r\nfunction getAllTimers() {\r\n    return timers;\r\n}\r\nfunction timer (timerName) {\r\n    var existing = timers[timerName];\r\n    if (existing) {\r\n        return existing;\r\n    }\r\n    var marks = [];\r\n    function now() {\r\n        return new Date().getTime();\r\n    }\r\n    var startTime = now();\r\n    mark(\"start\", startTime);\r\n    var endTime;\r\n    var period;\r\n    function stop() {\r\n        endTime = now();\r\n        mark(\"end\", endTime);\r\n        period = endTime - startTime;\r\n        return period;\r\n    }\r\n    function mark(name, time) {\r\n        var currentTime = time !== null && time !== void 0 ? time : now();\r\n        var diff = 0;\r\n        if (marks.length > 0) {\r\n            diff = currentTime - marks[marks.length - 1].time;\r\n        }\r\n        marks.push({ name: name, time: currentTime, diff: diff });\r\n    }\r\n    var timerObj = {\r\n        get startTime() {\r\n            return startTime;\r\n        },\r\n        get endTime() {\r\n            return endTime;\r\n        },\r\n        get period() {\r\n            return period;\r\n        },\r\n        stop: stop,\r\n        mark: mark,\r\n        marks: marks\r\n    };\r\n    timers[timerName] = timerObj;\r\n    return timerObj;\r\n}\n\nvar WebSocketConstructor = Utils.isNode() ? require(\"ws\") : window.WebSocket;\r\nvar WS = (function () {\r\n    function WS(settings, logger) {\r\n        this.startupTimer = timer(\"connection\");\r\n        this._running = true;\r\n        this._registry = lib();\r\n        this.wsRequests = [];\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        if (!this.settings.ws) {\r\n            throw new Error(\"ws is missing\");\r\n        }\r\n    }\r\n    WS.prototype.onMessage = function (callback) {\r\n        return this._registry.add(\"onMessage\", callback);\r\n    };\r\n    WS.prototype.send = function (msg, options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitForSocketConnection(function () {\r\n                var _a;\r\n                try {\r\n                    (_a = _this.ws) === null || _a === void 0 ? void 0 : _a.send(msg);\r\n                    resolve();\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }, reject);\r\n        });\r\n    };\r\n    WS.prototype.open = function () {\r\n        var _this = this;\r\n        this.logger.info(\"opening ws...\");\r\n        this._running = true;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitForSocketConnection(resolve, reject);\r\n        });\r\n    };\r\n    WS.prototype.close = function () {\r\n        this._running = false;\r\n        if (this.ws) {\r\n            this.ws.close();\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    WS.prototype.onConnectedChanged = function (callback) {\r\n        return this._registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WS.prototype.name = function () {\r\n        return this.settings.ws;\r\n    };\r\n    WS.prototype.reconnect = function () {\r\n        var _a;\r\n        (_a = this.ws) === null || _a === void 0 ? void 0 : _a.close();\r\n        var pw = new PromiseWrapper();\r\n        this.waitForSocketConnection(function () {\r\n            pw.resolve();\r\n        });\r\n        return pw.promise;\r\n    };\r\n    WS.prototype.waitForSocketConnection = function (callback, failed) {\r\n        var _a;\r\n        failed = failed !== null && failed !== void 0 ? failed : (function () { });\r\n        if (!this._running) {\r\n            failed(\"wait for socket on \" + this.settings.ws + \" failed - socket closed by user\");\r\n            return;\r\n        }\r\n        if (((_a = this.ws) === null || _a === void 0 ? void 0 : _a.readyState) === 1) {\r\n            callback();\r\n            return;\r\n        }\r\n        this.wsRequests.push({ callback: callback, failed: failed });\r\n        if (this.wsRequests.length > 1) {\r\n            return;\r\n        }\r\n        this.openSocket();\r\n    };\r\n    WS.prototype.openSocket = function (retryInterval, retriesLeft) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        this.startupTimer.mark(\"opening-socket\");\r\n                        if (retryInterval === undefined) {\r\n                            retryInterval = this.settings.reconnectInterval;\r\n                        }\r\n                        if (typeof retriesLeft === \"undefined\") {\r\n                            retriesLeft = this.settings.reconnectAttempts;\r\n                        }\r\n                        if (retriesLeft !== undefined) {\r\n                            if (retriesLeft === 0) {\r\n                                this.notifyForSocketState(\"wait for socket on \" + this.settings.ws + \" failed - no more retries left\");\r\n                                return [2];\r\n                            }\r\n                            this.logger.debug(\"will retry \" + retriesLeft + \" more times (every \" + retryInterval + \" ms)\");\r\n                        }\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4, this.initiateSocket()];\r\n                    case 2:\r\n                        _b.sent();\r\n                        this.startupTimer.mark(\"socket-initiated\");\r\n                        this.notifyForSocketState();\r\n                        return [3, 4];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        setTimeout(function () {\r\n                            var retries = retriesLeft === undefined ? undefined : retriesLeft - 1;\r\n                            _this.openSocket(retryInterval, retries);\r\n                        }, retryInterval);\r\n                        return [3, 4];\r\n                    case 4: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WS.prototype.initiateSocket = function () {\r\n        var _this = this;\r\n        var pw = new PromiseWrapper();\r\n        this.logger.debug(\"initiating ws to \" + this.settings.ws + \"...\");\r\n        this.ws = new WebSocketConstructor(this.settings.ws || \"\");\r\n        this.ws.onerror = function (err) {\r\n            var reason = \"\";\r\n            try {\r\n                reason = JSON.stringify(err);\r\n            }\r\n            catch (error) {\r\n                var seen_1 = new WeakSet();\r\n                var replacer = function (key, value) {\r\n                    if (typeof value === \"object\" && value !== null) {\r\n                        if (seen_1.has(value)) {\r\n                            return;\r\n                        }\r\n                        seen_1.add(value);\r\n                    }\r\n                    return value;\r\n                };\r\n                reason = JSON.stringify(err, replacer);\r\n            }\r\n            pw.reject(\"error\");\r\n            _this.notifyStatusChanged(false, reason);\r\n        };\r\n        this.ws.onclose = function (err) {\r\n            _this.logger.info(\"ws closed \" + err);\r\n            pw.reject(\"closed\");\r\n            _this.notifyStatusChanged(false);\r\n        };\r\n        this.ws.onopen = function () {\r\n            var _a;\r\n            _this.startupTimer.mark(\"ws-opened\");\r\n            _this.logger.info(\"ws opened \" + ((_a = _this.settings.identity) === null || _a === void 0 ? void 0 : _a.application));\r\n            pw.resolve();\r\n            _this.notifyStatusChanged(true);\r\n        };\r\n        this.ws.onmessage = function (message) {\r\n            _this._registry.execute(\"onMessage\", message.data);\r\n        };\r\n        return pw.promise;\r\n    };\r\n    WS.prototype.notifyForSocketState = function (error) {\r\n        this.wsRequests.forEach(function (wsRequest) {\r\n            if (error) {\r\n                if (wsRequest.failed) {\r\n                    wsRequest.failed(error);\r\n                }\r\n            }\r\n            else {\r\n                wsRequest.callback();\r\n            }\r\n        });\r\n        this.wsRequests = [];\r\n    };\r\n    WS.prototype.notifyStatusChanged = function (status, reason) {\r\n        this._registry.execute(\"onConnectedChanged\", status, reason);\r\n    };\r\n    return WS;\r\n}());\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nvar randomFromSeed = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed$1(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nvar alphabet_1 = {\n    characters: characters,\n    seed: setSeed$1,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nvar randomByteBrowser = randomByte;\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByteBrowser() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nvar encode_1 = encode;\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet_1.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nvar decode_1 = decode;\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet_1.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nvar isValid = isShortId;\n\nvar lib$1 = createCommonjsModule(function (module) {\n\n\n\n\n\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId =  0;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode_1(alphabet_1.lookup, version);\n    str = str + encode_1(alphabet_1.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode_1(alphabet_1.lookup, counter);\n    }\n    str = str + encode_1(alphabet_1.lookup, seconds);\n\n    return str;\n}\n\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet_1.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet_1.characters(newCharacters);\n    }\n\n    return alphabet_1.shuffled();\n}\n\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode_1;\nmodule.exports.isValid = isValid;\n});\nvar lib_1 = lib$1.generate;\nvar lib_2 = lib$1.seed;\nvar lib_3 = lib$1.worker;\nvar lib_4 = lib$1.characters;\nvar lib_5 = lib$1.decode;\nvar lib_6 = lib$1.isValid;\n\nvar shortid = lib$1;\n\nfunction domainSession (domain, connection, logger, successMessages, errorMessages) {\r\n    if (domain == null) {\r\n        domain = \"global\";\r\n    }\r\n    successMessages = successMessages || [\"success\"];\r\n    errorMessages = errorMessages || [\"error\"];\r\n    var isJoined = false;\r\n    var tryReconnecting = false;\r\n    var _latestOptions;\r\n    var _connectionOn = false;\r\n    var callbacks = lib();\r\n    connection.disconnected(handleConnectionDisconnected);\r\n    connection.loggedIn(handleConnectionLoggedIn);\r\n    connection.on(\"success\", function (msg) { return handleSuccessMessage(msg); });\r\n    connection.on(\"error\", function (msg) { return handleErrorMessage(msg); });\r\n    connection.on(\"result\", function (msg) { return handleSuccessMessage(msg); });\r\n    if (successMessages) {\r\n        successMessages.forEach(function (sm) {\r\n            connection.on(sm, function (msg) { return handleSuccessMessage(msg); });\r\n        });\r\n    }\r\n    if (errorMessages) {\r\n        errorMessages.forEach(function (sm) {\r\n            connection.on(sm, function (msg) { return handleErrorMessage(msg); });\r\n        });\r\n    }\r\n    var requestsMap = {};\r\n    function join(options) {\r\n        _latestOptions = options;\r\n        return new Promise(function (resolve, reject) {\r\n            if (isJoined) {\r\n                resolve();\r\n                return;\r\n            }\r\n            var joinPromise;\r\n            if (domain === \"global\") {\r\n                joinPromise = _connectionOn ? Promise.resolve({}) : Promise.reject(\"not connected to gateway\");\r\n            }\r\n            else {\r\n                logger.debug(\"joining domain \" + domain);\r\n                var joinMsg = {\r\n                    type: \"join\",\r\n                    destination: domain,\r\n                    domain: \"global\",\r\n                    options: options,\r\n                };\r\n                joinPromise = send(joinMsg);\r\n            }\r\n            joinPromise\r\n                .then(function () {\r\n                handleJoined();\r\n                resolve();\r\n            })\r\n                .catch(function (err) {\r\n                logger.debug(\"error joining \" + domain + \" domain: \" + JSON.stringify(err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    function leave() {\r\n        if (domain === \"global\") {\r\n            return Promise.resolve();\r\n        }\r\n        logger.debug(\"stopping session \" + domain + \"...\");\r\n        var leaveMsg = {\r\n            type: \"leave\",\r\n            destination: domain,\r\n            domain: \"global\",\r\n        };\r\n        tryReconnecting = false;\r\n        return send(leaveMsg)\r\n            .then(function () {\r\n            isJoined = false;\r\n            callbacks.execute(\"onLeft\");\r\n        })\r\n            .catch(function () {\r\n            isJoined = false;\r\n            callbacks.execute(\"onLeft\");\r\n        });\r\n    }\r\n    function handleJoined() {\r\n        logger.debug(\"did join \" + domain);\r\n        isJoined = true;\r\n        var wasReconnect = tryReconnecting;\r\n        tryReconnecting = false;\r\n        callbacks.execute(\"onJoined\", wasReconnect);\r\n    }\r\n    function handleConnectionDisconnected() {\r\n        _connectionOn = false;\r\n        logger.debug(\"connection is down\");\r\n        isJoined = false;\r\n        tryReconnecting = true;\r\n        callbacks.execute(\"onLeft\", { disconnected: true });\r\n    }\r\n    function handleConnectionLoggedIn() {\r\n        _connectionOn = true;\r\n        if (tryReconnecting) {\r\n            logger.debug(\"connection is now up - trying to reconnect...\");\r\n            join(_latestOptions);\r\n        }\r\n    }\r\n    function onJoined(callback) {\r\n        if (isJoined) {\r\n            callback(false);\r\n        }\r\n        return callbacks.add(\"onJoined\", callback);\r\n    }\r\n    function onLeft(callback) {\r\n        if (!isJoined) {\r\n            callback();\r\n        }\r\n        return callbacks.add(\"onLeft\", callback);\r\n    }\r\n    function handleErrorMessage(msg) {\r\n        if (domain !== msg.domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        if (!requestId) {\r\n            return;\r\n        }\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.error(msg);\r\n    }\r\n    function handleSuccessMessage(msg) {\r\n        if (msg.domain !== domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        if (!requestId) {\r\n            return;\r\n        }\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.success(msg);\r\n    }\r\n    function getNextRequestId() {\r\n        return shortid();\r\n    }\r\n    function send(msg, tag, options) {\r\n        options = options || {};\r\n        msg.request_id = msg.request_id || getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        if (!options.skipPeerId) {\r\n            msg.peer_id = connection.peerId;\r\n        }\r\n        var requestId = msg.request_id;\r\n        return new Promise(function (resolve, reject) {\r\n            requestsMap[requestId] = {\r\n                success: function (successMsg) {\r\n                    delete requestsMap[requestId];\r\n                    successMsg._tag = tag;\r\n                    resolve(successMsg);\r\n                },\r\n                error: function (errorMsg) {\r\n                    logger.warn(\"GW error - \" + JSON.stringify(errorMsg) + \" for request \" + JSON.stringify(msg));\r\n                    delete requestsMap[requestId];\r\n                    errorMsg._tag = tag;\r\n                    reject(errorMsg);\r\n                },\r\n            };\r\n            connection\r\n                .send(msg, options)\r\n                .catch(function (err) {\r\n                requestsMap[requestId].error({ err: err });\r\n            });\r\n        });\r\n    }\r\n    function sendFireAndForget(msg) {\r\n        msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        msg.peer_id = connection.peerId;\r\n        return connection.send(msg);\r\n    }\r\n    return {\r\n        join: join,\r\n        leave: leave,\r\n        onJoined: onJoined,\r\n        onLeft: onLeft,\r\n        send: send,\r\n        sendFireAndForget: sendFireAndForget,\r\n        on: function (type, callback) {\r\n            connection.on(type, function (msg) {\r\n                if (msg.domain !== domain) {\r\n                    return;\r\n                }\r\n                try {\r\n                    callback(msg);\r\n                }\r\n                catch (e) {\r\n                    logger.error(\"Callback  failed: \" + e + \" \\n \" + e.stack + \" \\n msg was: \" + JSON.stringify(msg), e);\r\n                }\r\n            });\r\n        },\r\n        loggedIn: function (callback) { return connection.loggedIn(callback); },\r\n        connected: function (callback) { return connection.connected(callback); },\r\n        disconnected: function (callback) { return connection.disconnected(callback); },\r\n        get peerId() {\r\n            return connection.peerId;\r\n        },\r\n        get domain() {\r\n            return domain;\r\n        },\r\n    };\r\n}\n\nvar GW3ProtocolImpl = (function () {\r\n    function GW3ProtocolImpl(connection, settings, logger) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.protocolVersion = 3;\r\n        this.datePrefix = \"#T42_DATE#\";\r\n        this.datePrefixLen = this.datePrefix.length;\r\n        this.dateMinLen = this.datePrefixLen + 1;\r\n        this.datePrefixFirstChar = this.datePrefix[0];\r\n        this.registry = lib();\r\n        this._isLoggedIn = false;\r\n        this.shouldTryLogin = true;\r\n        this.initialLogin = true;\r\n        this.initialLoginAttempts = 3;\r\n        this.sessions = [];\r\n        connection.disconnected(function () {\r\n            _this.handleDisconnected();\r\n        });\r\n        this.ping();\r\n    }\r\n    Object.defineProperty(GW3ProtocolImpl.prototype, \"isLoggedIn\", {\r\n        get: function () {\r\n            return this._isLoggedIn;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GW3ProtocolImpl.prototype.processStringMessage = function (message) {\r\n        var _this = this;\r\n        var msg = JSON.parse(message, function (key, value) {\r\n            if (typeof value !== \"string\") {\r\n                return value;\r\n            }\r\n            if (value.length < _this.dateMinLen) {\r\n                return value;\r\n            }\r\n            if (value[0] !== _this.datePrefixFirstChar) {\r\n                return value;\r\n            }\r\n            if (value.substring(0, _this.datePrefixLen) !== _this.datePrefix) {\r\n                return value;\r\n            }\r\n            try {\r\n                var milliseconds = parseInt(value.substring(_this.datePrefixLen, value.length), 10);\r\n                if (isNaN(milliseconds)) {\r\n                    return value;\r\n                }\r\n                return new Date(milliseconds);\r\n            }\r\n            catch (ex) {\r\n                return value;\r\n            }\r\n        });\r\n        return {\r\n            msg: msg,\r\n            msgType: msg.type,\r\n        };\r\n    };\r\n    GW3ProtocolImpl.prototype.createStringMessage = function (message) {\r\n        var oldToJson = Date.prototype.toJSON;\r\n        try {\r\n            var datePrefix_1 = this.datePrefix;\r\n            Date.prototype.toJSON = function () {\r\n                return datePrefix_1 + this.getTime();\r\n            };\r\n            var result = JSON.stringify(message);\r\n            return result;\r\n        }\r\n        finally {\r\n            Date.prototype.toJSON = oldToJson;\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.processObjectMessage = function (message) {\r\n        if (!message.type) {\r\n            throw new Error(\"Object should have type property\");\r\n        }\r\n        return {\r\n            msg: message,\r\n            msgType: message.type,\r\n        };\r\n    };\r\n    GW3ProtocolImpl.prototype.createObjectMessage = function (message) {\r\n        return message;\r\n    };\r\n    GW3ProtocolImpl.prototype.login = function (config, reconnect) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authentication, token, e_1, _a, helloMsg, sendOptions, welcomeMsg, msg, token, _b, err_1;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"logging in...\");\r\n                        this.loginConfig = config;\r\n                        if (!this.loginConfig) {\r\n                            this.loginConfig = { username: \"\", password: \"\" };\r\n                        }\r\n                        this.shouldTryLogin = true;\r\n                        authentication = {};\r\n                        this.connection.gatewayToken = config.gatewayToken;\r\n                        if (!config.gatewayToken) return [3, 5];\r\n                        if (!reconnect) return [3, 4];\r\n                        _c.label = 1;\r\n                    case 1:\r\n                        _c.trys.push([1, 3, , 4]);\r\n                        return [4, this.getNewGWToken()];\r\n                    case 2:\r\n                        token = _c.sent();\r\n                        config.gatewayToken = token;\r\n                        return [3, 4];\r\n                    case 3:\r\n                        e_1 = _c.sent();\r\n                        this.logger.warn(\"failed to get GW token when reconnecting \" + ((e_1 === null || e_1 === void 0 ? void 0 : e_1.message) || e_1));\r\n                        return [3, 4];\r\n                    case 4:\r\n                        authentication.method = \"gateway-token\";\r\n                        authentication.token = config.gatewayToken;\r\n                        this.connection.gatewayToken = config.gatewayToken;\r\n                        return [3, 10];\r\n                    case 5:\r\n                        if (!(config.flowName === \"sspi\")) return [3, 9];\r\n                        authentication.provider = \"win\";\r\n                        authentication.method = \"access-token\";\r\n                        if (!(config.flowCallback && config.sessionId)) return [3, 7];\r\n                        _a = authentication;\r\n                        return [4, config.flowCallback(config.sessionId, null)];\r\n                    case 6:\r\n                        _a.token =\r\n                            (_c.sent())\r\n                                .data\r\n                                .toString(\"base64\");\r\n                        return [3, 8];\r\n                    case 7: throw new Error(\"Invalid SSPI config\");\r\n                    case 8: return [3, 10];\r\n                    case 9:\r\n                        if (config.token) {\r\n                            authentication.method = \"access-token\";\r\n                            authentication.token = config.token;\r\n                        }\r\n                        else if (config.username) {\r\n                            authentication.method = \"secret\";\r\n                            authentication.login = config.username;\r\n                            authentication.secret = config.password;\r\n                        }\r\n                        else if (config.provider) {\r\n                            authentication.provider = config.provider;\r\n                            authentication.providerContext = config.providerContext;\r\n                        }\r\n                        else {\r\n                            throw new Error(\"invalid auth message\" + JSON.stringify(config));\r\n                        }\r\n                        _c.label = 10;\r\n                    case 10:\r\n                        helloMsg = {\r\n                            type: \"hello\",\r\n                            identity: this.settings.identity,\r\n                            authentication: authentication\r\n                        };\r\n                        if (config.sessionId) {\r\n                            helloMsg.request_id = config.sessionId;\r\n                        }\r\n                        this.globalDomain = domainSession(\"global\", this.connection, this.logger.subLogger(\"global-domain\"), [\r\n                            \"welcome\",\r\n                            \"token\",\r\n                            \"authentication-request\"\r\n                        ]);\r\n                        sendOptions = { skipPeerId: true };\r\n                        if (this.initialLogin) {\r\n                            sendOptions.retryInterval = this.settings.reconnectInterval;\r\n                            sendOptions.maxRetries = this.settings.reconnectAttempts;\r\n                        }\r\n                        _c.label = 11;\r\n                    case 11:\r\n                        _c.trys.push([11, 19, 20, 21]);\r\n                        welcomeMsg = void 0;\r\n                        _c.label = 12;\r\n                    case 12:\r\n                        return [4, this.globalDomain.send(helloMsg, undefined, sendOptions)];\r\n                    case 13:\r\n                        msg = _c.sent();\r\n                        if (!(msg.type === \"authentication-request\")) return [3, 16];\r\n                        token = Buffer.from(msg.authentication.token, \"base64\");\r\n                        if (!(config.flowCallback && config.sessionId)) return [3, 15];\r\n                        _b = helloMsg.authentication;\r\n                        return [4, config.flowCallback(config.sessionId, token)];\r\n                    case 14:\r\n                        _b.token =\r\n                            (_c.sent())\r\n                                .data\r\n                                .toString(\"base64\");\r\n                        _c.label = 15;\r\n                    case 15:\r\n                        helloMsg.request_id = config.sessionId;\r\n                        return [3, 12];\r\n                    case 16:\r\n                        if (msg.type === \"welcome\") {\r\n                            welcomeMsg = msg;\r\n                            return [3, 18];\r\n                        }\r\n                        else if (msg.type === \"error\") {\r\n                            throw new Error(\"Authentication failed: \" + msg.reason);\r\n                        }\r\n                        else {\r\n                            throw new Error(\"Unexpected message type during authentication: \" + msg.type);\r\n                        }\r\n                    case 17: return [3, 12];\r\n                    case 18:\r\n                        this.initialLogin = false;\r\n                        this.logger.debug(\"login successful with peerId \" + welcomeMsg.peer_id);\r\n                        this.connection.peerId = welcomeMsg.peer_id;\r\n                        this.connection.resolvedIdentity = welcomeMsg.resolved_identity;\r\n                        this.connection.availableDomains = welcomeMsg.available_domains;\r\n                        if (welcomeMsg.options) {\r\n                            this.connection.token = welcomeMsg.options.access_token;\r\n                            this.connection.info = welcomeMsg.options.info;\r\n                        }\r\n                        this.setLoggedIn(true);\r\n                        return [2, welcomeMsg.resolved_identity];\r\n                    case 19:\r\n                        err_1 = _c.sent();\r\n                        this.logger.error(\"error sending hello message - \" + (err_1.message || err_1.msg || err_1.reason || err_1), err_1);\r\n                        throw err_1;\r\n                    case 20:\r\n                        if (config && config.flowCallback && config.sessionId) {\r\n                            config.flowCallback(config.sessionId, null);\r\n                        }\r\n                        return [7];\r\n                    case 21: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.logout = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var promises;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"logging out...\");\r\n                        this.shouldTryLogin = false;\r\n                        if (this.pingTimer) {\r\n                            clearTimeout(this.pingTimer);\r\n                        }\r\n                        promises = this.sessions.map(function (session) {\r\n                            session.leave();\r\n                        });\r\n                        return [4, Promise.all(promises)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.loggedIn = function (callback) {\r\n        if (this._isLoggedIn) {\r\n            callback();\r\n        }\r\n        return this.registry.add(\"onLoggedIn\", callback);\r\n    };\r\n    GW3ProtocolImpl.prototype.domain = function (domainName, domainLogger, successMessages, errorMessages) {\r\n        var session = this.sessions.filter(function (s) { return s.domain === domainName; })[0];\r\n        if (!session) {\r\n            session = domainSession(domainName, this.connection, domainLogger, successMessages, errorMessages);\r\n            this.sessions.push(session);\r\n        }\r\n        return session;\r\n    };\r\n    GW3ProtocolImpl.prototype.handleDisconnected = function () {\r\n        var _this = this;\r\n        this.setLoggedIn(false);\r\n        var tryToLogin = this.shouldTryLogin;\r\n        if (tryToLogin && this.initialLogin) {\r\n            if (this.initialLoginAttempts <= 0) {\r\n                return;\r\n            }\r\n            this.initialLoginAttempts--;\r\n        }\r\n        this.logger.debug(\"disconnected - will try new login?\" + this.shouldTryLogin);\r\n        if (this.shouldTryLogin) {\r\n            if (!this.loginConfig) {\r\n                throw new Error(\"no login info\");\r\n            }\r\n            this.connection.login(this.loginConfig, true)\r\n                .catch(function () {\r\n                setTimeout(_this.handleDisconnected.bind(_this), _this.settings.reconnectInterval || 1000);\r\n            });\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.setLoggedIn = function (value) {\r\n        this._isLoggedIn = value;\r\n        if (this._isLoggedIn) {\r\n            this.registry.execute(\"onLoggedIn\");\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.ping = function () {\r\n        var _this = this;\r\n        if (!this.shouldTryLogin) {\r\n            return;\r\n        }\r\n        if (this._isLoggedIn) {\r\n            this.connection.send({ type: \"ping\" });\r\n        }\r\n        this.pingTimer = setTimeout(function () {\r\n            _this.ping();\r\n        }, 30 * 1000);\r\n    };\r\n    GW3ProtocolImpl.prototype.authToken = function () {\r\n        var createTokenReq = {\r\n            type: \"create-token\"\r\n        };\r\n        if (!this.globalDomain) {\r\n            return Promise.reject(new Error(\"no global domain session\"));\r\n        }\r\n        return this.globalDomain.send(createTokenReq)\r\n            .then(function (res) {\r\n            return res.token;\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.getNewGWToken = function () {\r\n        if (typeof window !== undefined) {\r\n            var glue42gd = window.glue42gd;\r\n            if (glue42gd) {\r\n                return glue42gd.getGWToken();\r\n            }\r\n        }\r\n        return Promise.reject(new Error(\"not running in GD\"));\r\n    };\r\n    return GW3ProtocolImpl;\r\n}());\n\nvar MessageReplayerImpl = (function () {\r\n    function MessageReplayerImpl(specs) {\r\n        this.specsNames = [];\r\n        this.messages = {};\r\n        this.subs = {};\r\n        this.subsRefCount = {};\r\n        this.specs = {};\r\n        for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\r\n            var spec = specs_1[_i];\r\n            this.specs[spec.name] = spec;\r\n            this.specsNames.push(spec.name);\r\n        }\r\n    }\r\n    MessageReplayerImpl.prototype.init = function (connection) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var _loop_1 = function (type) {\r\n                var refCount = this_1.subsRefCount[type];\r\n                if (!refCount) {\r\n                    refCount = 0;\r\n                }\r\n                refCount += 1;\r\n                this_1.subsRefCount[type] = refCount;\r\n                if (refCount > 1) {\r\n                    return \"continue\";\r\n                }\r\n                var sub = connection.on(type, function (msg) { return _this.processMessage(type, msg); });\r\n                this_1.subs[type] = sub;\r\n            };\r\n            var this_1 = this;\r\n            for (var _b = 0, _c = this.specs[name_1].types; _b < _c.length; _b++) {\r\n                var type = _c[_b];\r\n                _loop_1(type);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.processMessage = function (type, msg) {\r\n        if (this.isDone || !msg) {\r\n            return;\r\n        }\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_2 = _a[_i];\r\n            if (this.specs[name_2].types.indexOf(type) !== -1) {\r\n                var messages = this.messages[name_2] || [];\r\n                this.messages[name_2] = messages;\r\n                messages.push(msg);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.drain = function (name, callback) {\r\n        var _a;\r\n        if (callback) {\r\n            (this.messages[name] || []).forEach(callback);\r\n        }\r\n        delete this.messages[name];\r\n        for (var _i = 0, _b = this.specs[name].types; _i < _b.length; _i++) {\r\n            var type = _b[_i];\r\n            this.subsRefCount[type] -= 1;\r\n            if (this.subsRefCount[type] <= 0) {\r\n                (_a = this.connection) === null || _a === void 0 ? void 0 : _a.off(this.subs[type]);\r\n                delete this.subs[type];\r\n                delete this.subsRefCount[type];\r\n            }\r\n        }\r\n        delete this.specs[name];\r\n        if (!this.specs.length) {\r\n            this.isDone = true;\r\n        }\r\n    };\r\n    return MessageReplayerImpl;\r\n}());\n\nvar PromisePlus = function (executor, timeoutMilliseconds, timeoutMessage) {\r\n    return new Promise(function (resolve, reject) {\r\n        var timeout = setTimeout(function () {\r\n            var message = timeoutMessage || \"Promise timeout hit: \" + timeoutMilliseconds;\r\n            reject(message);\r\n        }, timeoutMilliseconds);\r\n        var providedPromise = new Promise(executor);\r\n        providedPromise\r\n            .then(function (result) {\r\n            clearTimeout(timeout);\r\n            resolve(result);\r\n        })\r\n            .catch(function (error) {\r\n            clearTimeout(timeout);\r\n            reject(error);\r\n        });\r\n    });\r\n};\n\nvar WebPlatformTransport = (function () {\r\n    function WebPlatformTransport(settings, logger, identity) {\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.identity = identity;\r\n        this.iAmConnected = false;\r\n        this.parentReady = false;\r\n        this.rejected = false;\r\n        this.children = [];\r\n        this.extContentAvailable = false;\r\n        this.extContentConnecting = false;\r\n        this.extContentConnected = false;\r\n        this.parentInExtMode = false;\r\n        this.parentPingTimeout = 5000;\r\n        this.connectionRequestTimeout = 7000;\r\n        this.defaultTargetString = \"*\";\r\n        this.registry = lib();\r\n        this.messages = {\r\n            connectionAccepted: { name: \"connectionAccepted\", handle: this.handleConnectionAccepted.bind(this) },\r\n            connectionRejected: { name: \"connectionRejected\", handle: this.handleConnectionRejected.bind(this) },\r\n            connectionRequest: { name: \"connectionRequest\", handle: this.handleConnectionRequest.bind(this) },\r\n            parentReady: { name: \"parentReady\", handle: this.handleParentReady.bind(this) },\r\n            parentPing: { name: \"parentPing\", handle: this.handleParentPing.bind(this) },\r\n            platformPing: { name: \"platformPing\", handle: this.handlePlatformPing.bind(this) },\r\n            platformReady: { name: \"platformReady\", handle: this.handlePlatformReady.bind(this) },\r\n            clientUnload: { name: \"clientUnload\", handle: this.handleClientUnload.bind(this) },\r\n            manualUnload: { name: \"manualUnload\", handle: this.handleManualUnload.bind(this) },\r\n            extConnectionResponse: { name: \"extConnectionResponse\", handle: this.handleExtConnectionResponse.bind(this) },\r\n            extSetupRequest: { name: \"extSetupRequest\", handle: this.handleExtSetupRequest.bind(this) },\r\n            gatewayDisconnect: { name: \"gatewayDisconnect\", handle: this.handleGatewayDisconnect.bind(this) },\r\n            gatewayInternalConnect: { name: \"gatewayInternalConnect\", handle: this.handleGatewayInternalConnect.bind(this) }\r\n        };\r\n        this.extContentAvailable = !!window.glue42ext;\r\n        this.setUpMessageListener();\r\n        this.setUpUnload();\r\n        this.setupPlatformUnloadListener();\r\n        if (!this.settings.port) {\r\n            this.parent = window.opener || window.top;\r\n            this.parentType = window.opener ? \"opener\" :\r\n                window.name.indexOf(\"#wsp\") !== -1 ? \"workspace\" : \"top\";\r\n        }\r\n    }\r\n    WebPlatformTransport.prototype.manualSetReadyState = function () {\r\n        this.iAmConnected = true;\r\n        this.parentReady = true;\r\n    };\r\n    Object.defineProperty(WebPlatformTransport.prototype, \"transportWindowId\", {\r\n        get: function () {\r\n            return this.publicWindowId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WebPlatformTransport.prototype, \"communicationId\", {\r\n        get: function () {\r\n            return this._communicationId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WebPlatformTransport.prototype.sendObject = function (msg) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (this.extContentConnected) {\r\n                    return [2, window.postMessage({ glue42ExtOut: msg }, this.defaultTargetString)];\r\n                }\r\n                if (!this.port) {\r\n                    throw new Error(\"Cannot send message, because the port was not opened yet\");\r\n                }\r\n                this.port.postMessage(msg);\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(WebPlatformTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WebPlatformTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    WebPlatformTransport.prototype.send = function () {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    WebPlatformTransport.prototype.onConnectedChanged = function (callback) {\r\n        return this.registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WebPlatformTransport.prototype.open = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"opening a connection to the web platform gateway.\");\r\n                        return [4, this.connect()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.notifyStatusChanged(true);\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.close = function () {\r\n        var _a, _b;\r\n        var message = {\r\n            glue42core: {\r\n                type: this.messages.gatewayDisconnect.name,\r\n                data: {\r\n                    clientId: this.myClientId,\r\n                    ownWindowId: (_a = this.identity) === null || _a === void 0 ? void 0 : _a.windowId\r\n                }\r\n            }\r\n        };\r\n        (_b = this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);\r\n        this.parentReady = false;\r\n        this.notifyStatusChanged(false, \"manual reconnection\");\r\n        return Promise.resolve();\r\n    };\r\n    WebPlatformTransport.prototype.name = function () {\r\n        return \"web-platform\";\r\n    };\r\n    WebPlatformTransport.prototype.reconnect = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.close()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2, Promise.resolve()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.connect = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.settings.port) return [3, 2];\r\n                        return [4, this.initiateInternalConnection()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.logger.debug(\"internal web platform connection completed\");\r\n                        return [2];\r\n                    case 2:\r\n                        if (!this.parentType || !this.parent) {\r\n                            throw new Error(\"Cannot initiate a connection, because there is no opener, no top and no port.\");\r\n                        }\r\n                        this.logger.debug(\"opening a \" + (this.parentType === \"opener\" ? \"child\" : \"grandchild\") + \" client web platform connection\");\r\n                        return [4, this.waitParent(this.parent, this.parentType)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        if (!this.parentInExtMode) return [3, 5];\r\n                        return [4, this.requestConnectionPermissionFromExt()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        _a.label = 5;\r\n                    case 5: return [4, this.initiateRemoteConnection(this.parent, this.parentType)];\r\n                    case 6:\r\n                        _a.sent();\r\n                        this.logger.debug(\"the \" + (this.parentType === \"opener\" ? \"child\" : \"grandchild\") + \" client is connected\");\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.initiateInternalConnection = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.logger.debug(\"opening an internal web platform connection\");\r\n            _this.port = _this.settings.port;\r\n            if (_this.iAmConnected) {\r\n                _this.logger.warn(\"cannot open a new connection, because this client is currently connected\");\r\n                return;\r\n            }\r\n            _this.port.onmessage = function (event) {\r\n                var _a, _b;\r\n                if (_this.iAmConnected && !((_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core)) {\r\n                    _this.registry.execute(\"onMessage\", event.data);\r\n                    return;\r\n                }\r\n                var data = (_b = event.data) === null || _b === void 0 ? void 0 : _b.glue42core;\r\n                if (!data) {\r\n                    return;\r\n                }\r\n                if (data.type === _this.messages.gatewayInternalConnect.name && data.success) {\r\n                    _this.publicWindowId = _this.settings.windowId;\r\n                    if (_this.identity) {\r\n                        _this.identity.windowId = _this.publicWindowId;\r\n                    }\r\n                    resolve();\r\n                }\r\n                if (data.type === _this.messages.gatewayInternalConnect.name && data.error) {\r\n                    reject(data.error);\r\n                }\r\n            };\r\n            _this.port.postMessage({\r\n                glue42core: {\r\n                    type: _this.messages.gatewayInternalConnect.name\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.initiateRemoteConnection = function (target, parentType) {\r\n        var _this = this;\r\n        return PromisePlus(function (resolve, reject) {\r\n            var _a;\r\n            _this.connectionResolve = resolve;\r\n            _this.connectionReject = reject;\r\n            _this.myClientId = (_a = _this.myClientId) !== null && _a !== void 0 ? _a : shortid();\r\n            var bridgeInstanceId = _this.parentType === \"workspace\" ? window.name.substring(0, window.name.indexOf(\"#wsp\")) : window.name;\r\n            var request = {\r\n                glue42core: {\r\n                    type: _this.messages.connectionRequest.name,\r\n                    clientId: _this.myClientId,\r\n                    clientType: parentType === \"top\" || parentType === \"workspace\" ? \"grandChild\" : \"child\",\r\n                    bridgeInstanceId: bridgeInstanceId\r\n                }\r\n            };\r\n            _this.logger.debug(\"sending connection request to \" + parentType);\r\n            if (_this.extContentConnecting) {\r\n                request.glue42core.clientType = \"child\";\r\n                request.glue42core.bridgeInstanceId = _this.myClientId;\r\n                request.glue42core.parentWindowId = _this.parentWindowId;\r\n                return window.postMessage(request, _this.defaultTargetString);\r\n            }\r\n            target.postMessage(request, _this.defaultTargetString);\r\n        }, this.connectionRequestTimeout, \"The connection to the opener/top window timed out\");\r\n    };\r\n    WebPlatformTransport.prototype.waitParent = function (target, parentType) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var connectionNotPossibleMsg, parentCheck, error_1;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        connectionNotPossibleMsg = \"Cannot initiate glue, because this window was not opened or created by a glue client\";\r\n                        parentCheck = PromisePlus(function (resolve, reject) {\r\n                            var isIframe = window.self !== window.top;\r\n                            if (parentType === \"top\" && !isIframe) {\r\n                                return reject(connectionNotPossibleMsg);\r\n                            }\r\n                            _this.parentPingResolve = resolve;\r\n                            var message = {\r\n                                glue42core: {\r\n                                    type: parentType === \"opener\" ? _this.messages.platformPing.name : _this.messages.parentPing.name\r\n                                }\r\n                            };\r\n                            _this.logger.debug(\"checking for \" + parentType + \" window availability\");\r\n                            _this.parentPingInterval = setInterval(function () {\r\n                                target.postMessage(message, _this.defaultTargetString);\r\n                            }, 1000);\r\n                        }, this.parentPingTimeout, connectionNotPossibleMsg);\r\n                        parentCheck.catch(function () {\r\n                            if (_this.parentPingInterval) {\r\n                                clearInterval(_this.parentPingInterval);\r\n                                delete _this.parentPingInterval;\r\n                            }\r\n                        });\r\n                        if (!this.extContentAvailable) {\r\n                            return [2, parentCheck];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 5]);\r\n                        return [4, parentCheck];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2];\r\n                    case 3:\r\n                        error_1 = _a.sent();\r\n                        this.logger.debug(\"the parent check failed, but there is an associated extension content script, requesting permission...\");\r\n                        return [4, this.requestConnectionPermissionFromExt()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [3, 5];\r\n                    case 5: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.setUpMessageListener = function () {\r\n        var _this = this;\r\n        if (this.settings.port) {\r\n            this.logger.debug(\"skipping generic message listener, because this is an internal client\");\r\n            return;\r\n        }\r\n        window.addEventListener(\"message\", function (event) {\r\n            var _a;\r\n            var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;\r\n            if (!data || _this.rejected) {\r\n                return;\r\n            }\r\n            if (!_this.checkMessageTypeValid(data.type)) {\r\n                _this.logger.error(\"cannot handle the incoming glue42 core message, because the type is invalid: \" + data.type);\r\n                return;\r\n            }\r\n            var messageType = data.type;\r\n            _this.logger.debug(\"received valid glue42core message of type: \" + messageType);\r\n            _this.messages[messageType].handle(event);\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.setUpUnload = function () {\r\n        var _this = this;\r\n        if (this.settings.port) {\r\n            this.logger.debug(\"skipping unload event listener, because this is an internal client\");\r\n            return;\r\n        }\r\n        window.addEventListener(\"beforeunload\", function () {\r\n            var _a, _b;\r\n            if (_this.extContentConnected) {\r\n                return;\r\n            }\r\n            var message = {\r\n                glue42core: {\r\n                    type: _this.messages.clientUnload.name,\r\n                    data: {\r\n                        clientId: _this.myClientId,\r\n                        ownWindowId: (_a = _this.identity) === null || _a === void 0 ? void 0 : _a.windowId\r\n                    }\r\n                }\r\n            };\r\n            if (_this.parent) {\r\n                _this.parent.postMessage(message, _this.defaultTargetString);\r\n            }\r\n            (_b = _this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.handleParentReady = function (event) {\r\n        var _a;\r\n        this.logger.debug(\"handling the ready signal from the parent, by resoling the pending promise.\");\r\n        this.parentReady = true;\r\n        var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;\r\n        if (data && data.extMode) {\r\n            this.logger.debug(\"my parent is connected to its content script, fetching windowId and proceeding with content script connection\");\r\n            this.parentWindowId = data.extMode.windowId;\r\n            this.parentInExtMode = true;\r\n        }\r\n        if (this.parentPingResolve) {\r\n            this.parentPingResolve();\r\n            delete this.parentPingResolve;\r\n        }\r\n        if (this.parentPingInterval) {\r\n            clearInterval(this.parentPingInterval);\r\n            delete this.parentPingInterval;\r\n        }\r\n    };\r\n    WebPlatformTransport.prototype.handlePlatformReady = function () {\r\n        this.logger.debug(\"the web platform gave the ready signal\");\r\n        this.parentReady = true;\r\n        if (this.parentPingResolve) {\r\n            this.parentPingResolve();\r\n            delete this.parentPingResolve;\r\n        }\r\n        if (this.parentPingInterval) {\r\n            clearInterval(this.parentPingInterval);\r\n            delete this.parentPingInterval;\r\n        }\r\n    };\r\n    WebPlatformTransport.prototype.handleConnectionAccepted = function (event) {\r\n        var _a;\r\n        var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;\r\n        if (this.myClientId === data.clientId) {\r\n            return this.handleAcceptanceOfMyRequest(data);\r\n        }\r\n        return this.handleAcceptanceOfGrandChildRequest(data, event);\r\n    };\r\n    WebPlatformTransport.prototype.handleAcceptanceOfMyRequest = function (data) {\r\n        var _this = this;\r\n        this.logger.debug(\"handling a connection accepted signal targeted at me.\");\r\n        this.isPreferredActivated = data.isPreferredActivated;\r\n        if (this.extContentConnecting) {\r\n            return this.processExtContentConnection(data);\r\n        }\r\n        if (!data.port) {\r\n            this.logger.error(\"cannot set up my connection, because I was not provided with a port\");\r\n            return;\r\n        }\r\n        this.publicWindowId = this.parentType === \"opener\" ? window.name :\r\n            this.parentType === \"top\" ? data.parentWindowId :\r\n                window.name.substring(0, window.name.indexOf(\"#wsp\"));\r\n        if (this.identity && this.parentType !== \"top\") {\r\n            this.identity.windowId = this.publicWindowId;\r\n        }\r\n        if (this.identity && data.appName) {\r\n            this.identity.application = data.appName;\r\n            this.identity.applicationName = data.appName;\r\n        }\r\n        this._communicationId = data.communicationId;\r\n        this.port = data.port;\r\n        this.port.onmessage = function (e) { return _this.registry.execute(\"onMessage\", e.data); };\r\n        if (this.connectionResolve) {\r\n            this.logger.debug(\"my connection is set up, calling the connection resolve.\");\r\n            this.connectionResolve();\r\n            delete this.connectionResolve;\r\n            return;\r\n        }\r\n        this.logger.error(\"unable to call the connection resolve, because no connection promise was found\");\r\n    };\r\n    WebPlatformTransport.prototype.processExtContentConnection = function (data) {\r\n        var _this = this;\r\n        this.logger.debug(\"handling a connection accepted signal targeted at me for extension content connection.\");\r\n        this.extContentConnecting = false;\r\n        this.extContentConnected = true;\r\n        this.publicWindowId = this.parentWindowId || this.myClientId;\r\n        if (this.extContentConnecting && this.identity) {\r\n            this.identity.windowId = this.publicWindowId;\r\n        }\r\n        if (this.identity && data.appName) {\r\n            this.identity.application = data.appName;\r\n            this.identity.applicationName = data.appName;\r\n        }\r\n        window.addEventListener(\"message\", function (event) {\r\n            var _a;\r\n            var extData = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42ExtInc;\r\n            if (!extData) {\r\n                return;\r\n            }\r\n            _this.registry.execute(\"onMessage\", extData);\r\n        });\r\n        if (this.connectionResolve) {\r\n            this.logger.debug(\"my connection is set up, calling the connection resolve.\");\r\n            this.connectionResolve();\r\n            delete this.connectionResolve;\r\n            return;\r\n        }\r\n    };\r\n    WebPlatformTransport.prototype.handleAcceptanceOfGrandChildRequest = function (data, event) {\r\n        if (this.extContentConnecting || this.extContentConnected) {\r\n            this.logger.debug(\"cannot process acceptance of a grandchild, because I am connected to a content script\");\r\n            return;\r\n        }\r\n        this.logger.debug(\"handling a connection accepted signal targeted at a grandchild: \" + data.clientId);\r\n        var child = this.children.find(function (c) { return c.grandChildId === data.clientId; });\r\n        if (!child) {\r\n            this.logger.error(\"cannot handle connection accepted for grandchild: \" + data.clientId + \", because there is no grandchild with this id\");\r\n            return;\r\n        }\r\n        child.connected = true;\r\n        this.logger.debug(\"the grandchild connection for \" + data.clientId + \" is set up, forwarding the success message and the gateway port\");\r\n        data.parentWindowId = this.publicWindowId;\r\n        child.source.postMessage(event.data, child.origin, [data.port]);\r\n        return;\r\n    };\r\n    WebPlatformTransport.prototype.handleConnectionRejected = function () {\r\n        this.logger.debug(\"handling a connection rejection. Most likely the reason is that this window was not created by a glue API call\");\r\n        if (this.connectionReject) {\r\n            this.connectionReject(\"The platform connection was rejected. Most likely because this window was not created by a glue API call\");\r\n            delete this.connectionReject;\r\n        }\r\n    };\r\n    WebPlatformTransport.prototype.handleConnectionRequest = function (event) {\r\n        if (this.extContentConnecting) {\r\n            this.logger.debug(\"This connection request event is targeted at the extension content\");\r\n            return;\r\n        }\r\n        var source = event.source;\r\n        var data = event.data.glue42core;\r\n        if (!data.clientType || data.clientType !== \"grandChild\") {\r\n            return this.rejectConnectionRequest(source, event.origin, \"rejecting a connection request, because the source was not opened by a glue API call\");\r\n        }\r\n        if (!data.clientId) {\r\n            return this.rejectConnectionRequest(source, event.origin, \"rejecting a connection request, because the source did not provide a valid id\");\r\n        }\r\n        if (this.parentType !== \"opener\" || !this.parent) {\r\n            return this.rejectConnectionRequest(source, event.origin, \"Cannot forward the connection request, because no direct connection to the platform was found\");\r\n        }\r\n        this.logger.debug(\"handling a connection request for a grandchild: \" + data.clientId);\r\n        this.children.push({ grandChildId: data.clientId, source: source, connected: false, origin: event.origin });\r\n        this.logger.debug(\"grandchild: \" + data.clientId + \" is prepared, forwarding connection request to the platform\");\r\n        this.parent.postMessage(event.data, this.defaultTargetString);\r\n    };\r\n    WebPlatformTransport.prototype.handleParentPing = function (event) {\r\n        if (!this.parentReady) {\r\n            this.logger.debug(\"my parent is not ready, I am ignoring the parent ping\");\r\n            return;\r\n        }\r\n        if (!this.iAmConnected) {\r\n            this.logger.debug(\"i am not fully connected yet, I am ignoring the parent ping\");\r\n            return;\r\n        }\r\n        var message = {\r\n            glue42core: {\r\n                type: this.messages.parentReady.name\r\n            }\r\n        };\r\n        if (this.extContentConnected) {\r\n            message.glue42core.extMode = { windowId: this.myClientId };\r\n        }\r\n        var source = event.source;\r\n        this.logger.debug(\"responding to a parent ping with a ready message\");\r\n        source.postMessage(message, event.origin);\r\n    };\r\n    WebPlatformTransport.prototype.setupPlatformUnloadListener = function () {\r\n        var _this = this;\r\n        this.onMessage(function (msg) {\r\n            if (msg.type === \"platformUnload\") {\r\n                _this.logger.debug(\"detected a web platform unload\");\r\n                _this.parentReady = false;\r\n                _this.notifyStatusChanged(false, \"Gateway unloaded\");\r\n            }\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.handleManualUnload = function () {\r\n        var _a, _b;\r\n        var message = {\r\n            glue42core: {\r\n                type: this.messages.clientUnload.name,\r\n                data: {\r\n                    clientId: this.myClientId,\r\n                    ownWindowId: (_a = this.identity) === null || _a === void 0 ? void 0 : _a.windowId\r\n                }\r\n            }\r\n        };\r\n        if (this.extContentConnected) {\r\n            return window.postMessage({ glue42ExtOut: message }, this.defaultTargetString);\r\n        }\r\n        (_b = this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);\r\n    };\r\n    WebPlatformTransport.prototype.handleClientUnload = function (event) {\r\n        var data = event.data.glue42core;\r\n        var clientId = data === null || data === void 0 ? void 0 : data.data.clientId;\r\n        if (!clientId) {\r\n            this.logger.warn(\"cannot process grand child unload, because the provided id was not valid\");\r\n            return;\r\n        }\r\n        var foundChild = this.children.find(function (child) { return child.grandChildId === clientId; });\r\n        if (!foundChild) {\r\n            this.logger.warn(\"cannot process grand child unload, because this client is unaware of this grandchild\");\r\n            return;\r\n        }\r\n        this.logger.debug(\"handling grandchild unload for id: \" + clientId);\r\n        this.children = this.children.filter(function (child) { return child.grandChildId !== clientId; });\r\n    };\r\n    WebPlatformTransport.prototype.handlePlatformPing = function () {\r\n        this.logger.error(\"cannot handle platform ping, because this is not a platform calls handling component\");\r\n    };\r\n    WebPlatformTransport.prototype.notifyStatusChanged = function (status, reason) {\r\n        this.iAmConnected = status;\r\n        this.registry.execute(\"onConnectedChanged\", status, reason);\r\n    };\r\n    WebPlatformTransport.prototype.checkMessageTypeValid = function (typeToValidate) {\r\n        return typeof typeToValidate === \"string\" && !!this.messages[typeToValidate];\r\n    };\r\n    WebPlatformTransport.prototype.rejectConnectionRequest = function (source, origin, reason) {\r\n        this.rejected = true;\r\n        this.logger.error(reason);\r\n        var rejection = {\r\n            glue42core: {\r\n                type: this.messages.connectionRejected.name\r\n            }\r\n        };\r\n        source.postMessage(rejection, origin);\r\n    };\r\n    WebPlatformTransport.prototype.requestConnectionPermissionFromExt = function () {\r\n        var _this = this;\r\n        return this.waitForContentScript()\r\n            .then(function () { return PromisePlus(function (resolve, reject) {\r\n            _this.extConnectionResolve = resolve;\r\n            _this.extConnectionReject = reject;\r\n            var message = {\r\n                glue42core: {\r\n                    type: \"extSetupRequest\"\r\n                }\r\n            };\r\n            _this.logger.debug(\"permission request to the extension content script was sent\");\r\n            window.postMessage(message, _this.defaultTargetString);\r\n        }, _this.parentPingTimeout, \"Cannot initialize glue, because this app was not opened or created by a Glue Client and the request for extension connection timed out\"); });\r\n    };\r\n    WebPlatformTransport.prototype.handleExtConnectionResponse = function (event) {\r\n        var _a;\r\n        var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;\r\n        if (!data.approved && this.extConnectionReject) {\r\n            return this.extConnectionReject(\"Cannot initialize glue, because this app was not opened or created by a Glue Client and the request for extension connection was rejected\");\r\n        }\r\n        if (this.extConnectionResolve) {\r\n            this.extContentConnecting = true;\r\n            this.logger.debug(\"The extension connection was approved, proceeding.\");\r\n            this.extConnectionResolve();\r\n            delete this.extConnectionResolve;\r\n        }\r\n    };\r\n    WebPlatformTransport.prototype.handleExtSetupRequest = function () {\r\n        return;\r\n    };\r\n    WebPlatformTransport.prototype.handleGatewayDisconnect = function () {\r\n        return;\r\n    };\r\n    WebPlatformTransport.prototype.handleGatewayInternalConnect = function () {\r\n        return;\r\n    };\r\n    WebPlatformTransport.prototype.waitForContentScript = function () {\r\n        var _a;\r\n        var contentReady = !!((_a = window.glue42ext) === null || _a === void 0 ? void 0 : _a.content);\r\n        if (contentReady) {\r\n            return Promise.resolve();\r\n        }\r\n        return PromisePlus(function (resolve) {\r\n            window.addEventListener(\"Glue42EXTReady\", function () {\r\n                resolve();\r\n            });\r\n        }, this.connectionRequestTimeout, \"The content script was available, but was never heard to be ready\");\r\n    };\r\n    return WebPlatformTransport;\r\n}());\n\nvar waitForInvocations = function (invocations, callback) {\r\n    var left = invocations;\r\n    return function () {\r\n        left--;\r\n        if (left === 0) {\r\n            callback();\r\n        }\r\n    };\r\n};\n\nvar AsyncSequelizer = (function () {\r\n    function AsyncSequelizer(minSequenceInterval) {\r\n        if (minSequenceInterval === void 0) { minSequenceInterval = 0; }\r\n        this.minSequenceInterval = minSequenceInterval;\r\n        this.queue = [];\r\n        this.isExecutingQueue = false;\r\n    }\r\n    AsyncSequelizer.prototype.enqueue = function (action) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.queue.push({ action: action, resolve: resolve, reject: reject });\r\n            _this.executeQueue();\r\n        });\r\n    };\r\n    AsyncSequelizer.prototype.executeQueue = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var operation, actionResult, error_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.isExecutingQueue) {\r\n                            return [2];\r\n                        }\r\n                        this.isExecutingQueue = true;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!this.queue.length) return [3, 7];\r\n                        operation = this.queue.shift();\r\n                        if (!operation) {\r\n                            this.isExecutingQueue = false;\r\n                            return [2];\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        return [4, operation.action()];\r\n                    case 3:\r\n                        actionResult = _a.sent();\r\n                        operation.resolve(actionResult);\r\n                        return [3, 5];\r\n                    case 4:\r\n                        error_1 = _a.sent();\r\n                        operation.reject(error_1);\r\n                        return [3, 5];\r\n                    case 5: return [4, this.intervalBreak()];\r\n                    case 6:\r\n                        _a.sent();\r\n                        return [3, 1];\r\n                    case 7:\r\n                        this.isExecutingQueue = false;\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AsyncSequelizer.prototype.intervalBreak = function () {\r\n        var _this = this;\r\n        return new Promise(function (res) { return setTimeout(res, _this.minSequenceInterval); });\r\n    };\r\n    return AsyncSequelizer;\r\n}());\n\nvar Connection = (function () {\r\n    function Connection(settings, logger) {\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.messageHandlers = {};\r\n        this.ids = 1;\r\n        this.registry = lib();\r\n        this._connected = false;\r\n        this.isTrace = false;\r\n        this._swapTransport = false;\r\n        this._switchInProgress = false;\r\n        this._transportSubscriptions = [];\r\n        this._sequelizer = new AsyncSequelizer();\r\n        settings = settings || {};\r\n        settings.reconnectAttempts = settings.reconnectAttempts || 10;\r\n        settings.reconnectInterval = settings.reconnectInterval || 1000;\r\n        if (settings.inproc) {\r\n            this.transport = new InProcTransport(settings.inproc, logger.subLogger(\"inMemory\"));\r\n        }\r\n        else if (settings.sharedWorker) {\r\n            this.transport = new SharedWorkerTransport(settings.sharedWorker, logger.subLogger(\"shared-worker\"));\r\n        }\r\n        else if (settings.webPlatform) {\r\n            this.transport = new WebPlatformTransport(settings.webPlatform, logger.subLogger(\"web-platform\"), settings.identity);\r\n        }\r\n        else if (settings.ws !== undefined) {\r\n            this.transport = new WS(settings, logger.subLogger(\"ws\"));\r\n        }\r\n        else {\r\n            throw new Error(\"No connection information specified\");\r\n        }\r\n        this.isTrace = logger.canPublish(\"trace\");\r\n        logger.debug(\"starting with \" + this.transport.name() + \" transport\");\r\n        this.protocol = new GW3ProtocolImpl(this, settings, logger.subLogger(\"protocol\"));\r\n        var unsubConnectionChanged = this.transport.onConnectedChanged(this.handleConnectionChanged.bind(this));\r\n        var unsubOnMessage = this.transport.onMessage(this.handleTransportMessage.bind(this));\r\n        this._transportSubscriptions.push(unsubConnectionChanged);\r\n        this._transportSubscriptions.push(unsubOnMessage);\r\n        this._defaultTransport = this.transport;\r\n    }\r\n    Object.defineProperty(Connection.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this.protocol) === null || _a === void 0 ? void 0 : _a.protocolVersion;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Connection.prototype.switchTransport = function (settings) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                return [2, this._sequelizer.enqueue(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                        var switchTargetTransport, verifyPromise, isSwitchSuccess, error_1;\r\n                        return __generator(this, function (_a) {\r\n                            switch (_a.label) {\r\n                                case 0:\r\n                                    if (!settings || typeof settings !== \"object\") {\r\n                                        throw new Error(\"Cannot switch transports, because the settings are missing or invalid.\");\r\n                                    }\r\n                                    if (typeof settings.type === \"undefined\") {\r\n                                        throw new Error(\"Cannot switch the transport, because the type is not defined\");\r\n                                    }\r\n                                    this.logger.trace(\"Starting transport switch with settings: \" + JSON.stringify(settings));\r\n                                    switchTargetTransport = settings.type === \"secondary\" ? this.getNewSecondaryTransport(settings) : this._defaultTransport;\r\n                                    this._targetTransport = switchTargetTransport;\r\n                                    this._targetAuth = settings.type === \"secondary\" ? this.getNewSecondaryAuth(settings) : this._defaultAuth;\r\n                                    verifyPromise = this.verifyConnection();\r\n                                    this._swapTransport = true;\r\n                                    this._switchInProgress = true;\r\n                                    this.logger.trace(\"The new transport has been set, closing the current transport\");\r\n                                    return [4, this.transport.close()];\r\n                                case 1:\r\n                                    _a.sent();\r\n                                    _a.label = 2;\r\n                                case 2:\r\n                                    _a.trys.push([2, 4, , 5]);\r\n                                    return [4, verifyPromise];\r\n                                case 3:\r\n                                    _a.sent();\r\n                                    isSwitchSuccess = this.transport === switchTargetTransport;\r\n                                    this.logger.info(\"The reconnection after the switch was completed. Was the switch a success: \" + isSwitchSuccess);\r\n                                    this._switchInProgress = false;\r\n                                    return [2, { success: isSwitchSuccess }];\r\n                                case 4:\r\n                                    error_1 = _a.sent();\r\n                                    this.logger.info(\"The reconnection after the switch timed out, reverting back to the default transport.\");\r\n                                    this.switchTransport({ type: \"default\" });\r\n                                    this._switchInProgress = false;\r\n                                    return [2, { success: false }];\r\n                                case 5: return [2];\r\n                            }\r\n                        });\r\n                    }); })];\r\n            });\r\n        });\r\n    };\r\n    Connection.prototype.onLibReAnnounced = function (callback) {\r\n        return this.registry.add(\"libReAnnounced\", callback);\r\n    };\r\n    Connection.prototype.setLibReAnnounced = function (lib) {\r\n        this.registry.execute(\"libReAnnounced\", lib);\r\n    };\r\n    Connection.prototype.send = function (message, options) {\r\n        if (this.transport.sendObject &&\r\n            this.transport.isObjectBasedTransport) {\r\n            var msg = this.protocol.createObjectMessage(message);\r\n            if (this.isTrace) {\r\n                this.logger.trace(\">> \" + JSON.stringify(msg));\r\n            }\r\n            return this.transport.sendObject(msg, options);\r\n        }\r\n        else {\r\n            var strMessage = this.protocol.createStringMessage(message);\r\n            if (this.isTrace) {\r\n                this.logger.trace(\">> \" + strMessage);\r\n            }\r\n            return this.transport.send(strMessage, options);\r\n        }\r\n    };\r\n    Connection.prototype.on = function (type, messageHandler) {\r\n        type = type.toLowerCase();\r\n        if (this.messageHandlers[type] === undefined) {\r\n            this.messageHandlers[type] = {};\r\n        }\r\n        var id = this.ids++;\r\n        this.messageHandlers[type][id] = messageHandler;\r\n        return {\r\n            type: type,\r\n            id: id,\r\n        };\r\n    };\r\n    Connection.prototype.off = function (info) {\r\n        delete this.messageHandlers[info.type.toLowerCase()][info.id];\r\n    };\r\n    Object.defineProperty(Connection.prototype, \"isConnected\", {\r\n        get: function () {\r\n            return this.protocol.isLoggedIn;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Connection.prototype.connected = function (callback) {\r\n        var _this = this;\r\n        return this.protocol.loggedIn(function () {\r\n            var currentServer = _this.transport.name();\r\n            callback(currentServer);\r\n        });\r\n    };\r\n    Connection.prototype.disconnected = function (callback) {\r\n        return this.registry.add(\"disconnected\", callback);\r\n    };\r\n    Connection.prototype.login = function (authRequest, reconnect) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var newAuth, identity, error_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this._defaultAuth) {\r\n                            this._defaultAuth = authRequest;\r\n                        }\r\n                        if (this._swapTransport) {\r\n                            this.logger.trace(\"Detected a transport swap, swapping transports\");\r\n                            newAuth = this.transportSwap();\r\n                            authRequest = newAuth !== null && newAuth !== void 0 ? newAuth : authRequest;\r\n                        }\r\n                        this.logger.trace(\"Starting login for transport: \" + this.transport.name() + \" and auth \" + JSON.stringify(authRequest));\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4, this.transport.open()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.logger.trace(\"Transport: \" + this.transport.name() + \" opened, logging in\");\r\n                        timer(\"connection\").mark(\"transport-opened\");\r\n                        return [4, this.protocol.login(authRequest, reconnect)];\r\n                    case 3:\r\n                        identity = _a.sent();\r\n                        this.logger.trace(\"Logged in with identity: \" + JSON.stringify(identity));\r\n                        timer(\"connection\").mark(\"protocol-logged-in\");\r\n                        return [2, identity];\r\n                    case 4:\r\n                        error_2 = _a.sent();\r\n                        if (this._switchInProgress) {\r\n                            this.logger.trace(\"An error while logging in after a transport swap, preparing a default swap.\");\r\n                            this.prepareDefaultSwap();\r\n                        }\r\n                        throw new Error(error_2);\r\n                    case 5: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Connection.prototype.logout = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.protocol.logout()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4, this.transport.close()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Connection.prototype.loggedIn = function (callback) {\r\n        return this.protocol.loggedIn(callback);\r\n    };\r\n    Connection.prototype.domain = function (domain, successMessages, errorMessages) {\r\n        return this.protocol.domain(domain, this.logger.subLogger(\"domain=\" + domain), successMessages, errorMessages);\r\n    };\r\n    Connection.prototype.authToken = function () {\r\n        return this.protocol.authToken();\r\n    };\r\n    Connection.prototype.reconnect = function () {\r\n        return this.transport.reconnect();\r\n    };\r\n    Connection.prototype.distributeMessage = function (message, type) {\r\n        var _this = this;\r\n        var handlers = this.messageHandlers[type.toLowerCase()];\r\n        if (handlers !== undefined) {\r\n            Object.keys(handlers).forEach(function (handlerId) {\r\n                var handler = handlers[handlerId];\r\n                if (handler !== undefined) {\r\n                    try {\r\n                        handler(message);\r\n                    }\r\n                    catch (error) {\r\n                        try {\r\n                            _this.logger.error(\"Message handler failed with \" + error.stack, error);\r\n                        }\r\n                        catch (loggerError) {\r\n                            console.log(\"Message handler failed\", error);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Connection.prototype.handleConnectionChanged = function (connected) {\r\n        if (this._connected === connected) {\r\n            return;\r\n        }\r\n        this._connected = connected;\r\n        if (connected) {\r\n            if (this.settings.replaySpecs && this.settings.replaySpecs.length) {\r\n                this.replayer = new MessageReplayerImpl(this.settings.replaySpecs);\r\n                this.replayer.init(this);\r\n            }\r\n            this.registry.execute(\"connected\");\r\n        }\r\n        else {\r\n            this.registry.execute(\"disconnected\");\r\n        }\r\n    };\r\n    Connection.prototype.handleTransportMessage = function (msg) {\r\n        var msgObj;\r\n        if (typeof msg === \"string\") {\r\n            msgObj = this.protocol.processStringMessage(msg);\r\n        }\r\n        else {\r\n            msgObj = this.protocol.processObjectMessage(msg);\r\n        }\r\n        if (this.isTrace) {\r\n            this.logger.trace(\"<< \" + JSON.stringify(msgObj));\r\n        }\r\n        this.distributeMessage(msgObj.msg, msgObj.msgType);\r\n    };\r\n    Connection.prototype.verifyConnection = function () {\r\n        var _this = this;\r\n        return PromisePlus(function (resolve) {\r\n            var unsub;\r\n            var ready = waitForInvocations(2, function () {\r\n                if (unsub) {\r\n                    unsub();\r\n                }\r\n                resolve();\r\n            });\r\n            unsub = _this.onLibReAnnounced(function (lib) {\r\n                if (lib.name === \"interop\") {\r\n                    return ready();\r\n                }\r\n                if (lib.name === \"contexts\") {\r\n                    return ready();\r\n                }\r\n            });\r\n        }, 10000, \"Transport switch timed out waiting for all libraries to be re-announced\");\r\n    };\r\n    Connection.prototype.getNewSecondaryTransport = function (settings) {\r\n        var _a;\r\n        if (!((_a = settings.transportConfig) === null || _a === void 0 ? void 0 : _a.url)) {\r\n            throw new Error(\"Missing secondary transport URL.\");\r\n        }\r\n        return new WS(Object.assign({}, this.settings, { ws: settings.transportConfig.url, reconnectAttempts: 1 }), this.logger.subLogger(\"ws-secondary\"));\r\n    };\r\n    Connection.prototype.getNewSecondaryAuth = function (settings) {\r\n        var _a;\r\n        if (!((_a = settings.transportConfig) === null || _a === void 0 ? void 0 : _a.auth)) {\r\n            throw new Error(\"Missing secondary transport auth information.\");\r\n        }\r\n        return settings.transportConfig.auth;\r\n    };\r\n    Connection.prototype.transportSwap = function () {\r\n        this._swapTransport = false;\r\n        if (!this._targetTransport || !this._targetAuth) {\r\n            this.logger.warn(\"Error while switching transports - either the target transport or auth is not defined: transport defined -> \" + !!this._defaultTransport + \", auth defined -> \" + !!this._targetAuth + \". Staying on the current one.\");\r\n            return;\r\n        }\r\n        this._transportSubscriptions.forEach(function (unsub) { return unsub(); });\r\n        this._transportSubscriptions = [];\r\n        this.transport = this._targetTransport;\r\n        var unsubConnectionChanged = this.transport.onConnectedChanged(this.handleConnectionChanged.bind(this));\r\n        var unsubOnMessage = this.transport.onMessage(this.handleTransportMessage.bind(this));\r\n        this._transportSubscriptions.push(unsubConnectionChanged);\r\n        this._transportSubscriptions.push(unsubOnMessage);\r\n        return this._targetAuth;\r\n    };\r\n    Connection.prototype.prepareDefaultSwap = function () {\r\n        var _this = this;\r\n        this._transportSubscriptions.forEach(function (unsub) { return unsub(); });\r\n        this._transportSubscriptions = [];\r\n        this.transport.close().catch(function (error) { return _this.logger.warn(\"Error closing the \" + _this.transport.name() + \" transport after a failed connection attempt: \" + JSON.stringify(error)); });\r\n        this._targetTransport = this._defaultTransport;\r\n        this._targetAuth = this._defaultAuth;\r\n        this._swapTransport = true;\r\n    };\r\n    return Connection;\r\n}());\n\nvar order = [\"trace\", \"debug\", \"info\", \"warn\", \"error\", \"off\"];\r\nvar Logger = (function () {\r\n    function Logger(name, parent, logFn) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.subLoggers = [];\r\n        this.logFn = console;\r\n        this.customLogFn = false;\r\n        this.name = name;\r\n        if (parent) {\r\n            this.path = parent.path + \".\" + name;\r\n        }\r\n        else {\r\n            this.path = name;\r\n        }\r\n        this.loggerFullName = \"[\" + this.path + \"]\";\r\n        this.includeTimeAndLevel = !logFn;\r\n        if (logFn) {\r\n            this.logFn = logFn;\r\n            this.customLogFn = true;\r\n        }\r\n    }\r\n    Logger.prototype.subLogger = function (name) {\r\n        var existingSub = this.subLoggers.filter(function (subLogger) {\r\n            return subLogger.name === name;\r\n        })[0];\r\n        if (existingSub !== undefined) {\r\n            return existingSub;\r\n        }\r\n        Object.keys(this).forEach(function (key) {\r\n            if (key === name) {\r\n                throw new Error(\"This sub logger name is not allowed.\");\r\n            }\r\n        });\r\n        var sub = new Logger(name, this, this.customLogFn ? this.logFn : undefined);\r\n        this.subLoggers.push(sub);\r\n        return sub;\r\n    };\r\n    Logger.prototype.publishLevel = function (level) {\r\n        var _a;\r\n        if (level) {\r\n            this._publishLevel = level;\r\n        }\r\n        return this._publishLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.publishLevel());\r\n    };\r\n    Logger.prototype.consoleLevel = function (level) {\r\n        var _a;\r\n        if (level) {\r\n            this._consoleLevel = level;\r\n        }\r\n        return this._consoleLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.consoleLevel());\r\n    };\r\n    Logger.prototype.log = function (message, level, error) {\r\n        this.publishMessage(level || \"info\", message, error);\r\n    };\r\n    Logger.prototype.trace = function (message) {\r\n        this.log(message, \"trace\");\r\n    };\r\n    Logger.prototype.debug = function (message) {\r\n        this.log(message, \"debug\");\r\n    };\r\n    Logger.prototype.info = function (message) {\r\n        this.log(message, \"info\");\r\n    };\r\n    Logger.prototype.warn = function (message) {\r\n        this.log(message, \"warn\");\r\n    };\r\n    Logger.prototype.error = function (message, err) {\r\n        this.log(message, \"error\");\r\n    };\r\n    Logger.prototype.canPublish = function (level, compareWith) {\r\n        var levelIdx = order.indexOf(level);\r\n        var restrictionIdx = order.indexOf(compareWith || this.consoleLevel() || \"trace\");\r\n        return levelIdx >= restrictionIdx;\r\n    };\r\n    Logger.prototype.publishMessage = function (level, message, error) {\r\n        var loggerName = this.loggerFullName;\r\n        if (level === \"error\" && !error) {\r\n            var e = new Error();\r\n            if (e.stack) {\r\n                message =\r\n                    message +\r\n                        \"\\n\" +\r\n                        e.stack\r\n                            .split(\"\\n\")\r\n                            .slice(3)\r\n                            .join(\"\\n\");\r\n            }\r\n        }\r\n        if (this.canPublish(level, this.publishLevel())) {\r\n            var interop = Logger.Interop;\r\n            if (interop) {\r\n                try {\r\n                    if (interop.methods({ name: Logger.InteropMethodName }).length > 0) {\r\n                        interop.invoke(Logger.InteropMethodName, {\r\n                            msg: \"\" + message,\r\n                            logger: loggerName,\r\n                            level: level\r\n                        });\r\n                    }\r\n                }\r\n                catch (_a) {\r\n                }\r\n            }\r\n        }\r\n        if (this.canPublish(level)) {\r\n            var prefix = \"\";\r\n            if (this.includeTimeAndLevel) {\r\n                var date = new Date();\r\n                var time = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds() + \":\" + date.getMilliseconds();\r\n                prefix = \"[\" + time + \"] [\" + level + \"] \";\r\n            }\r\n            var toPrint = \"\" + prefix + loggerName + \": \" + message;\r\n            switch (level) {\r\n                case \"trace\":\r\n                    this.logFn.debug(toPrint);\r\n                    break;\r\n                case \"debug\":\r\n                    if (this.logFn.debug) {\r\n                        this.logFn.debug(toPrint);\r\n                    }\r\n                    else {\r\n                        this.logFn.log(toPrint);\r\n                    }\r\n                    break;\r\n                case \"info\":\r\n                    this.logFn.info(toPrint);\r\n                    break;\r\n                case \"warn\":\r\n                    this.logFn.warn(toPrint);\r\n                    break;\r\n                case \"error\":\r\n                    this.logFn.error(toPrint, error);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    Logger.InteropMethodName = \"T42.AppLogger.Log\";\r\n    return Logger;\r\n}());\n\nvar GW_MESSAGE_CREATE_CONTEXT = \"create-context\";\r\nvar GW_MESSAGE_ACTIVITY_CREATED = \"created\";\r\nvar GW_MESSAGE_ACTIVITY_DESTROYED = \"destroyed\";\r\nvar GW_MESSAGE_CONTEXT_CREATED = \"context-created\";\r\nvar GW_MESSAGE_CONTEXT_ADDED = \"context-added\";\r\nvar GW_MESSAGE_SUBSCRIBE_CONTEXT = \"subscribe-context\";\r\nvar GW_MESSAGE_SUBSCRIBED_CONTEXT = \"subscribed-context\";\r\nvar GW_MESSAGE_UNSUBSCRIBE_CONTEXT = \"unsubscribe-context\";\r\nvar GW_MESSAGE_DESTROY_CONTEXT = \"destroy-context\";\r\nvar GW_MESSAGE_CONTEXT_DESTROYED = \"context-destroyed\";\r\nvar GW_MESSAGE_UPDATE_CONTEXT = \"update-context\";\r\nvar GW_MESSAGE_CONTEXT_UPDATED = \"context-updated\";\r\nvar GW_MESSAGE_JOINED_ACTIVITY = \"joined\";\n\nvar ContextMessageReplaySpec = {\r\n    get name() {\r\n        return \"context\";\r\n    },\r\n    get types() {\r\n        return [\r\n            GW_MESSAGE_CREATE_CONTEXT,\r\n            GW_MESSAGE_ACTIVITY_CREATED,\r\n            GW_MESSAGE_ACTIVITY_DESTROYED,\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_CONTEXT_ADDED,\r\n            GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            GW_MESSAGE_DESTROY_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_UPDATE_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n            GW_MESSAGE_JOINED_ACTIVITY\r\n        ];\r\n    }\r\n};\n\nvar version = \"5.7.5\";\n\nfunction prepareConfig (configuration, ext, glue42gd) {\r\n    var _a, _b, _c, _d;\r\n    var nodeStartingContext;\r\n    if (Utils.isNode()) {\r\n        var startingContextString = process.env._GD_STARTING_CONTEXT_;\r\n        if (startingContextString) {\r\n            try {\r\n                nodeStartingContext = JSON.parse(startingContextString);\r\n            }\r\n            catch (_e) {\r\n            }\r\n        }\r\n    }\r\n    function getConnection() {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        var gwConfig = configuration.gateway;\r\n        var protocolVersion = (_a = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.protocolVersion) !== null && _a !== void 0 ? _a : 3;\r\n        var reconnectInterval = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectInterval;\r\n        var reconnectAttempts = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectAttempts;\r\n        var defaultWs = \"ws://localhost:8385\";\r\n        var ws = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.ws;\r\n        var sharedWorker = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.sharedWorker;\r\n        var inproc = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.inproc;\r\n        var webPlatform = (_b = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.webPlatform) !== null && _b !== void 0 ? _b : undefined;\r\n        if (glue42gd) {\r\n            ws = glue42gd.gwURL;\r\n        }\r\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwURL) {\r\n            ws = nodeStartingContext.gwURL;\r\n        }\r\n        if (!ws && !sharedWorker && !inproc) {\r\n            ws = defaultWs;\r\n        }\r\n        var instanceId;\r\n        var windowId;\r\n        var pid;\r\n        var environment;\r\n        var region;\r\n        var appName = getApplication();\r\n        var uniqueAppName = appName;\r\n        if (typeof glue42gd !== \"undefined\") {\r\n            windowId = glue42gd.windowId;\r\n            pid = glue42gd.pid;\r\n            if (glue42gd.env) {\r\n                environment = glue42gd.env.env;\r\n                region = glue42gd.env.region;\r\n            }\r\n            uniqueAppName = (_c = glue42gd.application) !== null && _c !== void 0 ? _c : \"glue-app\";\r\n            instanceId = glue42gd.appInstanceId;\r\n        }\r\n        else if (Utils.isNode()) {\r\n            pid = process.pid;\r\n            if (nodeStartingContext) {\r\n                environment = nodeStartingContext.env;\r\n                region = nodeStartingContext.region;\r\n                instanceId = nodeStartingContext.instanceId;\r\n            }\r\n        }\r\n        else if (typeof (window === null || window === void 0 ? void 0 : window.glue42electron) !== \"undefined\") {\r\n            windowId = window === null || window === void 0 ? void 0 : window.glue42electron.instanceId;\r\n            pid = window === null || window === void 0 ? void 0 : window.glue42electron.pid;\r\n            environment = window === null || window === void 0 ? void 0 : window.glue42electron.env;\r\n            region = window === null || window === void 0 ? void 0 : window.glue42electron.region;\r\n            uniqueAppName = (_d = window === null || window === void 0 ? void 0 : window.glue42electron.application) !== null && _d !== void 0 ? _d : \"glue-app\";\r\n            instanceId = window === null || window === void 0 ? void 0 : window.glue42electron.instanceId;\r\n        }\r\n        else ;\r\n        var replaySpecs = (_f = (_e = configuration.gateway) === null || _e === void 0 ? void 0 : _e.replaySpecs) !== null && _f !== void 0 ? _f : [];\r\n        replaySpecs.push(ContextMessageReplaySpec);\r\n        var identity = {\r\n            application: uniqueAppName,\r\n            applicationName: appName,\r\n            windowId: windowId,\r\n            instance: instanceId,\r\n            process: pid,\r\n            region: region,\r\n            environment: environment,\r\n            api: ext.version || version\r\n        };\r\n        if (configuration.identity) {\r\n            identity = Object.assign(identity, configuration.identity);\r\n        }\r\n        return {\r\n            identity: identity,\r\n            reconnectInterval: reconnectInterval,\r\n            ws: ws,\r\n            sharedWorker: sharedWorker,\r\n            webPlatform: webPlatform,\r\n            inproc: inproc,\r\n            protocolVersion: protocolVersion,\r\n            reconnectAttempts: reconnectAttempts,\r\n            replaySpecs: replaySpecs,\r\n        };\r\n    }\r\n    function getContexts() {\r\n        if (typeof configuration.contexts === \"undefined\") {\r\n            return { reAnnounceKnownContexts: true };\r\n        }\r\n        if (typeof configuration.contexts === \"boolean\" && configuration.contexts) {\r\n            return { reAnnounceKnownContexts: true };\r\n        }\r\n        if (typeof configuration.contexts === \"object\") {\r\n            return Object.assign({}, { reAnnounceKnownContexts: true }, configuration.contexts);\r\n        }\r\n        return false;\r\n    }\r\n    function getApplication() {\r\n        if (configuration.application) {\r\n            return configuration.application;\r\n        }\r\n        if (glue42gd) {\r\n            return glue42gd.applicationName;\r\n        }\r\n        if (typeof window !== \"undefined\" && typeof window.glue42electron !== \"undefined\") {\r\n            return window.glue42electron.application;\r\n        }\r\n        var uid = shortid();\r\n        if (Utils.isNode()) {\r\n            if (nodeStartingContext) {\r\n                return nodeStartingContext.applicationConfig.name;\r\n            }\r\n            return \"NodeJS\" + uid;\r\n        }\r\n        if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\r\n            return document.title + (\" (\" + uid + \")\");\r\n        }\r\n        return uid;\r\n    }\r\n    function getAuth() {\r\n        var _a, _b, _c;\r\n        if (typeof configuration.auth === \"string\") {\r\n            return {\r\n                token: configuration.auth\r\n            };\r\n        }\r\n        if (configuration.auth) {\r\n            return configuration.auth;\r\n        }\r\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwToken) {\r\n            return {\r\n                gatewayToken: nodeStartingContext.gwToken\r\n            };\r\n        }\r\n        if (((_a = configuration.gateway) === null || _a === void 0 ? void 0 : _a.webPlatform) || ((_b = configuration.gateway) === null || _b === void 0 ? void 0 : _b.inproc) || ((_c = configuration.gateway) === null || _c === void 0 ? void 0 : _c.sharedWorker)) {\r\n            return {\r\n                username: \"glue42\", password: \"glue42\"\r\n            };\r\n        }\r\n    }\r\n    function getLogger() {\r\n        var _a, _b;\r\n        var config = configuration.logger;\r\n        var defaultLevel = \"warn\";\r\n        if (!config) {\r\n            config = defaultLevel;\r\n        }\r\n        var gdConsoleLevel;\r\n        if (glue42gd) {\r\n            gdConsoleLevel = glue42gd.consoleLogLevel;\r\n        }\r\n        if (typeof config === \"string\") {\r\n            return { console: gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config, publish: defaultLevel };\r\n        }\r\n        return {\r\n            console: (_a = gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config.console) !== null && _a !== void 0 ? _a : defaultLevel,\r\n            publish: (_b = config.publish) !== null && _b !== void 0 ? _b : defaultLevel\r\n        };\r\n    }\r\n    var connection = getConnection();\r\n    var application = getApplication();\r\n    if (typeof window !== \"undefined\") {\r\n        var windowAsAny = window;\r\n        var containerApplication = windowAsAny.htmlContainer ?\r\n            windowAsAny.htmlContainer.containerName + \".\" + windowAsAny.htmlContainer.application : (_a = windowAsAny === null || windowAsAny === void 0 ? void 0 : windowAsAny.glue42gd) === null || _a === void 0 ? void 0 : _a.application;\r\n        if (containerApplication) {\r\n            application = containerApplication;\r\n        }\r\n    }\r\n    return {\r\n        bus: (_b = configuration.bus) !== null && _b !== void 0 ? _b : false,\r\n        application: application,\r\n        auth: getAuth(),\r\n        logger: getLogger(),\r\n        connection: connection,\r\n        metrics: (_c = configuration.metrics) !== null && _c !== void 0 ? _c : true,\r\n        contexts: getContexts(),\r\n        version: ext.version || version,\r\n        libs: (_d = ext.libs) !== null && _d !== void 0 ? _d : [],\r\n        customLogger: configuration.customLogger\r\n    };\r\n}\n\nvar GW3ContextData = (function () {\r\n    function GW3ContextData(contextId, name, isAnnounced, activityId) {\r\n        this.updateCallbacks = {};\r\n        this.contextId = contextId;\r\n        this.name = name;\r\n        this.isAnnounced = isAnnounced;\r\n        this.activityId = activityId;\r\n        this.context = {};\r\n    }\r\n    GW3ContextData.prototype.hasCallbacks = function () {\r\n        return Object.keys(this.updateCallbacks).length > 0;\r\n    };\r\n    GW3ContextData.prototype.getState = function () {\r\n        if (this.isAnnounced && this.hasCallbacks()) {\r\n            return 3;\r\n        }\r\n        if (this.isAnnounced) {\r\n            return 2;\r\n        }\r\n        if (this.hasCallbacks()) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    };\r\n    return GW3ContextData;\r\n}());\n\nfunction applyContextDelta(context, delta, logger) {\r\n    try {\r\n        if (logger === null || logger === void 0 ? void 0 : logger.canPublish(\"trace\")) {\r\n            logger === null || logger === void 0 ? void 0 : logger.trace(\"applying context delta \" + JSON.stringify(delta) + \" on context \" + JSON.stringify(context));\r\n        }\r\n        if (!delta) {\r\n            return context;\r\n        }\r\n        if (delta.reset) {\r\n            context = __assign({}, delta.reset);\r\n            return context;\r\n        }\r\n        context = deepClone(context, undefined);\r\n        if (delta.commands) {\r\n            for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {\r\n                var command = _a[_i];\r\n                if (command.type === \"remove\") {\r\n                    deletePath(context, command.path);\r\n                }\r\n                else if (command.type === \"set\") {\r\n                    setValueToPath(context, command.value, command.path);\r\n                }\r\n            }\r\n            return context;\r\n        }\r\n        var added_1 = delta.added;\r\n        var updated_1 = delta.updated;\r\n        var removed = delta.removed;\r\n        if (added_1) {\r\n            Object.keys(added_1).forEach(function (key) {\r\n                context[key] = added_1[key];\r\n            });\r\n        }\r\n        if (updated_1) {\r\n            Object.keys(updated_1).forEach(function (key) {\r\n                mergeObjectsProperties(key, context, updated_1);\r\n            });\r\n        }\r\n        if (removed) {\r\n            removed.forEach(function (key) {\r\n                delete context[key];\r\n            });\r\n        }\r\n        return context;\r\n    }\r\n    catch (e) {\r\n        logger === null || logger === void 0 ? void 0 : logger.error(\"error applying context delta \" + JSON.stringify(delta) + \" on context \" + JSON.stringify(context), e);\r\n        return context;\r\n    }\r\n}\r\nfunction deepClone(obj, hash) {\r\n    hash = hash || new WeakMap();\r\n    if (Object(obj) !== obj) {\r\n        return obj;\r\n    }\r\n    if (obj instanceof Set) {\r\n        return new Set(obj);\r\n    }\r\n    if (hash.has(obj)) {\r\n        return hash.get(obj);\r\n    }\r\n    var result = obj instanceof Date ? new Date(obj)\r\n        : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)\r\n            : obj.constructor ? new obj.constructor()\r\n                : Object.create(null);\r\n    hash.set(obj, result);\r\n    if (obj instanceof Map) {\r\n        Array.from(obj, function (_a) {\r\n            var key = _a[0], val = _a[1];\r\n            return result.set(key, deepClone(val, hash));\r\n        });\r\n    }\r\n    return Object.assign.apply(Object, __spreadArrays([result], Object.keys(obj).map(function (key) {\r\n        var _a;\r\n        return (_a = {}, _a[key] = deepClone(obj[key], hash), _a);\r\n    })));\r\n}\r\nvar mergeObjectsProperties = function (key, what, withWhat) {\r\n    var right = withWhat[key];\r\n    if (right === undefined) {\r\n        return what;\r\n    }\r\n    var left = what[key];\r\n    if (!left || !right) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    if (typeof left === \"string\" ||\r\n        typeof left === \"number\" ||\r\n        typeof left === \"boolean\" ||\r\n        typeof right === \"string\" ||\r\n        typeof right === \"number\" ||\r\n        typeof right === \"boolean\" ||\r\n        Array.isArray(left) ||\r\n        Array.isArray(right)) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    what[key] = Object.assign({}, left, right);\r\n    return what;\r\n};\r\nfunction deepEqual(x, y) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    if (!(x instanceof Object) || !(y instanceof Object)) {\r\n        return false;\r\n    }\r\n    if (x.constructor !== y.constructor) {\r\n        return false;\r\n    }\r\n    for (var p in x) {\r\n        if (!x.hasOwnProperty(p)) {\r\n            continue;\r\n        }\r\n        if (!y.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n        if (x[p] === y[p]) {\r\n            continue;\r\n        }\r\n        if (typeof (x[p]) !== \"object\") {\r\n            return false;\r\n        }\r\n        if (!deepEqual(x[p], y[p])) {\r\n            return false;\r\n        }\r\n    }\r\n    for (var p in y) {\r\n        if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction setValueToPath(obj, value, path) {\r\n    var pathArr = path.split(\".\");\r\n    var i;\r\n    for (i = 0; i < pathArr.length - 1; i++) {\r\n        if (!obj[pathArr[i]]) {\r\n            obj[pathArr[i]] = {};\r\n        }\r\n        if (typeof obj[pathArr[i]] !== \"object\") {\r\n            obj[pathArr[i]] = {};\r\n        }\r\n        obj = obj[pathArr[i]];\r\n    }\r\n    obj[pathArr[i]] = value;\r\n}\r\nfunction isSubset(superObj, subObj) {\r\n    return Object.keys(subObj).every(function (ele) {\r\n        if (typeof subObj[ele] === \"object\") {\r\n            return isSubset((superObj === null || superObj === void 0 ? void 0 : superObj[ele]) || {}, subObj[ele] || {});\r\n        }\r\n        return subObj[ele] === (superObj === null || superObj === void 0 ? void 0 : superObj[ele]);\r\n    });\r\n}\r\nfunction deletePath(obj, path) {\r\n    var pathArr = path.split(\".\");\r\n    var i;\r\n    for (i = 0; i < pathArr.length - 1; i++) {\r\n        if (!obj[pathArr[i]]) {\r\n            return;\r\n        }\r\n        obj = obj[pathArr[i]];\r\n    }\r\n    delete obj[pathArr[i]];\r\n}\n\nvar GW3Bridge = (function () {\r\n    function GW3Bridge(config) {\r\n        var _this = this;\r\n        var _a;\r\n        this._contextNameToData = {};\r\n        this._gw3Subscriptions = [];\r\n        this._nextCallbackSubscriptionNumber = 0;\r\n        this._contextNameToId = {};\r\n        this._contextIdToName = {};\r\n        this._protocolVersion = undefined;\r\n        this._contextsTempCache = {};\r\n        this._contextsSubscriptionsCache = [];\r\n        this._connection = config.connection;\r\n        this._logger = config.logger;\r\n        this._trackAllContexts = config.trackAllContexts;\r\n        this._reAnnounceKnownContexts = config.reAnnounceKnownContexts;\r\n        this._gw3Session = this._connection.domain(\"global\", [\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n        ]);\r\n        this._gw3Session.disconnected(this.resetState.bind(this));\r\n        this._gw3Session.onJoined(function (wasReconnect) {\r\n            if (!wasReconnect) {\r\n                return;\r\n            }\r\n            if (!_this._reAnnounceKnownContexts) {\r\n                return _this._connection.setLibReAnnounced({ name: \"contexts\" });\r\n            }\r\n            _this.reInitiateState().then(function () { return _this._connection.setLibReAnnounced({ name: \"contexts\" }); });\r\n        });\r\n        this.subscribeToContextCreatedMessages();\r\n        this.subscribeToContextUpdatedMessages();\r\n        this.subscribeToContextDestroyedMessages();\r\n        (_a = this._connection.replayer) === null || _a === void 0 ? void 0 : _a.drain(ContextMessageReplaySpec.name, function (message) {\r\n            var type = message.type;\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if (type === GW_MESSAGE_CONTEXT_CREATED ||\r\n                type === GW_MESSAGE_CONTEXT_ADDED ||\r\n                type === GW_MESSAGE_ACTIVITY_CREATED) {\r\n                _this.handleContextCreatedMessage(message);\r\n            }\r\n            else if (type === GW_MESSAGE_SUBSCRIBED_CONTEXT ||\r\n                type === GW_MESSAGE_CONTEXT_UPDATED ||\r\n                type === GW_MESSAGE_JOINED_ACTIVITY) {\r\n                _this.handleContextUpdatedMessage(message);\r\n            }\r\n            else if (type === GW_MESSAGE_CONTEXT_DESTROYED ||\r\n                type === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n                _this.handleContextDestroyedMessage(message);\r\n            }\r\n        });\r\n    }\r\n    Object.defineProperty(GW3Bridge.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            var _a;\r\n            if (!this._protocolVersion) {\r\n                var contextsDomainInfo = this._connection.availableDomains.find(function (d) { return d.uri === \"context\"; });\r\n                this._protocolVersion = (_a = contextsDomainInfo === null || contextsDomainInfo === void 0 ? void 0 : contextsDomainInfo.version) !== null && _a !== void 0 ? _a : 1;\r\n            }\r\n            return this._protocolVersion;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GW3Bridge.prototype, \"setPathSupported\", {\r\n        get: function () {\r\n            return this.protocolVersion >= 2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GW3Bridge.prototype.dispose = function () {\r\n        for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {\r\n            var sub = _a[_i];\r\n            this._connection.off(sub);\r\n        }\r\n        this._gw3Subscriptions.length = 0;\r\n        for (var contextName in this._contextNameToData) {\r\n            if (this._contextNameToId.hasOwnProperty(contextName)) {\r\n                delete this._contextNameToData[contextName];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.createContext = function (name, data) {\r\n        var _this = this;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_CREATE_CONTEXT,\r\n            domain: \"global\",\r\n            name: name,\r\n            data: data,\r\n            lifetime: \"retained\",\r\n        })\r\n            .then(function (createContextMsg) {\r\n            _this._contextNameToId[name] = createContextMsg.context_id;\r\n            _this._contextIdToName[createContextMsg.context_id] = name;\r\n            var contextData = _this._contextNameToData[name] || new GW3ContextData(createContextMsg.context_id, name, true, undefined);\r\n            contextData.isAnnounced = true;\r\n            contextData.name = name;\r\n            contextData.contextId = createContextMsg.context_id;\r\n            contextData.context = createContextMsg.data || data;\r\n            contextData.hasReceivedSnapshot = true;\r\n            _this._contextNameToData[name] = contextData;\r\n            return createContextMsg.context_id;\r\n        });\r\n    };\r\n    GW3Bridge.prototype.all = function () {\r\n        var _this = this;\r\n        return Object.keys(this._contextNameToData)\r\n            .filter(function (name) { return _this._contextNameToData[name].isAnnounced; });\r\n    };\r\n    GW3Bridge.prototype.update = function (name, delta) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var contextData, currentContext, calculatedDelta;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        contextData = this._contextNameToData[name];\r\n                        if (!contextData || !contextData.isAnnounced) {\r\n                            return [2, this.createContext(name, delta)];\r\n                        }\r\n                        currentContext = contextData.context;\r\n                        if (!!contextData.hasCallbacks()) return [3, 2];\r\n                        return [4, this.get(contextData.name)];\r\n                    case 1:\r\n                        currentContext = _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        calculatedDelta = this.protocolVersion === 2 ?\r\n                            this.calculateContextDeltaV2(currentContext, delta) :\r\n                            this.calculateContextDeltaV1(currentContext, delta);\r\n                        if (!Object.keys(calculatedDelta.added).length\r\n                            && !Object.keys(calculatedDelta.updated).length\r\n                            && !calculatedDelta.removed.length\r\n                            && !((_a = calculatedDelta.commands) === null || _a === void 0 ? void 0 : _a.length)) {\r\n                            return [2, Promise.resolve()];\r\n                        }\r\n                        return [2, this._gw3Session\r\n                                .send({\r\n                                type: GW_MESSAGE_UPDATE_CONTEXT,\r\n                                domain: \"global\",\r\n                                context_id: contextData.contextId,\r\n                                delta: calculatedDelta,\r\n                            }, {}, { skipPeerId: false })\r\n                                .then(function (gwResponse) {\r\n                                _this.handleUpdated(contextData, calculatedDelta, {\r\n                                    updaterId: gwResponse.peer_id\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.set = function (name, data) {\r\n        var _this = this;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return this.createContext(name, data);\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: { reset: data },\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, { reset: data, added: {}, removed: [], updated: {} }, { updaterId: gwResponse.peer_id });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.setPath = function (name, path, value) {\r\n        if (!this.setPathSupported) {\r\n            return Promise.reject(\"glue.contexts.setPath operation is not supported, use Glue42 3.10 or later\");\r\n        }\r\n        return this.setPaths(name, [{ path: path, value: value }]);\r\n    };\r\n    GW3Bridge.prototype.setPaths = function (name, pathValues) {\r\n        var _this = this;\r\n        if (!this.setPathSupported) {\r\n            return Promise.reject(\"glue.contexts.setPaths operation is not supported, use Glue42 3.10 or later\");\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            var obj = {};\r\n            for (var _i = 0, pathValues_1 = pathValues; _i < pathValues_1.length; _i++) {\r\n                var pathValue = pathValues_1[_i];\r\n                setValueToPath(obj, pathValue.value, pathValue.path);\r\n            }\r\n            return this.createContext(name, obj);\r\n        }\r\n        var commands = [];\r\n        for (var _a = 0, pathValues_2 = pathValues; _a < pathValues_2.length; _a++) {\r\n            var pathValue = pathValues_2[_a];\r\n            if (pathValue.value === null) {\r\n                commands.push({ type: \"remove\", path: pathValue.path });\r\n            }\r\n            else {\r\n                commands.push({ type: \"set\", path: pathValue.path, value: pathValue.value });\r\n            }\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: { commands: commands }\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, { added: {}, removed: [], updated: {}, commands: commands }, { updaterId: gwResponse.peer_id });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.get = function (name) {\r\n        var _this = this;\r\n        var _a;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return Promise.resolve({});\r\n        }\r\n        if (contextData && (!contextData.hasCallbacks() || !contextData.hasReceivedSnapshot)) {\r\n            return new Promise(function (resolve) {\r\n                _this.subscribe(name, function (data, _d, _r, un) {\r\n                    _this.unsubscribe(un);\r\n                    resolve(data);\r\n                });\r\n            });\r\n        }\r\n        var context = (_a = contextData === null || contextData === void 0 ? void 0 : contextData.context) !== null && _a !== void 0 ? _a : {};\r\n        return Promise.resolve(context);\r\n    };\r\n    GW3Bridge.prototype.subscribe = function (name, callback, subscriptionKey) {\r\n        var _this = this;\r\n        var thisCallbackSubscriptionNumber = typeof subscriptionKey === \"undefined\" ? this._nextCallbackSubscriptionNumber : subscriptionKey;\r\n        if (typeof subscriptionKey === \"undefined\") {\r\n            this._nextCallbackSubscriptionNumber += 1;\r\n        }\r\n        if (this._contextsSubscriptionsCache.every(function (subscription) { return subscription.subKey !== _this._nextCallbackSubscriptionNumber; })) {\r\n            this._contextsSubscriptionsCache.push({ contextName: name, subKey: thisCallbackSubscriptionNumber, callback: callback });\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData ||\r\n            !contextData.isAnnounced) {\r\n            contextData = contextData || new GW3ContextData(undefined, name, false, undefined);\r\n            this._contextNameToData[name] = contextData;\r\n            contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n        var hadCallbacks = contextData.hasCallbacks();\r\n        contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n        if (!hadCallbacks) {\r\n            if (!contextData.joinedActivity) {\r\n                if (contextData.context && contextData.sentExplicitSubscription) {\r\n                    if (contextData.hasReceivedSnapshot) {\r\n                        var clone = deepClone(contextData.context);\r\n                        callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n                    }\r\n                    return Promise.resolve(thisCallbackSubscriptionNumber);\r\n                }\r\n                return this.sendSubscribe(contextData)\r\n                    .then(function () { return thisCallbackSubscriptionNumber; });\r\n            }\r\n            else {\r\n                if (contextData.hasReceivedSnapshot) {\r\n                    var clone = deepClone(contextData.context);\r\n                    callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n                }\r\n                return Promise.resolve(thisCallbackSubscriptionNumber);\r\n            }\r\n        }\r\n        else {\r\n            if (contextData.hasReceivedSnapshot) {\r\n                var clone = deepClone(contextData.context);\r\n                callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n            }\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.unsubscribe = function (subscriptionKey) {\r\n        this._contextsSubscriptionsCache = this._contextsSubscriptionsCache.filter(function (subscription) { return subscription.subKey !== subscriptionKey; });\r\n        for (var _i = 0, _a = Object.keys(this._contextNameToData); _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var contextData = this._contextNameToData[name_1];\r\n            if (!contextData) {\r\n                return;\r\n            }\r\n            var hadCallbacks = contextData.hasCallbacks();\r\n            delete contextData.updateCallbacks[subscriptionKey];\r\n            if (contextData.isAnnounced &&\r\n                hadCallbacks &&\r\n                !contextData.hasCallbacks() &&\r\n                contextData.sentExplicitSubscription) {\r\n                this.sendUnsubscribe(contextData);\r\n            }\r\n            if (!contextData.isAnnounced &&\r\n                !contextData.hasCallbacks()) {\r\n                delete this._contextNameToData[name_1];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.destroy = function (name) {\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData) {\r\n            return Promise.reject(\"context with \" + name + \" does not exist\");\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_DESTROY_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.handleUpdated = function (contextData, delta, extraData) {\r\n        var oldContext = contextData.context;\r\n        contextData.context = applyContextDelta(contextData.context, delta, this._logger);\r\n        contextData.hasReceivedSnapshot = true;\r\n        if (this._contextNameToData[contextData.name] === contextData &&\r\n            !deepEqual(oldContext, contextData.context)) {\r\n            this.invokeUpdateCallbacks(contextData, delta, extraData);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextCreatedMessages = function () {\r\n        var createdMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_ADDED,\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_ACTIVITY_CREATED,\r\n        ];\r\n        for (var _i = 0, createdMessageTypes_1 = createdMessageTypes; _i < createdMessageTypes_1.length; _i++) {\r\n            var createdMessageType = createdMessageTypes_1[_i];\r\n            var sub = this._connection.on(createdMessageType, this.handleContextCreatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextCreatedMessage = function (contextCreatedMsg) {\r\n        var _this = this;\r\n        var createdMessageType = contextCreatedMsg.type;\r\n        if (createdMessageType === GW_MESSAGE_ACTIVITY_CREATED) {\r\n            this._contextNameToId[contextCreatedMsg.activity_id] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.activity_id;\r\n        }\r\n        else if (createdMessageType === GW_MESSAGE_CONTEXT_ADDED) {\r\n            this._contextNameToId[contextCreatedMsg.name] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.name;\r\n        }\r\n        else ;\r\n        var name = this._contextIdToName[contextCreatedMsg.context_id];\r\n        if (!name) {\r\n            throw new Error(\"Received created event for context with unknown name: \" + contextCreatedMsg.context_id);\r\n        }\r\n        if (!this._contextNameToId[name]) {\r\n            throw new Error(\"Received created event for context with unknown id: \" + contextCreatedMsg.context_id);\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (contextData) {\r\n            if (contextData.isAnnounced) {\r\n                return;\r\n            }\r\n            else {\r\n                if (!contextData.hasCallbacks()) {\r\n                    throw new Error(\"Assertion failure: contextData.hasCallbacks()\");\r\n                }\r\n                contextData.isAnnounced = true;\r\n                contextData.contextId = contextCreatedMsg.context_id;\r\n                contextData.activityId = contextCreatedMsg.activity_id;\r\n                if (!contextData.sentExplicitSubscription) {\r\n                    this.sendSubscribe(contextData);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._contextNameToData[name] = contextData =\r\n                new GW3ContextData(contextCreatedMsg.context_id, name, true, contextCreatedMsg.activity_id);\r\n            if (this._trackAllContexts) {\r\n                this.subscribe(name, function () { }).then(function (subKey) { return _this._systemContextsSubKey = subKey; });\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextUpdatedMessages = function () {\r\n        var updatedMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_JOINED_ACTIVITY,\r\n        ];\r\n        for (var _i = 0, updatedMessageTypes_1 = updatedMessageTypes; _i < updatedMessageTypes_1.length; _i++) {\r\n            var updatedMessageType = updatedMessageTypes_1[_i];\r\n            var sub = this._connection.on(updatedMessageType, this.handleContextUpdatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextUpdatedMessage = function (contextUpdatedMsg) {\r\n        var updatedMessageType = contextUpdatedMsg.type;\r\n        var contextId = contextUpdatedMsg.context_id;\r\n        var contextData = this._contextNameToData[this._contextIdToName[contextId]];\r\n        var justSeen = !contextData || !contextData.isAnnounced;\r\n        if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {\r\n            if (!contextData) {\r\n                contextData = new GW3ContextData(contextId, contextUpdatedMsg.activity_id, true, contextUpdatedMsg.activity_id);\r\n                this._contextNameToData[contextUpdatedMsg.activity_id] = contextData;\r\n                this._contextIdToName[contextId] = contextUpdatedMsg.activity_id;\r\n                this._contextNameToId[contextUpdatedMsg.activity_id] = contextId;\r\n            }\r\n            else {\r\n                contextData.contextId = contextId;\r\n                contextData.isAnnounced = true;\r\n                contextData.activityId = contextUpdatedMsg.activity_id;\r\n            }\r\n            contextData.joinedActivity = true;\r\n        }\r\n        else {\r\n            if (!contextData || !contextData.isAnnounced) {\r\n                if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n                    contextData = contextData || new GW3ContextData(contextId, contextUpdatedMsg.name, true, undefined);\r\n                    contextData.sentExplicitSubscription = true;\r\n                    this._contextNameToData[contextUpdatedMsg.name] = contextData;\r\n                    this._contextIdToName[contextId] = contextUpdatedMsg.name;\r\n                    this._contextNameToId[contextUpdatedMsg.name] = contextId;\r\n                }\r\n                else {\r\n                    this._logger.error(\"Received 'update' for unknown context: \" + contextId);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        var oldContext = contextData.context;\r\n        contextData.hasReceivedSnapshot = true;\r\n        if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            contextData.context = contextUpdatedMsg.data || {};\r\n        }\r\n        else if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {\r\n            contextData.context = contextUpdatedMsg.context_snapshot || {};\r\n        }\r\n        else if (updatedMessageType === GW_MESSAGE_CONTEXT_UPDATED) {\r\n            contextData.context = applyContextDelta(contextData.context, contextUpdatedMsg.delta, this._logger);\r\n        }\r\n        else {\r\n            throw new Error(\"Unrecognized context update message \" + updatedMessageType);\r\n        }\r\n        if (justSeen ||\r\n            !deepEqual(contextData.context, oldContext) ||\r\n            updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            this.invokeUpdateCallbacks(contextData, contextUpdatedMsg.delta, { updaterId: contextUpdatedMsg.updater_id });\r\n        }\r\n    };\r\n    GW3Bridge.prototype.invokeUpdateCallbacks = function (contextData, delta, extraData) {\r\n        delta = delta || { added: {}, updated: {}, reset: {}, removed: [] };\r\n        if (delta.commands) {\r\n            delta.added = delta.updated = delta.reset = {};\r\n            delta.removed = [];\r\n            for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {\r\n                var command = _a[_i];\r\n                if (command.type === \"remove\") {\r\n                    if (command.path.indexOf(\".\") === -1) {\r\n                        delta.removed.push(command.path);\r\n                    }\r\n                    setValueToPath(delta.updated, null, command.path);\r\n                }\r\n                else if (command.type === \"set\") {\r\n                    setValueToPath(delta.updated, command.value, command.path);\r\n                }\r\n            }\r\n        }\r\n        for (var updateCallbackIndex in contextData.updateCallbacks) {\r\n            if (contextData.updateCallbacks.hasOwnProperty(updateCallbackIndex)) {\r\n                try {\r\n                    var updateCallback = contextData.updateCallbacks[updateCallbackIndex];\r\n                    updateCallback(deepClone(contextData.context), Object.assign({}, delta.added || {}, delta.updated || {}, delta.reset || {}), delta.removed, parseInt(updateCallbackIndex, 10), extraData);\r\n                }\r\n                catch (err) {\r\n                    this._logger.debug(\"callback error: \" + JSON.stringify(err));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextDestroyedMessages = function () {\r\n        var destroyedMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_ACTIVITY_DESTROYED,\r\n        ];\r\n        for (var _i = 0, destroyedMessageTypes_1 = destroyedMessageTypes; _i < destroyedMessageTypes_1.length; _i++) {\r\n            var destroyedMessageType = destroyedMessageTypes_1[_i];\r\n            var sub = this._connection.on(destroyedMessageType, this.handleContextDestroyedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextDestroyedMessage = function (destroyedMsg) {\r\n        var destroyedMessageType = destroyedMsg.type;\r\n        var contextId;\r\n        var name;\r\n        if (destroyedMessageType === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n            name = destroyedMsg.activity_id;\r\n            contextId = this._contextNameToId[name];\r\n            if (!contextId) {\r\n                this._logger.error(\"Received 'destroyed' for unknown activity: \" + destroyedMsg.activity_id);\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            contextId = destroyedMsg.context_id;\r\n            name = this._contextIdToName[contextId];\r\n            if (!name) {\r\n                this._logger.error(\"Received 'destroyed' for unknown context: \" + destroyedMsg.context_id);\r\n                return;\r\n            }\r\n        }\r\n        delete this._contextIdToName[contextId];\r\n        delete this._contextNameToId[name];\r\n        var contextData = this._contextNameToData[name];\r\n        delete this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            this._logger.error(\"Received 'destroyed' for unknown context: \" + contextId);\r\n            return;\r\n        }\r\n    };\r\n    GW3Bridge.prototype.sendSubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = true;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.sendUnsubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = false;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.calculateContextDeltaV1 = function (from, to) {\r\n        var delta = { added: {}, updated: {}, removed: [], reset: undefined };\r\n        if (from) {\r\n            for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n                var x = _a[_i];\r\n                if (Object.keys(to).indexOf(x) !== -1\r\n                    && to[x] !== null\r\n                    && !deepEqual(from[x], to[x])) {\r\n                    delta.updated[x] = to[x];\r\n                }\r\n            }\r\n        }\r\n        for (var _b = 0, _c = Object.keys(to); _b < _c.length; _b++) {\r\n            var x = _c[_b];\r\n            if (!from || (Object.keys(from).indexOf(x) === -1)) {\r\n                if (to[x] !== null) {\r\n                    delta.added[x] = to[x];\r\n                }\r\n            }\r\n            else if (to[x] === null) {\r\n                delta.removed.push(x);\r\n            }\r\n        }\r\n        return delta;\r\n    };\r\n    GW3Bridge.prototype.calculateContextDeltaV2 = function (from, to) {\r\n        var _a, _b;\r\n        var delta = { added: {}, updated: {}, removed: [], reset: undefined, commands: [] };\r\n        for (var _i = 0, _c = Object.keys(to); _i < _c.length; _i++) {\r\n            var x = _c[_i];\r\n            if (to[x] !== null) {\r\n                var fromX = from ? from[x] : null;\r\n                if (!deepEqual(fromX, to[x])) {\r\n                    (_a = delta.commands) === null || _a === void 0 ? void 0 : _a.push({ type: \"set\", path: x, value: to[x] });\r\n                }\r\n            }\r\n            else {\r\n                (_b = delta.commands) === null || _b === void 0 ? void 0 : _b.push({ type: \"remove\", path: x });\r\n            }\r\n        }\r\n        return delta;\r\n    };\r\n    GW3Bridge.prototype.resetState = function () {\r\n        var _this = this;\r\n        for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {\r\n            var sub = _a[_i];\r\n            this._connection.off(sub);\r\n        }\r\n        if (this._systemContextsSubKey) {\r\n            this.unsubscribe(this._systemContextsSubKey);\r\n            delete this._systemContextsSubKey;\r\n        }\r\n        this._gw3Subscriptions = [];\r\n        this._contextNameToId = {};\r\n        this._contextIdToName = {};\r\n        delete this._protocolVersion;\r\n        this._contextsTempCache = Object.keys(this._contextNameToData).reduce(function (cacheSoFar, ctxName) {\r\n            cacheSoFar[ctxName] = _this._contextNameToData[ctxName].context;\r\n            return cacheSoFar;\r\n        }, {});\r\n        this._contextNameToData = {};\r\n    };\r\n    GW3Bridge.prototype.reInitiateState = function () {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _b, _c, _i, ctxName, lastKnownData;\r\n            var _this = this;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        this.subscribeToContextCreatedMessages();\r\n                        this.subscribeToContextUpdatedMessages();\r\n                        this.subscribeToContextDestroyedMessages();\r\n                        (_a = this._connection.replayer) === null || _a === void 0 ? void 0 : _a.drain(ContextMessageReplaySpec.name, function (message) {\r\n                            var type = message.type;\r\n                            if (!type) {\r\n                                return;\r\n                            }\r\n                            if (type === GW_MESSAGE_CONTEXT_CREATED ||\r\n                                type === GW_MESSAGE_CONTEXT_ADDED ||\r\n                                type === GW_MESSAGE_ACTIVITY_CREATED) {\r\n                                _this.handleContextCreatedMessage(message);\r\n                            }\r\n                            else if (type === GW_MESSAGE_SUBSCRIBED_CONTEXT ||\r\n                                type === GW_MESSAGE_CONTEXT_UPDATED ||\r\n                                type === GW_MESSAGE_JOINED_ACTIVITY) {\r\n                                _this.handleContextUpdatedMessage(message);\r\n                            }\r\n                            else if (type === GW_MESSAGE_CONTEXT_DESTROYED ||\r\n                                type === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n                                _this.handleContextDestroyedMessage(message);\r\n                            }\r\n                        });\r\n                        return [4, Promise.all(this._contextsSubscriptionsCache.map(function (subscription) { return _this.subscribe(subscription.contextName, subscription.callback, subscription.subKey); }))];\r\n                    case 1:\r\n                        _e.sent();\r\n                        return [4, this.flushQueue()];\r\n                    case 2:\r\n                        _e.sent();\r\n                        _b = [];\r\n                        for (_c in this._contextsTempCache)\r\n                            _b.push(_c);\r\n                        _i = 0;\r\n                        _e.label = 3;\r\n                    case 3:\r\n                        if (!(_i < _b.length)) return [3, 6];\r\n                        ctxName = _b[_i];\r\n                        if (typeof this._contextsTempCache[ctxName] !== \"object\" || Object.keys(this._contextsTempCache[ctxName]).length === 0) {\r\n                            return [3, 5];\r\n                        }\r\n                        lastKnownData = this._contextsTempCache[ctxName];\r\n                        this._logger.info(\"Re-announcing known context: \" + ctxName);\r\n                        return [4, this.update(ctxName, lastKnownData)];\r\n                    case 4:\r\n                        _e.sent();\r\n                        _e.label = 5;\r\n                    case 5:\r\n                        _i++;\r\n                        return [3, 3];\r\n                    case 6:\r\n                        this._contextsTempCache = {};\r\n                        this._logger.info(\"Contexts are re-announced\");\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.flushQueue = function () {\r\n        return new Promise(function (resolve) { return setTimeout(function () { return resolve(); }, 0); });\r\n    };\r\n    return GW3Bridge;\r\n}());\n\nvar ContextsModule = (function () {\r\n    function ContextsModule(config) {\r\n        this._bridge = new GW3Bridge(config);\r\n    }\r\n    ContextsModule.prototype.all = function () {\r\n        return this._bridge.all();\r\n    };\r\n    ContextsModule.prototype.update = function (name, data) {\r\n        this.checkName(name);\r\n        this.checkData(data);\r\n        return this._bridge.update(name, data);\r\n    };\r\n    ContextsModule.prototype.set = function (name, data) {\r\n        this.checkName(name);\r\n        this.checkData(data);\r\n        return this._bridge.set(name, data);\r\n    };\r\n    ContextsModule.prototype.setPath = function (name, path, data) {\r\n        this.checkName(name);\r\n        this.checkPath(path);\r\n        var isTopLevelPath = path === \"\";\r\n        if (isTopLevelPath) {\r\n            this.checkData(data);\r\n            return this.set(name, data);\r\n        }\r\n        return this._bridge.setPath(name, path, data);\r\n    };\r\n    ContextsModule.prototype.setPaths = function (name, paths) {\r\n        this.checkName(name);\r\n        if (!Array.isArray(paths)) {\r\n            throw new Error(\"Please provide the paths as an array of PathValues!\");\r\n        }\r\n        for (var _i = 0, paths_1 = paths; _i < paths_1.length; _i++) {\r\n            var _a = paths_1[_i], path = _a.path, value = _a.value;\r\n            this.checkPath(path);\r\n            var isTopLevelPath = path === \"\";\r\n            if (isTopLevelPath) {\r\n                this.checkData(value);\r\n            }\r\n        }\r\n        return this._bridge.setPaths(name, paths);\r\n    };\r\n    ContextsModule.prototype.subscribe = function (name, callback) {\r\n        var _this = this;\r\n        this.checkName(name);\r\n        if (typeof callback !== \"function\") {\r\n            throw new Error(\"Please provide the callback as a function!\");\r\n        }\r\n        return this._bridge\r\n            .subscribe(name, function (data, delta, removed, key, extraData) { return callback(data, delta, removed, function () { return _this._bridge.unsubscribe(key); }, extraData); })\r\n            .then(function (key) {\r\n            return function () {\r\n                _this._bridge.unsubscribe(key);\r\n            };\r\n        });\r\n    };\r\n    ContextsModule.prototype.get = function (name) {\r\n        this.checkName(name);\r\n        return this._bridge.get(name);\r\n    };\r\n    ContextsModule.prototype.ready = function () {\r\n        return Promise.resolve(this);\r\n    };\r\n    ContextsModule.prototype.destroy = function (name) {\r\n        this.checkName(name);\r\n        return this._bridge.destroy(name);\r\n    };\r\n    Object.defineProperty(ContextsModule.prototype, \"setPathSupported\", {\r\n        get: function () {\r\n            return this._bridge.setPathSupported;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ContextsModule.prototype.checkName = function (name) {\r\n        if (typeof name !== \"string\" || name === \"\") {\r\n            throw new Error(\"Please provide the name as a non-empty string!\");\r\n        }\r\n    };\r\n    ContextsModule.prototype.checkPath = function (path) {\r\n        if (typeof path !== \"string\") {\r\n            throw new Error(\"Please provide the path as a dot delimited string!\");\r\n        }\r\n    };\r\n    ContextsModule.prototype.checkData = function (data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Please provide the data as an object!\");\r\n        }\r\n    };\r\n    return ContextsModule;\r\n}());\n\nfunction promisify (promise, successCallback, errorCallback) {\r\n    if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\r\n        return promise;\r\n    }\r\n    if (typeof successCallback !== \"function\") {\r\n        successCallback = function () { };\r\n    }\r\n    else if (typeof errorCallback !== \"function\") {\r\n        errorCallback = function () { };\r\n    }\r\n    return promise.then(successCallback, errorCallback);\r\n}\n\nfunction rejectAfter(ms, promise, error) {\r\n    if (ms === void 0) { ms = 0; }\r\n    var timeout;\r\n    var clearTimeoutIfThere = function () {\r\n        if (timeout) {\r\n            clearTimeout(timeout);\r\n        }\r\n    };\r\n    promise\r\n        .then(function () {\r\n        clearTimeoutIfThere();\r\n    })\r\n        .catch(function () {\r\n        clearTimeoutIfThere();\r\n    });\r\n    return new Promise(function (resolve, reject) {\r\n        timeout = setTimeout(function () { return reject(error); }, ms);\r\n    });\r\n}\n\nvar InvokeStatus;\r\n(function (InvokeStatus) {\r\n    InvokeStatus[InvokeStatus[\"Success\"] = 0] = \"Success\";\r\n    InvokeStatus[InvokeStatus[\"Error\"] = 1] = \"Error\";\r\n})(InvokeStatus || (InvokeStatus = {}));\r\nvar Client = (function () {\r\n    function Client(protocol, repo, instance, configuration) {\r\n        this.protocol = protocol;\r\n        this.repo = repo;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n    }\r\n    Client.prototype.subscribe = function (method, options, successCallback, errorCallback, existingSub) {\r\n        var _this = this;\r\n        var callProtocolSubscribe = function (targetServers, stream, successProxy, errorProxy) {\r\n            var _a;\r\n            options.methodResponseTimeout = (_a = options.methodResponseTimeout) !== null && _a !== void 0 ? _a : options.waitTimeoutMs;\r\n            _this.protocol.client.subscribe(stream, options, targetServers, successProxy, errorProxy, existingSub);\r\n        };\r\n        var promise = new Promise(function (resolve, reject) {\r\n            var successProxy = function (sub) {\r\n                resolve(sub);\r\n            };\r\n            var errorProxy = function (err) {\r\n                reject(err);\r\n            };\r\n            if (!method) {\r\n                reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n                return;\r\n            }\r\n            var methodDef;\r\n            if (typeof method === \"string\") {\r\n                methodDef = { name: method };\r\n            }\r\n            else {\r\n                methodDef = method;\r\n            }\r\n            if (!methodDef.name) {\r\n                reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n                return;\r\n            }\r\n            if (options === undefined) {\r\n                options = {};\r\n            }\r\n            var target = options.target;\r\n            if (target === undefined) {\r\n                target = \"best\";\r\n            }\r\n            if (typeof target === \"string\" && target !== \"all\" && target !== \"best\") {\r\n                reject(new Error(\"\\\"\" + target + \"\\\" is not a valid target. Valid targets are \\\"all\\\", \\\"best\\\", or an instance.\"));\r\n                return;\r\n            }\r\n            if (options.methodResponseTimeout === undefined) {\r\n                options.methodResponseTimeout = options.method_response_timeout;\r\n                if (options.methodResponseTimeout === undefined) {\r\n                    options.methodResponseTimeout = _this.configuration.methodResponseTimeout;\r\n                }\r\n            }\r\n            if (options.waitTimeoutMs === undefined) {\r\n                options.waitTimeoutMs = options.wait_for_method_timeout;\r\n                if (options.waitTimeoutMs === undefined) {\r\n                    options.waitTimeoutMs = _this.configuration.waitTimeoutMs;\r\n                }\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n            if (currentServers.length > 0) {\r\n                callProtocolSubscribe(currentServers, currentServers[0].methods[0], successProxy, errorProxy);\r\n            }\r\n            else {\r\n                var retry_1 = function () {\r\n                    if (!target || !(options.waitTimeoutMs)) {\r\n                        return;\r\n                    }\r\n                    delayTillNow += delayStep;\r\n                    currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n                    if (currentServers.length > 0) {\r\n                        var streamInfo = currentServers[0].methods[0];\r\n                        callProtocolSubscribe(currentServers, streamInfo, successProxy, errorProxy);\r\n                    }\r\n                    else if (delayTillNow >= options.waitTimeoutMs) {\r\n                        var def = typeof method === \"string\" ? { name: method } : method;\r\n                        callProtocolSubscribe(currentServers, def, successProxy, errorProxy);\r\n                    }\r\n                    else {\r\n                        setTimeout(retry_1, delayStep);\r\n                    }\r\n                };\r\n                setTimeout(retry_1, delayStep);\r\n            }\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    Client.prototype.servers = function (methodFilter) {\r\n        var filterCopy = methodFilter === undefined\r\n            ? undefined\r\n            : __assign({}, methodFilter);\r\n        return this.getServers(filterCopy).map(function (serverMethodMap) {\r\n            return serverMethodMap.server.instance;\r\n        });\r\n    };\r\n    Client.prototype.methods = function (methodFilter) {\r\n        if (typeof methodFilter === \"string\") {\r\n            methodFilter = { name: methodFilter };\r\n        }\r\n        else {\r\n            methodFilter = __assign({}, methodFilter);\r\n        }\r\n        return this.getMethods(methodFilter);\r\n    };\r\n    Client.prototype.methodsForInstance = function (instance) {\r\n        return this.getMethodsForInstance(instance);\r\n    };\r\n    Client.prototype.methodAdded = function (callback) {\r\n        return this.repo.onMethodAdded(callback);\r\n    };\r\n    Client.prototype.methodRemoved = function (callback) {\r\n        return this.repo.onMethodRemoved(callback);\r\n    };\r\n    Client.prototype.serverAdded = function (callback) {\r\n        return this.repo.onServerAdded(callback);\r\n    };\r\n    Client.prototype.serverRemoved = function (callback) {\r\n        return this.repo.onServerRemoved(function (server, reason) {\r\n            callback(server, reason);\r\n        });\r\n    };\r\n    Client.prototype.serverMethodAdded = function (callback) {\r\n        return this.repo.onServerMethodAdded(function (server, method) {\r\n            callback({ server: server, method: method });\r\n        });\r\n    };\r\n    Client.prototype.serverMethodRemoved = function (callback) {\r\n        return this.repo.onServerMethodRemoved(function (server, method) {\r\n            callback({ server: server, method: method });\r\n        });\r\n    };\r\n    Client.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var getInvokePromise;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                getInvokePromise = function () { return __awaiter(_this, void 0, void 0, function () {\r\n                    var methodDefinition, serversMethodMap, err_1, method, errorObj, timeout, additionalOptionsCopy, invokePromises, invocationMessages, results, allRejected;\r\n                    var _this = this;\r\n                    var _a, _b, _c;\r\n                    return __generator(this, function (_d) {\r\n                        switch (_d.label) {\r\n                            case 0:\r\n                                if (typeof methodFilter === \"string\") {\r\n                                    methodDefinition = { name: methodFilter };\r\n                                }\r\n                                else {\r\n                                    methodDefinition = __assign({}, methodFilter);\r\n                                }\r\n                                if (!methodDefinition.name) {\r\n                                    return [2, Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\")];\r\n                                }\r\n                                if (!argumentObj) {\r\n                                    argumentObj = {};\r\n                                }\r\n                                if (!target) {\r\n                                    target = \"best\";\r\n                                }\r\n                                if (typeof target === \"string\" && target !== \"all\" && target !== \"best\" && target !== \"skipMine\") {\r\n                                    return [2, Promise.reject(new Error(\"\\\"\" + target + \"\\\" is not a valid target. Valid targets are \\\"all\\\" and \\\"best\\\".\"))];\r\n                                }\r\n                                if (!additionalOptions) {\r\n                                    additionalOptions = {};\r\n                                }\r\n                                if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                                    additionalOptions.methodResponseTimeoutMs = additionalOptions.method_response_timeout;\r\n                                    if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                                        additionalOptions.methodResponseTimeoutMs = this.configuration.methodResponseTimeout;\r\n                                    }\r\n                                }\r\n                                if (additionalOptions.waitTimeoutMs === undefined) {\r\n                                    additionalOptions.waitTimeoutMs = additionalOptions.wait_for_method_timeout;\r\n                                    if (additionalOptions.waitTimeoutMs === undefined) {\r\n                                        additionalOptions.waitTimeoutMs = this.configuration.waitTimeoutMs;\r\n                                    }\r\n                                }\r\n                                if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== \"number\") {\r\n                                    return [2, Promise.reject(new Error(\"\\\"\" + additionalOptions.waitTimeoutMs + \"\\\" is not a valid number for \\\"waitTimeoutMs\\\" \"))];\r\n                                }\r\n                                if (typeof argumentObj !== \"object\") {\r\n                                    return [2, Promise.reject(new Error(\"The method arguments must be an object. method: \" + methodDefinition.name))];\r\n                                }\r\n                                serversMethodMap = this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                                if (!(serversMethodMap.length === 0)) return [3, 4];\r\n                                _d.label = 1;\r\n                            case 1:\r\n                                _d.trys.push([1, 3, , 4]);\r\n                                return [4, this.tryToAwaitForMethods(methodDefinition, target, additionalOptions)];\r\n                            case 2:\r\n                                serversMethodMap = _d.sent();\r\n                                return [3, 4];\r\n                            case 3:\r\n                                err_1 = _d.sent();\r\n                                method = __assign(__assign({}, methodDefinition), { getServers: function () { return []; }, supportsStreaming: false, objectTypes: (_a = methodDefinition.objectTypes) !== null && _a !== void 0 ? _a : [], flags: (_c = (_b = methodDefinition.flags) === null || _b === void 0 ? void 0 : _b.metadata) !== null && _c !== void 0 ? _c : {} });\r\n                                errorObj = {\r\n                                    method: method,\r\n                                    called_with: argumentObj,\r\n                                    message: \"Can not find a method matching \" + JSON.stringify(methodFilter) + \" with server filter \" + JSON.stringify(target),\r\n                                    executed_by: undefined,\r\n                                    returned: undefined,\r\n                                    status: undefined,\r\n                                };\r\n                                return [2, Promise.reject(errorObj)];\r\n                            case 4:\r\n                                timeout = additionalOptions.methodResponseTimeoutMs;\r\n                                additionalOptionsCopy = additionalOptions;\r\n                                invokePromises = serversMethodMap.map(function (serversMethodPair) {\r\n                                    var invId = shortid();\r\n                                    var method = serversMethodPair.methods[0];\r\n                                    var server = serversMethodPair.server;\r\n                                    var invokePromise = _this.protocol.client.invoke(invId, method, argumentObj, server, additionalOptionsCopy);\r\n                                    return Promise.race([\r\n                                        invokePromise,\r\n                                        rejectAfter(timeout, invokePromise, {\r\n                                            invocationId: invId,\r\n                                            message: \"Invocation timeout (\" + timeout + \" ms) reached for method name: \" + (method === null || method === void 0 ? void 0 : method.name) + \", target instance: \" + JSON.stringify(server.instance) + \", options: \" + JSON.stringify(additionalOptionsCopy),\r\n                                            status: InvokeStatus.Error,\r\n                                        })\r\n                                    ]);\r\n                                });\r\n                                return [4, Promise.all(invokePromises)];\r\n                            case 5:\r\n                                invocationMessages = _d.sent();\r\n                                results = this.getInvocationResultObj(invocationMessages, methodDefinition, argumentObj);\r\n                                allRejected = invocationMessages.every(function (result) { return result.status === InvokeStatus.Error; });\r\n                                if (allRejected) {\r\n                                    return [2, Promise.reject(results)];\r\n                                }\r\n                                return [2, results];\r\n                        }\r\n                    });\r\n                }); };\r\n                return [2, promisify(getInvokePromise(), success, error)];\r\n            });\r\n        });\r\n    };\r\n    Client.prototype.getInvocationResultObj = function (invocationResults, method, calledWith) {\r\n        var all_return_values = invocationResults\r\n            .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Success; })\r\n            .reduce(function (allValues, currentValue) {\r\n            allValues = __spreadArrays(allValues, [\r\n                {\r\n                    executed_by: currentValue.instance,\r\n                    returned: currentValue.result,\r\n                    called_with: calledWith,\r\n                    method: method,\r\n                    message: currentValue.message,\r\n                    status: currentValue.status,\r\n                }\r\n            ]);\r\n            return allValues;\r\n        }, []);\r\n        var all_errors = invocationResults\r\n            .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Error; })\r\n            .reduce(function (allErrors, currError) {\r\n            allErrors = __spreadArrays(allErrors, [\r\n                {\r\n                    executed_by: currError.instance,\r\n                    called_with: calledWith,\r\n                    name: method.name,\r\n                    message: currError.message,\r\n                }\r\n            ]);\r\n            return allErrors;\r\n        }, []);\r\n        var invResult = invocationResults[0];\r\n        var result = {\r\n            method: method,\r\n            called_with: calledWith,\r\n            returned: invResult.result,\r\n            executed_by: invResult.instance,\r\n            all_return_values: all_return_values,\r\n            all_errors: all_errors,\r\n            message: invResult.message,\r\n            status: invResult.status\r\n        };\r\n        return result;\r\n    };\r\n    Client.prototype.tryToAwaitForMethods = function (methodDefinition, target, additionalOptions) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (additionalOptions.waitTimeoutMs === 0) {\r\n                reject();\r\n                return;\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var retry = function () {\r\n                delayTillNow += delayStep;\r\n                var serversMethodMap = _this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                if (serversMethodMap.length > 0) {\r\n                    clearInterval(interval);\r\n                    resolve(serversMethodMap);\r\n                }\r\n                else if (delayTillNow >= (additionalOptions.waitTimeoutMs || 10000)) {\r\n                    clearInterval(interval);\r\n                    reject();\r\n                    return;\r\n                }\r\n            };\r\n            var interval = setInterval(retry, delayStep);\r\n        });\r\n    };\r\n    Client.prototype.filterByTarget = function (target, serverMethodMap) {\r\n        var _this = this;\r\n        if (typeof target === \"string\") {\r\n            if (target === \"all\") {\r\n                return __spreadArrays(serverMethodMap);\r\n            }\r\n            else if (target === \"best\") {\r\n                var localMachine = serverMethodMap\r\n                    .find(function (s) { return s.server.instance.isLocal; });\r\n                if (localMachine) {\r\n                    return [localMachine];\r\n                }\r\n                if (serverMethodMap[0] !== undefined) {\r\n                    return [serverMethodMap[0]];\r\n                }\r\n            }\r\n            else if (target === \"skipMine\") {\r\n                return serverMethodMap.filter(function (_a) {\r\n                    var server = _a.server;\r\n                    return server.instance.peerId !== _this.instance.peerId;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            var targetArray = void 0;\r\n            if (!Array.isArray(target)) {\r\n                targetArray = [target];\r\n            }\r\n            else {\r\n                targetArray = target;\r\n            }\r\n            var allServersMatching = targetArray.reduce(function (matches, filter) {\r\n                var myMatches = serverMethodMap.filter(function (serverMethodPair) {\r\n                    return _this.instanceMatch(filter, serverMethodPair.server.instance);\r\n                });\r\n                return matches.concat(myMatches);\r\n            }, []);\r\n            return allServersMatching;\r\n        }\r\n        return [];\r\n    };\r\n    Client.prototype.instanceMatch = function (instanceFilter, instanceDefinition) {\r\n        return this.containsProps(instanceFilter, instanceDefinition);\r\n    };\r\n    Client.prototype.methodMatch = function (methodFilter, methodDefinition) {\r\n        return this.containsProps(methodFilter, methodDefinition);\r\n    };\r\n    Client.prototype.containsProps = function (filter, repoMethod) {\r\n        var filterProps = Object.keys(filter)\r\n            .filter(function (prop) {\r\n            return filter[prop] !== undefined\r\n                && filter[prop] !== null\r\n                && typeof filter[prop] !== \"function\"\r\n                && prop !== \"object_types\"\r\n                && prop !== \"display_name\"\r\n                && prop !== \"id\"\r\n                && prop !== \"gatewayId\"\r\n                && prop !== \"identifier\"\r\n                && prop[0] !== \"_\";\r\n        });\r\n        return filterProps.every(function (prop) {\r\n            var isMatch;\r\n            var filterValue = filter[prop];\r\n            var repoMethodValue = repoMethod[prop];\r\n            switch (prop) {\r\n                case \"objectTypes\":\r\n                    isMatch = (filterValue || []).every(function (filterValueEl) {\r\n                        return (repoMethodValue || []).includes(filterValueEl);\r\n                    });\r\n                    break;\r\n                case \"flags\":\r\n                    isMatch = isSubset(repoMethodValue || {}, filterValue || {});\r\n                    break;\r\n                default:\r\n                    isMatch = String(filterValue).toLowerCase() === String(repoMethodValue).toLowerCase();\r\n            }\r\n            return isMatch;\r\n        });\r\n    };\r\n    Client.prototype.getMethods = function (methodFilter) {\r\n        var _this = this;\r\n        if (methodFilter === undefined) {\r\n            return this.repo.getMethods();\r\n        }\r\n        var methods = this.repo.getMethods().filter(function (method) {\r\n            return _this.methodMatch(methodFilter, method);\r\n        });\r\n        return methods;\r\n    };\r\n    Client.prototype.getMethodsForInstance = function (instanceFilter) {\r\n        var _this = this;\r\n        var allServers = this.repo.getServers();\r\n        var matchingServers = allServers.filter(function (server) {\r\n            return _this.instanceMatch(instanceFilter, server.instance);\r\n        });\r\n        if (matchingServers.length === 0) {\r\n            return [];\r\n        }\r\n        var resultMethodsObject = {};\r\n        if (matchingServers.length === 1) {\r\n            resultMethodsObject = matchingServers[0].methods;\r\n        }\r\n        else {\r\n            matchingServers.forEach(function (server) {\r\n                Object.keys(server.methods).forEach(function (methodKey) {\r\n                    var method = server.methods[methodKey];\r\n                    resultMethodsObject[method.identifier] = method;\r\n                });\r\n            });\r\n        }\r\n        return Object.keys(resultMethodsObject)\r\n            .map(function (key) {\r\n            return resultMethodsObject[key];\r\n        });\r\n    };\r\n    Client.prototype.getServers = function (methodFilter) {\r\n        var _this = this;\r\n        var servers = this.repo.getServers();\r\n        if (methodFilter === undefined) {\r\n            return servers.map(function (server) {\r\n                return { server: server, methods: [] };\r\n            });\r\n        }\r\n        return servers.reduce(function (prev, current) {\r\n            var methodsForServer = Object.values(current.methods);\r\n            var matchingMethods = methodsForServer.filter(function (method) {\r\n                return _this.methodMatch(methodFilter, method);\r\n            });\r\n            if (matchingMethods.length > 0) {\r\n                prev.push({ server: current, methods: matchingMethods });\r\n            }\r\n            return prev;\r\n        }, []);\r\n    };\r\n    Client.prototype.getServerMethodsByFilterAndTarget = function (methodFilter, target) {\r\n        var serversMethodMap = this.getServers(methodFilter);\r\n        return this.filterByTarget(target, serversMethodMap);\r\n    };\r\n    return Client;\r\n}());\n\nvar ServerSubscription = (function () {\r\n    function ServerSubscription(protocol, repoMethod, subscription) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.subscription = subscription;\r\n    }\r\n    Object.defineProperty(ServerSubscription.prototype, \"stream\", {\r\n        get: function () {\r\n            if (!this.repoMethod.stream) {\r\n                throw new Error(\"no stream\");\r\n            }\r\n            return this.repoMethod.stream;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"arguments\", {\r\n        get: function () { return this.subscription.arguments || {}; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"branchKey\", {\r\n        get: function () { return this.subscription.branchKey; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"instance\", {\r\n        get: function () {\r\n            if (!this.subscription.instance) {\r\n                throw new Error(\"no instance\");\r\n            }\r\n            return this.subscription.instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerSubscription.prototype.close = function () {\r\n        this.protocol.server.closeSingleSubscription(this.repoMethod, this.subscription);\r\n    };\r\n    ServerSubscription.prototype.push = function (data) {\r\n        this.protocol.server.pushDataToSingle(this.repoMethod, this.subscription, data);\r\n    };\r\n    return ServerSubscription;\r\n}());\n\nvar Request = (function () {\r\n    function Request(protocol, repoMethod, requestContext) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.requestContext = requestContext;\r\n        this.arguments = requestContext.arguments;\r\n        this.instance = requestContext.instance;\r\n    }\r\n    Request.prototype.accept = function () {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, \"\");\r\n    };\r\n    Request.prototype.acceptOnBranch = function (branch) {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, branch);\r\n    };\r\n    Request.prototype.reject = function (reason) {\r\n        this.protocol.server.rejectRequest(this.requestContext, this.repoMethod, reason);\r\n    };\r\n    return Request;\r\n}());\n\nvar ServerStreaming = (function () {\r\n    function ServerStreaming(protocol, server) {\r\n        var _this = this;\r\n        this.protocol = protocol;\r\n        this.server = server;\r\n        protocol.server.onSubRequest(function (rc, rm) { return _this.handleSubRequest(rc, rm); });\r\n        protocol.server.onSubAdded(function (sub, rm) { return _this.handleSubAdded(sub, rm); });\r\n        protocol.server.onSubRemoved(function (sub, rm) { return _this.handleSubRemoved(sub, rm); });\r\n    }\r\n    ServerStreaming.prototype.handleSubRequest = function (requestContext, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRequestHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var request = new Request(this.protocol, repoMethod, requestContext);\r\n        repoMethod.streamCallbacks.subscriptionRequestHandler(request);\r\n    };\r\n    ServerStreaming.prototype.handleSubAdded = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionAddedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionAddedHandler(sub);\r\n    };\r\n    ServerStreaming.prototype.handleSubRemoved = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionRemovedHandler(sub);\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar ServerBranch = (function () {\r\n    function ServerBranch(key, protocol, repoMethod) {\r\n        this.key = key;\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n    }\r\n    ServerBranch.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this.protocol.server.getSubscriptionList(this.repoMethod, this.key);\r\n        return subList.map(function (sub) {\r\n            return new ServerSubscription(_this.protocol, _this.repoMethod, sub);\r\n        });\r\n    };\r\n    ServerBranch.prototype.close = function () {\r\n        this.protocol.server.closeAllSubscriptions(this.repoMethod, this.key);\r\n    };\r\n    ServerBranch.prototype.push = function (data) {\r\n        this.protocol.server.pushData(this.repoMethod, data, [this.key]);\r\n    };\r\n    return ServerBranch;\r\n}());\n\nvar ServerStream = (function () {\r\n    function ServerStream(_protocol, _repoMethod, _server) {\r\n        this._protocol = _protocol;\r\n        this._repoMethod = _repoMethod;\r\n        this._server = _server;\r\n        this.name = this._repoMethod.definition.name;\r\n    }\r\n    ServerStream.prototype.branches = function (key) {\r\n        var _this = this;\r\n        var bList = this._protocol.server.getBranchList(this._repoMethod);\r\n        if (key) {\r\n            if (bList.indexOf(key) > -1) {\r\n                return new ServerBranch(key, this._protocol, this._repoMethod);\r\n            }\r\n            return undefined;\r\n        }\r\n        else {\r\n            return bList.map(function (branchKey) {\r\n                return new ServerBranch(branchKey, _this._protocol, _this._repoMethod);\r\n            });\r\n        }\r\n    };\r\n    ServerStream.prototype.branch = function (key) {\r\n        return this.branches(key);\r\n    };\r\n    ServerStream.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this._protocol.server.getSubscriptionList(this._repoMethod);\r\n        return subList.map(function (sub) {\r\n            return new ServerSubscription(_this._protocol, _this._repoMethod, sub);\r\n        });\r\n    };\r\n    Object.defineProperty(ServerStream.prototype, \"definition\", {\r\n        get: function () {\r\n            var _a;\r\n            var def2 = this._repoMethod.definition;\r\n            return {\r\n                accepts: def2.accepts,\r\n                description: def2.description,\r\n                displayName: def2.displayName,\r\n                name: def2.name,\r\n                objectTypes: def2.objectTypes,\r\n                returns: def2.returns,\r\n                supportsStreaming: def2.supportsStreaming,\r\n                flags: (_a = def2.flags) === null || _a === void 0 ? void 0 : _a.metadata,\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerStream.prototype.close = function () {\r\n        this._protocol.server.closeAllSubscriptions(this._repoMethod);\r\n        this._server.unregister(this._repoMethod.definition, true);\r\n    };\r\n    ServerStream.prototype.push = function (data, branches) {\r\n        if (typeof branches !== \"string\" && !Array.isArray(branches) && branches !== undefined) {\r\n            throw new Error(\"invalid branches should be string or string array\");\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        this._protocol.server.pushData(this._repoMethod, data, branches);\r\n    };\r\n    ServerStream.prototype.updateRepoMethod = function (repoMethod) {\r\n        this._repoMethod = repoMethod;\r\n    };\r\n    return ServerStream;\r\n}());\n\nvar Server = (function () {\r\n    function Server(protocol, serverRepository) {\r\n        this.protocol = protocol;\r\n        this.serverRepository = serverRepository;\r\n        this.invocations = 0;\r\n        this.currentlyUnregistering = {};\r\n        this.streaming = new ServerStreaming(protocol, this);\r\n        this.protocol.server.onInvoked(this.onMethodInvoked.bind(this));\r\n    }\r\n    Server.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback, existingStream) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (!streamDef) {\r\n                reject(\"The stream name must be unique! Please, provide either a unique string for a stream name to \\u201Cglue.interop.createStream()\\u201D or a \\u201CmethodDefinition\\u201D object with a unique \\u201Cname\\u201D property for the stream.\");\r\n                return;\r\n            }\r\n            var streamMethodDefinition;\r\n            if (typeof streamDef === \"string\") {\r\n                streamMethodDefinition = { name: \"\" + streamDef };\r\n            }\r\n            else {\r\n                streamMethodDefinition = __assign({}, streamDef);\r\n            }\r\n            if (!streamMethodDefinition.name) {\r\n                return reject(\"The \\u201Cname\\u201D property is required for the \\u201CstreamDefinition\\u201D object and must be unique. Stream definition: \" + JSON.stringify(streamMethodDefinition));\r\n            }\r\n            var nameAlreadyExists = _this.serverRepository.getList()\r\n                .some(function (serverMethod) { return serverMethod.definition.name === streamMethodDefinition.name; });\r\n            if (nameAlreadyExists) {\r\n                return reject(\"A stream with the name \\\"\" + streamMethodDefinition.name + \"\\\" already exists! Please, provide a unique name for the stream.\");\r\n            }\r\n            streamMethodDefinition.supportsStreaming = true;\r\n            if (!callbacks) {\r\n                callbacks = {};\r\n            }\r\n            if (typeof callbacks.subscriptionRequestHandler !== \"function\") {\r\n                callbacks.subscriptionRequestHandler = function (request) {\r\n                    request.accept();\r\n                };\r\n            }\r\n            var repoMethod = _this.serverRepository.add({\r\n                definition: streamMethodDefinition,\r\n                streamCallbacks: callbacks,\r\n                protocolState: {},\r\n            });\r\n            _this.protocol.server.createStream(repoMethod)\r\n                .then(function () {\r\n                var streamUserObject;\r\n                if (existingStream) {\r\n                    streamUserObject = existingStream;\r\n                    existingStream.updateRepoMethod(repoMethod);\r\n                }\r\n                else {\r\n                    streamUserObject = new ServerStream(_this.protocol, repoMethod, _this);\r\n                }\r\n                repoMethod.stream = streamUserObject;\r\n                resolve(streamUserObject);\r\n            })\r\n                .catch(function (err) {\r\n                if (repoMethod.repoId) {\r\n                    _this.serverRepository.remove(repoMethod.repoId);\r\n                }\r\n                reject(err);\r\n            });\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    Server.prototype.register = function (methodDefinition, callback) {\r\n        var _this = this;\r\n        if (!methodDefinition) {\r\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be a callback function. Method: \" + (typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name));\r\n        }\r\n        var wrappedCallbackFunction = function (context, resultCallback) { return __awaiter(_this, void 0, void 0, function () {\r\n            var result, resultValue, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 5]);\r\n                        result = callback(context.args, context.instance);\r\n                        if (!(result && typeof result.then === \"function\")) return [3, 2];\r\n                        return [4, result];\r\n                    case 1:\r\n                        resultValue = _a.sent();\r\n                        resultCallback(undefined, resultValue);\r\n                        return [3, 3];\r\n                    case 2:\r\n                        resultCallback(undefined, result);\r\n                        _a.label = 3;\r\n                    case 3: return [3, 5];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        if (!e_1) {\r\n                            e_1 = \"\";\r\n                        }\r\n                        resultCallback(e_1, e_1);\r\n                        return [3, 5];\r\n                    case 5: return [2];\r\n                }\r\n            });\r\n        }); };\r\n        wrappedCallbackFunction.userCallback = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallbackFunction);\r\n    };\r\n    Server.prototype.registerAsync = function (methodDefinition, callback) {\r\n        if (!methodDefinition) {\r\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be a callback function. Method: \" + (typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name));\r\n        }\r\n        var wrappedCallback = function (context, resultCallback) {\r\n            try {\r\n                var resultCalled_1 = false;\r\n                var success = function (result) {\r\n                    if (!resultCalled_1) {\r\n                        resultCallback(undefined, result);\r\n                    }\r\n                    resultCalled_1 = true;\r\n                };\r\n                var error = function (e) {\r\n                    if (!resultCalled_1) {\r\n                        if (!e) {\r\n                            e = \"\";\r\n                        }\r\n                        resultCallback(e, e);\r\n                    }\r\n                    resultCalled_1 = true;\r\n                };\r\n                var methodResult = callback(context.args, context.instance, success, error);\r\n                if (methodResult && typeof methodResult.then === \"function\") {\r\n                    methodResult\r\n                        .then(success)\r\n                        .catch(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                resultCallback(e, undefined);\r\n            }\r\n        };\r\n        wrappedCallback.userCallbackAsync = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallback);\r\n    };\r\n    Server.prototype.unregister = function (methodFilter, forStream) {\r\n        if (forStream === void 0) { forStream = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, methodToBeRemoved;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (methodFilter === undefined) {\r\n                            return [2, Promise.reject(\"Please, provide either a unique string for a name or an object containing a \\u201Cname\\u201D property.\")];\r\n                        }\r\n                        if (!(typeof methodFilter === \"function\")) return [3, 2];\r\n                        return [4, this.unregisterWithPredicate(methodFilter, forStream)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                    case 2:\r\n                        if (typeof methodFilter === \"string\") {\r\n                            methodDefinition = { name: methodFilter };\r\n                        }\r\n                        else {\r\n                            methodDefinition = methodFilter;\r\n                        }\r\n                        if (methodDefinition.name === undefined) {\r\n                            return [2, Promise.reject(\"Method name is required. Cannot find a method if the method name is undefined!\")];\r\n                        }\r\n                        methodToBeRemoved = this.serverRepository.getList().find(function (serverMethod) {\r\n                            return serverMethod.definition.name === methodDefinition.name\r\n                                && (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodToBeRemoved) {\r\n                            return [2, Promise.reject(\"Method with a name \\\"\" + methodDefinition.name + \"\\\" does not exist or is not registered by your application!\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams([methodToBeRemoved])];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.unregisterWithPredicate = function (filterPredicate, forStream) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodsOrStreamsToRemove;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        methodsOrStreamsToRemove = this.serverRepository.getList()\r\n                            .filter(function (sm) { return filterPredicate(sm.definition); })\r\n                            .filter(function (serverMethod) {\r\n                            return (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodsOrStreamsToRemove || methodsOrStreamsToRemove.length === 0) {\r\n                            return [2, Promise.reject(\"Could not find a \" + (forStream ? \"stream\" : \"method\") + \" matching the specified condition!\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams(methodsOrStreamsToRemove)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.removeMethodsOrStreams = function (methodsToRemove) {\r\n        var _this = this;\r\n        var methodUnregPromises = [];\r\n        methodsToRemove.forEach(function (method) {\r\n            var promise = _this.protocol.server.unregister(method)\r\n                .then(function () {\r\n                if (method.repoId) {\r\n                    _this.serverRepository.remove(method.repoId);\r\n                }\r\n            });\r\n            methodUnregPromises.push(promise);\r\n            _this.addAsCurrentlyUnregistering(method.definition.name, promise);\r\n        });\r\n        return Promise.all(methodUnregPromises);\r\n    };\r\n    Server.prototype.addAsCurrentlyUnregistering = function (methodName, promise) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var timeout;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                timeout = new Promise(function (resolve) { return setTimeout(resolve, 5000); });\r\n                this.currentlyUnregistering[methodName] = Promise.race([promise, timeout]).then(function () {\r\n                    delete _this.currentlyUnregistering[methodName];\r\n                });\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.registerCore = function (method, theFunction) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, unregisterInProgress, nameAlreadyExists, repoMethod;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof method === \"string\") {\r\n                            methodDefinition = { name: \"\" + method };\r\n                        }\r\n                        else {\r\n                            methodDefinition = __assign({}, method);\r\n                        }\r\n                        if (!methodDefinition.name) {\r\n                            return [2, Promise.reject(\"Please, provide a (unique) string value for the \\u201Cname\\u201D property in the \\u201CmethodDefinition\\u201D object: \" + JSON.stringify(method))];\r\n                        }\r\n                        unregisterInProgress = this.currentlyUnregistering[methodDefinition.name];\r\n                        if (!unregisterInProgress) return [3, 2];\r\n                        return [4, unregisterInProgress];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        nameAlreadyExists = this.serverRepository.getList()\r\n                            .some(function (serverMethod) { return serverMethod.definition.name === methodDefinition.name; });\r\n                        if (nameAlreadyExists) {\r\n                            return [2, Promise.reject(\"A method with the name \\\"\" + methodDefinition.name + \"\\\" already exists! Please, provide a unique name for the method.\")];\r\n                        }\r\n                        if (methodDefinition.supportsStreaming) {\r\n                            return [2, Promise.reject(\"When you create methods with \\u201Cglue.interop.register()\\u201D or \\u201Cglue.interop.registerAsync()\\u201D the property \\u201CsupportsStreaming\\u201D cannot be \\u201Ctrue\\u201D. If you want \\u201C\" + methodDefinition.name + \"\\u201D to be a stream, please use the \\u201Cglue.interop.createStream()\\u201D method.\")];\r\n                        }\r\n                        repoMethod = this.serverRepository.add({\r\n                            definition: methodDefinition,\r\n                            theFunction: theFunction,\r\n                            protocolState: {},\r\n                        });\r\n                        return [2, this.protocol.server.register(repoMethod)\r\n                                .catch(function (err) {\r\n                                if (repoMethod === null || repoMethod === void 0 ? void 0 : repoMethod.repoId) {\r\n                                    _this.serverRepository.remove(repoMethod.repoId);\r\n                                }\r\n                                throw err;\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.onMethodInvoked = function (methodToExecute, invocationId, invocationArgs) {\r\n        var _this = this;\r\n        if (!methodToExecute || !methodToExecute.theFunction) {\r\n            return;\r\n        }\r\n        methodToExecute.theFunction(invocationArgs, function (err, result) {\r\n            if (err !== undefined && err !== null) {\r\n                if (err.message && typeof err.message === \"string\") {\r\n                    err = err.message;\r\n                }\r\n                else if (typeof err !== \"string\") {\r\n                    try {\r\n                        err = JSON.stringify(err);\r\n                    }\r\n                    catch (unStrException) {\r\n                        err = \"un-stringifyable error in onMethodInvoked! Top level prop names: \" + Object.keys(err);\r\n                    }\r\n                }\r\n            }\r\n            if (!result) {\r\n                result = {};\r\n            }\r\n            else if (typeof result !== \"object\" || Array.isArray(result)) {\r\n                result = { _value: result };\r\n            }\r\n            _this.protocol.server.methodInvocationResult(methodToExecute, invocationId, err, result);\r\n        });\r\n    };\r\n    return Server;\r\n}());\n\nvar InstanceWrapper = (function () {\r\n    function InstanceWrapper(API, instance, connection) {\r\n        var _this = this;\r\n        this.wrapped = {};\r\n        this.wrapped.getMethods = function () {\r\n            return API.methodsForInstance(this);\r\n        };\r\n        this.wrapped.getStreams = function () {\r\n            return API.methodsForInstance(this).filter(function (m) { return m.supportsStreaming; });\r\n        };\r\n        if (instance) {\r\n            this.refreshWrappedObject(instance);\r\n        }\r\n        if (connection) {\r\n            connection.loggedIn(function () {\r\n                _this.refresh(connection);\r\n            });\r\n            this.refresh(connection);\r\n        }\r\n    }\r\n    InstanceWrapper.prototype.unwrap = function () {\r\n        return this.wrapped;\r\n    };\r\n    InstanceWrapper.prototype.refresh = function (connection) {\r\n        if (!connection) {\r\n            return;\r\n        }\r\n        var resolvedIdentity = connection === null || connection === void 0 ? void 0 : connection.resolvedIdentity;\r\n        var instance = Object.assign({}, resolvedIdentity !== null && resolvedIdentity !== void 0 ? resolvedIdentity : {}, { peerId: connection === null || connection === void 0 ? void 0 : connection.peerId });\r\n        this.refreshWrappedObject(instance);\r\n    };\r\n    InstanceWrapper.prototype.refreshWrappedObject = function (resolvedIdentity) {\r\n        var _this = this;\r\n        var _a, _b, _c, _d;\r\n        Object.keys(resolvedIdentity).forEach(function (key) {\r\n            _this.wrapped[key] = resolvedIdentity[key];\r\n        });\r\n        this.wrapped.user = resolvedIdentity.user;\r\n        this.wrapped.instance = resolvedIdentity.instance;\r\n        this.wrapped.application = (_a = resolvedIdentity.application) !== null && _a !== void 0 ? _a : shortid();\r\n        this.wrapped.applicationName = resolvedIdentity.applicationName;\r\n        this.wrapped.pid = (_c = (_b = resolvedIdentity.pid) !== null && _b !== void 0 ? _b : resolvedIdentity.process) !== null && _c !== void 0 ? _c : Math.floor(Math.random() * 10000000000);\r\n        this.wrapped.machine = resolvedIdentity.machine;\r\n        this.wrapped.environment = resolvedIdentity.environment;\r\n        this.wrapped.region = resolvedIdentity.region;\r\n        this.wrapped.windowId = resolvedIdentity.windowId;\r\n        this.wrapped.isLocal = (_d = resolvedIdentity.isLocal) !== null && _d !== void 0 ? _d : true;\r\n        this.wrapped.api = resolvedIdentity.api;\r\n        this.wrapped.service = resolvedIdentity.service;\r\n        this.wrapped.peerId = resolvedIdentity.peerId;\r\n    };\r\n    return InstanceWrapper;\r\n}());\n\nvar hideMethodSystemFlags = function (method) {\r\n    return __assign(__assign({}, method), { flags: method.flags.metadata || {} });\r\n};\r\nvar ClientRepository = (function () {\r\n    function ClientRepository(logger, API) {\r\n        this.logger = logger;\r\n        this.API = API;\r\n        this.servers = {};\r\n        this.methodsCount = {};\r\n        this.callbacks = lib();\r\n        var peerId = this.API.instance.peerId;\r\n        this.myServer = {\r\n            id: peerId,\r\n            methods: {},\r\n            instance: this.API.instance,\r\n            wrapper: this.API.unwrappedInstance,\r\n        };\r\n        this.servers[peerId] = this.myServer;\r\n    }\r\n    ClientRepository.prototype.addServer = function (info, serverId) {\r\n        this.logger.debug(\"adding server \" + serverId);\r\n        var current = this.servers[serverId];\r\n        if (current) {\r\n            return current.id;\r\n        }\r\n        var wrapper = new InstanceWrapper(this.API, info);\r\n        var serverEntry = {\r\n            id: serverId,\r\n            methods: {},\r\n            instance: wrapper.unwrap(),\r\n            wrapper: wrapper,\r\n        };\r\n        this.servers[serverId] = serverEntry;\r\n        this.callbacks.execute(\"onServerAdded\", serverEntry.instance);\r\n        return serverId;\r\n    };\r\n    ClientRepository.prototype.removeServerById = function (id, reason) {\r\n        var _this = this;\r\n        var server = this.servers[id];\r\n        if (!server) {\r\n            this.logger.warn(\"not aware of server \" + id + \", my state \" + JSON.stringify(Object.keys(this.servers)));\r\n            return;\r\n        }\r\n        else {\r\n            this.logger.debug(\"removing server \" + id);\r\n        }\r\n        Object.keys(server.methods).forEach(function (methodId) {\r\n            _this.removeServerMethod(id, methodId);\r\n        });\r\n        delete this.servers[id];\r\n        this.callbacks.execute(\"onServerRemoved\", server.instance, reason);\r\n    };\r\n    ClientRepository.prototype.addServerMethod = function (serverId, method) {\r\n        var _a;\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        if (server.methods[method.id]) {\r\n            return;\r\n        }\r\n        var identifier = this.createMethodIdentifier(method);\r\n        var that = this;\r\n        var methodDefinition = {\r\n            identifier: identifier,\r\n            gatewayId: method.id,\r\n            name: method.name,\r\n            displayName: method.display_name,\r\n            description: method.description,\r\n            version: method.version,\r\n            objectTypes: method.object_types || [],\r\n            accepts: method.input_signature,\r\n            returns: method.result_signature,\r\n            supportsStreaming: typeof method.flags !== \"undefined\" ? method.flags.streaming : false,\r\n            flags: (_a = method.flags) !== null && _a !== void 0 ? _a : {},\r\n            getServers: function () {\r\n                return that.getServersByMethod(identifier);\r\n            }\r\n        };\r\n        methodDefinition.object_types = methodDefinition.objectTypes;\r\n        methodDefinition.display_name = methodDefinition.displayName;\r\n        methodDefinition.version = methodDefinition.version;\r\n        server.methods[method.id] = methodDefinition;\r\n        var clientMethodDefinition = hideMethodSystemFlags(methodDefinition);\r\n        if (!this.methodsCount[identifier]) {\r\n            this.methodsCount[identifier] = 0;\r\n            this.callbacks.execute(\"onMethodAdded\", clientMethodDefinition);\r\n        }\r\n        this.methodsCount[identifier] = this.methodsCount[identifier] + 1;\r\n        this.callbacks.execute(\"onServerMethodAdded\", server.instance, clientMethodDefinition);\r\n        return methodDefinition;\r\n    };\r\n    ClientRepository.prototype.removeServerMethod = function (serverId, methodId) {\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        var method = server.methods[methodId];\r\n        delete server.methods[methodId];\r\n        var clientMethodDefinition = hideMethodSystemFlags(method);\r\n        this.methodsCount[method.identifier] = this.methodsCount[method.identifier] - 1;\r\n        if (this.methodsCount[method.identifier] === 0) {\r\n            this.callbacks.execute(\"onMethodRemoved\", clientMethodDefinition);\r\n        }\r\n        this.callbacks.execute(\"onServerMethodRemoved\", server.instance, clientMethodDefinition);\r\n    };\r\n    ClientRepository.prototype.getMethods = function () {\r\n        return this.extractMethodsFromServers(Object.values(this.servers)).map(hideMethodSystemFlags);\r\n    };\r\n    ClientRepository.prototype.getServers = function () {\r\n        return Object.values(this.servers).map(this.hideServerMethodSystemFlags);\r\n    };\r\n    ClientRepository.prototype.onServerAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerAdded\", callback);\r\n        var serversWithMethodsToReplay = this.getServers().map(function (s) { return s.instance; });\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, serversWithMethodsToReplay, callback);\r\n    };\r\n    ClientRepository.prototype.onMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodAdded\", callback);\r\n        var methodsToReplay = this.getMethods();\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, methodsToReplay, callback);\r\n    };\r\n    ClientRepository.prototype.onServerMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodAdded\", callback);\r\n        var unsubCalled = false;\r\n        var servers = this.getServers();\r\n        setTimeout(function () {\r\n            servers.forEach(function (server) {\r\n                var methods = server.methods;\r\n                Object.keys(methods).forEach(function (methodId) {\r\n                    if (!unsubCalled) {\r\n                        callback(server.instance, methods[methodId]);\r\n                    }\r\n                });\r\n            });\r\n        }, 0);\r\n        return function () {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    };\r\n    ClientRepository.prototype.onMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.getServerById = function (id) {\r\n        return this.hideServerMethodSystemFlags(this.servers[id]);\r\n    };\r\n    ClientRepository.prototype.reset = function () {\r\n        var _a;\r\n        var _this = this;\r\n        Object.keys(this.servers).forEach(function (key) {\r\n            _this.removeServerById(key, \"reset\");\r\n        });\r\n        this.servers = (_a = {},\r\n            _a[this.myServer.id] = this.myServer,\r\n            _a);\r\n        this.methodsCount = {};\r\n    };\r\n    ClientRepository.prototype.createMethodIdentifier = function (methodInfo) {\r\n        var _a, _b;\r\n        var accepts = (_a = methodInfo.input_signature) !== null && _a !== void 0 ? _a : \"\";\r\n        var returns = (_b = methodInfo.result_signature) !== null && _b !== void 0 ? _b : \"\";\r\n        return (methodInfo.name + accepts + returns).toLowerCase();\r\n    };\r\n    ClientRepository.prototype.getServersByMethod = function (identifier) {\r\n        var allServers = [];\r\n        Object.values(this.servers).forEach(function (server) {\r\n            Object.values(server.methods).forEach(function (method) {\r\n                if (method.identifier === identifier) {\r\n                    allServers.push(server.instance);\r\n                }\r\n            });\r\n        });\r\n        return allServers;\r\n    };\r\n    ClientRepository.prototype.returnUnsubWithDelayedReplay = function (unsubscribeFunc, collectionToReplay, callback) {\r\n        var unsubCalled = false;\r\n        setTimeout(function () {\r\n            collectionToReplay.forEach(function (item) {\r\n                if (!unsubCalled) {\r\n                    callback(item);\r\n                }\r\n            });\r\n        }, 0);\r\n        return function () {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    };\r\n    ClientRepository.prototype.hideServerMethodSystemFlags = function (server) {\r\n        var clientMethods = {};\r\n        Object.entries(server.methods).forEach(function (_a) {\r\n            var name = _a[0], method = _a[1];\r\n            clientMethods[name] = hideMethodSystemFlags(method);\r\n        });\r\n        return __assign(__assign({}, server), { methods: clientMethods });\r\n    };\r\n    ClientRepository.prototype.extractMethodsFromServers = function (servers) {\r\n        var methods = Object.values(servers).reduce(function (clientMethods, server) {\r\n            return __spreadArrays(clientMethods, Object.values(server.methods));\r\n        }, []);\r\n        return methods;\r\n    };\r\n    return ClientRepository;\r\n}());\n\nvar ServerRepository = (function () {\r\n    function ServerRepository() {\r\n        this.nextId = 0;\r\n        this.methods = [];\r\n    }\r\n    ServerRepository.prototype.add = function (method) {\r\n        method.repoId = String(this.nextId);\r\n        this.nextId += 1;\r\n        this.methods.push(method);\r\n        return method;\r\n    };\r\n    ServerRepository.prototype.remove = function (repoId) {\r\n        if (typeof repoId !== \"string\") {\r\n            return new TypeError(\"Expecting a string\");\r\n        }\r\n        this.methods = this.methods.filter(function (m) {\r\n            return m.repoId !== repoId;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getById = function (id) {\r\n        if (typeof id !== \"string\") {\r\n            return undefined;\r\n        }\r\n        return this.methods.find(function (m) {\r\n            return m.repoId === id;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getList = function () {\r\n        return this.methods.map(function (m) { return m; });\r\n    };\r\n    ServerRepository.prototype.length = function () {\r\n        return this.methods.length;\r\n    };\r\n    ServerRepository.prototype.reset = function () {\r\n        this.methods = [];\r\n    };\r\n    return ServerRepository;\r\n}());\n\nvar SUBSCRIPTION_REQUEST = \"onSubscriptionRequest\";\r\nvar SUBSCRIPTION_ADDED = \"onSubscriptionAdded\";\r\nvar SUBSCRIPTION_REMOVED = \"onSubscriptionRemoved\";\r\nvar ServerStreaming$1 = (function () {\r\n    function ServerStreaming(session, repository, serverRepository) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.serverRepository = serverRepository;\r\n        this.ERR_URI_SUBSCRIPTION_FAILED = \"com.tick42.agm.errors.subscription.failure\";\r\n        this.callbacks = lib();\r\n        this.nextStreamId = 0;\r\n        session.on(\"add-interest\", function (msg) {\r\n            _this.handleAddInterest(msg);\r\n        });\r\n        session.on(\"remove-interest\", function (msg) {\r\n            _this.handleRemoveInterest(msg);\r\n        });\r\n    }\r\n    ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {\r\n        if (typeof branch !== \"string\") {\r\n            branch = \"\";\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            throw new TypeError(\"The streaming method is missing its subscriptions.\");\r\n        }\r\n        if (!Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            throw new TypeError(\"The streaming method is missing its branches.\");\r\n        }\r\n        var streamId = this.getStreamId(streamingMethod, branch);\r\n        var key = requestContext.msg.subscription_id;\r\n        var subscription = {\r\n            id: key,\r\n            arguments: requestContext.arguments,\r\n            instance: requestContext.instance,\r\n            branchKey: branch,\r\n            streamId: streamId,\r\n            subscribeMsg: requestContext.msg,\r\n        };\r\n        streamingMethod.protocolState.subscriptionsMap[key] = subscription;\r\n        this.session.sendFireAndForget({\r\n            type: \"accepted\",\r\n            subscription_id: key,\r\n            stream_id: streamId,\r\n        });\r\n        this.callbacks.execute(SUBSCRIPTION_ADDED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {\r\n        if (typeof reason !== \"string\") {\r\n            reason = \"\";\r\n        }\r\n        this.sendSubscriptionFailed(\"Subscription rejected by user. \" + reason, requestContext.msg.subscription_id);\r\n    };\r\n    ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        if (typeof branches === \"string\") {\r\n            branches = [branches];\r\n        }\r\n        else if (!Array.isArray(branches) || branches.length <= 0) {\r\n            branches = [];\r\n        }\r\n        var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap\r\n            .filter(function (br) {\r\n            if (!branches || branches.length === 0) {\r\n                return true;\r\n            }\r\n            return branches.indexOf(br.key) >= 0;\r\n        }).map(function (br) {\r\n            return br.streamId;\r\n        });\r\n        streamIdList.forEach(function (streamId) {\r\n            var publishMessage = {\r\n                type: \"publish\",\r\n                stream_id: streamId,\r\n                data: data,\r\n            };\r\n            _this.session.sendFireAndForget(publishMessage);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        var postMessage = {\r\n            type: \"post\",\r\n            subscription_id: subscription.id,\r\n            data: data,\r\n        };\r\n        this.session.sendFireAndForget(postMessage);\r\n    };\r\n    ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {\r\n        if (streamingMethod.protocolState.subscriptionsMap) {\r\n            delete streamingMethod.protocolState.subscriptionsMap[subscription.id];\r\n        }\r\n        var dropSubscriptionMessage = {\r\n            type: \"drop-subscription\",\r\n            subscription_id: subscription.id,\r\n            reason: \"Server dropping a single subscription\",\r\n        };\r\n        this.session.sendFireAndForget(dropSubscriptionMessage);\r\n        var subscriber = subscription.instance;\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.closeMultipleSubscriptions = function (streamingMethod, branchKey) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            return;\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return;\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var subscriptionsToClose = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey === \"string\") {\r\n            subscriptionsToClose = subscriptionsToClose.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        subscriptionsToClose.forEach(function (subscription) {\r\n            delete subscriptionsMap[subscription.id];\r\n            var drop = {\r\n                type: \"drop-subscription\",\r\n                subscription_id: subscription.id,\r\n                reason: \"Server dropping all subscriptions on stream_id: \" + subscription.streamId,\r\n            };\r\n            _this.session.sendFireAndForget(drop);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        var subscriptions = [];\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return [];\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var allSubscriptions = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey !== \"string\") {\r\n            subscriptions = allSubscriptions;\r\n        }\r\n        else {\r\n            subscriptions = allSubscriptions.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        return subscriptions;\r\n    };\r\n    ServerStreaming.prototype.getBranchList = function (streamingMethod) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return [];\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var allSubscriptions = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        var result = [];\r\n        allSubscriptions.forEach(function (sub) {\r\n            var branch = \"\";\r\n            if (typeof sub === \"object\" && typeof sub.branchKey === \"string\") {\r\n                branch = sub.branchKey;\r\n            }\r\n            if (result.indexOf(branch) === -1) {\r\n                result.push(branch);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    ServerStreaming.prototype.onSubAdded = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_ADDED, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRequest = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REQUEST, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRemoved = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REMOVED, callback);\r\n    };\r\n    ServerStreaming.prototype.handleRemoveInterest = function (msg) {\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (typeof msg.subscription_id !== \"string\" ||\r\n            typeof streamingMethod !== \"object\") {\r\n            return;\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return;\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap[msg.subscription_id] !== \"object\") {\r\n            return;\r\n        }\r\n        var subscription = streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        delete streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.onSubscriptionLifetimeEvent = function (eventName, handlerFunc) {\r\n        this.callbacks.add(eventName, handlerFunc);\r\n    };\r\n    ServerStreaming.prototype.getNextStreamId = function () {\r\n        return this.nextStreamId++ + \"\";\r\n    };\r\n    ServerStreaming.prototype.handleAddInterest = function (msg) {\r\n        var caller = this.repository.getServerById(msg.caller_id);\r\n        var instance = caller.instance;\r\n        var requestContext = {\r\n            msg: msg,\r\n            arguments: msg.arguments_kv || {},\r\n            instance: instance,\r\n        };\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (streamingMethod === undefined) {\r\n            var errorMsg = \"No method with id \" + msg.method_id + \" on this server.\";\r\n            this.sendSubscriptionFailed(errorMsg, msg.subscription_id);\r\n            return;\r\n        }\r\n        if (streamingMethod.protocolState.subscriptionsMap &&\r\n            streamingMethod.protocolState.subscriptionsMap[msg.subscription_id]) {\r\n            this.sendSubscriptionFailed(\"A subscription with id \" + msg.subscription_id + \" already exists.\", msg.subscription_id);\r\n            return;\r\n        }\r\n        this.callbacks.execute(SUBSCRIPTION_REQUEST, requestContext, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.sendSubscriptionFailed = function (reason, subscriptionId) {\r\n        var errorMessage = {\r\n            type: \"error\",\r\n            reason_uri: this.ERR_URI_SUBSCRIPTION_FAILED,\r\n            reason: reason,\r\n            request_id: subscriptionId,\r\n        };\r\n        this.session.sendFireAndForget(errorMessage);\r\n    };\r\n    ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {\r\n        if (typeof branchKey !== \"string\") {\r\n            branchKey = \"\";\r\n        }\r\n        if (!streamingMethod.protocolState.branchKeyToStreamIdMap) {\r\n            throw new Error(\"streaming \" + streamingMethod.definition.name + \" method without protocol state\");\r\n        }\r\n        var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {\r\n            return branch.key === branchKey;\r\n        })[0];\r\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\r\n        if (typeof streamId !== \"string\" || streamId === \"\") {\r\n            streamId = this.getNextStreamId();\r\n            streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\r\n        }\r\n        return streamId;\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar ServerProtocol = (function () {\r\n    function ServerProtocol(session, clientRepository, serverRepository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.clientRepository = clientRepository;\r\n        this.serverRepository = serverRepository;\r\n        this.logger = logger;\r\n        this.callbacks = lib();\r\n        this.streaming = new ServerStreaming$1(session, clientRepository, serverRepository);\r\n        this.session.on(\"invoke\", function (msg) { return _this.handleInvokeMessage(msg); });\r\n    }\r\n    ServerProtocol.prototype.createStream = function (repoMethod) {\r\n        repoMethod.protocolState.subscriptionsMap = {};\r\n        repoMethod.protocolState.branchKeyToStreamIdMap = [];\r\n        return this.register(repoMethod, true);\r\n    };\r\n    ServerProtocol.prototype.register = function (repoMethod, isStreaming) {\r\n        var _this = this;\r\n        var _a;\r\n        var methodDef = repoMethod.definition;\r\n        var flags = Object.assign({}, { metadata: (_a = methodDef.flags) !== null && _a !== void 0 ? _a : {} }, { streaming: isStreaming || false });\r\n        var registerMsg = {\r\n            type: \"register\",\r\n            methods: [{\r\n                    id: repoMethod.repoId,\r\n                    name: methodDef.name,\r\n                    display_name: methodDef.displayName,\r\n                    description: methodDef.description,\r\n                    version: methodDef.version,\r\n                    flags: flags,\r\n                    object_types: methodDef.objectTypes || methodDef.object_types,\r\n                    input_signature: methodDef.accepts,\r\n                    result_signature: methodDef.returns,\r\n                    restrictions: undefined,\r\n                }],\r\n        };\r\n        return this.session.send(registerMsg, { methodId: repoMethod.repoId })\r\n            .then(function () {\r\n            _this.logger.debug(\"registered method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId);\r\n        })\r\n            .catch(function (msg) {\r\n            _this.logger.warn(\"failed to register method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId + \" - \" + JSON.stringify(msg));\r\n            throw msg;\r\n        });\r\n    };\r\n    ServerProtocol.prototype.onInvoked = function (callback) {\r\n        this.callbacks.add(\"onInvoked\", callback);\r\n    };\r\n    ServerProtocol.prototype.methodInvocationResult = function (method, invocationId, err, result) {\r\n        var msg;\r\n        if (err || err === \"\") {\r\n            msg = {\r\n                type: \"error\",\r\n                request_id: invocationId,\r\n                reason_uri: \"agm.errors.client_error\",\r\n                reason: err,\r\n                context: result,\r\n                peer_id: undefined,\r\n            };\r\n        }\r\n        else {\r\n            msg = {\r\n                type: \"yield\",\r\n                invocation_id: invocationId,\r\n                peer_id: this.session.peerId,\r\n                result: result,\r\n                request_id: undefined,\r\n            };\r\n        }\r\n        this.session.sendFireAndForget(msg);\r\n    };\r\n    ServerProtocol.prototype.unregister = function (method) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        msg = {\r\n                            type: \"unregister\",\r\n                            methods: [method.repoId],\r\n                        };\r\n                        return [4, this.session.send(msg)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerProtocol.prototype.getBranchList = function (method) {\r\n        return this.streaming.getBranchList(method);\r\n    };\r\n    ServerProtocol.prototype.getSubscriptionList = function (method, branchKey) {\r\n        return this.streaming.getSubscriptionList(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.closeAllSubscriptions = function (method, branchKey) {\r\n        this.streaming.closeMultipleSubscriptions(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.pushData = function (method, data, branches) {\r\n        this.streaming.pushData(method, data, branches);\r\n    };\r\n    ServerProtocol.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        this.streaming.pushDataToSingle(method, subscription, data);\r\n    };\r\n    ServerProtocol.prototype.closeSingleSubscription = function (method, subscription) {\r\n        this.streaming.closeSingleSubscription(method, subscription);\r\n    };\r\n    ServerProtocol.prototype.acceptRequestOnBranch = function (requestContext, method, branch) {\r\n        this.streaming.acceptRequestOnBranch(requestContext, method, branch);\r\n    };\r\n    ServerProtocol.prototype.rejectRequest = function (requestContext, method, reason) {\r\n        this.streaming.rejectRequest(requestContext, method, reason);\r\n    };\r\n    ServerProtocol.prototype.onSubRequest = function (callback) {\r\n        this.streaming.onSubRequest(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubAdded = function (callback) {\r\n        this.streaming.onSubAdded(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubRemoved = function (callback) {\r\n        this.streaming.onSubRemoved(callback);\r\n    };\r\n    ServerProtocol.prototype.handleInvokeMessage = function (msg) {\r\n        var invocationId = msg.invocation_id;\r\n        var callerId = msg.caller_id;\r\n        var methodId = msg.method_id;\r\n        var args = msg.arguments_kv;\r\n        var methodList = this.serverRepository.getList();\r\n        var method = methodList.filter(function (m) {\r\n            return m.repoId === methodId;\r\n        })[0];\r\n        if (method === undefined) {\r\n            return;\r\n        }\r\n        var client = this.clientRepository.getServerById(callerId).instance;\r\n        var invocationArgs = { args: args, instance: client };\r\n        this.callbacks.execute(\"onInvoked\", method, invocationId, invocationArgs);\r\n    };\r\n    return ServerProtocol;\r\n}());\n\nvar UserSubscription = (function () {\r\n    function UserSubscription(repository, subscriptionData) {\r\n        this.repository = repository;\r\n        this.subscriptionData = subscriptionData;\r\n    }\r\n    Object.defineProperty(UserSubscription.prototype, \"requestArguments\", {\r\n        get: function () {\r\n            return this.subscriptionData.params.arguments || {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"servers\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this.subscriptionData.trackedServers\r\n                .filter(function (pair) { return pair.subscriptionId; })\r\n                .map(function (pair) { return _this.repository.getServerById(pair.serverId).instance; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"serverInstance\", {\r\n        get: function () {\r\n            return this.servers[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"stream\", {\r\n        get: function () {\r\n            return this.subscriptionData.method;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    UserSubscription.prototype.onData = function (dataCallback) {\r\n        if (typeof dataCallback !== \"function\") {\r\n            throw new TypeError(\"The data callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onData.push(dataCallback);\r\n        if (this.subscriptionData.handlers.onData.length === 1 && this.subscriptionData.queued.data.length > 0) {\r\n            this.subscriptionData.queued.data.forEach(function (dataItem) {\r\n                dataCallback(dataItem);\r\n            });\r\n        }\r\n    };\r\n    UserSubscription.prototype.onClosed = function (closedCallback) {\r\n        if (typeof closedCallback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onClosed.push(closedCallback);\r\n    };\r\n    UserSubscription.prototype.onFailed = function (callback) {\r\n    };\r\n    UserSubscription.prototype.onConnected = function (callback) {\r\n        if (typeof callback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onConnected.push(callback);\r\n    };\r\n    UserSubscription.prototype.close = function () {\r\n        this.subscriptionData.close();\r\n    };\r\n    UserSubscription.prototype.setNewSubscription = function (newSub) {\r\n        this.subscriptionData = newSub;\r\n    };\r\n    return UserSubscription;\r\n}());\n\nvar TimedCache = (function () {\r\n    function TimedCache(config) {\r\n        this.config = config;\r\n        this.cache = [];\r\n        this.timeoutIds = [];\r\n    }\r\n    TimedCache.prototype.add = function (element) {\r\n        var _this = this;\r\n        var id = shortid();\r\n        this.cache.push({ id: id, element: element });\r\n        var timeoutId = setTimeout(function () {\r\n            var elementIdx = _this.cache.findIndex(function (entry) { return entry.id === id; });\r\n            if (elementIdx < 0) {\r\n                return;\r\n            }\r\n            _this.cache.splice(elementIdx, 1);\r\n        }, this.config.ELEMENT_TTL_MS);\r\n        this.timeoutIds.push(timeoutId);\r\n    };\r\n    TimedCache.prototype.flush = function () {\r\n        var elements = this.cache.map(function (entry) { return entry.element; });\r\n        this.timeoutIds.forEach(function (id) { return clearInterval(id); });\r\n        this.cache = [];\r\n        this.timeoutIds = [];\r\n        return elements;\r\n    };\r\n    return TimedCache;\r\n}());\n\nvar STATUS_AWAITING_ACCEPT = \"awaitingAccept\";\r\nvar STATUS_SUBSCRIBED = \"subscribed\";\r\nvar ERR_MSG_SUB_FAILED = \"Subscription failed.\";\r\nvar ERR_MSG_SUB_REJECTED = \"Subscription rejected.\";\r\nvar ON_CLOSE_MSG_SERVER_INIT = \"ServerInitiated\";\r\nvar ON_CLOSE_MSG_CLIENT_INIT = \"ClientInitiated\";\r\nvar ClientStreaming = (function () {\r\n    function ClientStreaming(session, repository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        this.subscriptionsList = {};\r\n        this.timedCache = new TimedCache({ ELEMENT_TTL_MS: 10000 });\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        this.nextSubLocalKey = 0;\r\n        this.handleErrorSubscribing = function (errorResponse) {\r\n            var tag = errorResponse._tag;\r\n            var subLocalKey = tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                return server.serverId !== tag.serverId;\r\n            });\r\n            if (pendingSub.trackedServers.length <= 0) {\r\n                clearTimeout(pendingSub.timeoutId);\r\n                if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                    var reason = (typeof errorResponse.reason === \"string\" && errorResponse.reason !== \"\") ?\r\n                        ' Publisher said \"' + errorResponse.reason + '\".' :\r\n                        \" No reason given.\";\r\n                    var callArgs = typeof pendingSub.params.arguments === \"object\" ?\r\n                        JSON.stringify(pendingSub.params.arguments) :\r\n                        \"{}\";\r\n                    pendingSub.error({\r\n                        message: ERR_MSG_SUB_REJECTED + reason + \" Called with:\" + callArgs,\r\n                        called_with: pendingSub.params.arguments,\r\n                        method: pendingSub.method,\r\n                    });\r\n                }\r\n                else if (pendingSub.status === STATUS_SUBSCRIBED) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                }\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n        };\r\n        this.handleSubscribed = function (msg) {\r\n            var subLocalKey = msg._tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            var serverId = msg._tag.serverId;\r\n            var acceptingServer = pendingSub.trackedServers\r\n                .filter(function (server) {\r\n                return server.serverId === serverId;\r\n            })[0];\r\n            if (typeof acceptingServer !== \"object\") {\r\n                return;\r\n            }\r\n            acceptingServer.subscriptionId = msg.subscription_id;\r\n            _this.subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;\r\n            var isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT);\r\n            pendingSub.status = STATUS_SUBSCRIBED;\r\n            if (isFirstResponse) {\r\n                var reconnect = false;\r\n                var sub = pendingSub.subscription;\r\n                if (sub) {\r\n                    sub.setNewSubscription(pendingSub);\r\n                    pendingSub.success(sub);\r\n                    reconnect = true;\r\n                }\r\n                else {\r\n                    sub = new UserSubscription(_this.repository, pendingSub);\r\n                    pendingSub.subscription = sub;\r\n                    pendingSub.success(sub);\r\n                }\r\n                for (var _i = 0, _a = pendingSub.handlers.onConnected; _i < _a.length; _i++) {\r\n                    var handler = _a[_i];\r\n                    try {\r\n                        handler(sub.serverInstance, reconnect);\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.handleEventData = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var trackedServersFound = subscription.trackedServers.filter(function (server) {\r\n                return server.subscriptionId === msg.subscription_id;\r\n            });\r\n            if (trackedServersFound.length !== 1) {\r\n                return;\r\n            }\r\n            var isPrivateData = msg.oob;\r\n            var sendingServerId = trackedServersFound[0].serverId;\r\n            var receivedStreamData = function () {\r\n                return {\r\n                    data: msg.data,\r\n                    server: _this.repository.getServerById(sendingServerId).instance,\r\n                    requestArguments: subscription.params.arguments,\r\n                    message: undefined,\r\n                    private: isPrivateData,\r\n                };\r\n            };\r\n            var onDataHandlers = subscription.handlers.onData;\r\n            var queuedData = subscription.queued.data;\r\n            if (onDataHandlers.length > 0) {\r\n                onDataHandlers.forEach(function (callback) {\r\n                    if (typeof callback === \"function\") {\r\n                        callback(receivedStreamData());\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                queuedData.push(receivedStreamData());\r\n            }\r\n        };\r\n        this.handleSubscriptionCancelled = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var expectedNewLength = subscription.trackedServers.length - 1;\r\n            subscription.trackedServers = subscription.trackedServers.filter(function (server) {\r\n                if (server.subscriptionId === msg.subscription_id) {\r\n                    subscription.queued.closers.push(server.serverId);\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n            if (subscription.trackedServers.length !== expectedNewLength) {\r\n                return;\r\n            }\r\n            if (subscription.trackedServers.length <= 0) {\r\n                _this.timedCache.add(subscription);\r\n                clearTimeout(subscription.timeoutId);\r\n                _this.callOnClosedHandlers(subscription);\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            delete _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n        };\r\n        session.on(\"subscribed\", this.handleSubscribed);\r\n        session.on(\"event\", this.handleEventData);\r\n        session.on(\"subscription-cancelled\", this.handleSubscriptionCancelled);\r\n    }\r\n    ClientStreaming.prototype.subscribe = function (streamingMethod, params, targetServers, success, error, existingSub) {\r\n        var _this = this;\r\n        if (targetServers.length === 0) {\r\n            error({\r\n                method: streamingMethod,\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED + \" No available servers matched the target params.\",\r\n            });\r\n            return;\r\n        }\r\n        var subLocalKey = this.getNextSubscriptionLocalKey();\r\n        var pendingSub = this.registerSubscription(subLocalKey, streamingMethod, params, success, error, params.methodResponseTimeout || 10000, existingSub);\r\n        if (typeof pendingSub !== \"object\") {\r\n            error({\r\n                method: streamingMethod,\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED + \" Unable to register the user callbacks.\",\r\n            });\r\n            return;\r\n        }\r\n        targetServers.forEach(function (target) {\r\n            var serverId = target.server.id;\r\n            var method = target.methods.find(function (m) { return m.name === streamingMethod.name; });\r\n            if (!method) {\r\n                _this.logger.error(\"can not find method \" + streamingMethod.name + \" for target \" + target.server.id);\r\n                return;\r\n            }\r\n            pendingSub.trackedServers.push({\r\n                serverId: serverId,\r\n                subscriptionId: undefined,\r\n            });\r\n            var msg = {\r\n                type: \"subscribe\",\r\n                server_id: serverId,\r\n                method_id: method.gatewayId,\r\n                arguments_kv: params.arguments,\r\n            };\r\n            _this.session.send(msg, { serverId: serverId, subLocalKey: subLocalKey })\r\n                .then(function (m) { return _this.handleSubscribed(m); })\r\n                .catch(function (err) { return _this.handleErrorSubscribing(err); });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.drainSubscriptions = function () {\r\n        var existing = Object.values(this.subscriptionsList);\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        return existing;\r\n    };\r\n    ClientStreaming.prototype.drainSubscriptionsCache = function () {\r\n        return this.timedCache.flush();\r\n    };\r\n    ClientStreaming.prototype.getNextSubscriptionLocalKey = function () {\r\n        var current = this.nextSubLocalKey;\r\n        this.nextSubLocalKey += 1;\r\n        return current;\r\n    };\r\n    ClientStreaming.prototype.registerSubscription = function (subLocalKey, method, params, success, error, timeout, existingSub) {\r\n        var _this = this;\r\n        var subsInfo = {\r\n            localKey: subLocalKey,\r\n            status: STATUS_AWAITING_ACCEPT,\r\n            method: method,\r\n            params: params,\r\n            success: success,\r\n            error: error,\r\n            trackedServers: [],\r\n            handlers: {\r\n                onData: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onData) || [],\r\n                onClosed: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onClosed) || [],\r\n                onConnected: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onConnected) || [],\r\n            },\r\n            queued: {\r\n                data: [],\r\n                closers: [],\r\n            },\r\n            timeoutId: undefined,\r\n            close: function () { return _this.closeSubscription(subLocalKey); },\r\n            subscription: existingSub === null || existingSub === void 0 ? void 0 : existingSub.subscription\r\n        };\r\n        if (!existingSub) {\r\n            if (params.onData) {\r\n                subsInfo.handlers.onData.push(params.onData);\r\n            }\r\n            if (params.onClosed) {\r\n                subsInfo.handlers.onClosed.push(params.onClosed);\r\n            }\r\n            if (params.onConnected) {\r\n                subsInfo.handlers.onConnected.push(params.onConnected);\r\n            }\r\n        }\r\n        this.subscriptionsList[subLocalKey] = subsInfo;\r\n        subsInfo.timeoutId = setTimeout(function () {\r\n            if (_this.subscriptionsList[subLocalKey] === undefined) {\r\n                return;\r\n            }\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                error({\r\n                    method: method,\r\n                    called_with: params.arguments,\r\n                    message: ERR_MSG_SUB_FAILED + \" Subscription attempt timed out after \" + timeout + \" ms.\",\r\n                });\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            else if (pendingSub.status === STATUS_SUBSCRIBED && pendingSub.trackedServers.length > 0) {\r\n                pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                    return (typeof server.subscriptionId !== \"undefined\");\r\n                });\r\n                delete pendingSub.timeoutId;\r\n                if (pendingSub.trackedServers.length <= 0) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                    delete _this.subscriptionsList[subLocalKey];\r\n                }\r\n            }\r\n        }, timeout);\r\n        return subsInfo;\r\n    };\r\n    ClientStreaming.prototype.callOnClosedHandlers = function (subscription, reason) {\r\n        var closersCount = subscription.queued.closers.length;\r\n        var closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\r\n        var closingServer;\r\n        if (closingServerId !== undefined && typeof closingServerId === \"string\") {\r\n            closingServer = this.repository.getServerById(closingServerId).instance;\r\n        }\r\n        subscription.handlers.onClosed.forEach(function (callback) {\r\n            if (typeof callback !== \"function\") {\r\n                return;\r\n            }\r\n            callback({\r\n                message: reason || ON_CLOSE_MSG_SERVER_INIT,\r\n                requestArguments: subscription.params.arguments || {},\r\n                server: closingServer,\r\n                stream: subscription.method,\r\n            });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.closeSubscription = function (subLocalKey) {\r\n        var _this = this;\r\n        var subscription = this.subscriptionsList[subLocalKey];\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n        subscription.trackedServers.forEach(function (server) {\r\n            if (typeof server.subscriptionId === \"undefined\") {\r\n                return;\r\n            }\r\n            subscription.queued.closers.push(server.serverId);\r\n            _this.session.sendFireAndForget({\r\n                type: \"unsubscribe\",\r\n                subscription_id: server.subscriptionId,\r\n                reason_uri: \"\",\r\n                reason: ON_CLOSE_MSG_CLIENT_INIT,\r\n            });\r\n            delete _this.subscriptionIdToLocalKeyMap[server.subscriptionId];\r\n        });\r\n        subscription.trackedServers = [];\r\n        this.callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT);\r\n        delete this.subscriptionsList[subLocalKey];\r\n    };\r\n    return ClientStreaming;\r\n}());\n\nvar ClientProtocol = (function () {\r\n    function ClientProtocol(session, repository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        session.on(\"peer-added\", function (msg) { return _this.handlePeerAdded(msg); });\r\n        session.on(\"peer-removed\", function (msg) { return _this.handlePeerRemoved(msg); });\r\n        session.on(\"methods-added\", function (msg) { return _this.handleMethodsAddedMessage(msg); });\r\n        session.on(\"methods-removed\", function (msg) { return _this.handleMethodsRemovedMessage(msg); });\r\n        this.streaming = new ClientStreaming(session, repository, logger);\r\n    }\r\n    ClientProtocol.prototype.subscribe = function (stream, options, targetServers, success, error, existingSub) {\r\n        this.streaming.subscribe(stream, options, targetServers, success, error, existingSub);\r\n    };\r\n    ClientProtocol.prototype.invoke = function (id, method, args, target) {\r\n        var _this = this;\r\n        var serverId = target.id;\r\n        var methodId = method.gatewayId;\r\n        var msg = {\r\n            type: \"call\",\r\n            server_id: serverId,\r\n            method_id: methodId,\r\n            arguments_kv: args,\r\n        };\r\n        return this.session.send(msg, { invocationId: id, serverId: serverId })\r\n            .then(function (m) { return _this.handleResultMessage(m); })\r\n            .catch(function (err) { return _this.handleInvocationError(err); });\r\n    };\r\n    ClientProtocol.prototype.drainSubscriptions = function () {\r\n        return this.streaming.drainSubscriptions();\r\n    };\r\n    ClientProtocol.prototype.drainSubscriptionsCache = function () {\r\n        return this.streaming.drainSubscriptionsCache();\r\n    };\r\n    ClientProtocol.prototype.handlePeerAdded = function (msg) {\r\n        var newPeerId = msg.new_peer_id;\r\n        var remoteId = msg.identity;\r\n        var isLocal = msg.meta ? msg.meta.local : true;\r\n        var pid = Number(remoteId.process);\r\n        var serverInfo = {\r\n            machine: remoteId.machine,\r\n            pid: isNaN(pid) ? remoteId.process : pid,\r\n            instance: remoteId.instance,\r\n            application: remoteId.application,\r\n            applicationName: remoteId.applicationName,\r\n            environment: remoteId.environment,\r\n            region: remoteId.region,\r\n            user: remoteId.user,\r\n            windowId: remoteId.windowId,\r\n            peerId: newPeerId,\r\n            api: remoteId.api,\r\n            isLocal: isLocal\r\n        };\r\n        this.repository.addServer(serverInfo, newPeerId);\r\n    };\r\n    ClientProtocol.prototype.handlePeerRemoved = function (msg) {\r\n        var removedPeerId = msg.removed_id;\r\n        var reason = msg.reason;\r\n        this.repository.removeServerById(removedPeerId, reason);\r\n    };\r\n    ClientProtocol.prototype.handleMethodsAddedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methods = msg.methods;\r\n        methods.forEach(function (method) {\r\n            _this.repository.addServerMethod(serverId, method);\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleMethodsRemovedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methodIdList = msg.methods;\r\n        var server = this.repository.getServerById(serverId);\r\n        var serverMethodKeys = Object.keys(server.methods);\r\n        serverMethodKeys.forEach(function (methodKey) {\r\n            var method = server.methods[methodKey];\r\n            if (methodIdList.indexOf(method.gatewayId) > -1) {\r\n                _this.repository.removeServerMethod(serverId, methodKey);\r\n            }\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleResultMessage = function (msg) {\r\n        var invocationId = msg._tag.invocationId;\r\n        var result = msg.result;\r\n        var serverId = msg._tag.serverId;\r\n        var server = this.repository.getServerById(serverId);\r\n        return {\r\n            invocationId: invocationId,\r\n            result: result,\r\n            instance: server.instance,\r\n            status: InvokeStatus.Success,\r\n            message: \"\"\r\n        };\r\n    };\r\n    ClientProtocol.prototype.handleInvocationError = function (msg) {\r\n        this.logger.debug(\"handle invocation error \" + JSON.stringify(msg));\r\n        if (\"_tag\" in msg) {\r\n            var invocationId = msg._tag.invocationId;\r\n            var serverId = msg._tag.serverId;\r\n            var server = this.repository.getServerById(serverId);\r\n            var message = msg.reason;\r\n            var context_1 = msg.context;\r\n            return {\r\n                invocationId: invocationId,\r\n                result: context_1,\r\n                instance: server.instance,\r\n                status: InvokeStatus.Error,\r\n                message: message\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                invocationId: \"\",\r\n                message: msg.message,\r\n                status: InvokeStatus.Error,\r\n                error: msg\r\n            };\r\n        }\r\n    };\r\n    return ClientProtocol;\r\n}());\n\nfunction gW3ProtocolFactory (instance, connection, clientRepository, serverRepository, libConfig, interop) {\r\n    var logger = libConfig.logger.subLogger(\"gw3-protocol\");\r\n    var resolveReadyPromise;\r\n    var readyPromise = new Promise(function (resolve) {\r\n        resolveReadyPromise = resolve;\r\n    });\r\n    var session = connection.domain(\"agm\", [\"subscribed\"]);\r\n    var server = new ServerProtocol(session, clientRepository, serverRepository, logger.subLogger(\"server\"));\r\n    var client = new ClientProtocol(session, clientRepository, logger.subLogger(\"client\"));\r\n    function handleReconnect() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var reconnectionPromises, existingSubscriptions, _loop_1, _i, existingSubscriptions_1, sub, registeredMethods, _loop_2, _a, registeredMethods_1, method;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        logger.info(\"reconnected - will replay registered methods and subscriptions\");\r\n                        client.drainSubscriptionsCache().forEach(function (sub) {\r\n                            var methodInfo = sub.method;\r\n                            var params = Object.assign({}, sub.params);\r\n                            logger.info(\"trying to soft-re-subscribe to method \" + methodInfo.name + \", with params: \" + JSON.stringify(params));\r\n                            interop.client.subscribe(methodInfo, params, undefined, undefined, sub).then(function () { return logger.info(\"soft-subscribing to method \" + methodInfo.name + \" DONE\"); }).catch(function (error) { return logger.warn(\"subscribing to method \" + methodInfo.name + \" failed: \" + JSON.stringify(error) + \"}\"); });\r\n                        });\r\n                        reconnectionPromises = [];\r\n                        existingSubscriptions = client.drainSubscriptions();\r\n                        _loop_1 = function (sub) {\r\n                            var methodInfo = sub.method;\r\n                            var params = Object.assign({}, sub.params);\r\n                            logger.info(\"trying to re-subscribe to method \" + methodInfo.name + \", with params: \" + JSON.stringify(params));\r\n                            reconnectionPromises.push(interop.client.subscribe(methodInfo, params, undefined, undefined, sub).then(function () { return logger.info(\"subscribing to method \" + methodInfo.name + \" DONE\"); }));\r\n                        };\r\n                        for (_i = 0, existingSubscriptions_1 = existingSubscriptions; _i < existingSubscriptions_1.length; _i++) {\r\n                            sub = existingSubscriptions_1[_i];\r\n                            _loop_1(sub);\r\n                        }\r\n                        registeredMethods = serverRepository.getList();\r\n                        serverRepository.reset();\r\n                        _loop_2 = function (method) {\r\n                            var def = method.definition;\r\n                            logger.info(\"re-publishing method \" + def.name);\r\n                            if (method.stream) {\r\n                                reconnectionPromises.push(interop.server.createStream(def, method.streamCallbacks, undefined, undefined, method.stream).then(function () { return logger.info(\"subscribing to method \" + def.name + \" DONE\"); }));\r\n                            }\r\n                            else if (method.theFunction && method.theFunction.userCallback) {\r\n                                reconnectionPromises.push(interop.register(def, method.theFunction.userCallback).then(function () { return logger.info(\"subscribing to method \" + def.name + \" DONE\"); }));\r\n                            }\r\n                            else if (method.theFunction && method.theFunction.userCallbackAsync) {\r\n                                reconnectionPromises.push(interop.registerAsync(def, method.theFunction.userCallbackAsync).then(function () { return logger.info(\"subscribing to method \" + def.name + \" DONE\"); }));\r\n                            }\r\n                            logger.info(\"re-publishing method \" + def.name + \" DONE\");\r\n                        };\r\n                        for (_a = 0, registeredMethods_1 = registeredMethods; _a < registeredMethods_1.length; _a++) {\r\n                            method = registeredMethods_1[_a];\r\n                            _loop_2(method);\r\n                        }\r\n                        return [4, Promise.all(reconnectionPromises)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        logger.info(\"Interop is re-announced\");\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    function handleInitialJoin() {\r\n        if (resolveReadyPromise) {\r\n            resolveReadyPromise({\r\n                client: client,\r\n                server: server,\r\n            });\r\n            resolveReadyPromise = undefined;\r\n        }\r\n    }\r\n    session.onJoined(function (reconnect) {\r\n        clientRepository.addServer(instance, connection.peerId);\r\n        if (reconnect) {\r\n            handleReconnect().then(function () { return connection.setLibReAnnounced({ name: \"interop\" }); }).catch(function (error) { return logger.warn(\"Error while re-announcing interop: \" + JSON.stringify(error)); });\r\n        }\r\n        else {\r\n            handleInitialJoin();\r\n        }\r\n    });\r\n    session.onLeft(function () {\r\n        clientRepository.reset();\r\n    });\r\n    session.join();\r\n    return readyPromise;\r\n}\n\nvar Interop = (function () {\r\n    function Interop(configuration) {\r\n        var _this = this;\r\n        if (typeof configuration === \"undefined\") {\r\n            throw new Error(\"configuration is required\");\r\n        }\r\n        if (typeof configuration.connection === \"undefined\") {\r\n            throw new Error(\"configuration.connections is required\");\r\n        }\r\n        var connection = configuration.connection;\r\n        if (typeof configuration.methodResponseTimeout !== \"number\") {\r\n            configuration.methodResponseTimeout = 30 * 1000;\r\n        }\r\n        if (typeof configuration.waitTimeoutMs !== \"number\") {\r\n            configuration.waitTimeoutMs = 30 * 1000;\r\n        }\r\n        this.unwrappedInstance = new InstanceWrapper(this, undefined, connection);\r\n        this.instance = this.unwrappedInstance.unwrap();\r\n        this.clientRepository = new ClientRepository(configuration.logger.subLogger(\"cRep\"), this);\r\n        this.serverRepository = new ServerRepository();\r\n        var protocolPromise;\r\n        if (connection.protocolVersion === 3) {\r\n            protocolPromise = gW3ProtocolFactory(this.instance, connection, this.clientRepository, this.serverRepository, configuration, this);\r\n        }\r\n        else {\r\n            throw new Error(\"protocol \" + connection.protocolVersion + \" not supported\");\r\n        }\r\n        this.readyPromise = protocolPromise.then(function (protocol) {\r\n            _this.protocol = protocol;\r\n            _this.client = new Client(_this.protocol, _this.clientRepository, _this.instance, configuration);\r\n            _this.server = new Server(_this.protocol, _this.serverRepository);\r\n            return _this;\r\n        });\r\n    }\r\n    Interop.prototype.ready = function () {\r\n        return this.readyPromise;\r\n    };\r\n    Interop.prototype.serverRemoved = function (callback) {\r\n        return this.client.serverRemoved(callback);\r\n    };\r\n    Interop.prototype.serverAdded = function (callback) {\r\n        return this.client.serverAdded(callback);\r\n    };\r\n    Interop.prototype.serverMethodRemoved = function (callback) {\r\n        return this.client.serverMethodRemoved(callback);\r\n    };\r\n    Interop.prototype.serverMethodAdded = function (callback) {\r\n        return this.client.serverMethodAdded(callback);\r\n    };\r\n    Interop.prototype.methodRemoved = function (callback) {\r\n        return this.client.methodRemoved(callback);\r\n    };\r\n    Interop.prototype.methodAdded = function (callback) {\r\n        return this.client.methodAdded(callback);\r\n    };\r\n    Interop.prototype.methodsForInstance = function (instance) {\r\n        return this.client.methodsForInstance(instance);\r\n    };\r\n    Interop.prototype.methods = function (methodFilter) {\r\n        return this.client.methods(methodFilter);\r\n    };\r\n    Interop.prototype.servers = function (methodFilter) {\r\n        return this.client.servers(methodFilter);\r\n    };\r\n    Interop.prototype.subscribe = function (method, options, successCallback, errorCallback) {\r\n        return this.client.subscribe(method, options, successCallback, errorCallback);\r\n    };\r\n    Interop.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback) {\r\n        return this.server.createStream(streamDef, callbacks, successCallback, errorCallback);\r\n    };\r\n    Interop.prototype.unregister = function (methodFilter) {\r\n        return this.server.unregister(methodFilter);\r\n    };\r\n    Interop.prototype.registerAsync = function (methodDefinition, callback) {\r\n        return this.server.registerAsync(methodDefinition, callback);\r\n    };\r\n    Interop.prototype.register = function (methodDefinition, callback) {\r\n        return this.server.register(methodDefinition, callback);\r\n    };\r\n    Interop.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return this.client.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);\r\n    };\r\n    Interop.prototype.waitForMethod = function (name) {\r\n        var pw = new PromiseWrapper();\r\n        var unsubscribe = this.client.methodAdded(function (m) {\r\n            if (m.name === name) {\r\n                unsubscribe();\r\n                pw.resolve(m);\r\n            }\r\n        });\r\n        return pw.promise;\r\n    };\r\n    return Interop;\r\n}());\n\nvar successMessages = [\"subscribed\", \"success\"];\r\nvar MessageBus = (function () {\r\n    function MessageBus(connection, logger) {\r\n        var _this = this;\r\n        this.publish = function (topic, data, options) {\r\n            var _a = options || {}, routingKey = _a.routingKey, target = _a.target;\r\n            var args = _this.removeEmptyValues({\r\n                type: \"publish\",\r\n                topic: topic,\r\n                data: data,\r\n                peer_id: _this.peerId,\r\n                routing_key: routingKey,\r\n                target_identity: target\r\n            });\r\n            _this.session.send(args);\r\n        };\r\n        this.subscribe = function (topic, callback, options) {\r\n            return new Promise(function (resolve, reject) {\r\n                var _a = options || {}, routingKey = _a.routingKey, target = _a.target;\r\n                var args = _this.removeEmptyValues({\r\n                    type: \"subscribe\",\r\n                    topic: topic,\r\n                    peer_id: _this.peerId,\r\n                    routing_key: routingKey,\r\n                    source: target\r\n                });\r\n                _this.session.send(args)\r\n                    .then(function (response) {\r\n                    var subscription_id = response.subscription_id;\r\n                    _this.subscriptions.push({ subscription_id: subscription_id, topic: topic, callback: callback, source: target });\r\n                    resolve({\r\n                        unsubscribe: function () {\r\n                            _this.session.send({ type: \"unsubscribe\", subscription_id: subscription_id, peer_id: _this.peerId });\r\n                            _this.subscriptions = _this.subscriptions.filter(function (s) { return s.subscription_id !== subscription_id; });\r\n                            return Promise.resolve();\r\n                        }\r\n                    });\r\n                })\r\n                    .catch(function (error) { return reject(error); });\r\n            });\r\n        };\r\n        this.watchOnEvent = function () {\r\n            _this.session.on(\"event\", function (args) {\r\n                var data = args.data, subscription_id = args.subscription_id;\r\n                var source = args[\"publisher-identity\"];\r\n                var subscription = _this.subscriptions.find(function (s) { return s.subscription_id === subscription_id; });\r\n                if (subscription) {\r\n                    if (!subscription.source) {\r\n                        subscription.callback(data, subscription.topic, source);\r\n                    }\r\n                    else {\r\n                        if (_this.keysMatch(subscription.source, source)) {\r\n                            subscription.callback(data, subscription.topic, source);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        this.connection = connection;\r\n        this.logger = logger;\r\n        this.peerId = connection.peerId;\r\n        this.subscriptions = [];\r\n        this.session = connection.domain(\"bus\", successMessages);\r\n        this.readyPromise = this.session.join();\r\n        this.readyPromise.then(function () {\r\n            _this.watchOnEvent();\r\n        });\r\n    }\r\n    MessageBus.prototype.ready = function () {\r\n        return this.readyPromise;\r\n    };\r\n    MessageBus.prototype.removeEmptyValues = function (obj) {\r\n        var cleaned = {};\r\n        Object.keys(obj).forEach(function (key) {\r\n            if (obj[key] !== undefined && obj[key] !== null) {\r\n                cleaned[key] = obj[key];\r\n            }\r\n        });\r\n        return cleaned;\r\n    };\r\n    MessageBus.prototype.keysMatch = function (obj1, obj2) {\r\n        var keysObj1 = Object.keys(obj1);\r\n        var allMatch = true;\r\n        keysObj1.forEach(function (key) {\r\n            if (obj1[key] !== obj2[key]) {\r\n                allMatch = false;\r\n            }\r\n        });\r\n        return allMatch;\r\n    };\r\n    return MessageBus;\r\n}());\n\nvar GlueCore = function (userConfig, ext) {\r\n    var gdVersion = Utils.getGDMajorVersion();\r\n    var glue42gd;\r\n    var preloadPromise = Promise.resolve();\r\n    if (gdVersion) {\r\n        if (gdVersion < 3) {\r\n            throw new Error(\"GD v2 is not supported. Use v4 of the API to run in that context.\");\r\n        }\r\n        else if (gdVersion >= 3) {\r\n            glue42gd = window.glue42gd;\r\n            preloadPromise = window.gdPreloadPromise || preloadPromise;\r\n        }\r\n    }\r\n    var glueInitTimer = timer(\"glue\");\r\n    userConfig = userConfig || {};\r\n    ext = ext || {};\r\n    var internalConfig = prepareConfig(userConfig, ext, glue42gd);\r\n    var _connection;\r\n    var _interop;\r\n    var _logger;\r\n    var _metrics;\r\n    var _contexts;\r\n    var _bus;\r\n    var _allowTrace;\r\n    var libs = {};\r\n    function registerLib(name, inner, t) {\r\n        _allowTrace = _logger.canPublish(\"trace\");\r\n        if (_allowTrace) {\r\n            _logger.trace(\"registering \" + name + \" module\");\r\n        }\r\n        var done = function () {\r\n            inner.initTime = t.stop();\r\n            inner.initEndTime = t.endTime;\r\n            inner.marks = t.marks;\r\n            if (_allowTrace) {\r\n                _logger.trace(name + \" is ready - \" + (t.endTime - t.startTime));\r\n            }\r\n        };\r\n        inner.initStartTime = t.startTime;\r\n        if (inner.ready) {\r\n            inner.ready().then(function () {\r\n                done();\r\n            });\r\n        }\r\n        else {\r\n            done();\r\n        }\r\n        if (!Array.isArray(name)) {\r\n            name = [name];\r\n        }\r\n        name.forEach(function (n) {\r\n            libs[n] = inner;\r\n            GlueCore[n] = inner;\r\n        });\r\n    }\r\n    function setupConnection() {\r\n        var initTimer = timer(\"connection\");\r\n        _connection = new Connection(internalConfig.connection, _logger.subLogger(\"connection\"));\r\n        var authPromise = Promise.resolve(internalConfig.auth);\r\n        if (internalConfig.connection && !internalConfig.auth) {\r\n            if (glue42gd) {\r\n                authPromise = glue42gd.getGWToken()\r\n                    .then(function (token) {\r\n                    return {\r\n                        gatewayToken: token\r\n                    };\r\n                });\r\n            }\r\n            else if (typeof window !== \"undefined\" && (window === null || window === void 0 ? void 0 : window.glue42electron)) {\r\n                if (typeof window.glue42electron.gwToken === \"string\") {\r\n                    authPromise = Promise.resolve({\r\n                        gatewayToken: window.glue42electron.gwToken\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                authPromise = Promise.reject(\"You need to provide auth information\");\r\n            }\r\n        }\r\n        return authPromise\r\n            .then(function (authConfig) {\r\n            initTimer.mark(\"auth-promise-resolved\");\r\n            var authRequest;\r\n            if (Object.prototype.toString.call(authConfig) === \"[object Object]\") {\r\n                authRequest = authConfig;\r\n            }\r\n            else {\r\n                throw new Error(\"Invalid auth object - \" + JSON.stringify(authConfig));\r\n            }\r\n            return _connection.login(authRequest);\r\n        })\r\n            .then(function () {\r\n            registerLib(\"connection\", _connection, initTimer);\r\n            return internalConfig;\r\n        })\r\n            .catch(function (e) {\r\n            if (_connection) {\r\n                _connection.logout();\r\n            }\r\n            throw e;\r\n        });\r\n    }\r\n    function setupLogger() {\r\n        var _a;\r\n        var initTimer = timer(\"logger\");\r\n        _logger = new Logger(\"\" + ((_a = internalConfig.connection.identity) === null || _a === void 0 ? void 0 : _a.application), undefined, internalConfig.customLogger);\r\n        _logger.consoleLevel(internalConfig.logger.console);\r\n        _logger.publishLevel(internalConfig.logger.publish);\r\n        if (_logger.canPublish(\"debug\")) {\r\n            _logger.debug(\"initializing glue...\");\r\n        }\r\n        registerLib(\"logger\", _logger, initTimer);\r\n        return Promise.resolve(undefined);\r\n    }\r\n    function setupMetrics() {\r\n        var _a, _b, _c, _d, _e;\r\n        var initTimer = timer(\"metrics\");\r\n        var config = internalConfig.metrics;\r\n        var metricsPublishingEnabledFunc = glue42gd === null || glue42gd === void 0 ? void 0 : glue42gd.getMetricsPublishingEnabled;\r\n        var identity = internalConfig.connection.identity;\r\n        var canUpdateMetric = metricsPublishingEnabledFunc ? metricsPublishingEnabledFunc : function () { return true; };\r\n        var disableAutoAppSystem = (_a = (typeof config !== \"boolean\" && config.disableAutoAppSystem)) !== null && _a !== void 0 ? _a : false;\r\n        _metrics = metrics({\r\n            connection: config ? _connection : undefined,\r\n            logger: _logger.subLogger(\"metrics\"),\r\n            canUpdateMetric: canUpdateMetric,\r\n            system: \"Glue42\",\r\n            service: (_c = (_b = identity === null || identity === void 0 ? void 0 : identity.service) !== null && _b !== void 0 ? _b : glue42gd === null || glue42gd === void 0 ? void 0 : glue42gd.applicationName) !== null && _c !== void 0 ? _c : internalConfig.application,\r\n            instance: (_e = (_d = identity === null || identity === void 0 ? void 0 : identity.instance) !== null && _d !== void 0 ? _d : identity === null || identity === void 0 ? void 0 : identity.windowId) !== null && _e !== void 0 ? _e : shortid(),\r\n            disableAutoAppSystem: disableAutoAppSystem,\r\n            pagePerformanceMetrics: typeof config !== \"boolean\" ? config === null || config === void 0 ? void 0 : config.pagePerformanceMetrics : undefined\r\n        });\r\n        registerLib(\"metrics\", _metrics, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n    function setupInterop() {\r\n        var initTimer = timer(\"interop\");\r\n        var agmConfig = {\r\n            connection: _connection,\r\n            logger: _logger.subLogger(\"interop\"),\r\n        };\r\n        _interop = new Interop(agmConfig);\r\n        Logger.Interop = _interop;\r\n        registerLib([\"interop\", \"agm\"], _interop, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n    function setupContexts() {\r\n        var hasActivities = (internalConfig.activities && _connection.protocolVersion === 3);\r\n        var needsContexts = internalConfig.contexts || hasActivities;\r\n        if (needsContexts) {\r\n            var initTimer = timer(\"contexts\");\r\n            _contexts = new ContextsModule({\r\n                connection: _connection,\r\n                logger: _logger.subLogger(\"contexts\"),\r\n                trackAllContexts: typeof internalConfig.contexts === \"object\" ? internalConfig.contexts.trackAllContexts : false,\r\n                reAnnounceKnownContexts: typeof internalConfig.contexts === \"object\" ? internalConfig.contexts.reAnnounceKnownContexts : false\r\n            });\r\n            registerLib(\"contexts\", _contexts, initTimer);\r\n            return _contexts;\r\n        }\r\n        else {\r\n            var replayer = _connection.replayer;\r\n            if (replayer) {\r\n                replayer.drain(ContextMessageReplaySpec.name);\r\n            }\r\n        }\r\n    }\r\n    function setupBus() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var initTimer;\r\n            return __generator(this, function (_a) {\r\n                if (!internalConfig.bus) {\r\n                    return [2, Promise.resolve()];\r\n                }\r\n                initTimer = timer(\"bus\");\r\n                _bus = new MessageBus(_connection, _logger.subLogger(\"bus\"));\r\n                registerLib(\"bus\", _bus, initTimer);\r\n                return [2, Promise.resolve()];\r\n            });\r\n        });\r\n    }\r\n    function setupExternalLibs(externalLibs) {\r\n        try {\r\n            externalLibs.forEach(function (lib) {\r\n                setupExternalLib(lib.name, lib.create);\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    function setupExternalLib(name, createCallback) {\r\n        var initTimer = timer(name);\r\n        var lib = createCallback(libs);\r\n        if (lib) {\r\n            registerLib(name, lib, initTimer);\r\n        }\r\n    }\r\n    function waitForLibs() {\r\n        var libsReadyPromises = Object.keys(libs).map(function (key) {\r\n            var lib = libs[key];\r\n            return lib.ready ?\r\n                lib.ready() : Promise.resolve();\r\n        });\r\n        return Promise.all(libsReadyPromises);\r\n    }\r\n    function constructGlueObject() {\r\n        var feedbackFunc = function (feedbackInfo) {\r\n            if (!_interop) {\r\n                return;\r\n            }\r\n            _interop.invoke(\"T42.ACS.Feedback\", feedbackInfo, \"best\");\r\n        };\r\n        var info = {\r\n            coreVersion: version,\r\n            version: internalConfig.version\r\n        };\r\n        glueInitTimer.stop();\r\n        var glue = {\r\n            feedback: feedbackFunc,\r\n            info: info,\r\n            logger: _logger,\r\n            interop: _interop,\r\n            agm: _interop,\r\n            connection: _connection,\r\n            metrics: _metrics,\r\n            contexts: _contexts,\r\n            bus: _bus,\r\n            version: internalConfig.version,\r\n            userConfig: userConfig,\r\n            done: function () {\r\n                _logger === null || _logger === void 0 ? void 0 : _logger.info(\"done called by user...\");\r\n                return _connection.logout();\r\n            }\r\n        };\r\n        glue.performance = {\r\n            get glueVer() {\r\n                return internalConfig.version;\r\n            },\r\n            get glueConfig() {\r\n                return JSON.stringify(userConfig);\r\n            },\r\n            get browser() {\r\n                return window.performance.timing.toJSON();\r\n            },\r\n            get memory() {\r\n                return window.performance.memory;\r\n            },\r\n            get initTimes() {\r\n                var all = getAllTimers();\r\n                return Object.keys(all).map(function (key) {\r\n                    var t = all[key];\r\n                    return {\r\n                        name: key,\r\n                        duration: t.endTime - t.startTime,\r\n                        marks: t.marks,\r\n                        startTime: t.startTime,\r\n                        endTime: t.endTime\r\n                    };\r\n                });\r\n            }\r\n        };\r\n        Object.keys(libs).forEach(function (key) {\r\n            var lib = libs[key];\r\n            glue[key] = lib;\r\n        });\r\n        glue.config = {};\r\n        Object.keys(internalConfig).forEach(function (k) {\r\n            glue.config[k] = internalConfig[k];\r\n        });\r\n        if (ext && ext.extOptions) {\r\n            Object.keys(ext.extOptions).forEach(function (k) {\r\n                glue.config[k] = ext === null || ext === void 0 ? void 0 : ext.extOptions[k];\r\n            });\r\n        }\r\n        if (ext === null || ext === void 0 ? void 0 : ext.enrichGlue) {\r\n            ext.enrichGlue(glue);\r\n        }\r\n        if (glue42gd && glue42gd.updatePerfData) {\r\n            glue42gd.updatePerfData(glue.performance);\r\n        }\r\n        if (glue.agm) {\r\n            var deprecatedDecorator = function (fn, wrong, proper) {\r\n                return function () {\r\n                    glue.logger.warn(\"glue.js - 'glue.agm.\" + wrong + \"' method is deprecated, use 'glue.interop.\" + proper + \"' instead.\");\r\n                    return fn.apply(glue.agm, arguments);\r\n                };\r\n            };\r\n            var agmAny = glue.agm;\r\n            agmAny.method_added = deprecatedDecorator(glue.agm.methodAdded, \"method_added\", \"methodAdded\");\r\n            agmAny.method_removed = deprecatedDecorator(glue.agm.methodRemoved, \"method_removed\", \"methodRemoved\");\r\n            agmAny.server_added = deprecatedDecorator(glue.agm.serverAdded, \"server_added\", \"serverAdded\");\r\n            agmAny.server_method_aded = deprecatedDecorator(glue.agm.serverMethodAdded, \"server_method_aded\", \"serverMethodAdded\");\r\n            agmAny.server_method_removed = deprecatedDecorator(glue.agm.serverMethodRemoved, \"server_method_removed\", \"serverMethodRemoved\");\r\n        }\r\n        return glue;\r\n    }\r\n    function registerInstanceIfNeeded() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var RegisterInstanceMethodName, isMethodAvailable, error_1, typedError;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        RegisterInstanceMethodName = \"T42.ACS.RegisterInstance\";\r\n                        if (!(Utils.isNode() && typeof process.env._GD_STARTING_CONTEXT_ === \"undefined\" && typeof (userConfig === null || userConfig === void 0 ? void 0 : userConfig.application) !== \"undefined\")) return [3, 4];\r\n                        isMethodAvailable = _interop.methods({ name: RegisterInstanceMethodName }).length > 0;\r\n                        if (!isMethodAvailable) return [3, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4, _interop.invoke(RegisterInstanceMethodName, { appName: userConfig === null || userConfig === void 0 ? void 0 : userConfig.application, pid: process.pid })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3, 4];\r\n                    case 3:\r\n                        error_1 = _a.sent();\r\n                        typedError = error_1;\r\n                        _logger.error(\"Cannot register as an instance: \" + JSON.stringify(typedError.message));\r\n                        return [3, 4];\r\n                    case 4: return [2];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    return preloadPromise\r\n        .then(setupLogger)\r\n        .then(setupConnection)\r\n        .then(function () { return Promise.all([setupMetrics(), setupInterop(), setupContexts(), setupBus()]); })\r\n        .then(function () { return _interop.readyPromise; })\r\n        .then(function () { return registerInstanceIfNeeded(); })\r\n        .then(function () {\r\n        return setupExternalLibs(internalConfig.libs || []);\r\n    })\r\n        .then(waitForLibs)\r\n        .then(constructGlueObject)\r\n        .catch(function (err) {\r\n        return Promise.reject({\r\n            err: err,\r\n            libs: libs\r\n        });\r\n    });\r\n};\r\nif (typeof window !== \"undefined\") {\r\n    window.GlueCore = GlueCore;\r\n}\r\nGlueCore.version = version;\r\nGlueCore.default = GlueCore;\n\nexport default GlueCore;\n//# sourceMappingURL=core.es.js.map\n","import ActivityManager from \"../core/activityManager\";\n\n/**\n * Base class for activity entities with reference to the activity manager\n * @private\n */\nexport default class ActivityEntity {\n\n  public _manager: ActivityManager;\n  public _id: string;\n\n  constructor(id: string) {\n    this._id = id;\n  }\n\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Updates the properties of the current object using the properties of another object\n   * These two should have the same id.\n   */\n  public _update(other: ActivityEntity) {\n    if (other._id !== this._id) {\n      throw Error(\"Can not update from entity with different id.\");\n    }\n    this._updateCore(other);\n  }\n\n  public _updateCore(other: ActivityEntity) {\n    return;\n  }\n\n  public _beforeDelete(other: ActivityEntity) {\n    return;\n  }\n}\n","// some small useful functions (so we don't reference underscore or lodash)\n\nexport function isNumber(arg: any) {\n  return typeof arg === \"number\";\n}\n\nexport function isString(arg: any) {\n  return typeof arg === \"string\";\n}\n\nexport function isObject(arg: any) {\n  return typeof arg === \"object\" && arg !== null;\n}\n\nexport function isArray(arg: any) {\n  // TODO optimize\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return toString.call(arg) === \"[object Array]\";\n}\nexport function isUndefined(arg: any) {\n  return typeof arg === \"undefined\";\n}\n\nexport function isUndefinedOrNull(arg: any) {\n  return arg === null || typeof arg === \"undefined\";\n}\n\nexport function isNullOrWhiteSpace(str: string) {\n  return (typeof str !== \"string\" || !str || str.length === 0 || /^\\s*$/.test(str));\n}\n\nexport function isBoolean(obj: any) {\n  return obj === true || obj === false || toString.call(obj) === \"[object Boolean]\";\n}\n\n/**\n *  Checks if an object is empty (has no properties)\n * @private\n */\nexport function isEmpty(arg: any) {\n  for (const prop in arg) {\n    if (arg.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isFunction(arg: any) {\n  return !!(arg && arg.constructor && arg.call && arg.apply);\n}\n\nexport function some<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function first<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return array[index];\n    }\n  }\n  return undefined;\n}\n\nexport function ifNotUndefined<T>(what: T, doWithIt: (what: T) => void) {\n  if (typeof what !== \"undefined\") {\n    doWithIt(what);\n  }\n}\n\nexport function promisify(promise: Promise<any>, successCallback: () => void, errorCallback: () => void) {\n  \"use strict\";\n  if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\n    return promise;\n  }\n\n  if (typeof successCallback !== \"function\") {\n    successCallback = () => { return; };\n  } else if (typeof errorCallback !== \"function\") {\n    errorCallback = () => { return; };\n  }\n\n  promise.then(successCallback, errorCallback);\n}\n","import * as contracts from \"../contracts/contracts\";\nimport Activity from \"./activity\";\nimport ActivityEntity from \"./activityEntity\";\nimport WindowType from \"./windowType\";\nimport { ifNotUndefined } from \"../helpers/util\";\nimport { WindowDefinition } from \"./windowDefinition\";\n\nimport { Glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\n/**\n * An activity type is a definition template for an activity, consisting of a collection of window types,\n * their layout and an initial activity context.\n *\n * @module activityType\n */\nexport default class ActivityType extends ActivityEntity {\n\n  public _name: string;\n  public _description: string;\n  public _ownerWindow: WindowType;\n  public _helperWindows: WindowType[];\n\n  constructor(name: string, ownerWindow: WindowType, helperWindows?: WindowType[], description?: string) {\n    super(name);\n    this._name = name;\n    this._description = description;\n    this._ownerWindow = ownerWindow;\n    this._helperWindows = helperWindows || [];\n  }\n\n  /**\n   * @var {string} name Name of the activity type\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * @var {string} description description for the activity type\n   */\n  public get description(): string {\n    return this._description;\n  }\n\n  /**\n   * A list of window types that should be created when initiating a new instance of that activity type\n   * @var {windowDefinition[]} helperWindows\n   */\n  public get helperWindows(): WindowType[] {\n    return this._helperWindows.map((hw) => this.covertToWindowDef(hw));\n  }\n\n  /**\n   * @var {windowDefinition} ownerWindow Returns the definition of the owner window for that activity type\n   */\n  public get ownerWindow(): WindowType {\n    return this.covertToWindowDef(this._ownerWindow);\n  }\n\n  /**\n   * Initiates a new activity of this type\n   *\n   * @function initiate\n   * @param {object} context The initial context to be used for the new activity\n   * @param callback\n   * @param configuration\n   * @returns {Promise<activity>}\n   */\n  public initiate(context: object, callback?: contracts.Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    return this._manager.initiate(this._name, context, callback, configuration);\n  }\n\n  public _updateCore(other: ActivityType) {\n    super._updateCore(other);\n    ifNotUndefined(other._description, (x) => this._description = x);\n    ifNotUndefined(other._ownerWindow, (x) => this._ownerWindow = x);\n    ifNotUndefined(other._helperWindows, (x) => this._helperWindows = x);\n  }\n\n  private covertToWindowDef(windowType: any): any {\n    // GD2 + old glue js backward compatible\n    return {\n      type: windowType?.id?.type,\n      name: windowType?.id?.name\n    };\n  }\n}\n","import ActivityEntity from \"./activityEntity\";\nimport ActivityWindow from \"./activityWindow\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport Activity from \"./activity\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window type is a definition of a window, typically configured in ACS.\n *\n * @module windowType\n */\nexport default class WindowType extends ActivityEntity {\n\n  public _name: string;\n  public _appByWindowTypeGetter: (name: string) => void;\n\n  constructor(name: string, appByWindowTypeGetter: (wt: string) => Glue42.AppManager.Application) {\n    super(name);\n    this._name = name;\n    this._appByWindowTypeGetter = appByWindowTypeGetter;\n  }\n\n  /**\n   * Name of the window type\n   * @var {string} name\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Returns the ACS configuration related to this window type (as application object from AppManager API)\n   * @returns {any}\n   */\n  public get config(): any {\n    return this._appByWindowTypeGetter(this._name);\n  }\n\n  /**\n   * @var {activityWindow[]} windows All windows from that type\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ type: this._name });\n  }\n\n  public create(activity: Activity, configuration: any): Promise<ActivityWindow> {\n    const definition: WindowDefinition = (Object as any).assign({ type: this.name, name: this.name, isIndependent: false }, configuration);\n    return this._manager.createWindow(activity, definition);\n  }\n}\n","import { ActivityStatus } from \"./activityStatus\";\n\nexport class EntityEvent<T> {\n    public entity: T;\n    public context: EntityEventContext;\n\n    constructor(entitiy: T, context: EntityEventContext) {\n        this.entity = entitiy;\n        this.context = context;\n    }\n}\n\nexport class EntityEventContext {\n    public type: string;\n\n    constructor(eventType: string) {\n        this.type = eventType;\n    }\n}\n\nexport class ActivityStatusChangeEventContext extends EntityEventContext {\n    public oldStatus: ActivityStatus;\n    public newStatus: ActivityStatus;\n\n    constructor(newStatus: ActivityStatus, oldStatus: ActivityStatus) {\n        super(EntityEventType.StatusChange);\n        this.newStatus = newStatus;\n        this.oldStatus = oldStatus;\n    }\n}\n\nexport class ActivityContextChangedEventContext extends EntityEventContext {\n    public context: object;\n    public updated: object;\n    public removed: string[];\n\n    constructor(context: string | object, updated: object, removed: string[]) {\n        super(EntityEventType.ActivityContextChange);\n        this.context = typeof context === \"string\" ? JSON.parse(context) : context;\n        this.updated = updated;\n        this.removed = removed;\n    }\n}\n\nexport class EntityEventType {\n    public static Added: string = \"added\";\n    public static Removed: string = \"removed\";\n    public static Updated: string = \"updated\";\n    public static Closed: string = \"closed\";\n    public static StatusChange: string = \"statusChange\";\n    public static ActivityContextChange: string = \"activityContextUpdate\";\n    public static ActivityWindowEvent: string = \"activityWindowEvent\";\n    // #deleteme TODO: these are not implemented in HC\n    public static ActivityWindowJoinedActivity: string = \"joined\";\n    public static ActivityWindowLeftActivity: string = \"left\";\n}\n\nexport class ActivityState {\n    public static Created: string = \"created\";\n    public static Started: string = \"started\";\n    public static Destroyed: string = \"destroyed\";\n}\n","import Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport * as util from \"../helpers/util\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { promisify } from \"../helpers/util\";\n\n// A helper class that provides lame activity AGM implementation\n// Can be initialized with or without activity - in case no activity (independent windows outside activity) only\n// subset of the methods work\nexport class ActivityAGM {\n    public static AGM: Glue42Core.AGM.API;\n\n    private _activity: Activity;\n\n    constructor(activity: Activity) {\n        this._activity = activity;\n    }\n\n    public register(definition: string | Glue42Core.AGM.MethodDefinition, handler: (args: object, caller: Glue42Core.AGM.Instance) => object) {\n        this._ensureHasAgm();\n        ActivityAGM.AGM.register(definition, handler);\n    }\n\n    public servers(): Glue42Core.AGM.Instance[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.servers()\n            return [];\n        }\n\n        return this._activity.windows.map(\n            (w: ActivityWindow) => {\n                return w.instance;\n            });\n    }\n\n    public methods(): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.methods()\n            return [];\n        }\n\n        const windows = this._activity.windows;\n        const methodNames: string[] = [];\n        const methods: Glue42Core.AGM.MethodDefinition[] = [];\n\n        // get all windows and their methods, then assemble distinct methods\n        windows.forEach((window) => {\n            const windowMethods = this.methodsForWindow(window);\n            windowMethods.forEach((currentWindowMethod) => {\n                if (methodNames.indexOf(currentWindowMethod.name) === -1) {\n                    methodNames.push(currentWindowMethod.name);\n                    methods.push(currentWindowMethod);\n                }\n            });\n        });\n\n        return methods;\n    }\n\n    public methodsForWindow(window: ActivityWindow): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n        // get instance and use agm to get methods for instance\n        if (!window.instance) {\n            return [];\n        }\n\n        return ActivityAGM.AGM.methodsForInstance(window.instance);\n    }\n\n    /** Possible invoke targets\n     *\n     * \"activity.all\" - [default]\n     * \"activity.best\"\n     * ActivityWindow\n     * [ActivityWindow] -\n     *\n     * classic AGM\n     * \"all\" - agm all\n     * \"best\" - agm best\n     * instance - agm\n     * [ instances ]\n     *\n     */\n    public invoke(\n        methodName: string,\n        arg: object,\n        target: string | Glue42Core.AGM.Instance | ActivityWindow | Glue42Core.AGM.Instance[] | ActivityWindow[],\n        options?: Glue42Core.AGM.InvokeOptions,\n        success?: () => void,\n        error?: () => void): Promise<object> {\n\n        this._ensureHasAgm();\n        const activityServers = this.servers();\n        let serversToInvokeAgainst: Glue42Core.AGM.Instance[] = [];\n\n        if (util.isUndefinedOrNull(target)) {\n            target = \"activity.all\";\n        }\n\n        if (util.isString(target)) {\n            if (target === \"activity.all\") {\n                serversToInvokeAgainst = activityServers;\n            } else if (target === \"activity.best\") {\n                const potentialTargets = activityServers.filter((server) => {\n                    const methods = ActivityAGM.AGM.methodsForInstance(server);\n                    return methods.filter((m) => {\n                        return m.name === methodName;\n                    }).length > 0;\n                });\n                if (potentialTargets.length > 0) {\n                    serversToInvokeAgainst = [potentialTargets[0]];\n                }\n            } else if (target === \"all\" || target === \"best\") {\n                return promisify(ActivityAGM.AGM.invoke(methodName, arg, target, options), success, error);\n            } else {\n                throw new Error(\"Invalid invoke target \" + target);\n            }\n        } else if (util.isArray(target)) {\n            // if the array is not empty\n            if ((target as any).length >= 0) {\n                const firstElem = (target as any)[0];\n                // check argument type\n                if (this._isInstance(firstElem)) {\n                    serversToInvokeAgainst = (target as Glue42Core.AGM.Instance[]).map((instance: Glue42Core.AGM.Instance) => instance);\n                } else if (this._isActivityWindow(firstElem)) {\n                    serversToInvokeAgainst = (target as ActivityWindow[]).map((win: ActivityWindow) => win.instance);\n                } else {\n                    throw new Error(\"Unknown target object\");\n                }\n            }\n        } else {\n            if (this._isInstance(target)) {\n                serversToInvokeAgainst = [target as Glue42Core.AGM.Instance];\n            } else if (this._isActivityWindow(target)) {\n                serversToInvokeAgainst = [(target as ActivityWindow).instance];\n            } else {\n                throw new Error(\"Unknown target object\");\n            }\n        }\n\n        throw new Error(\"Not implemented\");\n        // return promisify(ActivityAGM.AGM.invoke(methodName, arg, serversToInvokeAgainst, options), success, error);\n    }\n\n    public unregister(definition: string | Glue42Core.AGM.MethodDefinition) {\n        this._ensureHasAgm();\n        return ActivityAGM.AGM.unregister(definition);\n    }\n\n    public createStream(methodDefinition: string | Glue42Core.AGM.MethodDefinition,\n                        subscriptionAddedHandler: (request: Glue42Core.AGM.StreamSubscription) => void,\n                        subscriptionRemovedHandler: (request: Glue42Core.AGM.StreamSubscription) => void) {\n        this._ensureHasAgm();\n\n        ActivityAGM.AGM.createStream(methodDefinition, {\n            subscriptionAddedHandler,\n            subscriptionRemovedHandler,\n            subscriptionRequestHandler: undefined\n        });\n    }\n\n    public subscribe(methodDefinition: string | Glue42Core.AGM.MethodDefinition, parameters: object, target: string | Glue42Core.AGM.Instance | Glue42Core.AGM.Instance[]): Promise<Glue42Core.AGM.Subscription> {\n        this._ensureHasAgm();\n        // #deleteme TODO: check servers needed?\n        // const servers = this.servers();\n\n        return ActivityAGM.AGM.subscribe(methodDefinition, parameters);\n    }\n\n    public _ensureHasAgm() {\n        if (util.isUndefinedOrNull(ActivityAGM.AGM)) {\n            throw new Error(\"Agm should be configured to be used in activity\");\n        }\n    }\n\n    public _isInstance(obj: any) {\n        // lame check\n        return obj.application !== undefined;\n    }\n\n    public _isActivityWindow(obj: any) {\n        return obj.instance !== undefined;\n    }\n}\n","import { ActivityDescriptor } from \"./activityDescriptor\";\nimport ActivityManager from \"../core/activityManager\";\nimport Activity from \"./activity\";\n\nexport class AttachedActivityDescriptor implements ActivityDescriptor {\n  private _manager: ActivityManager;\n  private _state: ActivityDescriptor;\n  private _ownerActivityId: string;\n\n  constructor(\n    manager: ActivityManager,\n    ownerActivityId: string,\n    state: ActivityDescriptor) {\n    this._manager = manager;\n    this._ownerActivityId = ownerActivityId;\n    this._state = state;\n  }\n\n  public get ownerId() {\n    return this._state.ownerId;\n  }\n\n  public get windowIds() {\n    return this._state.windowIds;\n  }\n\n  public get frameColor() {\n    return this._state.frameColor;\n  }\n\n  public get context() {\n    return this._state.context;\n  }\n\n  public get tag() {\n    return this._state.tag;\n  }\n\n  public detach(descriptor?: ActivityDescriptor): Promise<Activity> {\n\n    descriptor = descriptor || {};\n\n    const merged: ActivityDescriptor = {};\n\n    Object.keys(this._state).forEach((prop) => {\n      merged[prop] = this._state[prop];\n    });\n\n    merged.context = descriptor.context || merged.context;\n    merged.frameColor = descriptor.frameColor || merged.frameColor;\n\n    return this._manager.detachActivities(this._ownerActivityId, merged);\n  }\n}\n","import * as util from \"../helpers/util\";\n\nconst nextTick = (cb: () => void) => {\n  setTimeout(cb, 0);\n};\n\n/**\n * Convert a Promise to node style callback\n * @private\n */\nexport function nodeify<T>(promise: Promise<T>, callback: any): Promise<T> {\n  if (!util.isFunction(callback)) {\n    return promise;\n  }\n\n  promise.then(\n    (resp) => {\n      nextTick( () => { // not sure if this is needed, promises should be already executed on the event pool\n        callback(null, resp);\n      });\n    },\n    (err) => {\n      nextTick(() => {\n        callback(err, null);\n      });\n    });\n}\n","import * as contracts from \"../contracts/contracts\";\nimport ActivityType from \"./activityType\";\nimport ActivityWindow from \"./activityWindow\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport ActivityEntity from \"./activityEntity\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport { ActivityAGM } from \"../core/activityAGM\";\nimport { CloneOptions } from \"./cloneOptions\";\nimport { AttachedActivityDescriptor } from \"./attachedActivityDescriptor\";\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ifNotUndefined } from \"../helpers/util\";\n\n/**\n * Activity is an instance of an activity type just like an object is an instance of a class\n * in class-based languages (and just like ‘John’ is an instance of a 'Person’).\n *\n * Activity is often used as a synonym for activity instance.\n *\n * Each activity instance has a single owner window and can optionally have one or more helper windows.\n *\n * @module activity\n */\nexport default class Activity extends ActivityEntity {\n\n  public _id: string;\n  public _actType: string;\n  public _status: ActivityStatus;\n  public _context: object;\n  public _ownerId: string;\n  public _agm: ActivityAGM;\n  public _attached: any;\n\n  constructor(\n    id: string,\n    actType: string,\n    status: ActivityStatus,\n    context: object,\n    ownerId: string) {\n    super(id);\n    this._id = id;\n    this._actType = actType;\n    this._status = status;\n    this._context = context;\n    this._ownerId = ownerId;\n    this._agm = new ActivityAGM(this);\n  }\n\n  /**\n   * Activity type\n   * @var {module:activityType} type\n   */\n  public get type(): ActivityType {\n    if (this._manager) {\n      return this._manager.getActivityType(this._actType);\n    }\n    return undefined;\n  }\n\n  /**\n   * Get current activity context. To update use updateContext , to replace setContext\n   * @var {object} context\n   */\n  public get context(): object {\n    return this._context;\n  }\n\n  /**\n   * Get activity status\n   * @var {activityStatus} status\n   */\n  public get status(): ActivityStatus {\n    return this._status;\n  }\n\n  /**\n   * The owner window\n   * @var {module:activityWindow} owner\n   */\n  public get owner(): ActivityWindow {\n    if (!this._ownerId) {\n      return null;\n    }\n    return this._manager.getWindows({ id: this._ownerId })[0];\n  }\n\n  /**\n   * All windows participating in the activity\n   * @var {module:activityWindow[]} windows\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ activityId: this._id });\n  }\n\n  /**\n   * @var {module:activityAGM} agm\n   */\n  public get agm(): ActivityAGM {\n    return this._agm;\n  }\n\n  /**\n   * Joins a specific window to the activity\n   *\n   * @private\n   * @function join\n   * @param window    The window to join\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public addWindow(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.addWindowToActivity(this, window, callback);\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string|windowDefinition} windowType The type of the window to be created\n   * @param callback\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.createWindow(this, windowType, callback);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @param callback\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: Array<string | WindowDefinition>, timeout?: number, callback?: contracts.Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    return this._manager.createStackedWindows(this, windowTypes, timeout, callback);\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @private\n   * @param window\n   * @param callback\n   * @returns     Promise for ActivityWindow\n   */\n  public leave(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.leaveWindowFromActivity(this, window, callback);\n  }\n\n  /**\n   * Get all windows participating in the activity from a given type\n   *\n   * @param {string} windowType\n   * @returns {module:activityWindow[]}\n   */\n  public getWindowsByType(windowType: string): ActivityWindow[] {\n    const filter = { activityId: this._id, type: windowType };\n    return this._manager.getWindows(filter);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @param callback\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.setActivityContext(this, context, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @param callback\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.updateActivityContext(this, context, callback);\n  }\n\n  /**\n   * Subscribe for status change events\n   *\n   * @function onStatusChange\n   *\n   * @param {activityStatusChangeHandler} handler Handler function that will receive status notifications\n   */\n  public onStatusChange(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._manager.subscribeActivityEvents((a, ns, os) => {\n      if (a.id === this.id) {\n        handler(a, ns, os);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for window related events, like joined, removed from activity\n   *\n   * @function onWindowEvent\n   * @param {windowEventHandler} handler Handler function that will receive windows events\n   */\n  public onWindowEvent(handler: contracts.ActivityWindowEventHandler): () => void {\n    return this._manager.subscribeWindowEvents((a, w, e) => {\n      if (a.id === this.id) {\n        handler(a, w, e);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} handler Handler function that will receive context related events\n   */\n  public onContextChanged(handler: contracts.ContextUpdateHandler) {\n    this._manager.subscribeActivityContextChanged((act, context, updated, removed) => {\n      if (act.id === this.id) {\n        handler(context, updated, removed, act);\n      }\n    });\n\n    try {\n      // replay the context at the time of subscribing, swallow user exceptions\n      handler(this.context, this.context, [], this);\n    } catch (e) {\n      return;\n    }\n  }\n\n  /**\n   * Stops the activity\n   * @function stop\n   */\n  public stop() {\n    this._manager.stopActivity(this);\n  }\n\n  /**\n   * Clones the activity into a new one\n   * @function clone\n   * @param {CloneOptions} options\n   */\n  public clone(options: CloneOptions) {\n    return this._manager.clone(this, options);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._manager.attachActivities(activityId, this.id, tag);\n  }\n\n  public onActivityAttached(callback: (descriptor: AttachedActivityDescriptor) => void) {\n    this._manager.subscribeActivitiesAttached((newActId: string, oldActId: string, descriptor: AttachedActivityDescriptor) => {\n      if (newActId !== this._id) {\n        return;\n      }\n\n      callback(descriptor);\n    });\n  }\n\n  public onDetached(callback: (newAct: Activity, state: any) => void) {\n    this._manager.subscribeActivitiesDetached((newAct: Activity, originalActivity: Activity, state: any) => {\n      if (originalActivity.id !== this._id) {\n        return;\n      }\n\n      callback(newAct, state);\n    });\n  }\n\n  public _updateCore(other: Activity) {\n    super._updateCore(other);\n    ifNotUndefined(other._actType, (x) => this._actType = x);\n    ifNotUndefined(other._context, (x) => this._context = x);\n    ifNotUndefined(other._ownerId, (x) => this._ownerId = x);\n    if (other._status && (!this._status || (this._status.state !== other._status.state))) {\n      this._status = other._status;\n    }\n  }\n\n  public _updateDescriptors(allStates: any) {\n    this._attached = allStates.map((s: any) => {\n      return new AttachedActivityDescriptor(this._manager, this._id, s);\n    });\n  }\n\n  public get attached(): AttachedActivityDescriptor[] {\n    return this._attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n\n      let callbacksToWait = this.windows.length;\n      if (callbacksToWait === 0) {\n        resolve(this);\n      }\n\n      this.windows.forEach((w) => {\n        w.underlyingWindow.setFrameColor(color, () => {\n          callbacksToWait--;\n          if (callbacksToWait <= 0) {\n            resolve(this);\n          }\n        });\n      });\n\n      setTimeout(() => {\n\n        if (callbacksToWait > 0) {\n          reject(this.id + \" - timed out waiting for setFrameColor with\" + color);\n        }\n\n      }, 5000);\n\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public getFrameColor(): string {\n\n    if (!this.windows || this.windows.length === 0) {\n      return \"\";\n    }\n\n    return this.windows[0].underlyingWindow.frameColor;\n  }\n}\n","/* tslint:disable */\n\nimport * as util from \"./util\";\nimport {Glue42Core} from \"@glue42/core\";\n\nexport class LogLevel {\n  public static Trace: string = \"trace\";\n  public static Debug: string = \"debug\";\n  public static Info: string = \"info\";\n  public static Warn: string = \"warn\";\n  public static Error: string = \"error\";\n}\n\nexport class Logger {\n\n  public static Level: string = LogLevel.Info;\n  public static GlueLogger: Glue42Core.Logger.API;\n\n  private _glueLogger: Glue42Core.Logger.API;\n\n  public static GetNamed(name: string): Logger {\n    return new Logger(name);\n  }\n\n  public static Get(owner: Object): Logger {\n    return new Logger(Logger.GetTypeName(owner));\n  }\n\n  public _name: string;\n\n  constructor(name: string) {\n    this._name = name;\n    // we have a glue logger let's create a new logger for it\n    if (!util.isUndefinedOrNull(Logger.GlueLogger)) {\n      this._glueLogger = Logger.GlueLogger.subLogger(name);\n    }\n  }\n\n  public trace(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.trace(message);\n    } else {\n      if (Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Trace));\n      }\n    }\n  }\n\n  public debug(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.debug(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Debug));\n      }\n    }\n  }\n\n  public info(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.info(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public warn(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.warn(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info ||\n        Logger.Level === LogLevel.Warn) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public error(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.error(message);\n    } else {\n      console.error(this._getMessage(message, LogLevel.Error));\n      console.trace();\n    }\n  }\n\n  public _getMessage(message: string, level: string): string {\n    return \"[\" + level + \"] \" + this._name + \" - \" + message;\n  }\n\n  /**\n   * Returns the function name for a given object (same as constructor.name but cross-browser)\n   */\n  public static GetTypeName(object: object): string {\n    const funcNameRegex = /function (.{1,})\\(/;\n    const results = (funcNameRegex).exec(object.constructor.toString());\n    return (results && results.length > 1) ? results[1] : \"\";\n  }\n}\n","import * as contracts from \"../contracts/contracts\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\n\nimport WindowType from \"./windowType\";\nimport ActivityEntity from \"./activityEntity\";\nimport Activity from \"./activity\";\n\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\nimport { ifNotUndefined } from \"../helpers/util\";\nimport { EntityEventType } from \"../contracts/entityEvent\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window participating in an activity\n *\n * @module activityWindow\n */\nexport default class ActivityWindow extends ActivityEntity {\n\n    private _logger: Logger = Logger.Get(\"window\");\n\n    private _type: string;\n    private _activityId: string;\n    private _name: string;\n    private _instance: Glue42Core.AGM.Instance;\n    private _isIndependent: boolean;\n    private _windowGetter: () => Glue42.Windows.GDWindow;\n    private _hcWindowId: string;\n\n    constructor(id: string, name: string, type: string, activityId: string, instance: Glue42Core.AGM.Instance, isIndependent: boolean, windowGetter: any,\n                hcWindowId: string) {\n        super(id);\n        this._type = type;\n        this._activityId = activityId;\n        this._name = name;\n        this._instance = instance;\n        this._isIndependent = isIndependent;\n        this._windowGetter = windowGetter;\n        this._hcWindowId = hcWindowId;\n    }\n\n    /**\n     * Return window's title\n     * @function getBounds\n     * @return {Promise<WindowBounds>}\n     */\n    public getBounds(): Promise<WindowBounds> {\n        return this._manager.getWindowBounds(this.id);\n    }\n\n    /**\n     * @var {string} name The window name\n     */\n    public get name(): string {\n        return this._name;\n    }\n\n    /**\n     * @var {bool} isIndependent True if this is an independent window\n     */\n    public get isIndependent(): boolean {\n        return this._isIndependent;\n    }\n\n    /**\n     * @var {module:windowType} type The window type\n     */\n    public get type(): WindowType {\n        if (this._manager) {\n            return this._manager.getWindowType(this._type);\n        }\n        return undefined;\n    }\n\n    /**\n     * @var {module:activity} activity The activity that the window is part of\n     */\n    public get activity(): Activity {\n        if (util.isUndefined(this._activityId)) {\n            return undefined;\n        }\n        return this._manager.getActivityById(this._activityId);\n    }\n\n    /**\n     * @var {bool} isOwner True if the window is the owner of the activity.\n     */\n    public get isOwner(): boolean {\n        const act = this.activity;\n        if (util.isUndefined(act)) {\n            return false;\n        }\n\n        return act.owner.id === this.id;\n    }\n\n    /**\n     * Sets window's visibility\n     *\n     * @function setVisible\n     * @param {boolean} isVisible\n     * @returns {Promise<module:activityWindow>}\n     */\n    public setVisible(isVisible: boolean, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowVisibility(this.id, isVisible);\n    }\n\n    /**\n     * Activate window\n     * @function activate\n     * @param {boolean} focus If true then activate window with focus otherwise activate window without focus\n     */\n    public activate(focus: boolean): Promise<ActivityWindow> {\n        return this._manager.activateWindow(this.id, focus);\n    }\n\n    /**\n     * Sets window's bounds\n     * @function setBounds\n     *\n     * @param {bounds} bounds The new bounds to be applied\n     * @returns  {Promise<module:activityWindow>}\n     */\n    public setBounds(bounds: WindowBounds, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowBounds(this.id, bounds, callback);\n    }\n\n    /**\n     * Closes the window\n     *\n     * @function close\n     * @returns {Promise}\n     */\n    public close(): Promise<any> {\n        return this._manager.closeWindow(this.id);\n    }\n\n    /**\n     * @var {agmInstance} instance The agm instance of that window. You can use this to invoke AGM methods against that window\n     */\n    public get instance(): Glue42Core.AGM.Instance {\n        return this._instance;\n    }\n\n    /**\n     * Returns the window as object from Windows API (glue.windows).\n     *\n     * @var {window} underlyingWindow\n     */\n    public get underlyingWindow(): any {\n        const window = this._windowGetter();\n        if (!window) {\n            // we don't have the window object any more, let's return as much as we can\n            return {\n                id: this._hcWindowId\n            };\n        }\n        return window;\n    }\n\n    public onActivityJoined(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowJoinedActivity, callback);\n    }\n\n    public onActivityRemoved(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowLeftActivity, callback);\n    }\n\n    public _updateCore(other: ActivityWindow) {\n        ifNotUndefined(other._activityId, (x) => this._activityId = x);\n        ifNotUndefined(other._isIndependent, (x) => this._isIndependent = x);\n        ifNotUndefined(other._hcWindowId, (x) => this._hcWindowId = x);\n        ifNotUndefined(other._type, (x) => this._type = x);\n        ifNotUndefined(other._name, (x) => this._name = x);\n\n        if (!util.isUndefinedOrNull(other._instance)) {\n            this._instance = other._instance;\n        }\n    }\n\n    public _subscribeForActivityWindowEvent(eventName: string, callback: (activity: Activity) => void) {\n        this._manager.subscribeWindowEvents((activity, window, event) => {\n            // ignore events not related to this window\n            if (window.id !== this.id) {\n                return;\n            }\n\n            if (event === eventName) {\n                callback(activity);\n            }\n        });\n    }\n\n    public _beforeDelete(other: ActivityWindow) {\n        this._hcWindowId = other._hcWindowId;\n    }\n}\n","/**\n * @typedef {Object} activityStatus Defines activity instance status\n * @property {string} state Current state\n * @property {string} message Message\n * @property {Date} time Time of the last status update\n */\nexport class ActivityStatus {\n  public state: string;\n  public message: string;\n  public time: Date;\n\n  constructor(state: string, message: string, time: Date) {\n    this.state = state;\n    this.message = message;\n    this.time = time;\n  }\n\n  public getState(): string {\n    return this.state;\n  }\n\n  public getMessage(): string {\n    return this.message;\n  }\n\n  public getTime(): Date {\n    return this.time;\n  }\n}\n","import { AnnouncementInfo } from \"../contracts/announcementInfo\";\n\nimport { ActivityBridge } from \"./activityBridge\";\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport { EventHandlerCallback } from \"../contracts/contracts\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport {\n    ActivityContextChangedEventContext,\n    ActivityStatusChangeEventContext,\n    EntityEvent,\n    EntityEventContext,\n    EntityEventType,\n} from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport {\n    ActivityGwMessage,\n    ActivityTypeGwMessage,\n    ActivityTypeGwMessageEntity,\n    GwMessage,\n    PeerCreatedGwMessage,\n    PeerFactoryGwMessage,\n    PeerFactoryGwMessageEntity,\n    PeerRequestedGwMessage,\n} from \"./gw3BridgeMessages\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Glue42 } from \"../../../glue\";\n\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport { ActivityConfig } from \"../activityConfig\";\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { Glue42 as glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = glue42.Activities.OverrideTypeDefinition;\n\nconst gwMessageSuccess = \"success\";\nconst gwMmessageError = \"error\";\n\nconst gwMessageAddActivityTypes = \"add-types\";\nconst gwMmessageActivityTypesAdded = \"types-added\";\nconst gwMessageRemoveActivityTypes = \"remove-types\";\nconst gwMessageActivityTypesRemoved = \"types-removed\";\n\nconst gwMessageActivityCreated = \"created\";\nconst gwMessageActivityDestroyed = \"destroyed\";\nconst gwMessageActivityInitiated = \"initiated\";\nconst gwMmessageJoinActivity = \"join-activity\";\nconst gwMessageJoinedActivity = \"joined\";\nconst gwMessageActivityJoined = \"activity-joined\";\nconst gwMessageLeaveActivity = \"leave-activity\";\nconst gwMessageActivityLeft = \"left\";\nconst gwNmessageMergeActivities = \"merge\";\nconst gwMessageSplitActivities = \"split\";\nconst gwMessageChildrenChanged = \"children-changed\";\nconst gwMessageOwnerChanged = \"owner-changed\";\n\nconst gwMessageAddPeerFactories = \"add-peer-factories\";\nconst gwMessagePeerFactoriesAdded = \"peer-factories-added\";\nconst gwMessageRemovePeerFactories = \"remove-peer-factories\";\nconst gwMessagePeerFactoriesRemoved = \"peer-factories-removed\";\n\nconst gwMessageCreateActivity = \"create\";\nconst gwMessageCreatePeer = \"create-peer\";\nconst gwMessagePeerRequested = \"peer-requested\";\nconst gwMessageReady = \"ready\";\nconst gwMessagePeerCreated = \"peer-created\";\n\nconst gwMessageDestroyActivity = \"destroy\";\nconst gwMessageDisposePeer = \"dispose-peer\";\nconst gwMessageDestroyPeer = \"destroy-peer\";\n\ndeclare let window: any;\ndeclare let process: any;\n\nexport default class GW3Bridge implements ActivityBridge {\n\n    private static activityTypeGwMessageEntityToActivityType(\n        entity: ActivityTypeGwMessageEntity,\n        description: string): ActivityType {\n\n        const nameToWindowType =\n            (windowName: any) =>\n                new WindowType(\n                    windowName,\n                    undefined);\n\n        return new ActivityType(\n            entity.name,\n            entity.owner_type && nameToWindowType(entity.owner_type),\n            entity.helper_types && entity.helper_types.map(nameToWindowType),\n            description);\n    }\n\n    private static peerFactoryGwMessageEntityToWindowType(entity: PeerFactoryGwMessageEntity): WindowType {\n        return new WindowType(\n            entity.peer_type,\n      /* #deleteme TODO: review - appmanager configuration? */(_) => undefined);\n    }\n\n    private static activityGwMessageToActivity(msg: ActivityGwMessage, status: ActivityStatus): Activity {\n        const ownerId = msg.owner !== undefined ? msg.owner.peer_id : msg.owner_id;\n        return new Activity(\n            msg.activity_id,\n            msg.activity_type,\n            status,\n            msg.context_snapshot,\n            ownerId);\n    }\n\n    private static activityToActivityStatusChangeEvent(act: Activity) {\n        return new EntityEvent<Activity>(act, new ActivityStatusChangeEventContext(act.status, undefined));\n    }\n\n    private _connection: Glue42.Connection.API;\n    private _logger: any;\n    private _contexts: Glue42.Contexts.API;\n    private _windows: Glue42.Windows.API;\n\n    private _gw3Session: Glue42Core.Connection.GW3DomainSession;\n\n    // callbacks\n\n    private _activityChangeCallbacks: Array<EventHandlerCallback<EntityEvent<Activity>>> = [];\n    private _activityTypeStatusChangeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityType>>> = [];\n    private _activityWindowChangeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityWindow>>> = [];\n    private _windowTypeStatusChangeCallbacks: Array<EventHandlerCallback<EntityEvent<WindowType>>> = [];\n\n    // state tracking\n    private _peerIdAndFactoryIdToPeerType: any = {};\n    private _peerFactoriesRegisteredByUs: { [index: string]: WindowFactory } = {};\n    private _gw3Subscriptions: any[] = [];\n    private _contextSubscriptions: any = {};\n    private _activityTypesInitiatedFromMe: any = {};\n\n    private _sessionJoinedPromise: Promise<GW3Bridge>;\n    private _sessionJoinedPromiseResolve: (bridge: GW3Bridge) => void;\n    private _activityJoinedPromise: Promise<object>;\n    private _activityJoinedPromiseResolve: (obj: object) => void;\n    private _config: ActivityConfig;\n\n    constructor(config: ActivityConfig) {\n        this._config = config;\n        this._connection = config.connection;\n        this._logger = config.logger;\n        this._contexts = config.contexts;\n        this._windows = config.windows;\n\n        this._sessionJoinedPromise = new Promise<GW3Bridge>((resolve /*, reject */) => {\n            this._sessionJoinedPromiseResolve = resolve;\n        });\n\n        this._activityJoinedPromise = new Promise<object>((resolve /*, reject */) => {\n            this._activityJoinedPromiseResolve = resolve;\n        });\n\n        if (!this._config.activityId) {\n            this._activityJoinedPromiseResolve({});\n        }\n\n        this._gw3Session = this._connection.domain(\n            \"activity\",\n            [\"joined\", \"initiated\", \"peer-created\", \"token\"]);\n\n        if (typeof window !== \"undefined\") {\n\n            const glue42gd = (window as any).glue42gd;\n\n            // only execute if in activity\n            if (glue42gd && glue42gd.activityInfo) {\n                // G4E-1343\n                if (typeof glue42gd.addRefreshHandler === \"function\") {\n\n                    glue42gd.addRefreshHandler((success: any, error: any) => {\n                        this._gw3Session\n                            .send(\n                                {\n                                    type: \"reload\"\n                                })\n                            .then(\n                                (msg: any) => {\n                                    if (!msg.token) {\n                                        error(\"Expected gateway token for refreshing.\");\n                                        return;\n                                    }\n                                    try {\n                                        glue42gd.setGWToken(msg.token as string);\n                                    } catch (e) {\n                                        error(e.message || e);\n                                        return;\n                                    }\n                                    success();\n                                },\n                                error);\n                    });\n                }\n\n                // JP_GD3-598\n                if (glue42gd && typeof glue42gd.addWillNavigateHandler === \"function\") {\n\n                    glue42gd.addWillNavigateHandler((success: any, error: any) => {\n                        this._gw3Session\n                            .send(\n                                {\n                                    type: \"reload\"\n                                })\n                            .then(\n                                (msg: any) => {\n                                    if (!msg.token) {\n                                        error(\"Expected gateway token for refreshing.\");\n                                        return;\n                                    }\n                                    try {\n                                        glue42gd.setGWToken(msg.token as string);\n                                    } catch (e) {\n                                        error(e.message || e);\n                                        return;\n                                    }\n                                    success();\n                                },\n                                error);\n                    });\n                }\n            }\n        }\n    }\n\n    public get bridgeType(): \"GW3\" {\n        return \"GW3\";\n    }\n\n    public init() {\n        // activity types\n        this.forwardActivityTypeMessagesToStatusEventHandlers();\n\n        // activities\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityCreated,\n            this.handleActivityCreatedMessage);\n\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityDestroyed,\n            this.handleActivityDestroyedMessage);\n\n        this.forwardActivityMessagesToStatusEventHandlers();\n\n        this.forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers();\n\n        // window types / peer factories\n\n        // NB: this forward must happen before the handlePeerFactoriesRemoved subscription\n        // since the latter clears state which is used by peerFactoryIdAndOwnerIdToWindowType\n        this.forwardPeerFactoryMessagesToStatusEventHandlers();\n\n        this.forwardPeerFactoryMessagesToPeerFactoryRequests();\n\n        this.subscribe(\n            gwMessagePeerFactoriesAdded,\n            this.handlePeerFactoriesAdded);\n\n        this.subscribe(\n            gwMessagePeerFactoriesRemoved,\n            this.handlePeerFactoriesRemoved);\n\n        // activity windows\n\n        this.forwardActivityWindowMessagesToEventHandlers();\n        //\n\n        this.subscribe(\n            gwMessageDisposePeer,\n      /*(msg)*/() => {\n                if (this._config.disposeRequestHandling === \"dispose\") {\n                    this.dispose();\n                    return;\n                }\n                if (this._config.disposeRequestHandling === \"exit\") {\n                    if (this._windows && typeof this._windows.my() !== \"undefined\") {\n                        this._windows.my().close();\n                        return;\n                    }\n                    if (typeof window !== \"undefined\" && typeof (window as any).close === \"function\") {\n                        window.close();\n                        return;\n                    }\n                    if (typeof process !== \"undefined\" && typeof (process as any).exit === \"function\") {\n                        process.exit();\n                        return;\n                    }\n                }\n            });\n\n        // start domain join handshake\n        this._gw3Session.onJoined(() => {\n\n            if (this._config.mode === \"trackMyOnly\" ||\n                this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                this._sessionJoinedPromiseResolve(this);\n            } else {\n                this._gw3Session\n                    .send(\n                        {\n                            type: \"subscribe\",\n                            activity_types:\n                                (this._config.mode === \"trackAll\" ? [] :\n                                    this._config.mode === \"trackTypes\" ? this._config.typesToTrack : [])\n                        })\n                    .then(() => {\n                        this._sessionJoinedPromiseResolve(this);\n                    });\n            }\n        });\n        this._gw3Session.join();\n    }\n\n    public dispose() {\n        this._gw3Subscriptions.forEach((sub) => sub && this._connection.off(sub));\n        this._gw3Subscriptions.length = 0;\n    }\n\n    // ActivityBridge interface\n\n    public ready(): Promise<object> {\n        return Promise.all([this._sessionJoinedPromise, this._activityJoinedPromise]);\n    }\n\n    public initReady(): Promise<ActivityBridge> {\n        return this._sessionJoinedPromise;\n    }\n\n    public onActivityTypeStatusChange(callback: EventHandlerCallback<EntityEvent<ActivityType>>) {\n        this._activityTypeStatusChangeCallbacks.push(callback);\n    }\n\n    public registerActivityType(\n        activityTypeName: string,\n        ownerWindow: WindowDefinition,\n        helperWindows?: WindowDefinition[],\n        config?: any,\n        description?: string): Promise<ActivityType> {\n\n        const entity: ActivityTypeGwMessageEntity = {};\n        entity.name = activityTypeName;\n        const toActivityPeerConfig = (windowDefinition: WindowDefinition) => ({ type: windowDefinition.type, name: windowDefinition.name, configuration: windowDefinition });\n\n        entity.owner_type = toActivityPeerConfig(ownerWindow);\n        entity.helper_types = helperWindows.map(toActivityPeerConfig);\n\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageAddActivityTypes,\n                    types: [entity]\n                })\n            .then(() => {\n                const activityType = GW3Bridge.activityTypeGwMessageEntityToActivityType(entity, description);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddActivityTypes);\n                return activityType;\n            });\n    }\n\n    public unregisterActivityType(activityTypeName: string): Promise<void> {\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageRemoveActivityTypes,\n                    types: [activityTypeName]\n                })\n            .then(() => {\n                const activityType = new ActivityType(activityTypeName, undefined, undefined, undefined);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Removed)),\n                    gwMessageAddActivityTypes);\n            });\n    }\n\n    public onWindowTypeStatusChange(callback: EventHandlerCallback<EntityEvent<WindowType>>): void {\n        this._windowTypeStatusChangeCallbacks.push(callback);\n    }\n\n    // NB: in GW3, peer factories have ids separate from the ids of the peers they create\n    // in this implementation we keep the two equal for simplicity\n    // NB: we assume only one peer will register a peer factory for a given type; otherwise the\n    // add/remove window types event logic will get messy\n    public registerWindowFactory(\n        windowType: string,\n        factory: WindowFactory,\n        parameters?: any): Promise<void> {\n        if (this._peerFactoriesRegisteredByUs[windowType]) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} already registered.`));\n        }\n\n        this._peerFactoriesRegisteredByUs[windowType] = factory;\n\n        // #deleteme TODO: review success/failure code paths\n        // #deleteme TODO: review - should we create the window type here?\n        const entity = {\n            id: windowType,\n            peer_type: windowType,\n            configuration: parameters\n        };\n        return this._gw3Session.send({\n            type: gwMessageAddPeerFactories,\n            factories: [entity]\n        })\n            .then(() => {\n                this.invokeCallbacks(\n                    this._windowTypeStatusChangeCallbacks,\n                    new EntityEvent(\n                        GW3Bridge.peerFactoryGwMessageEntityToWindowType(entity),\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddPeerFactories);\n            })\n            .catch(() => {\n                delete this._peerFactoriesRegisteredByUs[windowType];\n            });\n    }\n\n    public unregisterWindowFactory(windowType: string): Promise<void> {\n        const factory = this._peerFactoriesRegisteredByUs[windowType];\n        if (!factory) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} not registered.`));\n        }\n\n        delete this._peerFactoriesRegisteredByUs[windowType];\n\n        return this._gw3Session.send({\n            type: gwMessageRemovePeerFactories,\n            factory_ids: [windowType]\n        }).then(() => {\n            this.invokeCallbacks(\n                this._windowTypeStatusChangeCallbacks,\n                new EntityEvent(\n                    new WindowType(windowType, undefined),\n                    new EntityEventContext(EntityEventType.Removed)),\n                gwMessageAddPeerFactories);\n        });\n    }\n\n    public onActivityStatusChange(callback: EventHandlerCallback<EntityEvent<Activity>>) {\n        this._activityChangeCallbacks.push(callback);\n    }\n\n    public initiateActivity(activityType: string, context?: object, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<string> {\n        const initiateMsg: any = {\n            type: gwMessageCreateActivity,\n            activity_type: activityType,\n            initial_context: context,\n        };\n\n        if (this.isOverrideTypeDefinition(configuration)) {\n            initiateMsg.types_override = {\n                owner_type: { type: configuration.owner.type, name: configuration.owner.name, configuration: configuration.owner },\n                helper_types: configuration.helpers && configuration.helpers.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }))\n            };\n        } else {\n            initiateMsg.configuration = configuration && configuration.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }));\n        }\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            initiateMsg,\n            gwMessageActivityInitiated,\n            (msg, requestId) => msg.request_id === requestId,\n            gwMessageActivityCreated,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            gwMessageActivityDestroyed,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            (msg) => msg.activity_id,\n            null).then((id) => {\n                if (this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                    if (!this._activityTypesInitiatedFromMe[activityType]) {\n                        this._activityTypesInitiatedFromMe[activityType] = true;\n\n                        return this._gw3Session\n                            .send(\n                                {\n                                    type: \"subscribe\",\n                                    activity_types: [activityType]\n                                })\n                            .then(() => {\n                                return id;\n                            });\n                    }\n                }\n                return id;\n            });\n    }\n\n    public stopActivity(activity: Activity): Promise<boolean> {\n        return this._gw3Session.send({\n            type: gwMessageDestroyActivity,\n            activity_id: activity.id,\n            reason_uri: \"com.tick42.glue.activity.constants.destroyReason.general\",\n            reason: \"Destroying activity\"\n        }).then((_) => true);\n    }\n\n    public updateActivityContext(activity: Activity, context: any, fullReplace: boolean, removedKeys?: string[]): Promise<void> {\n        if (fullReplace) {\n            // this will currently fail on GW3\n            return this._contexts.set(activity.id, context);\n        } else {\n            removedKeys = removedKeys || [];\n            for (const x of removedKeys) {\n                context[x] = null;\n            }\n            return this._contexts.update(activity.id, context);\n        }\n    }\n\n    public announceWindow(windowType?: string, activityWindowId?: string) {\n        // in the GW3 case we are only joined to an activity after we announce ourselves\n        // so all announcement calls should go in 'registerWindow', not here\n        // (registerWindow registers a window that's not part of an activity, at least yet)\n        throw new Error(\"Invalid operation 'announceWindow' for GW3 protocol\");\n    }\n\n    public registerWindow(type: string, name: string, independent: boolean): Promise<string> {\n\n        let shouldSendReady = typeof this._connection.gatewayToken !== \"undefined\";\n        const peerId = this._connection.peerId;\n\n        // if running in GD3 (glue42gd is there) we should send ready only if we have the activityInfo object in glue\n        if (typeof window !== \"undefined\") {\n            const glue42gd = window.glue42gd;\n            if (glue42gd) {\n                shouldSendReady = typeof glue42gd.activityInfo !== \"undefined\";\n            }\n        }\n\n        if (shouldSendReady) {\n            this._gw3Session.send({\n                type: gwMessageReady,\n            });\n        }\n\n        this.invokeCallbacks(\n            this._activityWindowChangeCallbacks,\n            new EntityEvent<ActivityWindow>(\n                new ActivityWindow(peerId, name, type, undefined, this.getAgmInstance(peerId), independent, this.generateWindowGetter(peerId), undefined),\n                new EntityEventContext(EntityEventType.Added)),\n            \"register window\");\n\n        return Promise.resolve(peerId);\n    }\n\n    public onActivityWindowChange(callback: EventHandlerCallback<EntityEvent<ActivityWindow>>) {\n        this._activityWindowChangeCallbacks.push(callback);\n    }\n\n    public createWindow(activityId: string, windowDefinition: WindowDefinition): Promise<string> {\n\n        // if the user hasn't provided a layout option but has some of left,top,width,height\n        // insert a layout\n        if (!windowDefinition.layout) {\n            if (windowDefinition.left || windowDefinition.width || windowDefinition.height || windowDefinition.top) {\n                windowDefinition.layout = {\n                    mode: \"pixels\",\n                    cellSize: 1,\n                };\n            }\n        }\n\n        const joinPeer = (id: string) => {\n            if (!activityId) {\n                return;\n            }\n            return this.joinActivity(activityId, id, windowDefinition.name)\n                .then(() => {\n                    return id;\n                });\n        };\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            {\n                type: gwMessageCreatePeer,\n                peer_type: windowDefinition.type,\n                peer_name: windowDefinition.name || windowDefinition.type,\n                configuration: windowDefinition,\n                activity_id: activityId,\n            },\n            undefined,\n            undefined,\n            gwMessagePeerCreated,\n            (msg, requestId) => msg.request_id === requestId,\n            undefined,\n            undefined,\n            (msg) => msg.created_id,\n            joinPeer)\n            .then(joinPeer);\n    }\n\n    public closeWindow(id: string): Promise<void> {\n        return this._gw3Session.send({\n            type: gwMessageDestroyPeer,\n            destroy_peer_id: id\n        }).then((_) => undefined);\n    }\n\n    public getAnnouncementInfo(): AnnouncementInfo {\n        let activityId = this._config.activityId || (this._config.announcementInfo && this._config.announcementInfo.activityId);\n        let activityWindowType = (this._config.announcementInfo && this._config.announcementInfo.activityWindowType);\n        let activityWindowIndependent = (this._config.announcementInfo && this._config.announcementInfo.activityWindowIndependent);\n        let activityWindowName = (this._config.announcementInfo && this._config.announcementInfo.activityWindowName);\n\n        if (typeof window !== \"undefined\" &&\n            typeof window.location !== \"undefined\" &&\n            window.location.search &&\n            typeof URLSearchParams === \"function\") {\n            const searchParams = new URLSearchParams(location.search.slice(1));\n            activityWindowType = activityWindowType || searchParams.get(\"t42PeerType\");\n            activityWindowType = activityWindowType || searchParams.get(\"t42ActivityWindowType\");\n            if (typeof activityWindowIndependent === \"undefined\") {\n                activityWindowIndependent = searchParams.get(\"t42ActivityWindowIndependent\");\n            }\n            activityWindowName = activityWindowName || searchParams.get(\"t42ActivityWindowName\");\n            activityId = activityId || searchParams.get(\"t42ActivityId\");\n        }\n\n        activityWindowType = activityWindowType || \"unknown\";\n        activityWindowIndependent = activityWindowIndependent || false;\n        activityWindowName = activityWindowName || this._connection.peerId;\n\n        return {\n            activityWindowId: undefined, // not member of activity from the get go\n            activityId,\n            activityWindowType,\n            activityWindowIndependent,\n            activityWindowName,\n        };\n    }\n\n    public joinActivity(activityId: string, windowId: string, name?: string): Promise<void> {\n        const maybeName = (name && { name }) || {};\n        return this._gw3Session.send({\n            type: gwMmessageJoinActivity,\n            target_id: windowId,\n            activity_id: activityId,\n            ...maybeName\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, activityId, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                \"activity joined - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity joined - Activity\");\n        });\n    }\n\n    public leaveActivity(activityId: string, windowId: string): Promise<void> {\n        return this._gw3Session.send({\n            type: gwMessageLeaveActivity,\n            target_id: windowId,\n            activity_id: activityId\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, null, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                \"activity left - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity left - Activity\");\n        });\n    }\n\n    // purposefully returning empty arrays\n    public getActivityTypes(): Promise<ActivityType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getWindowTypes(): Promise<WindowType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivities(): Promise<Activity[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivityWindows(): Promise<ActivityWindow[]> {\n        return Promise.resolve([]);\n    }\n\n    // N/A\n\n    // ignore for now\n\n    // POSTPONED\n    public createStackedWindows(id: string, windowDefinitions: WindowDefinition[], timeout: number): Promise<string[]> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public getWindowBounds(id: string): Promise<WindowBounds> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowBounds(id: string, bounds: WindowBounds): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public activateWindow(id: string, focus: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowVisibility(id: string, visible: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public cloneActivity(id: string, cloneOptions: CloneOptions): Promise<string> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public attachActivities(from: string, to: string, tag: object): Promise<any> {\n        return this._gw3Session.send({\n            type: gwNmessageMergeActivities,\n            into: to,\n            merge: from\n        });\n    }\n\n    // POSTPONED\n    public detachActivities(activityId: string, newActivityInfo: ActivityDescriptor): Promise<string> {\n        return this._gw3Session.send({\n            type: gwMessageSplitActivities,\n            from: activityId,\n            // split: from\n        }).then(() => \"\");\n    }\n\n    // POSTPONED\n    public onActivitiesAttached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public onActivitiesDetached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    public onActivityAttachedDescriptorsRefreshed(callback: (info: any) => void): void {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public getAttachedDescriptors(): Promise<any[]> {\n        return Promise.resolve([]);\n    }\n\n    // helpers\n\n    // Protocol handling\n\n    private getRandomRequestId() {\n        return this._connection.peerId + \":\" + Math.floor(Math.random() * 1e9) + \"\";\n    }\n\n    private forwardAddedAndRemovedMessagesToEventHandler<TMessage, TEntity>(\n        addedMessageType: string,\n        removedMessageType: string,\n        mapper: (msg: TMessage, isAdded: boolean) => TEntity[],\n        handlers: Array<EventHandlerCallback<EntityEvent<TEntity>>>) {\n\n        const getGetEntityEvent = (isAdded: boolean) => (entity: any) => new EntityEvent<TEntity>(\n            entity,\n            new EntityEventContext(\n                isAdded ?\n                    EntityEventType.Added :\n                    EntityEventType.Removed));\n\n        let sub1;\n        let sub2;\n\n        sub1 = addedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            addedMessageType,\n            (msg) => mapper(msg, true),\n            getGetEntityEvent(true),\n            handlers);\n\n        sub2 = removedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            removedMessageType,\n            (msg) => mapper(msg, false),\n            getGetEntityEvent(false),\n            handlers);\n\n        return [sub1, sub2].filter((x) => x);\n    }\n\n    private forwardMessageToEventHandler<TMessage, TEntity>(\n        messageType: string,\n        mapper: (msg: TMessage) => TEntity[],\n        getEntityEvent: (entity: TEntity, msg: TMessage) => EntityEvent<TEntity>,\n        handler: Array<EventHandlerCallback<EntityEvent<TEntity>>>) {\n        return this.subscribe(\n            messageType,\n            (msg: TMessage) => {\n                mapper(msg)\n                    .forEach((ent: any) =>\n                        handler.forEach((h) => h(getEntityEvent(ent, msg))));\n            });\n    }\n\n    private sendCreateAndMapResultingMessagesToPromise<TCreatedMessage extends GwMessage, TPromiseType>(\n        msg: any,\n        initiatedMessageType: string,\n        initiatedMessageFilter: (msg: any, requestId: string) => boolean,\n        createdMessageType: string,\n        createdMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        cancelledMessageType: string,\n        cancelledMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        createdMessageToPromiseResolution: (TCreatedMessage: any) => TPromiseType,\n        listenForRecreates: (result: TPromiseType) => void): Promise<TPromiseType> {\n\n        const reqId = this.getRandomRequestId();\n\n        let resolveCreatedPromise: (arg: any) => void;\n        let rejectCreatedPromise: (arg: any) => void;\n        const createdPromise = new Promise<TPromiseType>((resolve, reject) => {\n            resolveCreatedPromise = resolve;\n            rejectCreatedPromise = reject;\n        });\n\n        let initiatedMessageAck: any = null;\n\n        let initiatedSubscription: any;\n        let createdSubscription: any;\n        let cancelledSubscription: any;\n        let errorSubscription: any;\n\n        const dropSubscriptions = () => {\n            this.dropSubscription(initiatedSubscription);\n            if (!listenForRecreates) {\n                this.dropSubscription(createdSubscription);\n            }\n            this.dropSubscription(cancelledSubscription);\n            this.dropSubscription(errorSubscription);\n        };\n\n        initiatedSubscription = initiatedMessageType &&\n            this.subscribe(\n                initiatedMessageType,\n                (msg4: any) => {\n                    if (!initiatedMessageFilter(msg4, reqId)) {\n                        return;\n                    }\n                    initiatedMessageAck = msg4;\n                    this.dropSubscription(initiatedSubscription);\n                });\n\n        let recreated = false;\n        createdSubscription =\n            this.subscribe(\n                createdMessageType,\n                (msg1: TCreatedMessage) => {\n                    if (!createdMessageFilter(msg1, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    if (recreated) {\n                        if (listenForRecreates) {\n                            listenForRecreates(createdMessageToPromiseResolution(msg1));\n                        }\n                    } else {\n                        recreated = true;\n                        resolveCreatedPromise(createdMessageToPromiseResolution(msg1));\n                    }\n                });\n        cancelledSubscription = cancelledMessageType &&\n            this.subscribe(\n                cancelledMessageType,\n                (msg2: any) => {\n                    if (!cancelledMessageFilter(msg2, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg2);\n                });\n        errorSubscription = cancelledMessageType &&\n            this.subscribe(\n                gwMmessageError,\n                (msg3: any) => {\n                    if (msg3.request_id !== reqId) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg3);\n                });\n\n        msg.request_id = reqId;\n\n        const toReturn = this._gw3Session\n            .send(msg)\n            .then(() => {\n                return createdPromise;\n            });\n        toReturn.then(dropSubscriptions, dropSubscriptions);\n        return toReturn;\n    }\n\n    // Entity Mapping\n\n    private peerFactoryIdAndOwnerIdToWindowType(factoryId: string, ownerId: string) {\n        const peerType = this._peerIdAndFactoryIdToPeerType[ownerId + \":\" + factoryId];\n        if (!peerType) {\n            return null;\n        } else {\n            return new WindowType(peerType, undefined);\n        }\n    }\n\n    private subscribe<TMessage>(messageType: string, handler: (msg: TMessage) => void) {\n        const sub = this._connection.on(\n            messageType,\n            (msg: TMessage) => handler.bind(this)(msg));\n\n        this._gw3Subscriptions.push(sub);\n\n        return sub;\n    }\n\n    private dropSubscription(subscription: any) {\n        if (subscription) {\n            this._connection.off(subscription);\n            delete this._gw3Subscriptions[this._gw3Subscriptions.indexOf(subscription)];\n        }\n    }\n\n    private invokeCallbacks<TEvent>(\n        callbacks: Array<EventHandlerCallback<EntityEvent<TEvent>>>,\n        event: EntityEvent<TEvent>,\n        description?: string) {\n        callbacks.forEach((cb) => {\n            try {\n                cb(event);\n            } catch (err) {\n                this._logger.error(`Error in ${description || event.context.type} callback: ` + JSON.stringify(err));\n            }\n        });\n    }\n\n    private handleActivityCreatedMessage(msg: ActivityGwMessage) {\n        if (!msg.context_id) {\n            this._logger.error(\"Activity created with unknown context_id: \" + msg.activity_id);\n        } else {\n            if (!this._contextSubscriptions[msg.activity_id]) {\n                this.subscribeToContext(msg);\n            }\n        }\n    }\n\n    private async subscribeToContext(msg: ActivityGwMessage): Promise<void> {\n        const activityId = msg.activity_id;\n        this._contextSubscriptions[activityId] =\n            await this._contexts.subscribe(activityId,\n                (data: any, updated: any, removed: string[]) => {\n                    const event = new EntityEvent<Activity>(\n                        new Activity(activityId, undefined, undefined, data, undefined),\n                        new ActivityContextChangedEventContext(data, updated, removed));\n\n                    this.invokeCallbacks(\n                        this._activityChangeCallbacks,\n                        event,\n                        \"context updated\");\n                });\n    }\n\n    private handleActivityDestroyedMessage(msg: ActivityGwMessage) {\n        const unsubscribeContext = this._contextSubscriptions[msg.activity_id];\n        if (typeof unsubscribeContext === \"function\") {\n            unsubscribeContext();\n        }\n        delete this._contextSubscriptions[msg.activity_id];\n    }\n\n    private handlePeerFactoriesAdded(msg: PeerFactoryGwMessage) {\n        msg.factories.forEach((entity: PeerFactoryGwMessageEntity) => {\n            this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + entity.id] = entity.peer_type;\n        });\n    }\n\n    private handlePeerFactoriesRemoved(msg: PeerFactoryGwMessage) {\n        msg.factory_ids.forEach((factoryId: string) => {\n            delete this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + factoryId];\n        });\n    }\n\n    private forwardActivityTypeMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<ActivityTypeGwMessage, ActivityType>(\n            gwMmessageActivityTypesAdded,\n            gwMessageActivityTypesRemoved,\n            (msg: ActivityTypeGwMessage, isAdded) => isAdded\n                ? msg.types.map((t) => GW3Bridge.activityTypeGwMessageEntityToActivityType(t, undefined))\n                : msg.types.map((t) => new ActivityType(t.name, undefined, undefined, undefined)),\n            this._activityTypeStatusChangeCallbacks);\n\n    }\n\n    private forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers() {\n        // if we're created as part of this activity, the JOINED ACTIVITY is\n\n        // the first time we'll hear about it; so let's record the participants\n        for (const activityCreatedMessage of [gwMessageActivityCreated, gwMessageJoinedActivity, gwMessageOwnerChanged]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, ActivityWindow>(\n                activityCreatedMessage,\n                (msg) =>\n                    ([msg.owner || { ...msg, type: msg.peer_type, name: msg.peer_name, peer_id: msg.owner_id }])\n                        .concat(msg.participants || [])\n                        .map((info: any) => new ActivityWindow(info.peer_id, info.name, info.type, msg.activity_id, this.getAgmInstance(info.peer_id), undefined, this.generateWindowGetter(info.peer_id), undefined)),\n                (ent, msg) => new EntityEvent<ActivityWindow>(ent, new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                this._activityWindowChangeCallbacks);\n        }\n    }\n\n    private forwardActivityMessagesToStatusEventHandlers() {\n\n        // see dot-net-activity\\Activity\\ActivityState.cs\n\n        for (const createdMessage of [gwMessageActivityCreated, gwMessageJoinedActivity]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n                createdMessage,\n                (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"started\", \"\", new Date()))],\n                (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n                this._activityChangeCallbacks);\n        }\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityDestroyed,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"destroyed\", msg.reason, new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityInitiated,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageOwnerChanged,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerFactoryGwMessage, WindowType>(\n            gwMessagePeerFactoriesAdded,\n            gwMessagePeerFactoriesRemoved,\n            (msg: PeerFactoryGwMessage, isAdded: boolean) => isAdded\n                ? msg.factories.map(GW3Bridge.peerFactoryGwMessageEntityToWindowType)\n                : msg.factory_ids.map((id) => this.peerFactoryIdAndOwnerIdToWindowType(id, msg.owner_id)).filter((x) => x != null),\n            this._windowTypeStatusChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToPeerFactoryRequests() {\n        this.subscribe(\n            gwMessagePeerRequested,\n            (msg: PeerRequestedGwMessage) => {\n                const factory = this._peerFactoriesRegisteredByUs[msg.peer_factory];\n                if (!factory) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: `Unknown peer factory ${msg.peer_factory}`\n                        });\n                    return;\n                }\n\n                try {\n                    const configuration = msg.configuration || {};\n                    // NB: peer factories (or whoever they're delegating to) need to support whatever activity\n                    // environment (GW3, HC) we're targeting when they're creating peers\n                    // the manager is env agnostic, the bridge will augment the configuration with whatever's required\n\n                    // NB: also, since peers are requested in two ways (single peer with just its configuration,\n                    // or peer created as part of new activity, where the factory receives the aggregate config of\n                    // all peers, combined from ADD ACTIVITY TYPE and CREATE ACTIVITY), the peer factories need to\n                    // be able to handle both configuration structures intelligently.\n                    configuration.gateway_token = configuration.gateway_token || msg.gateway_token;\n                    configuration.peer_factory = configuration.peer_factory || msg.peer_factory;\n                    const promise = factory({\n                        activityId: msg.activity && msg.activity.id,\n                        activityType: msg.activity && msg.activity.type,\n                        type: msg.configuration && msg.configuration.type,\n                        gwToken: configuration.gateway_token,\n                        configuration\n                    });\n                    if (promise && promise.then && promise.catch) {\n                        promise.catch((err) => this._gw3Session.send(\n                            {\n                                type: gwMmessageError,\n                                request_id: msg.request_id,\n                                reason: err && (err.message || JSON.stringify(err))\n                            }));\n                    }\n                } catch (err) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: err && (err.message || JSON.stringify(err))\n                        });\n                }\n            });\n    }\n\n    private forwardActivityWindowMessagesToEventHandlers() {\n        for (const joinedMessage of [gwMessageActivityJoined, gwMessageJoinedActivity]) {\n            this.subscribe(joinedMessage,\n                (msg: any) => {\n                    const joinedId = (joinedMessage === gwMessageActivityJoined) ? msg.joined_id : msg.peer_id;\n                    const joinedType = (joinedMessage === gwMessageActivityJoined) ? msg.joined_type : msg.peer_type;\n                    const joinedName = (joinedMessage === gwMessageActivityJoined) ? msg.joined_name : msg.peer_name;\n\n                    const entity = new ActivityWindow(\n                        joinedId,\n                        joinedName,\n                        joinedType /* for ACTIVITY JOINED */,\n                        msg.activity_id,\n                        this.getAgmInstance(joinedId),\n                        undefined,\n                        this.generateWindowGetter(joinedId),\n                        undefined);\n\n                    // TODO review - what if it's our activity, do we\n                    // even need to subscribe\n                    if (!this._contextSubscriptions[msg.activity_id]) {\n                        this.subscribeToContext(msg).then(() => {\n                            if (joinedMessage === gwMessageJoinedActivity) {\n                                this._activityJoinedPromiseResolve({});\n                            }\n                        });\n                    } else if (joinedMessage === gwMessageJoinedActivity) {\n                        this._activityJoinedPromiseResolve({});\n                    }\n\n                    // TODO review: we might have the context data here already\n                    // why not update it here instead of waiting for subscribeToContext\n                    this.invokeCallbacks(\n                        this._activityWindowChangeCallbacks,\n                        new EntityEvent<ActivityWindow>(\n                            entity,\n                            new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                        joinedMessage);\n\n                });\n        }\n\n        this.subscribe(\n            gwMessageActivityLeft,\n            (msg: any) => {\n                const entity = new ActivityWindow(\n                    msg.left_id,\n                    undefined,\n                    undefined,\n                    null,\n                    this.getAgmInstance(msg.left_id),\n                    undefined,\n                    this.generateWindowGetter(msg.left_id),\n                    undefined);\n\n                this.invokeCallbacks(\n                    this._activityWindowChangeCallbacks,\n                    new EntityEvent<ActivityWindow>(\n                        entity,\n                        new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                    gwMessageActivityLeft);\n            });\n\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerCreatedGwMessage, ActivityWindow>(\n            gwMessagePeerCreated,\n            undefined,\n            (msg) => [\n                new ActivityWindow(\n                    msg.created_id,\n                    undefined /* #deleteme TODO: review - we should know the name if any */,\n                    undefined /* #deleteme TODO: review - we should know the type */,\n                    undefined,\n                    undefined,\n                    undefined,\n                    this.generateWindowGetter(msg.created_id),\n                    undefined)],\n            this._activityWindowChangeCallbacks);\n    }\n\n    private getAgmInstance(id: string): Glue42.AGM.Instance {\n        return this._config.agm.servers().find((s) => s.peerId === id || s.windowId === id);\n    }\n\n    private generateWindowGetter(peerId: string): () => Glue42.Windows.GDWindow {\n        return () => {\n            const server = this.getAgmInstance(peerId);\n            if (!server) {\n                return;\n            }\n            const windowId = server.windowId;\n            return this._config.windows.list().filter((w) => w.id === windowId)[0];\n        };\n    }\n\n    private isOverrideTypeDefinition(value: OverrideTypeDefinition | WindowDefinition[]): value is OverrideTypeDefinition {\n        if (typeof value === \"undefined\") {\n            return false;\n        }\n        if ((value as OverrideTypeDefinition).owner) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { EntityEventType } from \"./../contracts/entityEvent\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\n\nimport ActivityManager from \"./../core/activityManager\";\nimport { Logger } from \"./../helpers/logger\";\nimport * as util from \"./../helpers/util\";\n\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Callback } from \"../contracts/contracts\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface My {\n\n  activity: Activity;\n\n  window: ActivityWindow;\n\n  context: object;\n\n  updateContext(context: object, callback?: any): Promise<object>;\n\n  setContext(context: object, callback?: any): Promise<object>;\n\n  onActivityJoined(callback: (activity: Activity) => void): void;\n\n  onActivityLeft(callback: (activity: Activity) => void): void;\n\n  onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void): void;\n\n  clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity>;\n\n  attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor>;\n\n  setFrameColor(color: string, callback: () => void): Promise<Activity>;\n\n  getFrameColor(): string;\n\n  onFrameColorChanged(callback: () => void): void;\n}\n\n/**\n * A lightweight, single activity oriented subset of the API which should be used by most activity applications.\n * Provides access to the activity of your application (my.activity) and shortcuts to the most commonly used methods\n * (e.g. my.createWindow is a shortcut for my.activity.createWindow)\n *\n * @module my\n */\nexport default class ActivityMy implements My {\n\n  public _myAttached: Array<(state: AttachedActivityDescriptor) => void> = [];\n  public _myDetached: Array<(state: AttachedActivityDescriptor) => void> = [];\n  public _myAttachedTo: Array<(activity: Activity, state: AttachedActivityDescriptor) => void> = [];\n  public _myDetachedFrom: Array<(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void> = [];\n  public _myActivityFrameColorChanged: Array<(frameColor: string) => void> = [];\n  public _myActivityJoinedCallbacks: Array<(activity: Activity, event: any) => void> = [];\n  public _myActivityRemovedCallbacks: Array<(activity: Activity, event: any) => void> = [];\n  public _myContextUpdateCallbacks: Array<(context: object, delta: object, removed: string[], activity: Activity) => void> = [];\n  public _w: ActivityWindow;\n  public _m: ActivityManager;\n  public _logger: Logger = Logger.Get(this);\n\n  constructor(manager: ActivityManager, windows: any) {\n    this._m = manager;\n    manager.ready()\n      .then((am) => {\n        // Subscribe for events for driving \"my\" logic\n        am.subscribeActivityContextChanged(this._subscribeMyContextChanged.bind(this));\n        am.subscribeWindowEvents(this._subscribeMyWindowEvent.bind(this));\n        am.subscribeActivitiesAttached(this._subscribeActivitiesAttached.bind(this));\n        am.subscribeActivitiesDetached(this._subscribeActivitiesDetached.bind(this));\n        if (windows) {\n          windows.onWindowFrameColorChanged(this._subscribeWindowFrameColorChanged.bind(this));\n        }\n      });\n  }\n\n  /**\n   * The current activity window; can be undefined (if the window is not part of any activity)\n   *\n   * @var {Window} window\n   */\n  public get window(): ActivityWindow {\n    if (util.isUndefinedOrNull(this._w)) {\n      const announcedWindows = this._m.announcedWindows;\n      if (announcedWindows.length > 0) {\n        this._w = announcedWindows[0];\n      }\n    }\n    return this._w;\n  }\n\n  /**\n   * The current activity that the application participates in.\n   * Can be undefined (if currently not part of any activity)\n   *\n   * @var {module:activity} activity\n   */\n  public get activity(): Activity {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return undefined;\n    }\n    return myWin.activity;\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string| windowDefinition} windowType The type of the window to be created\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition): Promise<ActivityWindow> {\n    return this._m.createWindow(this.activity, windowType);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: Array<string | WindowDefinition>, timeout?: number): Promise<ActivityWindow[]> {\n    return this._m.createStackedWindows(this.activity, windowTypes, timeout);\n  }\n\n  /**\n   * The current activity context. To update use my.updateContext, to replace my.setContext\n   *\n   * @var {object} context\n   */\n  public get context(): object {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return {};\n    }\n\n    return activity.context;\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise<object>((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.updateContext(context, callback);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.setContext(context, callback);\n  }\n\n  public onActivityJoined(callback: (activity: Activity) => void) {\n    this._myActivityJoinedCallbacks.push(callback);\n\n    // replay joined event\n    const myWin = this.window;\n    if (!util.isUndefinedOrNull(myWin) && !util.isUndefinedOrNull(myWin.activity)) {\n      callback(myWin.activity);\n    }\n  }\n\n  public onActivityLeft(callback: (activity: Activity) => void) {\n    this._myActivityRemovedCallbacks.push(callback);\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} callback Handler function that will receive context related events\n   */\n  public onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void) {\n    this._myContextUpdateCallbacks.push(callback);\n\n    // publish initial event\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const activity = myWin.activity;\n    if (util.isUndefinedOrNull(activity)) {\n      return;\n    }\n\n    // NB: either the callback is added before the activity is recorded in the API, or\n    // the activity is recorded before the callback\n    // in the former case, when the activity is seen, the callback will be invoked in _notifyMyContextChanged\n    // in the latter, the callback will be invoked here\n    // in both cases, the callback will be invoked at least once as soon as an activity is recorded\n\n    // see \"long analysis for callback behavior in GW3: several cases\" for full explanation\n\n    callback(activity.context, activity.context, [], activity);\n  }\n\n  public clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity> {\n    const act = this.activity;\n    return this._m.clone(act, options, callback);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId: string;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._m.attachActivities(activityId, this.activity.id, tag);\n  }\n\n  public onActivityAttached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myAttached.push(callback);\n  }\n\n  public onActivityDetached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myDetached.push(callback);\n  }\n\n  public onAttachedToActivity(callback: (activity: Activity, state: AttachedActivityDescriptor) => void) {\n    this._myAttachedTo.push(callback);\n  }\n\n  public onDetachedFromActivity(callback: (detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void)  {\n    this._myDetachedFrom.push(callback);\n  }\n\n  public get attached() {\n    if (!this.activity) {\n      return [];\n    }\n\n    return this.activity.attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n\n    if (this.activity) {\n      return this.activity.setFrameColor(color, callback);\n    } else {\n      return Promise.resolve(null);\n    }\n  }\n\n  public getFrameColor(): string {\n\n    if (this.activity) {\n      return this.activity.getFrameColor();\n    }\n\n    return \"\";\n  }\n\n  public onFrameColorChanged(callback: () => void) {\n    this._myActivityFrameColorChanged.push(callback);\n  }\n\n  private _subscribeMyContextChanged(activity: Activity, context: object, delta: object, removed: string[]) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (activity.id !== myActivity.id) {\n      return;\n    }\n\n    this._notifyMyContextChanged(activity, context, delta, removed);\n  }\n\n  private _subscribeMyWindowEvent(activity: Activity, window: ActivityWindow, event: any) {\n\n    if (util.isUndefinedOrNull(this.window)) {\n      return;\n    }\n\n    // ignore events not related to my window\n    if (this.window.id !== window.id) {\n      return;\n    }\n\n    if (event === EntityEventType.ActivityWindowJoinedActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityJoinedCallbacks);\n\n      // NB: tick42-contexts doesn't raise automatically an update event on join if the snapshot matches\n      // the currently recorded data\n      // revisited: however, it is pushing an update on subscribe() (which is performed by js-activity)\n      // long analysis for callback behavior in GW3: several cases\n      // 1 client calls onContextChanged before joined-activity arrives\n      // then callback is pushed but onContextChanged callback call is skipped\n      //    1-1 js-activity handles joined-activity first; it calls js-context subscribe\n      //    1-1-1 js-context has not seen the activity so far so it doesn't invoke an update\n      //    however, js-context then handles joined-activity and raises an update\n      //    1-1-2 js-context has seen the activity, so it raises an update\n      //    js-context then handles joined-activity and doesn't raise a second update unless the received snapshot is\n      //    different from the last seen context value (can this even happen?)\n      //    1-2 js-context handles joined-activity first\n      //    since js-activity is not subscribed, whether it raises an update or not, it's not propagated\n      //    js-activity then handles joined-activity, performs a subscribe and js-context raises an update\n      // 2 joined-activity arrives, whatever updates are raised by js-activity's subscribe() or js-context's\n      // message handler are not propagated since the callback is not pushed, client then calls onContextChanged,\n      // and the callback is called inside that\n      // also, the callback cannot be invoked first in 1 then 2 or first 2 then 1\n      // => in all cases, a callback is called exactly once as soon as (it's subscribed && the activity is joined)\n      // (in 1-1-2 it *might* be possible to be called twice, first with a slightly out of date context,\n      // then with the joined-activity snapshot, see \"different from the last seen context value\", but it's unlikely,\n      // and not a real issue anyway)\n      // in the HC case, however, case 1 doesn't work since js-context doesn't raise updates on subscribe() nor\n      // joining the activity (#deleteme TODO LATER MINOR: verify), so we need to raise it ourselves\n\n      // 2017-09-08: final revisit (@vnikolov)\n      // since SBGW_D-163 allows automatic subscription to contexts of pre-existing activities, 1-1-2 no longer works\n      // (we might have already seen the latest state before joined-activity so no update will be raised)\n      // for this reason I'm invoking notifyMyContextChanged unconditionally - so we might have multiple\n      // invocations; if this turns into a problem we might add a guard inside notifyMyContextChanged that\n      // checks we're not raising it twice with the same context value\n      //\n      // we might also get a duplicate raise if the sender of an update is also subscribed to the context\n      // if (this._m.usingHc) {\n      this._notifyMyContextChanged(activity, activity.context, null, null);\n      // }\n\n      // #deleteme TODO LATER MAJOR: what about the cases when we're not watching foreign activity contexts?\n    } else if (event === EntityEventType.ActivityWindowLeftActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityRemovedCallbacks);\n      // #deleteme TODO LATER MINOR: should we send null update here?\n    }\n  }\n\n  private _notifyMyWindowEvent(activity: Activity, callbackStore: Array<(activity: Activity, event: any) => void>) {\n    callbackStore.forEach((element) => {\n      try {\n        element(activity, event);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyMyContextChanged(activity: Activity, context: object, delta?: object, removed?: string[]) {\n    delta = delta || {};\n    removed = removed || [];\n\n    this._myContextUpdateCallbacks.forEach( (element) => {\n      try {\n        element(context, delta, removed, activity);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttached(state: AttachedActivityDescriptor) {\n\n    this._myAttached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetached(state: AttachedActivityDescriptor) {\n\n    this._myDetached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttachedTo(state: AttachedActivityDescriptor) {\n\n    this._myAttachedTo.forEach((cb) => {\n      try {\n        cb(this.activity, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetachedFrom(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) {\n\n    this._myDetachedFrom.forEach((cb) => {\n      try {\n        cb(detached, existing, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _subscribeActivitiesAttached(newAct: Activity, state: AttachedActivityDescriptor) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (newAct.id !== myActivity.id) {\n      return;\n    }\n\n    if (state.windowIds.indexOf(myWin.id) >= 0) {\n      this._notifyAttachedTo(state);\n      return;\n    }\n\n    this._notifyAttached(state);\n  }\n\n  private _subscribeActivitiesDetached(newAct: Activity, oldAct: Activity, state: any) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (oldAct.id === myActivity.id) {\n      this._notifyDetached(state);\n    }\n\n    if (newAct.id === myActivity.id) {\n      this._notifyDetachedFrom(newAct, oldAct, state);\n    }\n  }\n\n  private _subscribeWindowFrameColorChanged(window: Glue42.Windows.GDWindow) {\n    const act = this.activity;\n    if (!act) {\n      return;\n    }\n\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id === window.id) {\n      this._myActivityFrameColorChanged.forEach((callback) => {\n        callback(window.frameColor);\n      });\n    }\n  }\n}\n","import {Logger} from \"./logger\";\nimport * as util from \"../helpers/util\";\n/**\n * Class that can be used as a marker for successful completion of a set of events\n * @private\n * @module readyMarker\n */\nexport class ReadyMarker {\n  private _callbacks: Array<(err: any) => void>;\n  private _signals: number;\n  private _error: any;\n  private _logger: Logger;\n  private _name: string;\n\n  /**\n   * Creates new marker\n   * @param name Name of the marker, useful in logging\n   * @param signalsToWait Number of signals(events) that needs to be signaled (completed) before the marker is set as completed\n   */\n  constructor(name: string, signalsToWait: number) {\n    this._logger = Logger.Get(\"ReadyMarker [\" + name + \"]\");\n    this._logger.debug(\"Initializing ready marker for '\" + name + \"' with \" + signalsToWait + \" signals to wait\");\n    if (signalsToWait <= 0) {\n      throw new Error(\"Invalid signal number. Should be > 0\");\n    }\n    this._signals = signalsToWait;\n    this._callbacks = [];\n    this._name = name;\n  }\n\n  /**\n   * Adds a new callback that will be notified when the events are completed (success) or some error happened\n   */\n  public setCallback(callback: (err: any) => void) {\n    if (this.isSet()) {\n      callback(undefined);\n      return;\n    } else if (this.isError()) {\n      callback(this._error);\n      return;\n    }\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Signals for a completion of an event. If this is the last event success callbacks will be called\n   */\n  public signal(message?: string) {\n    this._logger.debug(\"Signaled - \" + message + \" - signals left \" + (this._signals - 1));\n    this._signals--;\n    if (this._signals < 0) {\n      throw new Error(\"Error in ready marker '\" + this._name + \" - signals are \" + this._signals);\n    }\n\n    if (this.isSet()) {\n      this._callbacks.forEach((callback) => {\n        callback(undefined);\n      });\n    }\n  }\n\n  /**\n   * Signals for an error in some of the events. This will notify all callbacks that the marker has failed\n   */\n  public error(error: string) {\n    this._error = error;\n    this._callbacks.forEach((errorCallback) => {\n      errorCallback(error);\n    });\n  }\n\n  /**\n   * Checks if the marker is set (completed)\n   */\n  public isSet() {\n    if (this.isError()) {\n      return false;\n    }\n    return this._signals === 0;\n  }\n\n  /**\n   * Checks if the marker has failed (some of the events has failed)\n   */\n  public isError() {\n    return !util.isUndefined(this._error);\n  }\n\n  /**\n   * Returns the last reported error (undefined if no error)\n   */\n  public getError() {\n    return this._error;\n  }\n}\n","import ActivityEntity from \"../entities/activityEntity\";\nimport {\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { ActivityState } from \"..//contracts/entityEvent\";\n\ndeclare const htmlContainer: any;\n\n/**\n * Collection of ActivityEntities that provides change notifications\n * @module entityCollection\n * @private\n */\nexport class EntityObservableCollection<T extends ActivityEntity> {\n\n  private _items: { [key: string]: T } = {};\n  private _listeners: Array<(item: T, action: EntityEventContext) => void> = [];\n  private _processNew: (entity: T) => void;\n\n  constructor(processNew: (entity: T) => void) {\n    this._processNew = processNew;\n  }\n\n  /**\n   * Adds one item to the collection\n   */\n  public addOne(item: T) {\n    this.add([item]);\n  }\n\n  /**\n   * Adds an array of items to the collection\n   */\n  public add(items: T[]) {\n    items.forEach((element) => {\n      this.process(new EntityEvent<T>(element, new EntityEventContext(EntityEventType.Added)));\n    });\n  }\n\n  /**\n   * Process existing EntityEvent\n   */\n  public process(event: EntityEvent<T>): T {\n\n    const context = event.context;\n    const type = context.type;\n    const entity = event.entity;\n\n    // here we're populating some data which particular implementations (e.g.\n    // GW3) can't provide\n\n    // TODO: extract these cases into external filters\n\n    // activity status change without old status?\n    // grab it from the existing entity\n    if (type === EntityEventType.StatusChange &&\n      !(context as ActivityStatusChangeEventContext).oldStatus) {\n      const act = this._items[entity.id] as any as Activity;\n      if (act) {\n        (context as ActivityStatusChangeEventContext).oldStatus = act.status;\n      }\n    }\n\n    // the GW3 bridge notifies us of possible status changes (it's mostly stateless so\n    // it can't/doesn't distinguish between JOINED ACTIVITY for an activity we already\n    // know about vs a brand new activity. for this reason, we just coalesce status\n    // updates which indicate the same state.\n    if (type === EntityEventType.StatusChange &&\n      (context as ActivityStatusChangeEventContext).oldStatus &&\n      (context as ActivityStatusChangeEventContext).newStatus &&\n      (context as ActivityStatusChangeEventContext).oldStatus.state ===\n      (context as ActivityStatusChangeEventContext).newStatus.state) {\n      context.type = EntityEventType.Updated;\n    }\n\n    // GW3: coalesce multiple joined/left events\n\n    if (typeof htmlContainer === \"undefined\") {\n      if (type === EntityEventType.ActivityWindowJoinedActivity &&\n        this._items[entity.id] &&\n        (this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n      if (type === EntityEventType.ActivityWindowLeftActivity &&\n        this._items[entity.id] &&\n        !(this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n    }\n\n    // update internal collections (adding the entity or updating existing entity). From that\n    // point start using the internalEntity\n    // NB: undefined properties are coalesced, null properties represent removals\n    const internalEntity = this._updateInternalCollections(entity, type, context);\n    this._notifyListeners(internalEntity, context);\n    return internalEntity;\n  }\n\n  /**\n   * Gets all items from the collection.\n   */\n  public get(): T[] {\n    const result = [];\n    for (const key in this._items) {\n      if (this._items.hasOwnProperty(key)) {\n        const element = this._items[key];\n        result.push(element);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets item by name/id\n   * @param name  Name/id of the item to get\n   * @returns     Item if found; undefined if not\n   */\n  public getByName(name: string) {\n    // this does not work for some reason\n    // return this._items[name];\n    for (const key in this._items) {\n      if (key === name) {\n        return this._items[key];\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Gets a item if in the collection or waits for it to appear\n   * @param name\n   * @returns {Promise<T>}\n   */\n  public getOrWait(name: string): Promise<T> {\n    return new Promise<T>((resolve) => {\n      const entityAddedHandler = (entity: T) => {\n        if (entity.id !== name) {\n          return;\n        }\n        resolve(entity);\n        this.unsubscribe(entityAddedHandler);\n      };\n      this.subscribe(entityAddedHandler);\n\n      // try to get right away - if not here wait for it to appear\n      const window = this.getByName(name);\n      if (window) {\n        this.unsubscribe(entityAddedHandler);\n        resolve(window);\n        return;\n      }\n    });\n  }\n\n  /**\n   * Subscribes a listener for changes\n   * @param handler Callback for changes\n   */\n  public subscribe(handler: (act: T, action: EntityEventContext) => void): () => void {\n    this._listeners.push(handler);\n    // replay existing items for new subscribers\n    Object.keys(this._items).forEach((key) => {\n      const element = this._items[key];\n      handler(element, new EntityEventContext(EntityEventType.Added.toString()));\n    });\n\n    return () => {\n      this.unsubscribe(handler);\n    };\n  }\n\n  /**\n   *  Unsubscribes a listener\n   */\n  public unsubscribe(handler: (act: T, action: EntityEventContext) => void) {\n    const index = this._listeners.indexOf(handler);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Notify all listeners for some event\n   */\n  private _notifyListeners(entity: T, context: EntityEventContext) {\n    this._listeners.forEach((listener) => {\n      try {\n        listener(entity, context);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n\n  /**\n   * Update internal collections (usually after some kind of modification event has arrived)\n   */\n  private _updateInternalCollections(entity: T, type: EntityEventType, context: any) {\n    const entityAsAny = (entity as any);\n\n    // #deleteme TODO: refactor - currently we apply some rules for each type\n    const isActivityDestroy =\n      (type === EntityEventType.StatusChange &&\n        entityAsAny.status &&\n        entityAsAny.status.state === ActivityState.Destroyed) ||\n      (type === EntityEventType.StatusChange &&\n        context &&\n        context.newStatus &&\n        context.newStatus.state === ActivityState.Destroyed);\n\n    // #deleteme TODO: verify this stuff\n    // windows have two states - removed from activity and closed (TODO: this only works in GD 2.1 and later)\n    const isWindowClose = type === EntityEventType.Closed;\n    const isTypeRemove = type === EntityEventType.Removed && typeof entityAsAny.isIndependent === \"undefined\";\n\n    if (isTypeRemove || isWindowClose || isActivityDestroy) {\n\n      const oldEntity = this._items[entity.id];\n      delete this._items[entity.id];\n      // on remove return the input entity\n      this._processNew(entity);\n      if (oldEntity) {\n        entity._beforeDelete(oldEntity);\n      }\n      return entity;\n    } else {\n      const key = entity.id;\n      // if new object add, otherwise clone object properties\n      if (!this._items.hasOwnProperty(key)) {\n        this._processNew(entity);\n        this._items[entity.id] = entity;\n      } else {\n        this._items[entity.id]._update(entity);\n      }\n    }\n\n    return this._items[entity.id];\n  }\n}\n","﻿/* tslint:disable */\nimport { ActivityContextUpdateHandler, Callback } from \"../contracts/contracts\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport {\n  ActivityContextChangedEventContext,\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\n\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport Activity from \"../entities/activity\";\nimport ActivityEntity from \"../entities/activityEntity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport WindowSource from \"../entities/windowSource\";\n\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ReadyMarker } from \"../helpers/readyMarker\";\nimport { EntityObservableCollection } from \"../helpers/entityObservableCollection\";\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\n\nimport { ActivityBridge } from \"../bridges/activityBridge\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { ActivityState } from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n/* tslint:enable */\n\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\ndeclare const htmlContainer: any;\n\nexport default class ActivityManager {\n  private _bridge: ActivityBridge;\n  private _readyMarker: ReadyMarker;\n  private _dataReadyMarker: ReadyMarker;\n  private _descriptorsMarker: ReadyMarker;\n\n  private _activityTypes: EntityObservableCollection<ActivityType>;\n  private _windowTypes: EntityObservableCollection<WindowType>;\n  private _activities: EntityObservableCollection<Activity>;\n  private _windows: EntityObservableCollection<ActivityWindow>;\n  private _logger: Logger = Logger.Get(\"activityManager\");\n  private _announcedWindows: ActivityWindow[] = [];\n  private _attachedCallbacks: Array<(newAct: any, descriptor: any) => void> = [];\n  private _detachedCallbacks: Array<(newAct: any, oldAct: Activity, descriptor: any) => void> = [];\n  private _frameColorChangesCallbacks: Array<(act: Activity, frameColor: string) => void> = [];\n  private _windowHandlers: any[][] = [];\n\n  public get usingHc(): boolean {\n    return this._bridge.bridgeType === \"HC\";\n  }\n\n  public get announcedWindows(): ActivityWindow[] {\n    return this._announcedWindows;\n  }\n\n  public set announcedWindows(v: ActivityWindow[]) {\n    throw new Error(\"not allowed\");\n  }\n\n  constructor(bridge: ActivityBridge, autoAnnounce: boolean, windows: any) {\n    this._bridge = bridge;\n    this._activityTypes = new EntityObservableCollection<ActivityType>((e) => this._grabEntity(e));\n    this._windowTypes = new EntityObservableCollection<WindowType>((e) => this._grabEntity(e));\n    this._activities = new EntityObservableCollection<Activity>((e) => this._grabEntity(e));\n    this._windows = new EntityObservableCollection<ActivityWindow>((e) => this._grabEntity(e));\n\n    // signals to wait for - get AT, get WT, get Activities and get Windows\n    this._dataReadyMarker = new ReadyMarker(\"Activity Manager Data\", [\"GetActivityTypes\", \"GetWindowTypes\", \"GetActivities\", \"GetWindows\"].length);\n    this._descriptorsMarker = new ReadyMarker(\"Attached Activities Descriptors\", [\"GetDescriptors\"].length);\n\n    // waiting for activity data first\n\n    // NB: in the GW3 case, we don't have the ability to request data at will\n    // but need wait for delta messages\n    // So GW3Bridge returns empty arrays from the get() calls\n    // We're relying on the fact that the GW3 bridge will wait\n    // until resolving its .ready()\n\n    if (autoAnnounce) {\n      // if auto announce replace the ready marker, so:\n      // 1) wait for data\n      // 2) get descriptors\n      // 3) announce the current window\n\n      this._readyMarker = new ReadyMarker(\"Activity Manager Announce\", [\"Announcement\"].length);\n      this._dataReadyMarker.setCallback((dataErr: any) => {\n        if (dataErr) {\n          this._readyMarker.error(dataErr);\n        }\n\n        this._descriptorsMarker.setCallback((err: any) => {\n\n          if (err) {\n            this._readyMarker.error(err);\n          }\n\n          this._logger.debug(\"Auto announcing window\");\n          // signal no matter if it failed or not\n          this.announceWindow()\n            .then((w) => {\n              // NB: this creates glue.activities.my.window\n              this._announcedWindows.push(w);\n              this._readyMarker.signal(\"Successfully announced window with id '\" + w.id + \"'\");\n            })\n            .catch((errCatch) => {\n              this._logger.debug(\"Will not announce window - \" + errCatch);\n              this._readyMarker.signal();\n            });\n        });\n\n        this.refreshDescriptors();\n      });\n    } else {\n      // TODO: not sure if this still works\n      this._readyMarker = this._dataReadyMarker;\n    }\n\n    this._bridge.onActivitiesAttached((e) => {\n      this._handleActivitiesAttached(e);\n    });\n    this._bridge.onActivitiesDetached((e) => {\n      this._handleActivitiesDetached(e);\n    });\n    this._bridge.onActivityAttachedDescriptorsRefreshed((e) => {\n      this._handleActivityDescriptorsRefreshed(e);\n    });\n    if (windows) {\n      windows.onWindowFrameColorChanged(this._handleWindowFrameColorChanged.bind(this));\n    }\n\n    // initialize the bridge\n    this._bridge.init();\n\n    // NB: there is no race condition here.\n    // Since browser/Node JS is a single-threaded environment, assuming no events on _bridge\n    // fire inside .init(), this subscribe will catch anything that comes between it and the init() call\n    this._subscribeForData();\n\n    // NB: in GW3 case, the initial state messages after a JOIN come in before the JOIN's SUCCESS\n    // message (see https://confluence.tick42.com:8443/display/TD/Global+Gateway+Domain#GlobalGatewayDomain-JOIN)\n    // so the .initReady().then() callback will only get invoked after we've received the initial domain\n    // state. We need to be ready to handle events before that, hence the _subscribeForData() above.\n    // what's more, our own JOINED ACTIVITY will come only after we've sent our READY, hence waiting\n    // for bridge.ready() in the manager's ready()\n\n    // wait for it to become ready and then start getting/subscribing for data\n    this._bridge\n      .initReady()\n      .then((aw) => {\n        this._getInitialData();\n      })\n      .catch((error) => {\n        // tslint:disable-next-line\n        console.log(error);\n      });\n  }\n\n  public ready(callback?: (err: string, manager: ActivityManager) => void): Promise<ActivityManager> {\n    const promise = new Promise<ActivityManager>((resolve, reject) => {\n      this._readyMarker.setCallback(\n        (err) => {\n          if (!err) {\n            resolve(this);\n          } else {\n            reject(this._readyMarker.getError());\n          }\n        });\n    });\n\n    return nodeify(Promise.all([this._bridge.ready(), promise]).then(() => this), callback);\n  }\n\n  /**\n   * @returns All known activity types\n   */\n  public getActivityTypes(): ActivityType[] {\n    return this._activityTypes.get();\n  }\n\n  /**\n   * Gets ActivityType by name\n   * @param name  Name to search for\n   * @returns     If found the @type ActivityType; otherwise undefined\n   */\n  public getActivityType(name: string): ActivityType {\n    return this._activityTypes.getByName(name);\n  }\n\n  /**\n   * Registers a new activity type\n   * @param activityTypeName      The name of the activity type to be created\n   * @param ownerWindowType       The type of the owner window or a WindowDefinition for the owner window\n   * @param helperWindowTypes     Types of helper windows (or WindowDefinitions for helper windows) for that activity type\n   * @param config                (HC only, deprecated) Layout config\n   * @param description           (HC only, deprecated) Description for the new activity type\n   * @param callback              (Optional) Callback for results - if not specified the method will return a promise\n   */\n  public registerActivityType(\n    activityTypeName: string,\n    ownerWindowType: string | WindowDefinition,\n    helperWindowTypes?: string[] | WindowDefinition[],\n    config?: any,\n    description?: string,\n    callback?: Callback<ActivityType>): Promise<ActivityType> {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n\n      // activityTypeName checks\n      if (util.isUndefinedOrNull(activityTypeName)) {\n        reject(\"activityTypeName argument can not be undefined\");\n        return;\n      }\n      if (!util.isString(activityTypeName)) {\n        reject(\"activityTypeName should be string\");\n        return;\n      }\n      // check if type is already defined\n      const actType = this.getActivityType(activityTypeName);\n      if (!util.isUndefinedOrNull(actType)) {\n        reject(\"Activity type '\" + activityTypeName + \"' already exists\");\n        return;\n      }\n\n      // ownerWindowType checks\n      let ownerDefinition: WindowDefinition;\n      if (util.isUndefined(ownerWindowType)) {\n        reject(\"Owner window type can not be undefined\");\n        return;\n      }\n      if (util.isString(ownerWindowType)) {\n        ownerDefinition = { type: (ownerWindowType as string), name: \"\", isIndependent: false, arguments: {} };\n      } else {\n        ownerDefinition = (ownerWindowType as WindowDefinition);\n      }\n\n      // helperWindowTypes checks\n      const helperDefinitions: WindowDefinition[] = [];\n      if (!util.isUndefined(helperWindowTypes) && util.isArray(helperWindowTypes)) {\n        // tslint:disable-next-line\n        for (const index in helperWindowTypes) {\n          const item = helperWindowTypes[index];\n          if (util.isString(item)) {\n            const definition = {\n              type: (item as string),\n              name: \"\",\n              isIndependent: false,\n              arguments: {},\n              relativeTo: \"\",\n              relativeDirection: \"\",\n              windowStyleAttributes: {}\n            };\n            helperDefinitions.push(definition);\n          } else {\n            helperDefinitions.push(item as WindowDefinition);\n          }\n        }\n      }\n\n      // redirect to bridge\n      this._bridge\n        .registerActivityType(activityTypeName,\n          ownerDefinition,\n          helperDefinitions,\n          config,\n          description)\n        .then((activityType) => {\n          // add to from collections\n          this._grabEntity(activityType);\n          resolve(activityType);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregister existing activity type\n   * @param type The name of the activity type to be removed\n   */\n  public unregisterActivityType(type: string, callback?: Callback<any>) {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(type);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + type + \"' does not exists\");\n        return;\n      }\n      this._bridge.unregisterActivityType(type).then(() => resolve(actType), reject);\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Initiates a new activity from the given type.\n   * @param activityType  The ActivityType to initiate\n   * @param context       The initial context of the activity\n   * @param callback      Callback for result\n   * @param configuration Optional configuration passed to window/peer factories for the new activity's participants\n   * @returns             Promise for activity\n   */\n  public initiate(activityType: string, context?: object, callback?: Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(activityType);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + activityType + \"' does not exists\");\n        return;\n      }\n\n      this._bridge\n        .initiateActivity(activityType, context, configuration)\n        .then((actId) => {\n\n          this._activities\n            .getOrWait(actId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivityTypeEvents(handler: (act: ActivityType, action: string) => void) {\n    this._activityTypes.subscribe((at, context) => {\n      handler(at, context.type);\n    });\n  }\n\n  /**\n   * @returns All known WindowTypes\n   */\n  public getWindowTypes(): WindowType[] {\n    return this._windowTypes.get();\n  }\n\n  /**\n   * Gets WindowType by name\n   * @param name  The name of the type @type WindowType\n   * @returns     WindowType if found; undefined otherwise\n   */\n  public getWindowType(name: string): WindowType {\n    return this._windowTypes.getByName(name);\n  }\n\n  /**\n   * Registers a factory for a given WindowType. The factory will be called once window of that type is requested\n   * @param windowType   Window type that will be constructed from the factory. Can be a string (name of the window type)\n   * or object that has name, description properties\n   * @param factoryMethod      The factory that will construct Windows of that type\n   * @param description\n   * @param callback\n   * @param configuration\n   * @returns {}\n   */\n  public registerWindowFactory(\n    windowType: any,\n    factoryMethod: WindowFactory,\n    callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (util.isObject(windowType)) {\n        windowType = windowType.getName();\n      } else if (!util.isString(windowType)) {\n        reject(\"windowType should be string or object that has getName method\");\n        return;\n      }\n\n      this._bridge\n        .registerWindowFactory(windowType, factoryMethod)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregisters all factories for a given WindowType.\n   * @param windowType   Window type that is constructed from the factory.\n   * @param callback\n   * @returns {}\n   */\n  public unregisterWindowFactory(windowType: string, callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (!util.isString(windowType)) {\n        reject(\"windowType should be a string\");\n        return;\n      }\n\n      this._bridge\n        .unregisterWindowFactory(windowType)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * @returns All started activities\n   * @param activityType Can be a string or @type ActivityType. If string a new activityType will be created using the string for name.\n   * @returns Array of Activity objects\n   */\n  public getActivities(activityType?: string | ActivityType | string[] | ActivityType[]): Activity[] {\n    let act = this._activities.get();\n    act = act.filter((a) => a._ownerId);\n    if (!activityType) {\n      return act;\n    }\n    let types: any = activityType;\n    if (util.isString(activityType)) {\n      types = [activityType];\n    } else if (activityType instanceof ActivityType) {\n      types = [activityType.name];\n    } else if (activityType instanceof Array) {\n      // TODO check if string array or array of ActivityTypes\n    } else {\n      throw new Error(\"Invalid input argument 'activityType' = \" + activityType);\n    }\n\n    return act.filter((at: Activity) => {\n      const type = at.type;\n      return util.some(types, (t: ActivityType) => {\n        return type.id === t.id;\n      });\n    });\n  }\n\n  /**\n   * Returns Activity by ID\n   */\n  public getActivityById(id: string): Activity {\n    return this._activities.getByName(id);\n  }\n\n  /**\n   * Initialises activity for the current window - by doing this the window is announced as activity aware to the other participants\n   * @param windowType            Type of window\n   * @param activityWindowId      The id of the window that was created\n   * @returns {}                  Promise for an activity window (joined to an activity, if the activity creation fails the promise will be rejected)\n   */\n  public announceWindow(activityWindowId?: string, windowType?: string): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n\n      // get the announcement info from the bridge (e.g. the context in HC) - this will be used if no arguments passed\n      const announcementInfo = this._bridge.getAnnouncementInfo();\n      if (util.isUndefined(activityWindowId)) {\n        activityWindowId = announcementInfo.activityWindowId;\n      }\n      if (util.isUndefined(windowType)) {\n        windowType = announcementInfo.activityWindowType;\n      }\n      if (util.isUndefinedOrNull(windowType)) {\n        throw new Error(\"Can not announce - unknown windowType\");\n      }\n\n      const activityId = announcementInfo && announcementInfo.activityId;\n\n      // We cover two cases here:\n      // * no activityWindowId supplied (neither in arguments or announcement info) - in that case we register new window by type. Most of the time this is the case when an independent window is created outside activity\n      // * activityWindowId supplied - window created as part of activity creation\n\n      // NB: in GW3, windows are created standalone, and receive 'JOINED' after they send a 'READY'\n      // so we always go in 'if' case, not 'else'\n      if (util.isUndefinedOrNull(activityWindowId)) {\n        this._logger.debug(\"Registering window with type:'\" + windowType + \"', name:'\" + announcementInfo.activityWindowName + \"', ind.:'\" + announcementInfo.activityWindowIndependent + \"'\");\n        // register new window created outside activity\n        this._bridge.registerWindow(windowType, announcementInfo.activityWindowName, announcementInfo.activityWindowIndependent)\n          .then(this._windows.getOrWait.bind(this._windows))\n          .then((w: any) => {\n            if (activityId) {\n              return this._activities.getOrWait(activityId).then((_: any) => w);\n            } else {\n              return w;\n            }\n          })\n          .then((w: any) => {\n            resolve(w);\n          })\n          .catch((err) => {\n            this._logger.error(err);\n          });\n\n      } else {\n        // announce new window created in an activity creation process\n        this._logger.debug(\"Announcing window with id '\" + activityWindowId + \"' and type '\" + windowType + \"'\");\n\n        // check if the window is already created -\n        const currentWindow = this._windows.getByName(activityWindowId);\n        if (!util.isUndefinedOrNull(currentWindow)) {\n          this._logger.debug(\"Window with id '\" + activityWindowId + \"' already announced - reusing the window\");\n          resolve(currentWindow);\n          return;\n        }\n\n        // window events handler\n        const windowEventHandler = (a: Activity, w: ActivityWindow, e: any) => {\n          if (activityWindowId === w.id) {\n            if (e === EntityEventType.ActivityWindowJoinedActivity) {\n              const activity = w.activity;\n              if (util.isUndefined(activity)) {\n                reject(\"UNDEFINED ACTIVITY\");\n              }\n              this._logger.trace(\"Got joined event for id '\" + activityWindowId + \"'\");\n              resolve(w);\n              this.unsubscribeWindowEvents(windowEventHandler);\n            }\n          }\n        };\n\n        this.subscribeWindowEvents(windowEventHandler);\n        this._logger.trace(\"Waiting for joined event for id '\" + activityWindowId + \"'\");\n        this._bridge.announceWindow(windowType, activityWindowId);\n      }\n    });\n    return promise;\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window type registered\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowTypeEvents(handler: (act: WindowType, event: string) => void) {\n    this._windowTypes.subscribe((wt, context) => {\n      handler(wt, context.type);\n    });\n  }\n\n  /**\n   * Subscribe for activity status events\n   * @param handler Handler function that will receive status notifications\n   * @returns {}\n   */\n  public subscribeActivityEvents(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.StatusChange) {\n        const p = (context as ActivityStatusChangeEventContext);\n        handler(act, p.newStatus, p.oldStatus);\n      }\n\n      // implicitly leave the activity on destroy\n      if (context.type === EntityEventType.Removed ||\n        (context.type === EntityEventType.StatusChange &&\n          (context as ActivityStatusChangeEventContext).newStatus.getState() === ActivityState.Destroyed)) {\n        for (const window of this._windows.get()) {\n          if (window.activity && window.activity.id === act.id) {\n            this._windows.process(new EntityEvent<ActivityWindow>(window, new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)));\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window joining to activity\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void): () => void {\n    const wrappingHandler = (window: ActivityWindow, context: any) => {\n      let eventType = context.type;\n      if (eventType === EntityEventType.Added) {\n        // rename added to opened (because added is misleading - semantically it's the opposite of remove);\n        eventType = \"opened\";\n      }\n      handler(window.activity, window, eventType);\n    };\n    this._windowHandlers.push([handler, wrappingHandler]);\n    return this._windows.subscribe(wrappingHandler);\n  }\n\n  public unsubscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void) {\n    const found = this._windowHandlers.find((pair) => pair[0] === handler);\n    if (found) {\n      this._windowHandlers.splice(this._windowHandlers.indexOf(found), 1);\n      this._windows.unsubscribe(found[1]);\n    }\n  }\n\n  /**\n   * Creates a new window from a given type and joins it to an activity\n   *\n   * @param activity      Activity to join the window to\n   * @param windowType    The window type to join (string or window definition)\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public createWindow(activity: Activity, windowTypeOrConfiguration: string | WindowDefinition | any, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowTypeOrConfiguration)) {\n        reject(\"windowType is undefined\");\n      }\n\n      let windowDefinition: WindowDefinition;\n      if (util.isString(windowTypeOrConfiguration)) {\n        windowDefinition = { type: (windowTypeOrConfiguration as string), name: \"\", isIndependent: false, arguments: {} };\n      } else if (windowTypeOrConfiguration instanceof WindowType) {\n        windowDefinition = {\n          type: (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          name: windowTypeOrConfiguration.name || (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          isIndependent: false\n        };\n      } else {\n        // G4E-3178 When creating a window in activity, the loading animation doesn't hide - extra property URL\n        const invalidKeys: string[] = [\"url\"];\n\n        const filteredWindowTypeOrConfiguration: any = {};\n\n        Object.keys(windowTypeOrConfiguration).forEach((key) => {\n          if (invalidKeys.indexOf(key) === -1) {\n            filteredWindowTypeOrConfiguration[key] = windowTypeOrConfiguration[key];\n          }\n        });\n        windowDefinition = filteredWindowTypeOrConfiguration as WindowDefinition;\n      }\n\n      let relativeToWindow: string | WindowSource;\n      if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n        relativeToWindow = windowDefinition.relativeTo;\n        if (typeof relativeToWindow === \"string\") {\n          const windows = this.getWindows({ type: relativeToWindow as string });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n          const windows = this.getWindows({ type: relativeToWindow.type });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n          windowDefinition.relativeTo = relativeToWindow.windowId;\n        }\n      }\n\n      this._bridge.createWindow(activity && activity.id, windowDefinition)\n        .then((wid) => {\n\n          this._logger.debug(\"Window created, waiting for window entity with id \" + wid);\n          const handler = (window: ActivityWindow, context: EntityEventContext) => {\n            // wait until the window has activity property (this means it was joined)\n            if (window.id === wid && (!activity || window.activity)) {\n              this._logger.debug(\"Got entity window with id \" + wid);\n              resolve(window);\n              this._windows.unsubscribe(handler);\n            }\n          };\n\n          // if we can not get the window right away, wait for event\n          this._windows.subscribe(handler);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Creates relative windows from a given types and joins them to an activity\n   *\n   * @param activity               Activity to join relative windows to\n   * @param relativeWindowTypes    Relative window types to join (string or window definitions array)\n   * @param callback               (Optional) Result callback\n   * @returns                      Promise for ActivityWindow\n   */\n  public createStackedWindows(activity: Activity, relativeWindowTypes: Array<string | WindowDefinition>, timeout?: number, callback?: Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    const promise = new Promise<ActivityWindow[]>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity is undefined\");\n      }\n      if (util.isUndefinedOrNull(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes is undefined\");\n      }\n\n      if (!Array.isArray(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes has to be an array\");\n      }\n      if (util.isUndefinedOrNull(timeout)) {\n        timeout = 20000; // default timeout: 20 seconds\n      }\n\n      const windowDefinitions: WindowDefinition[] = [];\n      relativeWindowTypes.forEach((element) => {\n        let windowDefinition: WindowDefinition;\n        if (util.isString(element)) {\n          windowDefinition = { type: (element as string), name: \"\", isIndependent: false, arguments: {} };\n        } else {\n          windowDefinition = (element as WindowDefinition);\n        }\n\n        // a hint that this comes from createStackedWindows\n        windowDefinition.stackedWindow = true;\n        windowDefinition.timeout = timeout;\n\n        let relativeToWindow: WindowSource;\n        if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n          // this can not be string, converted in the prev. layer\n          relativeToWindow = windowDefinition.relativeTo as WindowSource;\n          if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n            windowDefinition.relativeTo = relativeToWindow.type;\n          } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n            const windows = this.getWindows({ id: relativeToWindow.windowId });\n            if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n              windowDefinition.relativeTo = windows[0].type.name;\n            }\n          }\n        }\n        windowDefinitions.push(windowDefinition);\n      });\n\n      const tasks: Array<Promise<ActivityWindow>> = [];\n      windowDefinitions.forEach((wd) => tasks.push(this.createWindow(activity, wd)));\n\n      Promise.all(tasks).then(resolve).catch(reject);\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Joins a new window from a given type to the activity\n   *\n   * @param activity      Activity to join the window to\n   * @param window        The window to join\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public addWindowToActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.joinActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @param activity  Activity to remove the window from\n   * @param           The window to remove\n   * @param           (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public leaveWindowFromActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.leaveActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Replaces the activity context\n   * @param activity  Activity\n   * @param context   The new context\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for Activity\n   */\n  public setActivityContext(activity: Activity, context: object, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      // TODO: duplication with updateActivityContext\n\n      // DONE: verify is the change visible here when 'updateActivityContext' resolves?\n      this._bridge\n        .updateActivityContext(activity, context, true)\n        .then((_) => {\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from  context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @param activity\n   * @param context\n   * @param callback\n   */\n  public updateActivityContext(activity: Activity, context: any, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      const removedKeys = [];\n      for (const key in context) {\n        if (context.hasOwnProperty(key) && context[key] === null) {\n          removedKeys.push(key);\n        }\n      }\n      for (const removedKey of removedKeys) {\n        delete context[removedKey];\n      }\n\n      this._bridge\n        .updateActivityContext(activity, context, false, removedKeys)\n        .then((_) => {\n          // DONE: verify is the change already visible here when 'updateActivityContext' resolves?\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Subscribe for activity context update events\n   *\n   * @param activity  Activity\n   * @param handler   Handler function that will receive context related events\n   * @returns {}\n   */\n  public subscribeActivityContextChanged(handler: ActivityContextUpdateHandler) {\n    this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.ActivityContextChange) {\n        const updateContext = context as ActivityContextChangedEventContext;\n        handler(act, updateContext.context, updateContext.updated, updateContext.removed);\n      }\n    });\n  }\n\n  /**\n   * Stops an activity\n   * @returns {}\n   */\n  public stopActivity(activity: Activity, callback?: Callback<boolean>): Promise<boolean> {\n    const promise = this._bridge.stopActivity(activity);\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Returns activity windows based on some filter. If no filter supplied all activity windows are returned.\n   * @param filter  Filter that\n   * @returns Array of ActivityWindows that match the filter object\n   */\n  public getWindows(filter: { id?: string, type?: string, name?: string, activityId?: string }): ActivityWindow[] {\n    if (util.isUndefined(filter)) {\n      return this._windows.get();\n    }\n\n    if (!util.isUndefined(filter.id)) {\n      return [this._windows.getByName(filter.id)];\n    }\n\n    const allWindows = this._windows.get();\n\n    return allWindows.filter((w) => {\n\n      if (!util.isUndefined(filter.type) && w.type.id !== filter.type) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.name) && w.name !== filter.name) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.activityId)) {\n        if (util.isUndefinedOrNull(w.activity)) {\n          return false;\n        }\n\n        if (w.activity.id !== filter.activityId) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n\n  public getWindowBounds(id: string): Promise<WindowBounds> {\n    return this._bridge.getWindowBounds(id);\n  }\n\n  public setWindowBounds(id: string, bounds: WindowBounds, callback?: Callback<ActivityWindow>): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._bridge.setWindowBounds(id, bounds)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public closeWindow(id: string): Promise<any> {\n    return this._bridge.closeWindow(id);\n  }\n\n  public activateWindow(id: string, focus: boolean): Promise<any> {\n    return this._bridge.activateWindow(id, focus);\n  }\n\n  public setWindowVisibility(id: string, visible: boolean): Promise<any> {\n    return this._bridge.setWindowVisibility(id, visible);\n  }\n\n  public clone(activity: Activity, cloneOptions: CloneOptions, callback?: Callback<Activity>) {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (!activity) {\n        reject(\"activity can not be null\");\n      }\n\n      this._bridge.cloneActivity(activity.id, cloneOptions)\n        .then((activityId) => {\n          this._activities\n            .getOrWait(activityId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public attachActivities(from: string, to: string, tag?: object, callback?: Callback<AttachedActivityDescriptor>): Promise<AttachedActivityDescriptor> {\n\n    tag = tag || {};\n\n    const promise = new Promise<AttachedActivityDescriptor>((resolve, reject) => {\n\n      const fromActivity = this._activities.getByName(from);\n      if (!fromActivity) {\n        reject(\"can not find activity with id \" + from);\n        return;\n      }\n\n      const toActivity = this._activities.getByName(to);\n      if (!toActivity) {\n        reject(\"can not find activity with id \" + to);\n        return;\n      }\n\n      return this._bridge.attachActivities(from, to, tag)\n        .then((data: any) => {\n          const newActId = data.to;\n          const state = data.descriptor;\n          const allStates = data.descriptors;\n\n          this._activities.getOrWait(newActId).then((act) => {\n            act._updateDescriptors(allStates);\n            const stateWrapped = act.attached.filter((u) => u.ownerId === state.ownerId)[0];\n\n            resolve(stateWrapped);\n          });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public detachActivities(\n    activityId: string,\n    descriptor: ActivityDescriptor,\n    callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      return this._bridge.detachActivities(activityId, descriptor)\n        .then(/*(params)*/() => {\n          // #deleteme TODO: deal with this\n          const oldActId: string = undefined; // params.oldActivityId;\n          const newActId: string = undefined; // params.newActivityId;\n          const descriptors: any = undefined; // params.descriptors;\n\n          this._activities\n            .getOrWait(oldActId)\n            .then((oldAct: Activity) => {\n              oldAct._updateDescriptors(descriptors);\n\n              this._activities\n                .getOrWait(newActId)\n                .then((newAct: Activity) => {\n                  resolve(newAct);\n                });\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivitiesAttached(callback: any) {\n    this._attachedCallbacks.push(callback);\n  }\n\n  public subscribeActivitiesDetached(callback: any) {\n    this._detachedCallbacks.push(callback);\n  }\n\n  public subscribeActivityFrameColorChanged(callback: () => void) {\n    this._frameColorChangesCallbacks.push(callback);\n  }\n\n  /** Assigns a manager to a given ActivityEntity */\n  private _grabEntity(entity: ActivityEntity) {\n    entity._manager = this;\n  }\n\n  private _getInitialData() {\n    this._logger.debug(\"Request initial data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.getActivityTypes()\n      .then((at) => {\n        this._activityTypes.add(at);\n        this._dataReadyMarker.signal(\"Got act types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity types -\" + error);\n      });\n\n    this._bridge.getWindowTypes()\n      .then((wt) => {\n        this._windowTypes.add(wt);\n        this._dataReadyMarker.signal(\"Got window types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting window types  \" + error);\n      });\n\n    this._bridge.getActivities()\n      .then((ac) => {\n        this._activities.add(ac);\n        this._dataReadyMarker.signal(\"Got activities\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity instances -\" + error);\n      });\n\n    this._bridge.getActivityWindows()\n      .then((aw) => {\n        this._windows.add(aw);\n        this._dataReadyMarker.signal(\"Got windows\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity windows -\" + error);\n      });\n  }\n\n  private _subscribeForData() {\n    this._logger.debug(\"Subscribe for data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.onActivityTypeStatusChange((event) => {\n      this._activityTypes.process(event);\n    });\n\n    this._bridge.onWindowTypeStatusChange((event) => {\n      this._windowTypes.process(event);\n    });\n\n    this._bridge.onActivityWindowChange((event) => {\n      this._windows.process(event);\n    });\n\n    this._bridge.onActivityStatusChange((event: EntityEvent<Activity>) => {\n      this._activities.process(event);\n    });\n  }\n\n  private _handleActivitiesAttached(data: any) {\n\n    const newActId = data.to;\n    const descriptor = data.descriptor;\n    const descriptors = data.descriptors;\n\n    this._activities.getOrWait(newActId).then((act) => {\n      act._updateDescriptors(descriptors);\n      const descriptorAsObjectFromAPI = act.attached.filter((u) => u.ownerId === descriptor.ownerId)[0];\n\n      this._attachedCallbacks.forEach((callback) => {\n        try {\n          callback(act, descriptorAsObjectFromAPI);\n        } catch (err) {\n          return;\n        }\n      });\n\n    });\n  }\n\n  private _handleActivitiesDetached(data: any) {\n    const oldActId = data.oldActivityId;\n    const newActId = data.newActivityId;\n    const descriptors = data.descriptors;\n    const descriptor = data.descriptor;\n\n    this._activities.getOrWait(oldActId).then((oldAct) => {\n\n      oldAct._updateDescriptors(descriptors);\n\n      this._activities.getOrWait(newActId).then((newAct) => {\n\n        this._detachedCallbacks.forEach((callback) => {\n          try {\n            callback(newAct, oldAct, descriptor);\n          } catch (err) {\n            return;\n          }\n        });\n      });\n    });\n  }\n\n  private _handleActivityDescriptorsRefreshed(data: any) {\n    const id = data.id;\n    const descriptors = data.descriptors;\n\n    const act = this._activities.getByName(id);\n    if (act) {\n      act._updateDescriptors(descriptors);\n    }\n  }\n\n  private refreshDescriptors() {\n    this._bridge.getAttachedDescriptors()\n      .then((map: any) => {\n\n        // populate descriptors\n        if (map) {\n          Object.keys(map).forEach((key: string) => {\n            const actId = key;\n            const descriptors = map[key];\n\n            const act = this._activities.getByName(actId);\n            if (act) {\n              act._updateDescriptors(descriptors);\n            }\n          });\n        }\n\n        this._descriptorsMarker.signal(\"Successfully got descriptors\");\n      })\n      .catch((err) => {\n        this._descriptorsMarker.error(\"failed to get descriptors - \" + err);\n      });\n  }\n\n  private _handleWindowFrameColorChanged(win: Glue42.Windows.GDWindow) {\n    if (!win.activityId) {\n      return;\n    }\n\n    const act = this._activities.getByName(win.activityId);\n    if (!act) {\n      return;\n    }\n\n    // notify for the owner only\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id !== win.id) {\n      return;\n    }\n\n    this._frameColorChangesCallbacks.forEach((callback) => {\n      try {\n        callback(act, win.frameColor);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n}\n","import ActivityType from \"./../entities/activityType\";\nimport WindowType from \"./../entities/windowType\";\nimport * as util from \"./../helpers/util\";\nimport ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { Callback } from \"./../contracts/contracts\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\nimport { ActivityStatus } from \"./../contracts/activityStatus\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface ManagementAPI {\n  activityTypes: Glue42.Activities.ActivityTypesAPI;\n  windowTypes: Glue42.Activities.WindowTypesAPI;\n  windows: Glue42.Activities.WindowingAPI;\n  instances: Glue42.Activities.InstancesAPI;\n\n  onAttached(callback: () => void): void;\n  onDetached(callback: () => void): void;\n  onActivityFrameColorChanged(callback: () => void): void;\n}\n\nexport class ActivityManagementAPI implements ManagementAPI {\n\n  public _m: ActivityManager;\n\n  public _my: My;\n\n  public activityTypes: Glue42.Activities.ActivityTypesAPI;\n\n  public windowTypes: Glue42.Activities.WindowTypesAPI;\n\n  public windows: Glue42.Activities.WindowingAPI;\n\n  public instances: Glue42.Activities.InstancesAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._m = manager;\n    this._my = my;\n\n    this.activityTypes = {\n      get: this._getActivityTypesWrapper.bind(this),\n      register: this._m.registerActivityType.bind(this._m),\n      unregister: this._m.unregisterActivityType.bind(this._m),\n      subscribe: this._m.subscribeActivityTypeEvents.bind(this._m),\n      unsubscribe: undefined,\n      initiate: this._m.initiate.bind(this._m)\n    };\n\n    this.windowTypes = {\n      get: this._getWindowTypesWrapper.bind(this),\n      registerFactory: this._m.registerWindowFactory.bind(this._m),\n      unregisterFactory: this._m.unregisterWindowFactory.bind(this._m),\n      subscribe: this._m.subscribeWindowTypeEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n\n    this.windows = {\n      get: this._m.getWindows.bind(this._m),\n      subscribe: this._m.subscribeWindowEvents.bind(this._m),\n      announce: this._m.announceWindow.bind(this._m),\n      unsubscribe: undefined,\n      create: this._m.createWindow.bind(this._m)\n    };\n\n    this.instances = {\n      get: this._m.getActivities.bind(this._m),\n      subscribe: this._m.subscribeActivityEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n  }\n\n  public onAttached(callback: () => void) {\n    this._m.subscribeActivitiesAttached(callback);\n  }\n\n  public onDetached(callback: () => void) {\n    this._m.subscribeActivitiesDetached(callback);\n  }\n\n  public onActivityFrameColorChanged(callback: () => void) {\n    this._m.subscribeActivityFrameColorChanged(callback);\n  }\n\n  private _getActivityTypesWrapper(name?: string): ActivityType[] | ActivityType {\n    if (util.isUndefined(name)) {\n      return this._m.getActivityTypes();\n    }\n    return this._m.getActivityType(name);\n  }\n\n  private _getWindowTypesWrapper(name?: string): WindowType[] | WindowType {\n    if (util.isUndefined(name)) {\n      return this._m.getWindowTypes();\n    }\n    return this._m.getWindowType(name);\n  }\n}\n","import ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { nodeify } from \"./../helpers/promiseExtensions\";\nimport { ActivityManagementAPI, ManagementAPI } from \"./activityManagementAPI\";\nimport { ActivityAGM } from \"../core/activityAGM\";\n\nexport interface API {\n\n  aware: boolean;\n\n  inActivity: boolean;\n\n  my: My;\n\n  agm: ActivityAGM;\n\n  all: ManagementAPI;\n\n  ready(callback?: (api: API) => void): Promise<API>;\n\n  getAvailableFrameColors(): string[];\n}\n\n/**\n * The entry points of activities API - accessible from glue.activities\n *\n * @module activities\n */\nexport class ActivityAPI implements API {\n\n  public _mgr: ActivityManager;\n  public _my: My;\n\n /**\n  * Extended API that provides access to all running activities and windows and available activity and window types\n  *\n  * @var {module:all} all\n  */\n public all: ManagementAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._mgr = manager;\n    this._my = my;\n    this.all = new ActivityManagementAPI(manager, my);\n  }\n\n  /**\n   * The entry point for your activity code.\n   *\n   * @function ready\n   * @returns {Promise<module:activities>} A promise for activity API\n   */\n  public ready(callback?: any): Promise<API> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._mgr.ready()\n        .then(() => {\n          resolve(this);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * A lightweight, single activity oriented subset of the API which should be used by most activity applications\n   *\n   * @var {module:my} my\n   */\n  public get my(): My {\n    return this._my;\n  }\n\n  /**\n   * True if the current window is activity aware - meaning that the window has been created as\n   * an activity participant - either a helper or an independent window.\n   * Check this after the API is ready.\n   *\n   * @var {bool} aware\n   */\n  public get aware(): boolean {\n    return this._my.window !== undefined;\n  }\n\n  /**\n   * Returns true if the current window is activity aware and is currently participating in activity\n   *\n   * @var {bool} inActivity\n   */\n  public get inActivity(): boolean {\n    return this.aware && this._my.activity !== undefined;\n  }\n\n  /**\n   * Defines an Activity-specific version of the AGM API which:\n   * * restricts method registrations to activity-only windows\n   * * restricts method discovery and invocation to activity-only methods, unless you explicitly specify otherwise\n   * Other than that, the API is pretty much the same.\n   *\n   * @var  {module:activityAGM} agm\n   *\n   */\n  public get agm(): ActivityAGM {\n    if (!this.aware) {\n      // no agm if not activity aware\n      return undefined;\n    }\n    if (!this.inActivity) {\n      // if we're not in activity no\n      return new ActivityAGM(null);\n    }\n\n    return this._my.activity.agm;\n  }\n\n  /**\n   * Returns a list of frame colors that can be used as activity frame colors\n   *\n   * @returns {string[]}\n   */\n  public getAvailableFrameColors(): string[] {\n    // TODO - not available in GD3\n    return [];\n  }\n}\n","import GW3Bridge from \"./bridges/gw3Bridge\";\n\nimport My from \"./API/activityMyAPI\";\nimport ActivityManager from \"./core/activityManager\";\n\nimport { ActivityBridge } from \"./bridges/activityBridge\";\n\nimport { ActivityConfig } from \"./activityConfig\";\nimport { ActivityAPI } from \"./API/activityAPI\";\nimport { ActivityAGM } from \"./core/activityAGM\";\nimport { Logger } from \"./helpers/logger\";\nimport * as util from \"./helpers/util\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { nodeify } from \"./helpers/promiseExtensions\";\n\n/**\n * Activity context update handler - used when we want to subscribe for context changes in a specific activity\n *\n * @callback contextChangedHandler\n * @param {Object} context The full context of the activity after the update\n * @param {Object} delta The delta (contains the added/removed keys at top level)\n * @param {string[]} removed  Array of keys that were removed from context\n * @param {module:activity} activity The activity instance that owns the context\n *\n */\n\n/**\n * @callback windowEventHandler Handler for ActivityWindow events - e.g window joined to activity, window removed from\n * activity\n * @param {module:activity} activity\n * @param {module:activityWindow} window\n * @param {string} event 'joined' or 'removed'\n */\n\n/**\n * @callback activityStatusChangeHandler Handler for activity status changed events\n * @param {module:activity} activity\n * @param {activityStatus} newStatus\n * @param {activityStatus} oldStatus\n *\n */\n\n/**\n * @typedef {Object} windowDefinition\n * @property {string} type\n * @property {string} name\n * @property {Object} arguments\n */\n\n/**\n * @typedef {Object} bounds\n * @param {number} top\n * @param {number} left\n * @param {number} width\n * @param {number} height\n *\n */\n\n/**\n * @typedef {Object} agmInstance\n * @param {string} application\n * @param {string} pid\n * @param {string} machine\n * @param {string} user\n * @param {string} environment\n * @param {string} region\n */\n\n// Factory function for activity API\nexport class ActivityModule {\n    public static checkIsUsingGW3Implementation(connection: Glue42Core.Connection.API) {\n        return connection.protocolVersion === 3;\n    }\n\n    private _api: ActivityAPI;\n    private _isUsingGW3Implementation: boolean;\n    private _isUsingHCImplementation: boolean;\n    private _readyPromise: Promise<ActivityModule>;\n\n    get api(): ActivityAPI {\n        return this._api;\n    }\n\n    set api(value: ActivityAPI) {\n        this._api = value;\n    }\n\n    constructor(config: ActivityConfig) {\n        if (!config) {\n            throw new Error(\"config can not be null\");\n        }\n\n        // set log level\n        if (!util.isUndefined(config.logLevel)) {\n            Logger.Level = config.logLevel;\n        }\n\n        if (!util.isUndefinedOrNull(config.logger)) {\n            Logger.GlueLogger = config.logger;\n        }\n\n        // choose the correct bridge\n        let bridge: ActivityBridge;\n        this._isUsingHCImplementation = config.gdMajorVersion === 2;\n        this._isUsingGW3Implementation = ActivityModule.checkIsUsingGW3Implementation(config.connection);\n\n        if (this._isUsingHCImplementation) {\n            throw new Error(\"GD2 not supported\");\n        } else if (this._isUsingGW3Implementation) {\n            bridge = new GW3Bridge(config);\n        } else {\n            throw new Error(\"Unable to instantiate activity bridge implementation\");\n        }\n\n        if (!bridge) {\n            throw new Error(\"A bridge to native activity is needed to create activity lib.\");\n        }\n\n        ActivityAGM.AGM = config.agm;\n        const activityManager = new ActivityManager(bridge, !config.disableAutoAnnounce, config.windows);\n        const my = new My(activityManager, config.windows);\n        this._api = new ActivityAPI(activityManager, my);\n        this._readyPromise = activityManager.ready().then((_) => this);\n    }\n\n    public get isUsingHCImplementation(): boolean {\n        return this._isUsingHCImplementation;\n    }\n\n    public get isUsingGW3Implementation(): boolean {\n        return this._isUsingGW3Implementation;\n    }\n\n    public ready(callback?: (err: string, module: ActivityModule) => void): Promise<void> {\n        return nodeify(this._readyPromise, callback) as any as Promise<void>;\n    }\n}\n","export const ShutdownMethodName = \"T42.ACS.Shutdown\";\nexport const OnGDShutdownMethodName = \"T42.ACS.OnGDShutdown\";\nexport const RestartMethodName = \"T42.ACS.Restart\";\n\nexport const FeedbackMethodName = \"T42.ACS.Feedback\";\n\nexport const GetConfigurationRegionMethodName = \"T42.ACS.GetConfigurationRegion\";\nexport const SetConfigurationRegionMethodName = \"T42.ACS.SetConfigurationRegion\";\n\nexport const GetUserMethodName = \"T42.ACS.GetUser\";\nexport const GetBranchesMethodName = \"T42.ACS.GetBranches\";\nexport const GetCurrentBranchMethodName = \"T42.ACS.GetCurrentBranch\";\nexport const SetCurrentBranchMethodName = \"T42.ACS.SetCurrentBranch\";\n\nexport const GetFunctionalEntitlementMethodName = \"T42.ACS.GetFunctionalEntitlement\";\nexport const CanIMethodName = \"T42.ACS.CanI\";\n\nexport const StartApplicationMethodName = \"T42.ACS.StartApplication\";\nexport const StopApplicationMethodName = \"T42.ACS.StopApplication\";\nexport const ActivateApplicationMethodName = \"T42.ACS.ActivateApplication\";\nexport const RunApplicationMethodName = \"T42.ACS.RunApplication\";\n\nexport const OnEventMethodName = \"T42.ACS.OnEvent\";\n\nexport const GetApplicationsMethodName = \"T42.ACS.GetApplications\";\n","\"use strict\";\nfunction createRegistry(options) {\n    if (options && options.errorHandling\n        && typeof options.errorHandling !== \"function\"\n        && options.errorHandling !== \"log\"\n        && options.errorHandling !== \"silent\"\n        && options.errorHandling !== \"throw\") {\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\n    }\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\n    var callbacks = {};\n    function add(key, callback, replayArgumentsArr) {\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey) {\n            callbacksForKey = [];\n            callbacks[key] = callbacksForKey;\n        }\n        callbacksForKey.push(callback);\n        if (replayArgumentsArr) {\n            setTimeout(function () {\n                replayArgumentsArr.forEach(function (replayArgument) {\n                    var _a;\n                    if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {\n                        try {\n                            if (Array.isArray(replayArgument)) {\n                                callback.apply(undefined, replayArgument);\n                            }\n                            else {\n                                callback.apply(undefined, [replayArgument]);\n                            }\n                        }\n                        catch (err) {\n                            _handleError(err, key);\n                        }\n                    }\n                });\n            }, 0);\n        }\n        return function () {\n            var allForKey = callbacks[key];\n            if (!allForKey) {\n                return;\n            }\n            allForKey = allForKey.reduce(function (acc, element, index) {\n                if (!(element === callback && acc.length === index)) {\n                    acc.push(element);\n                }\n                return acc;\n            }, []);\n            if (allForKey.length === 0) {\n                delete callbacks[key];\n            }\n            else {\n                callbacks[key] = allForKey;\n            }\n        };\n    }\n    function execute(key) {\n        var argumentsArr = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            argumentsArr[_i - 1] = arguments[_i];\n        }\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey || callbacksForKey.length === 0) {\n            return [];\n        }\n        var results = [];\n        callbacksForKey.forEach(function (callback) {\n            try {\n                var result = callback.apply(undefined, argumentsArr);\n                results.push(result);\n            }\n            catch (err) {\n                results.push(undefined);\n                _handleError(err, key);\n            }\n        });\n        return results;\n    }\n    function _handleError(exceptionArtifact, key) {\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\n        if (_userErrorHandler) {\n            _userErrorHandler(errParam);\n            return;\n        }\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\n        if (options) {\n            switch (options.errorHandling) {\n                case \"log\":\n                    return console.error(msg);\n                case \"silent\":\n                    return;\n                case \"throw\":\n                    throw new Error(msg);\n            }\n        }\n        console.error(msg);\n    }\n    function clear() {\n        callbacks = {};\n    }\n    function clearKey(key) {\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey) {\n            return;\n        }\n        delete callbacks[key];\n    }\n    return {\n        add: add,\n        execute: execute,\n        clear: clear,\n        clearKey: clearKey\n    };\n}\n;\ncreateRegistry.default = createRegistry;\nmodule.exports = createRegistry;\n//# sourceMappingURL=index.js.map","export function objectValues(source: {[key: string]: any}): any[] {\n    if (!source) {\n        return [];\n    }\n    return Object.keys(source).map((key) => source[key]);\n}\n\nexport function objectClone(obj: {[key: string]: any}): any {\n    let result;\n    try {\n        result = JSON.parse(JSON.stringify(obj || {}));\n    } catch (error) {\n        result = {};\n    }\n\n    return result;\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, StartAppResult } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { objectClone } from \"./helper\";\nimport { isUndefinedOrNull } from \"../activity/helpers/util\";\n\nexport default class ApplicationImpl implements Glue42.AppManager.Application {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    // Additional properties of the Application\n    private _props: AppProps;\n\n    constructor(private _appManager: AppManagerImpl, private _name: string, private _agm: Glue42Core.AGM.API) {\n\n        // TODO: Replace string events with constants. The string declaration of the registry event name should only ever appear once. Ever. Period.\n\n        // subscribe for events from app-manager\n        _appManager.onInstanceStarted((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStarted\", instance);\n        });\n\n        _appManager.onInstanceStopped((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStopped\", instance);\n        });\n\n        _appManager.onAppRemoved((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appRemoved\", app);\n        });\n\n        _appManager.onAppChanged((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appChanged\", app);\n        });\n\n        _appManager.onAppAvailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n            this._props.IsReady = true;\n            this._registry.execute(\"appAvailable\", app);\n        });\n\n        _appManager.onAppUnavailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n            this._props.IsReady = false;\n            this._registry.execute(\"appUnavailable\", app);\n        });\n    }\n\n    get name(): string { return this._name; }\n    get title(): string { return this._props.Title; }\n    get version(): string { return this._props.Version; }\n    get autoStart(): boolean { return this._props.AutoStart; }\n    get isShell(): boolean { return this._props.IsShell; }\n    get caption(): string { return this._props.Caption; }\n    get hidden(): boolean { return this._props.IsHidden; }\n    get container(): string { return this._props.ApplicationName; }\n    get activityType(): string { return this._props.ActivityType; }\n    get activityWindowType(): string { return this._props.ActivityWindowType; }\n    get windowSettings(): { [key: string]: any } {\n        if (!this._props.Arguments) {\n            return {};\n        }\n        return objectClone(this._props.Arguments);\n    }\n    get allowMultiple(): boolean { return this._props.AllowMultiple; }\n    get available(): boolean { return this._props.IsReady || true; }\n    get icon(): string { return this._props.Icon; }\n    get iconURL(): string { return this._props.IconUrl; }\n    get sortOrder(): number { return this._props.SortOrder; }\n    get userProperties(): { [key: string]: any } {\n        if (!this._props.UserProperties) {\n            return {};\n        }\n        return objectClone(this._props.UserProperties);\n    }\n    get isActivity(): boolean {\n        return this._props.ActivityType !== undefined && this._props.ActivityType !== \"\";\n    }\n\n    get configuration(): Glue42.AppManager.LegacyAppConfigProperties {\n        return {\n            autoStart: this._props.AutoStart,\n            caption: this._props.Caption,\n            hidden: this._props.IsHidden,\n            container: this._props.ApplicationName,\n            activityType: this._props.ActivityType,\n            allowMultiple: this._props.AllowMultiple\n        };\n    }\n\n    get instances() {\n        return this._appManager.instances().filter((instance: Glue42.AppManager.Instance) => instance.application.name === this._name);\n    }\n\n    get type() {\n        return this._props.Type;\n    }\n\n    get mode() {\n        if (!this._props) {\n            // no info about the app\n            return \"unknown\";\n        }\n\n        // GD3 - we always have Mode from the stream object\n        if (this._props.Mode && typeof this._props.Mode === \"string\") {\n            return this._props.Mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // GD2\n        // return unknown for activity applications\n        if (this.isActivity) {\n            return \"unknown\";\n        }\n\n        // check definition -> hc.args.mode\n        if (this._props.Arguments && this._props.Arguments.mode && typeof this._props.Arguments.mode === \"string\") {\n            return this._props.Arguments.mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // if no hc.args.mode, check hc.WindowStyleAttributes\n        let styleAttributes = this._props.WindowStyleAttributes;\n        if (styleAttributes) {\n            // WindowStyleAttributes is not a valid JSON, we will need to find mode in the string\n            styleAttributes = styleAttributes.split(\" \").join(\"\");\n            const searchFor = \"mode:\\\"\";\n            const modeIndex = styleAttributes.indexOf(searchFor);\n            if (modeIndex !== -1) {\n                const startModeIndex = modeIndex + searchFor.length;\n                const stopModeIndex = styleAttributes.indexOf(\"\\\"\", startModeIndex);\n                const style = styleAttributes.substr(startModeIndex, stopModeIndex - startModeIndex);\n                if (style && typeof style === \"string\") {\n                    return style.toLowerCase() as Glue42.Windows.WindowMode;\n                }\n            }\n        }\n\n        // default mode for GD2\n        return \"flat\";\n    }\n\n    public updateFromProps(props: AppProps) {\n        if (!this._props) {\n            this._props = { Name: props.Name };\n        }\n\n        Object.keys(props).forEach((key) => {\n            (this._props as any)[key] = (props as any)[key];\n        });\n    }\n\n    public start(context?: unknown, options?: Glue42.AppManager.ApplicationStartOptions): Promise<Glue42.AppManager.Instance> {\n        return new Promise<Glue42.AppManager.Instance>(async (resolve, reject) => {\n            const name = this._name;\n            let startTimeout: number = 60000;\n            if (isUndefinedOrNull(context)) {\n                context = {};\n            } else if (typeof context !== \"object\") {\n                return reject(new Error(`Invalid \"context\" parameter - must be an object.`));\n            }\n\n            if (isUndefinedOrNull(options)) {\n                options = {};\n            } else if (typeof options !== \"object\") {\n                return reject(new Error(`Invalid \"options\" parameter - must be an object.`));\n            }\n\n            let waitForAGMInstance = options.waitForAGMReady ?? true;\n\n            const waitForApplicationInstance = (id: string) => {\n                let unsub: () => void;\n                // reject after some timeout\n                const timeout = setTimeout(() => {\n                    if (unsub) {\n                        unsub();\n                    }\n                    reject(`timed out while waiting for instance id ${id} for app ${this.name}`);\n                }, startTimeout);\n\n                const waitFunc = (i: Glue42.AppManager.Instance) => {\n                    if (i.id !== id) {\n                        return;\n                    }\n                    if (unsub) {\n                        unsub();\n                        unsub = undefined;\n                    }\n                    clearTimeout(timeout);\n                    resolve(i);\n                };\n\n                if (waitForAGMInstance) {\n                    unsub = this._appManager.onInstanceAgmServerReady(waitFunc);\n                } else {\n                    // if not there subscribe for instance events\n                    unsub = this._appManager.onInstanceStarted(waitFunc);\n                }\n            };\n\n            const result = await this._agm.invoke<StartAppResult>(AgmNames.StartApplicationMethodName,\n                {\n                    Name: name,\n                    Context: context,\n                    Options: options\n                },\n                \"best\",\n                {\n                    methodResponseTimeoutMs: startTimeout\n                });\n\n            const acsResult: StartAppResult = result.returned;\n            if (typeof acsResult.timeout !== \"undefined\") {\n                startTimeout = acsResult.timeout * 1000;\n            }\n            if (typeof acsResult.waitForInterop !== \"undefined\" && typeof options.waitForAGMReady === \"undefined\") {\n                waitForAGMInstance = acsResult.waitForInterop;\n            }\n\n            if (acsResult && acsResult.Id) {\n                if (this._appManager.mode === \"startOnly\") {\n                    // we're in startOnly mode, no stream, so we will simulate the instance\n                    // based on the data received from GD\n                    const instance = this._appManager.handleInstanceStarted({\n                        ActivityId: undefined,\n                        IsActivityOwner: undefined,\n                        Context: undefined,\n                        Title: undefined,\n                        AgmServers: undefined,\n                        Id: acsResult.Id,\n                        Name: acsResult.Name,\n                    });\n                    resolve(instance);\n                } else {\n                    // we received instance from ACS, let's wait until it appears on the stream\n                    waitForApplicationInstance(acsResult.Id);\n                }\n            } else {\n                // we haven't received instance from ACS - this might happen if the app does not\n                // support tracking instances (e.g. we start internet explorer with some url)\n                resolve(undefined);\n            }\n        });\n    }\n\n    public onInstanceStarted(callback: (instance: Glue42.AppManager.Instance) => any): UnsubscribeFunction {\n        return this._registry.add(\"instanceStarted\", callback);\n    }\n\n    public onInstanceStopped(callback: (instance: Glue42.AppManager.Instance) => any): UnsubscribeFunction {\n        return this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onAvailable(callback: (app: Glue42.AppManager.Application) => any): UnsubscribeFunction {\n        if (this._props.IsReady) {\n            setTimeout(() => {\n                this._registry.execute(\"appAvailable\", this);\n            }, 0);\n        }\n        return this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onUnavailable(callback: (app: Glue42.AppManager.Application) => any): UnsubscribeFunction {\n        if (this._props.IsReady === false) {\n            setTimeout(() => {\n                this._registry.execute(\"appUnavailable\", this);\n            }, 0);\n        }\n        return this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onChanged(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appChanged\", callback);\n    }\n\n    public onRemoved(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appRemoved\", callback);\n    }\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { InstanceProps, WindowContext } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { isUndefinedOrNull } from \"../activity/helpers/util\";\n\nexport default class InstanceImpl implements Glue42.AppManager.Instance {\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    private _startUpContext: WindowContext;\n    private _title: string;\n    private _isActivityInstance: boolean;\n    private _activityId: string;\n    private _inActivity: boolean;\n    private _isActivityOwner: boolean;\n    private _agmInstance: Partial<Glue42Core.AGM.Instance>;\n    private _unsubscribeInstanceAgmServerReady: UnsubscribeFunction;\n    private _unsubscribeInstanceStopped: UnsubscribeFunction;\n\n    constructor(\n        private _id: string,\n        private _appName: string,\n        private _appManager: AppManagerImpl,\n        private _agm: Glue42Core.AGM.API,\n        private _activities: Glue42.Activities.API,\n        private _windows: Glue42.Windows.API,\n        startFailed?: boolean\n    ) {\n        if (startFailed) {\n            return;\n        }\n\n        this._unsubscribeInstanceStopped = this._appManager.onInstanceStopped((instance: Glue42.AppManager.Instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"stopped\", instance);\n        });\n\n        this._unsubscribeInstanceAgmServerReady = this._appManager.onInstanceAgmServerReady((instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"agmReady\", instance);\n        });\n    }\n\n    get id(): string { return this._id; }\n\n    get application(): Glue42.AppManager.Application { return this._appManager.application(this._appName); }\n\n    get activity(): Glue42.Activities.Activity {\n        if (!this._activities) {\n            throw new Error(\"This method requires glue.activities library to be enabled.\");\n        }\n        return this._activities.all.instances.get()\n            .filter((activityInstance: Glue42.Activities.Activity) => activityInstance.id === this._activityId)[0];\n    }\n\n    get isActivityOwner(): boolean { return this._isActivityOwner; }\n\n    // this property returns a list of activity window instances (not activity instances)\n    get activityInstances(): Glue42.AppManager.Instance[] {\n        return this._appManager.instances().filter((i) =>\n            i.application.type !== \"activity\" && // GD2 backward compatibility -  do not show activity instances into the activity window instances list\n            i.activityId && // glue js 2 and 3 bug and breaking change - they will show non activity window instances as activity in case of activityId === undefined\n            i.activityId === this._activityId);\n    }\n\n    get activityOwnerInstance(): Glue42.AppManager.Instance {\n        if (!this._activityId) {\n            return undefined;\n        }\n        return this.activityInstances.filter((inst) => (inst as InstanceImpl)?.isActivityOwner)[0];\n    }\n\n    get window(): Glue42.Windows.GDWindow {\n        if (!this._windows) {\n            throw new Error(\"This method requires glue.windows library to be enabled.\");\n        }\n\n        let win = this._windows.list().filter((w) => w.id === this._id)[0];\n        if (!win && this._activities && this.activity && this.activityOwnerInstance) {\n            // This is covering GD3 activity instance\n            win = this.activityOwnerInstance.window;\n        }\n\n        return win;\n    }\n\n    get context(): WindowContext {\n        return this._startUpContext ?? this.window?.context ?? {};\n    }\n\n    get title(): string { return this._title; }\n\n    get isActivityInstance(): boolean { return this._isActivityInstance; }\n\n    get activityId(): string { return this._activityId; }\n\n    get inActivity(): boolean { return this._inActivity; }\n\n    get isSingleWindowApp(): boolean { return !this._inActivity; }\n\n    get agm(): Partial<Glue42Core.AGM.Instance> {\n        return this._agmInstance;\n    }\n\n    public onAgmReady(callback: (instance: Glue42.AppManager.Instance) => any) {\n        if (this._agmInstance) {\n            setTimeout(() => {\n                this._registry.execute(\"agmReady\", this);\n            }, 0);\n        }\n        return this._registry.add(\"agmReady\", callback);\n    }\n\n    public onStopped(callback: (instance: Glue42.AppManager.Instance) => any) {\n        return this._registry.add(\"stopped\", callback);\n    }\n\n    // uses this.window and waits for the window to appear if needed\n    // we can not remove this.window for legacy reasons\n    public getWindow(): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            // try to get it the normal way\n            const result = this.window;\n            if (result) {\n                resolve(result);\n                return;\n            }\n\n            // if we can not find it directly wait for it to appear\n            const done = (error?: Error, window?: Glue42.Windows.GDWindow) => {\n                if (error) {\n                    reject(error);\n                }\n\n                if (window) {\n                    resolve(window);\n                }\n\n                setTimeout(() => {\n                    clearTimeout(timeout);\n                    unsub();\n                }, 0);\n            };\n\n            // if not found for 30 sec reject\n            const timeout = setTimeout(() => {\n                done(new Error(`can not find a window with id ${this._id}`));\n            }, 30000);\n\n            const unsub = this._windows.onWindowAdded((w) => {\n                if (w.id === this._id) {\n                    done(undefined, w);\n                }\n            });\n        });\n    }\n\n    public updateFromProps(props: InstanceProps): void {\n        this._startUpContext = props.Context;\n        this._title = props.Title;\n        this._isActivityInstance = false;\n        if (props.ActivityId && props.ActivityId !== \"\") {\n            this._activityId = props.ActivityId;\n            this._isActivityInstance = true;\n        }\n        this._isActivityOwner = props.IsActivityOwner;\n        if (!this._activityId && this._startUpContext && this._startUpContext.activityId) {\n            this._activityId = this._startUpContext.activityId;\n        }\n        this._inActivity = Boolean(this._activityId);\n\n        this.updateAgmInstanceFromProps(props);\n    }\n\n    public updateAgmInstanceFromProps(props: InstanceProps) {\n        if (!props.AgmServers) {\n            return;\n        }\n\n        const agmInstances: Glue42Core.AGM.Instance[] = props.AgmServers as Glue42Core.AGM.Instance[];\n        if (agmInstances && agmInstances.length > 0 && !isUndefinedOrNull(agmInstances[0])) {\n            this._agmInstance = agmInstances[0];\n        }\n    }\n\n    public stop(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const unsubscribe = this._appManager.onInstanceStopped((instance) => {\n                if (instance.id === this._id) {\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            this._agm.invoke(\n                AgmNames.StopApplicationMethodName,\n                {\n                    Name: this._appName,\n                    Id: this._id\n                })\n                .then(() => {\n                    if (this._appManager.mode === \"startOnly\") {\n                        this._appManager.handleInstanceStopped({\n                            Name: this._appName,\n                            Id: this.id,\n                            Context: undefined,\n                            Title: undefined,\n                            ActivityId: undefined,\n                            IsActivityOwner: undefined,\n                            AgmServers: undefined\n                        });\n                        // in startOnly mode, resolve stop as soon as we receive\n                        resolve();\n                    }\n                })\n                .catch((err: any) => reject(err));\n        });\n    }\n\n    public activate(): Promise<Glue42Core.AGM.InvocationResult<any>> {\n        return this._agm.invoke(AgmNames.ActivateApplicationMethodName, { Name: this._appName, Id: this._id });\n    }\n\n    public done() {\n\n        // remove all handlers\n        this._registry.clear();\n        // remove subscriptions\n        this._unsubscribeInstanceAgmServerReady();\n        this._unsubscribeInstanceStopped();\n    }\n\n    public getContext(): Promise<object> {\n        return Promise.resolve(this.context);\n    }\n}\n","import ApplicationImpl from \"./application\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, InstanceProps } from \"./types\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport InstanceImpl from \"./instance\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class AppManagerImpl implements Glue42.AppManager.AppManager {\n\n    private _apps: { [key: string]: ApplicationImpl } = {};\n    private _instances: InstanceImpl[] = [];\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    constructor(\n        public mode: Glue42.AppManager.Mode,\n        private _agm: Glue42Core.AGM.API,\n        private _activities: Glue42.Activities.API,\n        private _windows: Glue42.Windows.API,\n        private _logger: Glue42Core.Logger.API,\n        private _gdMajorVersion: number\n    ) {\n        //\n    }\n\n    public application = (name: string) => {\n        if (typeof name !== \"string\") {\n            throw new Error(`\"name\" must be string`);\n        }\n        return this._apps[name];\n    }\n\n    public applications = () => {\n        return Object.keys(this._apps).map((k: string) => this._apps[k]);\n    }\n\n    public instances = () => {\n        return this._instances;\n    }\n\n    public getMyInstance = () => {\n        if (this._gdMajorVersion >= 3) {\n            // GD3 check\n            const instanceId = window.glue42gd.appInstanceId;\n            return this._instances.filter((i) => i.id === instanceId)[0];\n        }\n\n        return undefined;\n    }\n\n    public handleAppAdded = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`adding app ${id}`);\n        this._apps[id] = new ApplicationImpl(this, id, this._agm);\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appAdded\", app);\n        // keeps backwards compatibility\n        this._registry.execute(\"appAvailable\", app);\n    }\n\n    public handleAppUpdated = (props: AppProps) => {\n        // TODO: check side effects, is this._apps updated?\n\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appChanged\", app);\n    }\n\n    public handleAppRemoved = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`removing app ${id}`);\n        const app = this.application(id);\n\n        // remove all instances related to the app\n        this._instances = this._instances.filter((i) => i.application.name !== app.name);\n\n        delete this._apps[id];\n\n        this._registry.execute(\"appRemoved\", app);\n    }\n\n    // not called from GD3\n    public handleAppReady = (props: AppProps) => {\n        const id = this._getAppId(props);\n        const app = this._getAppOrThrow(id);\n        app.updateFromProps(props);\n\n        if (app.available) {\n            this._registry.execute(\"appAvailable\", app);\n        } else {\n            this._registry.execute(\"appUnavailable\", app);\n        }\n    }\n\n    public handleInstanceStarted = (props: InstanceProps): InstanceImpl => {\n        this._logger.trace(`started app ${props.Name} ${props.Id}`);\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n\n        const instance = new InstanceImpl(id, appName, this, this._agm, this._activities, this._windows);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._instances.push(instance);\n\n        this._registry.execute(\"instanceStarted\", instance);\n        return instance;\n    }\n\n    public handleInstanceStopped = (props: InstanceProps) => {\n        this._logger.trace(`failed to start app ${props.Name} ${props.Id}`);\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        this._instances = this._instances.filter((i) => !this._matchInstance(i, id, appName));\n\n        this._registry.execute(\"instanceStopped\", instance);\n        instance.done();\n    }\n\n    public handleInstanceAgmServerReady = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        instance.updateAgmInstanceFromProps(props);\n\n        this._registry.execute(\"instanceAgmServerReady\", instance);\n    }\n\n    public handleInstanceStartFailed = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const startFailed = true;\n        const instance = new InstanceImpl(id, appName, undefined, undefined, undefined, undefined, startFailed);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._registry.execute(\"instanceStartFailed\", instance);\n    }\n\n    public handleInstanceUpdated = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const app = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, app);\n\n        this._updateInstanceFromProps(instance, props);\n    }\n\n    /** Event subscription methods */\n    public onInstanceStarted = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStarted\", callback, this._instances);\n    }\n\n    public onInstanceStartFailed = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStartFailed\", callback);\n    }\n\n    public onInstanceStopped = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onInstanceUpdated = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceChanged\", callback);\n    }\n\n    public onInstanceAgmServerReady = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceAgmServerReady\", callback);\n    }\n\n    public onAppAdded = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appAdded\", callback, Object.values(this._apps));\n    }\n\n    public onAppRemoved = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appRemoved\", callback);\n    }\n\n    public onAppAvailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onAppUnavailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onAppChanged = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appChanged\", callback);\n    }\n\n    private _getAppOrThrow(id: string) {\n        const result = this.application(id);\n        if (!result) {\n            throw Error(`app with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getAppId(props: AppProps) {\n        return props.Name;\n    }\n\n    private _matchInstance(instance: Glue42.AppManager.Instance, id: string, appName: string) {\n        return instance.id === id && instance.application.name === appName;\n    }\n\n    private _getInstanceByIdAndName(id: string, appName: string) {\n        return this._instances.filter((i) => this._matchInstance(i, id, appName))[0];\n    }\n\n    private _getInstanceOrThrow(id: string, appName: string) {\n        const result = this._getInstanceByIdAndName(id, appName);\n        if (!result) {\n            throw Error(`instance with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getInstanceId(props: InstanceProps) {\n        return props.Id;\n    }\n\n    private _getInstanceAppName(props: InstanceProps) {\n        return props.Name;\n    }\n\n    private _updateAppFromProps(props: AppProps) {\n        const id = this._getAppId(props);\n        this._logger.trace(`updating app with  + ${id}, ${props}`);\n        const app = this._getAppOrThrow(id);\n\n        app.updateFromProps(props);\n\n        return app;\n    }\n\n    private _updateInstanceFromProps(instance: InstanceImpl, props: InstanceProps) {\n        this._logger.trace(\"updating instance with \" + this._getInstanceId(props) + \" for app \" + this._getInstanceAppName(props));\n        instance.updateFromProps(props);\n    }\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { OnGDShutdownMethodName } from \"./const/agm-names\";\n\nfunction promisify(promise: Promise<any>, successCallback: (arg?: any) => void, errorCallback: (err?: any) => void) {\n    const isFunction = (arg: any) => {\n        return !!(arg && arg.constructor && arg.call && arg.apply);\n    };\n\n    if (!isFunction(successCallback) && !isFunction(errorCallback)) {\n        return promise;\n    }\n\n    if (!isFunction(successCallback)) {\n        successCallback = () => {\n            // EMPTY\n        };\n    } else if (!isFunction(errorCallback)) {\n        errorCallback = () => {\n            // EMPTY\n        };\n    }\n\n    return promise.then(successCallback, errorCallback);\n}\n\nexport default class EntitlementsImpl implements Glue42.AppManager.Entitlements {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n    private _isMethodRegistered = false;\n\n    constructor(\n        private _agm: Glue42Core.AGM.API\n    ) {\n        //\n    }\n\n    public handleBranchModified = (branch: Glue42.AppManager.Branch) => {\n        this._registry.execute(\"branchChanged\", branch);\n    }\n\n    public handleBranchesModified = (branches: Glue42.AppManager.Branch[]) => {\n        this._registry.execute(\"branchesChanged\", branches);\n    }\n\n    public getRegion = (success?: (region: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        return promisify(\n            this._agmInvoke(\n                AgmNames.GetConfigurationRegionMethodName,\n                (e: Glue42Core.AGM.InvocationResult<{ Region: string }>) => e.returned.Region\n            ),\n            success,\n            error\n        );\n    }\n\n    public getBranches = (success?: (branches: Glue42.AppManager.Branch[]) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch[]> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetBranchesMethodName,\n            (e) => {\n                const obj = e.returned.Branches as { [key: string]: Glue42.AppManager.Branch };\n                return Object.keys(obj).map((key) => obj[key]);\n            }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getCurrentBranch = (success?: (branch: Glue42.AppManager.Branch) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetCurrentBranchMethodName,\n            (e) => e.returned.Branch,\n            undefined\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setRegion = (region: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetConfigurationRegionMethodName,\n            (e) => e.returned.ResultMessage,\n            { Region: region }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setCurrentBranch = (branch: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetCurrentBranchMethodName,\n            (e) => e.returned.ResultMessage,\n            { Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public currentUser = (success?: (user: Glue42.AppManager.UserInfo) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.UserInfo> => {\n        const promise = this._agmInvoke(AgmNames.GetUserMethodName);\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlement = (funct: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlementBranch = (funct: string, branch: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct, Branch: branch }\n        );\n        return promisify(promise, success, error);\n    }\n\n    public canI = (func: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public canIBranch = (func: string, branch: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func, Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public onBranchesChanged = (callback: (branches: Glue42.AppManager.Branch[]) => any): UnsubscribeFunction => {\n        return this._registry.add(\"branchesChanged\", callback);\n    }\n\n    public onBranchChanged = (callback: (branch: Glue42.AppManager.Branch) => any): UnsubscribeFunction => {\n        return this._registry.add(\"branchChanged\", callback);\n    }\n\n    public exit = (options?: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.ShutdownMethodName,\n            null,\n            options\n        );\n    }\n\n    public onShuttingDown = (callback: (args: Glue42.AppManager.ShuttingDownEventArgs) => Promise<{ prevent: boolean }>) => {\n        this.registerMethod();\n        return this._registry.add(\"onShuttingDown\", callback);\n    }\n\n    public restart = (options?: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.RestartMethodName,\n            null,\n            options\n        );\n    }\n\n    private registerMethod() {\n        if (!this._isMethodRegistered) {\n            this._agm.register(OnGDShutdownMethodName, async (args) => {\n                try {\n                    const results = await Promise.all(this._registry.execute(\"onShuttingDown\", args)) as Array<{ prevent: boolean }>;\n                    const prevent = results.some((r) => r.prevent);\n                    return { prevent };\n                } catch (error) {\n                    //\n                }\n            });\n            this._isMethodRegistered = true;\n        }\n    }\n\n    private _agmInvoke = (\n        method: string,\n        transformFunction?: (res: Glue42Core.AGM.InvocationResult<any>) => any,\n        args?: object\n    ): Promise<any> => {\n        args = args || {};\n        return new Promise((resolve, reject) => {\n            const errHandler: Glue42Core.AGM.InvokeErrorHandler = (error) => reject(error);\n            this._agm.invoke(method, args)\n                .then((result) => {\n                    if (!transformFunction) {\n                        transformFunction = (d: Glue42Core.AGM.InvocationResult<any>) => d.returned;\n                    }\n                    resolve(transformFunction(result));\n                })\n                .catch(errHandler);\n        });\n    }\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\n\nexport const InMemoryStoreCommandMethodName = \"T42.ACS.InMemoryStoreCommand\";\n\nexport type InMemoryStoreCommandArgs = InMemoryImportCommand | InMemoryExportCommand | InMemoryRemoveCommand | InMemoryClearCommand;\n\nexport interface GenericInMemoryCommand<C, A> {\n    command: C;\n    args?: A;\n}\n\ntype InMemoryImportCommand = GenericInMemoryCommand<\"import\", InMemoryImportArgs>;\ninterface InMemoryImportArgs {\n    apps: Glue42.AppManager.Definition[];\n    mode?: \"merge\" | \"replace\";\n}\n\ntype InMemoryRemoveCommand = GenericInMemoryCommand<\"remove\", { apps: string[] }>;\nexport interface InMemoryRemoveArgs {\n    apps: string[];\n}\n\ntype InMemoryExportCommand = GenericInMemoryCommand<\"export\", undefined>;\ntype InMemoryClearCommand = GenericInMemoryCommand<\"clear\", undefined>;\n\nexport interface InMemoryExportResult {\n    apps: Glue42.AppManager.Definition[];\n}\n\nexport class InMemoryStore implements Glue42.AppManager.InMemoryStore {\n\n    constructor(private interop: Glue42Core.Interop.API) {\n    }\n\n    public import(apps: Glue42.AppManager.Definition[], mode?: \"replace\" | \"merge\"): Promise<Glue42.AppManager.ImportResult> {\n        if (!apps || !Array.isArray(apps)) {\n            return Promise.reject(\"invalid apps argument - should be an array of application definitions\");\n        }\n        if (mode && mode !== \"replace\" && mode !== \"merge\") {\n            return Promise.reject(\"invalid mode argument - should be 'replace' or 'merge'\");\n        }\n\n        mode = mode ?? \"replace\";\n        const command: InMemoryImportCommand = {\n            command: \"import\",\n            args: {\n                apps,\n                mode\n            }\n        };\n        return this.interop.invoke<Glue42.AppManager.ImportResult>(InMemoryStoreCommandMethodName, command)\n            .then((r) => r.returned);\n    }\n\n    public export(): Promise<Glue42.AppManager.Definition[]> {\n        return this.interop.invoke<InMemoryExportResult>(InMemoryStoreCommandMethodName, { command: \"export\" })\n            .then((r) => r.returned.apps);\n    }\n\n    public remove(app: string): Promise<void> {\n        if (!app || typeof app !== \"string\") {\n            return Promise.reject(\"invalid app name, should be a string value\");\n        }\n        const command: InMemoryRemoveCommand = {\n            command: \"remove\",\n            args: {\n                apps: [app]\n            }\n        };\n        return this.interop.invoke<void>(InMemoryStoreCommandMethodName, command).then((r) => r.returned);\n    }\n\n    public clear(): Promise<void> {\n        const command: InMemoryClearCommand = {\n            command: \"clear\"\n        };\n        return this.interop.invoke<void>(InMemoryStoreCommandMethodName, command).then((r) => r.returned);\n    }\n\n    public createAppDef(name: string, url: string): Glue42.AppManager.Definition {\n        if (!url) {\n            url = \"https://google.com\";\n        }\n        return {\n            name,\n            type: \"window\",\n            title: name,\n            details: {\n                url\n            }\n        };\n    }\n}\n","import AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\nimport snapshot from \"./snapshot\";\nimport subscriptionFactory from \"./data-subscription\";\nimport { Glue42 } from \"../../glue\";\nimport { InMemoryStore } from \"./in-memory\";\n\nexport default (config: Glue42.AppManager.Config): Glue42.AppManager.API => {\n\n    if (!config) {\n        throw Error(\"config not set\");\n    }\n\n    if (!config.agm) {\n        throw Error(\"config.agm is missing\");\n    }\n\n    const START_ONLY: Glue42.AppManager.Mode = \"startOnly\";\n    const SKIP_ICONS: Glue42.AppManager.Mode = \"skipIcons\";\n    const FULL: Glue42.AppManager.Mode = \"full\";\n\n    const mode: Glue42.AppManager.Mode = config.mode || START_ONLY;\n    if (mode !== START_ONLY && mode !== SKIP_ICONS && mode !== FULL) {\n        throw new Error(`Invalid mode for appManager lib - ${mode} is not supported`);\n    }\n\n    const activities = config.activities;\n    const agm = config.agm;\n    const logger = config.logger;\n    const windows = config.windows;\n    const appManager = new AppManagerImpl(mode, agm, activities, windows, logger.subLogger(\"applications\"), config.gdMajorVersion);\n    const entitlements = new EntitlementsImpl(agm);\n\n    let readyPromise: Promise<void>;\n    if (mode === START_ONLY) {\n        readyPromise = snapshot(agm, appManager);\n    } else {\n        const subscription = subscriptionFactory(agm, appManager, entitlements, mode === SKIP_ICONS);\n        readyPromise = subscription.start();\n    }\n\n    const api: Glue42.AppManager.API = {\n        ready: () => readyPromise,\n\n        applications: appManager.applications,\n        application: appManager.application,\n\n        onAppAdded: appManager.onAppAdded,\n        onAppRemoved: appManager.onAppRemoved,\n        onAppChanged: appManager.onAppChanged,\n        onAppAvailable: appManager.onAppAvailable,\n        onAppUnavailable: appManager.onAppUnavailable,\n\n        instances: appManager.instances,\n        get myInstance() {\n            return appManager.getMyInstance();\n        },\n\n        onInstanceStarted: appManager.onInstanceStarted,\n        onInstanceStopped: appManager.onInstanceStopped,\n        onInstanceUpdated: appManager.onInstanceUpdated,\n        onInstanceStartFailed: appManager.onInstanceStartFailed,\n\n        getRegion: entitlements.getRegion,\n        getBranches: entitlements.getBranches,\n        getCurrentBranch: entitlements.getCurrentBranch,\n        getFunctionalEntitlement: entitlements.getFunctionalEntitlement,\n        getFunctionalEntitlementBranch: entitlements.getFunctionalEntitlementBranch,\n\n        setCurrentBranch: entitlements.setCurrentBranch,\n        setRegion: entitlements.setRegion,\n\n        currentUser: entitlements.currentUser,\n\n        canI: entitlements.canI,\n        canIBranch: entitlements.canIBranch,\n\n        onBranchesChanged: entitlements.onBranchesChanged,\n\n        exit: entitlements.exit,\n        restart: entitlements.restart,\n\n        onShuttingDown: entitlements.onShuttingDown,\n\n        inMemory: new InMemoryStore(agm)\n    };\n\n    return api;\n};\n","import * as AgmNames from \"./const/agm-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport AppManagerImpl from \"./app-manager\";\n\n/** Retrieves application snapshot from ACS */\nexport default function snapshot(agm: Glue42Core.AGM.API, appManager: AppManagerImpl): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n        agm.invoke(AgmNames.GetApplicationsMethodName, { skipIcon: true })\n            .then((response) => {\n                const data = response.returned;\n                if (!data) {\n                    resolve();\n                }\n\n                const applications = data.applications;\n                if (!applications) {\n                    resolve();\n                }\n\n                objectValues(applications).map((item) => appManager.handleAppAdded(item));\n\n                resolve();\n            })\n            .catch((err) => reject(`Error getting application snapshot: ${err.message}`));\n    });\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport * as EventNames from \"./const/event-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, InstanceProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\n\n/** Subscribe for the AGM stream published by ACS and distributes events to applications and instances components */\nexport default function createDataSubscription(agm: Glue42Core.AGM.API, applications: AppManagerImpl, entitlements: EntitlementsImpl, skipIcons: boolean) {\n    let subscription: Glue42Core.AGM.Subscription;\n    let initiated = false;\n    const start = () => {\n        let resolveFunc: () => void;\n        let rejectFunc: (error?: any) => void;\n\n        const resultPromise = new Promise<void>((resolve, reject) => {\n            resolveFunc = resolve;\n            rejectFunc = reject;\n        });\n\n        agm.subscribe(AgmNames.OnEventMethodName, { arguments: { skipIcon: skipIcons }, waitTimeoutMs: 10000 })\n            .then((s) => {\n                subscription = s;\n                subscription.onData((streamData: Glue42Core.AGM.StreamData) => {\n                    const events: any = streamData.data;\n\n                    const onApplicationAddedEventArgs: AppProps[] = objectValues(events[EventNames.OnApplicationAddedEvent]);\n                    onApplicationAddedEventArgs.map((item: AppProps) => applications.handleAppAdded(item));\n\n                    objectValues(events[EventNames.OnApplicationChangedEvent])\n                        .map((item: AppProps) => applications.handleAppUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationRemovedEvent])\n                        .map((item: AppProps) => applications.handleAppRemoved(item));\n\n                    objectValues(events[EventNames.OnApplicationReadyEvent])\n                        .map((item: AppProps) => applications.handleAppReady(item));\n\n                    const onApplicationStartedEventArgs: InstanceProps[] = objectValues(events[EventNames.OnApplicationStartedEvent]);\n                    onApplicationStartedEventArgs.map((item: InstanceProps) => applications.handleInstanceStarted(item));\n\n                    objectValues(events[EventNames.OnApplicationStartFailedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStartFailed(item));\n\n                    objectValues(events[EventNames.OnApplicationStoppedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStopped(item));\n\n                    objectValues(events[EventNames.OnApplicationUpdatedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationAgmServerReadyEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceAgmServerReady(item));\n\n                    objectValues(events[EventNames.OnBranchChangedEvent])\n                        .map((item: Glue42.AppManager.Branch) => entitlements.handleBranchModified(item));\n\n                    objectValues(events[EventNames.OnBranchesModifiedEvent])\n                        .map((item: Glue42.AppManager.Branch[]) => entitlements.handleBranchesModified(item));\n\n                    if (!initiated) {\n                        initiated = true;\n                        const hasMyAppInSnapShot = onApplicationAddedEventArgs.some((a) => a.Name === agm.instance.application);\n                        const hasMyInstanceInSnapShot = onApplicationStartedEventArgs.some((i) => i.Id === agm.instance.instance);\n                        if (hasMyAppInSnapShot) {\n                            if (hasMyInstanceInSnapShot) {\n                                resolveFunc();\n                            } else {\n                                const un = applications.onInstanceStarted((i) => {\n                                    if (i.id === agm.instance.instance) {\n                                        un();\n                                        resolveFunc();\n                                    }\n                                });\n                            }\n                        } else {\n                            resolveFunc();\n                        }\n                    }\n                });\n\n                subscription.onFailed((err: any) => rejectFunc(err));\n\n            })\n            .catch((err) => rejectFunc(`Error subscribing for ${AgmNames.OnEventMethodName} stream. Err: ${err.message ?? err}`));\n\n        return resultPromise;\n    };\n\n    const stop = () => {\n        if (subscription) {\n            subscription.close();\n        }\n    };\n\n    return {\n        start,\n        stop\n    };\n}\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n","'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n","'use strict';\n\nvar encode = require('./encode');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","import shortid from \"shortid\";\nimport { Glue42 } from \"../../../glue\";\nimport { Executor, JumpListUpdateActionSettings, JumpListUpdateSettings, JumpListSettingsInternal } from \"../types\";\n\nconst T42JumpListAction = \"T42.JumpList.Action\";\n\nexport interface ActionCallback {\n    callbackId: string;\n    callback: () => Promise<void>;\n}\n\nexport class JumpListManager {\n\n    private _executor: Executor;\n    private _agm: Glue42.AGM.API;\n    private _logger: Glue42.Logger.API;\n    private _groupActionCallbacks: Map<string, ActionCallback[]> = new Map<string, ActionCallback[]>();\n    private _registered: boolean = false;\n\n    public init(executor: Executor, agm: Glue42.AGM.API, logger: Glue42.Logger.API) {\n        this._executor = executor;\n        this._agm = agm;\n        this._logger = logger;\n\n        this.registerCallbackMethod();\n    }\n\n    public setEnabled(windowId: string, enabled: boolean): Promise<void> {\n        const settings: JumpListUpdateSettings = {\n            enabled\n        };\n\n        return this._executor.updateJumpList(windowId, settings);\n    }\n\n    public createCategory(windowId: string, title: string, actions: Glue42.Windows.JumpListActionSettings[]): Promise<void> {\n        const settings: JumpListUpdateSettings = {\n            category: {\n                title,\n                operation: \"create\",\n                actions: this.toUpdateActions(\"create\", title, actions)\n            }\n        };\n\n        return this._executor.updateJumpList(windowId, settings);\n    }\n\n    public removeCategory(windowId: string, title: string) {\n        const settings: JumpListUpdateSettings = {\n            category: {\n                title,\n                operation: \"remove\",\n                actions: []\n            }\n        };\n\n        this.manageActionCallback(settings.category.operation, title);\n\n        return this._executor.updateJumpList(windowId, settings);\n    }\n\n    public createActions(windowId: string, categoryTitle: string, actions: Glue42.Windows.JumpListActionSettings[]): Promise<void> {\n        const settings: JumpListUpdateSettings = {\n            category: {\n                title: categoryTitle,\n                operation: \"update\",\n                actions: this.toUpdateActions(\"create\", categoryTitle, actions)\n            }\n        };\n\n        return this._executor.updateJumpList(windowId, settings);\n    }\n\n    public removeActions(windowId: string, categoryTitle: string, actions: Glue42.Windows.JumpListActionSettings[]): Promise<void> {\n        const settings: JumpListUpdateSettings = {\n            category: {\n                title: categoryTitle,\n                operation: \"update\",\n                actions: this.toUpdateActions(\"remove\", categoryTitle, actions)\n            }\n        };\n\n        return this._executor.updateJumpList(windowId, settings);\n    }\n\n    public async getActions(windowId: string, catgoryTitle: string): Promise<Glue42.Windows.JumpListActionSettings[]> {\n        const actions: Glue42.Windows.JumpListActionSettings[] = [];\n        const configuration = await this.getJumpListSettings(windowId);\n        const currentCategory = configuration.categories.find((category) => category.title === catgoryTitle);\n        if (currentCategory) {\n            currentCategory.actions.forEach((action) => {\n                const actionCallback = this.getActionCallback(action.callbackId);\n                if (actionCallback) {\n                    action.callback = actionCallback.callback;\n                }\n                actions.push({\n                    icon: action.icon,\n                    callback: action.callback,\n                    singleInstanceTitle: action.singleInstanceTitle,\n                    multiInstanceTitle: action.multiInstanceTitle\n                }as Glue42.Windows.JumpListActionSettings);\n            });\n        }\n        return Promise.resolve(actions);\n    }\n\n    public getJumpListSettings(windowId: string): Promise<JumpListSettingsInternal> {\n        return this._executor.getJumpList(windowId);\n    }\n\n    private toUpdateActions(operation: string, categoryTitle: string, actions: Glue42.Windows.JumpListActionSettings[]): JumpListUpdateActionSettings[] {\n        return actions.map((action) => {\n            const updateAction = {\n                icon: action.icon,\n                callback: action.callback,\n                callbackId: shortid.generate(),\n                singleInstanceTitle: action.singleInstanceTitle,\n                multiInstanceTitle: action.multiInstanceTitle,\n                operation\n            } as JumpListUpdateActionSettings;\n\n            this.manageActionCallback(operation, categoryTitle, updateAction);\n\n            return updateAction;\n        });\n    }\n\n    private manageActionCallback(operation: string, categoryTitle: string, updateAction?: JumpListUpdateActionSettings) {\n        if (operation === \"create\") {\n            if (!this._groupActionCallbacks.has(categoryTitle)) {\n                this._groupActionCallbacks.set(categoryTitle, []);\n            }\n\n            const categoryActionCallbacks = this._groupActionCallbacks.get(categoryTitle);\n            categoryActionCallbacks.push( {\n                callbackId: updateAction.callbackId,\n                callback: updateAction.callback\n            });\n\n        } else if (operation === \"remove\") {\n            if (updateAction) {\n                let categoryActionCallbacks = this._groupActionCallbacks.get(categoryTitle);\n                categoryActionCallbacks = categoryActionCallbacks.filter((accCal) => accCal.callbackId !== updateAction.callbackId);\n                if (categoryActionCallbacks.length === 0) {\n                    this._groupActionCallbacks.delete(categoryTitle);\n                } else {\n                    this._groupActionCallbacks.set(categoryTitle, categoryActionCallbacks);\n                }\n            } else {\n                this._groupActionCallbacks.delete(categoryTitle);\n            }\n        }\n    }\n\n    private registerCallbackMethod() {\n        if (this._registered) {\n            return;\n        }\n        this._registered = true;\n\n        try {\n            this._agm.register(T42JumpListAction, (args: any, caller: any) => {\n                const actionCallback = this.getActionCallback(args.callbackId);\n                if (actionCallback) {\n                    try {\n                        actionCallback.callback();\n                    } catch (e) {\n                        this._logger.error(\"Unable to execute user callback for jump list action!\", e);\n                    }\n                }\n            });\n        } catch (e) {\n            this._logger.error(`Unable to register method ${T42JumpListAction} for invoking jump list action callbacks!`, e);\n            return Promise.reject(e);\n        }\n    }\n\n    private getActionCallback(callbackId: string): ActionCallback {\n        let callbackAction: ActionCallback;\n        [...this._groupActionCallbacks.values()].forEach((callbacks: ActionCallback[]) => {\n            const callback = callbacks.find((cal) => cal.callbackId === callbackId);\n            if (callback) {\n                callbackAction = callback;\n            }\n        });\n        return callbackAction;\n    }\n}\n\nexport default new JumpListManager();\n","import { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { PendingWindowState, WindowEvents, WindowWrapper } from \"./types\";\n\nexport class WindowStore {\n    private readonly waitForTimeoutInMilliseconds: number = 60000;\n    private _windows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindowsStates: { [key: string]: PendingWindowState } = {};\n    private _registry: CallbackRegistry;\n    private _logger: Glue42Core.Logger.API;\n\n    constructor() {\n        this._registry = CallbackFactory();\n    }\n\n    public init(logger: Glue42Core.Logger.API) {\n        this._logger = logger;\n    }\n\n    // Returns a window which either in Ready OR NOT 'ready' state (when the window is NOT marked with readyToShow)\n    public get(id: string): WindowWrapper {\n        return this._windows[id] || this._pendingWindows[id];\n    }\n\n    // Returns a window which is in 'ready' state (when the window is marked with readyToShow)\n    public getIfReady(id: string): WindowWrapper {\n        return this._windows[id];\n    }\n\n    public get list(): { [key: string]: WindowWrapper } {\n        return this._windows;\n    }\n\n    public add(window: WindowWrapper) {\n        const isExist = this._pendingWindows[window.API.id] ? true : false;\n        if (isExist) {\n            this._logger.error(`trying to add window with id ${window.API.id} from windowStore, which already exists`);\n            return;\n        }\n        const remote = window.API.windowType === \"remote\";\n        this._pendingWindows[window.API.id] = window;\n        this._pendingWindowsStates[window.API.id] = {\n            ready: false,\n            urlChanged: remote, // remote windows don't have url events\n        };\n\n        this._registry.execute(\"on-added\", window);\n    }\n\n    public remove(window: WindowWrapper) {\n        delete this._windows[window.API.id];\n        delete this._pendingWindows[window.API.id];\n        delete this._pendingWindowsStates[window.API.id];\n        this._registry.execute(\"on-removed\", window);\n    }\n\n    public setReadyState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.ready = true;\n\n        if (targetWindowState.urlChanged) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public setUrlChangedState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.urlChanged = true;\n\n        if (targetWindowState.ready) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public waitFor(id: string): Promise<WindowWrapper> {\n        return new Promise((resolve, reject) => {\n\n            let un: UnsubscribeFunction;\n\n            const timeout = setTimeout(() => {\n                un();\n                reject(\"waitFor timed out.\");\n            }, this.waitForTimeoutInMilliseconds);\n\n            const win = this._windows[id];\n            if (win) {\n                clearTimeout(timeout);\n                resolve(win);\n            } else {\n                un = this.onReadyWindow((w: WindowWrapper) => {\n                    if (w.API.id !== id) {\n                        return;\n                    }\n                    clearTimeout(timeout);\n                    un();\n                    resolve(w);\n                });\n            }\n        });\n    }\n\n    public onReadyWindow(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-ready\", callback);\n    }\n\n    public onAdded(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-added\", callback);\n    }\n\n    public onRemoved(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-removed\", callback);\n    }\n\n    // newly created windows now need to hear both \"ready\" and \"urlChanged\" events in otder to be markedReadyToShow\n    public markReadyToShow(windowId: string) {\n        if (this._pendingWindows[windowId]) {\n            this._windows[windowId] = this._pendingWindows[windowId];\n            delete this._pendingWindows[windowId];\n            delete this._pendingWindowsStates[windowId];\n        }\n\n        this._registry.execute(\"on-ready\", this._windows[windowId]);\n    }\n}\n\nexport default new WindowStore();\n","import { Glue42 } from \"../glue\";\n\nexport default class Utils {\n    public static getGDMajorVersion() {\n        if (typeof window === \"undefined\") {\n            return -1;\n        }\n        if (!window.glueDesktop) {\n            return -1;\n        }\n        if (!window.glueDesktop.version) {\n            return -1;\n        }\n        const ver = Number(window.glueDesktop.version.substr(0, 1));\n        return isNaN(ver) ? -1 : ver;\n    }\n\n    public static callbackifyPromise<T>(\n        action: () => Promise<T>,\n        successCallback?: (args?: T) => void,\n        errorCallback?: (errorMessage: string) => void): Promise<T> {\n\n        const fail = (error: any) => {\n            let msg = error;\n            if (error instanceof Error) {\n                msg = error.message;\n            }\n            if (typeof errorCallback === \"function\") {\n                errorCallback(msg);\n                return;\n            }\n\n            return Promise.reject(msg);\n        };\n\n        try {\n            return action()\n                .then((result) => {\n                    if (typeof successCallback === \"function\") {\n                        successCallback(result);\n                    }\n                    return result;\n                })\n                .catch((error) => {\n                    return fail(error);\n                });\n        } catch (err) {\n            return fail(err);\n        }\n    }\n\n    public static getMonitor(bounds: Glue42.Windows.Bounds, displays?: Glue42.Screen[]): Glue42.Screen {\n        const monitorsSortedByOverlap = displays.map((m) => {\n            const { left, top, workingAreaWidth: width, workingAreaHeight: height } = m;\n            const overlap = this.calculateTotalOverlap({ left, top, width, height }, bounds);\n            return {\n                monitor: m,\n                totalOverlap: overlap\n            };\n        }).sort((a, b) => b.totalOverlap - a.totalOverlap);\n\n        return monitorsSortedByOverlap[0].monitor;\n    }\n\n    public static getDisplayCenterOfScreen(a: Partial<Glue42.Windows.Bounds>, display?: Glue42.Screen) {\n        const left = Math.floor(Math.max(display.left, (display.left + (display.workingAreaWidth - a.width) / 2)));\n        const top = Math.floor(Math.max(display.top, (display.top + (display.workingAreaHeight - a.height) / 2)));\n        return {\n            top,\n            left\n        };\n    }\n\n    private static calculateTotalOverlap(r1: Glue42.Windows.Bounds, r2: Glue42.Windows.Bounds) {\n        const r1x = r1.left;\n        const r1y = r1.top;\n        const r1xMax = r1x + r1.width;\n        const r1yMax = r1y + r1.height;\n\n        const r2x = r2.left;\n        const r2y = r2.top;\n        const r2xMax = r2x + r2.width;\n        const r2yMax = r2y + r2.height;\n\n        const xOverlap = Math.max(0, Math.min(r1xMax, r2xMax) - Math.max(r1x, r2x));\n        const yOverlap = Math.max(0, Math.min(r1yMax, r2yMax) - Math.max(r1y, r2y));\n\n        return xOverlap * yOverlap;\n    }\n}\n","import { Glue42 } from \"../../../glue\";\nimport jumpListManager from \"./manager\";\n\nexport default class JumpListActions implements Glue42.Windows.JumpListActionsAPI {\n\n    private _categoryTitle: string;\n\n    constructor(private windowId: string, configuration: Glue42.Windows.JumpListCategorySettings) {\n        this._categoryTitle = configuration.title;\n    }\n\n    public list(): Promise<Glue42.Windows.JumpListActionSettings[]> {\n        return jumpListManager.getActions(this.windowId, this._categoryTitle);\n    }\n\n    public create(actions: Glue42.Windows.JumpListActionSettings[]): Promise<void> {\n        return jumpListManager.createActions(this.windowId, this._categoryTitle, actions);\n    }\n\n    public remove(actions: Glue42.Windows.JumpListActionSettings[]): Promise<void> {\n        return jumpListManager.removeActions(this.windowId, this._categoryTitle, actions);\n    }\n}\n","import { Glue42 } from \"../../../glue\";\nimport JumpListActions from \"./actions\";\nimport jumpListManager from \"./manager\";\n\nexport default class JumpListCategories implements Glue42.Windows.JumpListCategoriesAPI {\n\n    constructor(private windowId: string) {\n    }\n\n    public list(): Promise<Glue42.Windows.JumpListCategory[]> {\n        return this.getCategories();\n    }\n\n    public create(title: string, actions: Glue42.Windows.JumpListActionSettings[]): Promise<void> {\n        return jumpListManager.createCategory(this.windowId, title, actions);\n    }\n\n    public remove(title: string): Promise<void> {\n        return jumpListManager.removeCategory(this.windowId, title);\n    }\n\n    public async find(title: string): Promise<Glue42.Windows.JumpListCategory> {\n        const categories = await this.getCategories();\n        return categories.find((cat) => cat.title === title);\n    }\n\n    private async getCategories(): Promise<Glue42.Windows.JumpListCategory[]> {\n        const result: Glue42.Windows.JumpListCategory[] = [];\n\n        const configuration = await jumpListManager.getJumpListSettings(this.windowId);\n        configuration.categories.forEach((category) => {\n            result.push({\n                title: category.title,\n                actions: new JumpListActions(this.windowId, category)\n            });\n        });\n        return result;\n    }\n}\n","import { Glue42 } from \"../../../glue\";\nimport JumpListCategories from \"./categories\";\nimport jumpListManager from \"./manager\";\n\nexport default class JumpList implements Glue42.Windows.JumpList {\n\n    private _categories: Glue42.Windows.JumpListCategoriesAPI;\n\n    constructor(private windowId: string) {\n        this._categories = new JumpListCategories(windowId);\n    }\n\n    get categories(): Glue42.Windows.JumpListCategoriesAPI {\n        return this._categories;\n    }\n\n    public async isEnabled(): Promise<boolean> {\n        const configuration = await jumpListManager.getJumpListSettings(this.windowId);\n        return configuration.enabled;\n    }\n\n    public setEnabled(enabled: boolean): Promise<void> {\n        return jumpListManager.setEnabled(this.windowId, enabled);\n    }\n}\n","import CallbackFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport {\n    Executor,\n    FrameButton,\n    Neighbours,\n    WindowConstructorOptions,\n    WindowEvents,\n    WindowWrapper,\n    FlashOptions,\n    DetachTabOptions,\n} from \"./types\";\nimport * as util from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nimport { default as windowStore } from \"./store\";\nimport GDWindow = Glue42.Windows.GDWindow;\nimport { CompositionChangedData } from \"./environment/gd/types\";\nimport JumpList from \"./jumpList/main\";\n\nexport default (id: string, options: WindowConstructorOptions, executor: Executor, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, channelsAPIGetter: () => Glue42.Channels, agm: Glue42.AGM.API): WindowWrapper => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger.subLogger(`window ${id}`);\n    const getChannels = () => {\n        const channels = channelsAPIGetter();\n        if (!channels) {\n            throw new Error(`To use this method you need to enable channels API - set the channels property to true when initializing the Glue42 library`);\n        }\n        return channels;\n    };\n\n    let resultWindow: Glue42.Windows.GDWindow;\n\n    const _id = id;\n    const _name: string = options.name;\n    const _mode: Glue42.Windows.WindowMode = options.mode;\n    let _bounds: Glue42.Windows.Bounds = options.bounds;\n    let _url: string = options.url;\n    let _title: string = options.title;\n    let _context: any = options.context ?? {};\n    let _frameColor: string = options.frameColor;\n    let _focus: boolean = options.focus;\n    let _neighbours: Neighbours = options.neighbours ?? {};\n    let _groupId: string = options.groupId;\n    let _isGroupHeaderVisible: boolean = options.isGroupHeaderVisible;\n    let _isTabHeaderVisible: boolean = options.isTabHeaderVisible;\n    let _isTabSelected: boolean = options.isTabSelected ?? false;\n    let _settings: Glue42.Windows.WindowSettings = options.settings;\n\n    // is Window visible\n    let _isVisible: boolean = options.isVisible;\n\n    // is Window sticky enable\n    let _isSticky: boolean = options.isSticky;\n\n    // Window state Collapsed | Expanded\n    let _isCollapsed: boolean = options.isCollapsed;\n\n    // Window state normal | maximized | minimized\n    let _windowState: Glue42.Windows.WindowState = options.state;\n\n    // tabGroupId only for window with 'Tab' mode\n    let _tabGroupId: string = options.tabGroupId;\n    let _tabIndex: number = options.tabIndex;\n\n    let _frameId: string = options.frameId;\n    // window is locked or unlocked;\n    let _isLocked: boolean = options.isLocked;\n\n    let _group: Glue42.Windows.Group;\n\n    // Holding all frame buttons\n    let _frameButtons: Glue42.Windows.ButtonInfo[] = options.frameButtons ?? [];\n\n    // Holding the current zoom factor\n    let _zoomFactor = options.zoomFactor;\n\n    let _placementSettings: Glue42.Windows.PlacementSettings = options.placementSettings;\n\n    const _jumpList: JumpList = new JumpList(id);\n\n    //#region \"AGM methods\"\n\n    function close(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!id) {\n                throw new Error(\"The window is already closed.\");\n            }\n            return executor.close(resultWindow);\n        }, success, error);\n    }\n\n    function navigate(newUrl: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(newUrl)) {\n                throw new Error(\"The new URL must be a non-empty string.\");\n            }\n            return executor.navigate(resultWindow, newUrl);\n        }, success, error);\n    }\n\n    function setStyle(style: Glue42.Windows.WindowStyle, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!style || Object.keys(style).length === 0 || Object.keys(style).every((key) => !key)) {\n                throw new Error(\"Invalid style arguments: \" + JSON.stringify(style));\n            }\n            if (style && style.focus !== undefined) {\n                if (typeof style.focus !== \"boolean\") {\n                    throw new Error(\"Focus must be a boolean value. Currently, only `focus: true` is supported.\");\n                } else if (style.focus === false) {\n                    _logger.warn(\"`focus: false` is not supported!\");\n                }\n            }\n            if (style && style.hidden !== undefined && typeof style.hidden !== \"boolean\") {\n                throw new Error(\"The `hidden` property must hold a boolean value.\");\n            }\n            for (const prop of [\"minHeight\", \"maxHeight\", \"minWidth\", \"maxWidth\"]) {\n                const styleAsAny = style as any;\n                const value = styleAsAny[prop];\n                if (prop in style) {\n                    if (util.isUndefinedOrNull(value)) {\n                        delete styleAsAny[prop];\n                        continue;\n                    }\n                    if (!util.isNumber(styleAsAny[prop])) {\n                        throw new Error(`\"${prop}\" must be a number`);\n                    }\n                }\n            }\n            return executor.setStyle(resultWindow, style);\n        }, success, error);\n    }\n    // REVIEW\n    function resetButtons(buttons: Glue42.Windows.WindowButtons, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(\n            () => executor.resetButtons(resultWindow, buttons),\n            success,\n            error\n        );\n    }\n\n    function setOnTop(onTop: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof onTop !== \"boolean\") {\n                throw new Error(\"`onTop` must hold a boolean value.\");\n            }\n            return executor.setOnTop(resultWindow, onTop);\n        }, success, error);\n    }\n\n    function setSizeConstraints(constraints: Glue42.Windows.SizeConstraints, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!constraints || Object.keys(constraints).every((value) => value === undefined)) {\n                throw new Error(\"The properties of `constraints` cannot be null or undefined.\");\n            }\n            return executor.setSizeConstraints(resultWindow, constraints);\n        }, success, error);\n    }\n\n    function setTitle(newTitle: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(newTitle)) {\n                throw new Error(\"`newTitle` must not be null or undefined.\");\n            }\n            if (newTitle === _title) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.setTitle(resultWindow, newTitle);\n        }, success, error);\n    }\n\n    function setSticky(isSticky: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof isSticky !== \"boolean\") {\n                throw new Error(\"`isSticky` must hold a boolean value.\");\n            }\n            return executor.setSticky(resultWindow, isSticky);\n        }, success, error);\n    }\n\n    function moveResize(bounds: Partial<Glue42.Windows.Bounds>, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(bounds)) {\n                throw new Error(\"The properties of `bounds` cannot be null or undefined.\");\n            }\n            return executor.moveResize(resultWindow, bounds);\n        }, success, error);\n    }\n\n    function addFrameButton(buttonInfo: Glue42.Windows.ButtonInfo, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof buttonInfo === \"undefined\" || Object.keys(buttonInfo).length === 0) {\n                throw new Error(\"Button info is not available.\");\n            }\n            if (util.isNullOrWhiteSpace(buttonInfo.buttonId)) {\n                throw new Error(\"`buttonId` must not be null or undefined.\");\n            }\n            if (util.isNullOrWhiteSpace(buttonInfo.imageBase64)) {\n                throw new Error(\"`imageBase64` must not be null or undefined.\");\n            }\n            return executor.addFrameButton(resultWindow, buttonInfo);\n        }, success, error);\n    }\n\n    function removeFrameButton(buttonId: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(buttonId)) {\n                throw new Error(\"`buttonId` must not be null or undefined.\");\n            }\n            return executor.removeFrameButton(resultWindow, buttonId);\n        }, success, error);\n    }\n\n    function activate(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_focus) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.activate(resultWindow);\n        }, success, error);\n    }\n\n    function focus(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_focus) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.focus(resultWindow);\n        }, success, error);\n    }\n\n    function maximizeRestore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.maximizeRestore(resultWindow);\n        }, success, error);\n    }\n\n    function maximize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_windowState === \"maximized\") {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.maximize(resultWindow);\n        }, success, error);\n    }\n\n    function restore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_windowState === \"normal\") {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.restore(resultWindow);\n        }, success, error);\n    }\n\n    function minimize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_windowState === \"minimized\") {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.minimize(resultWindow);\n        }, success, error);\n    }\n\n    function collapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_isCollapsed) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.collapse(resultWindow);\n        }, success, error);\n    }\n\n    function expand(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!_isCollapsed) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.expand(resultWindow);\n        }, success, error);\n    }\n\n    function toggleCollapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.toggleCollapse(resultWindow);\n        }, success, error);\n    }\n\n    function snap(target: string | Glue42.Windows.GDWindow, direction: Glue42.Windows.RelativeDirection, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(target)) {\n                throw new Error(`A target window is not specified - ${target}`);\n            }\n\n            if (typeof target === \"string\") {\n                const win = windowStore.get(target);\n                if (!win) {\n                    throw new Error(`Invalid \"target\" parameter or no such window. Invoked with: ${target}`);\n                }\n                target = win.API;\n            }\n            return executor.snap(resultWindow, target, direction);\n        }, success, error);\n    }\n\n    function attachTab(tab: Glue42.Windows.GDWindow | string, opt: number | Glue42.Windows.AttachOptions, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            const errorMessage = `Invalid \"tab\" parameter - must be an object with an \"id\" property or a string. Invoked for source window with ID:`;\n            if (util.isUndefinedOrNull(tab)) {\n                throw new Error(errorMessage + tab);\n            }\n            // tab === sourceWindow\n            let sourceWindow;\n            if (typeof tab === \"string\") {\n                sourceWindow = windowStore.get(tab)?.API;\n                if (util.isUndefinedOrNull(sourceWindow)) {\n                    throw new Error(errorMessage + sourceWindow);\n                }\n            } else if (!util.isUndefinedOrNull(tab.id)) {\n                sourceWindow = tab;\n            } else {\n                throw new Error(errorMessage);\n            }\n            const attachOptions: Glue42.Windows.AttachOptions = {};\n            if (!util.isUndefinedOrNull(opt)) {\n                if (typeof opt === \"number\") {\n                    attachOptions.index = opt;\n                } else {\n                    attachOptions.selected = opt.selected;\n                    attachOptions.index = opt.index;\n                }\n            }\n\n            return executor.attachTab(resultWindow, sourceWindow, attachOptions);\n        }, success, error);\n    }\n\n    function detachTab(opt: Glue42.Windows.DetachOptions = {}, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            const argsForSend: DetachTabOptions = {};\n            function isDetachRelative(o: Glue42.Windows.DetachOptions) {\n                return o.relativeTo !== undefined;\n            }\n            if (isDetachRelative(opt)) {\n                if (typeof opt.relativeTo === \"string\") {\n                    argsForSend.relativeTo = opt.relativeTo;\n                } else if (!util.isUndefinedOrNull(opt.relativeTo.id)) {\n                    argsForSend.relativeTo = opt.relativeTo.id;\n                }\n                if (!util.isUndefinedOrNull(opt.relativeDirection)) {\n                    argsForSend.relativeDirection = opt.relativeDirection;\n                }\n                if (!util.isUndefinedOrNull(opt.width)) {\n                    argsForSend.width = opt.width;\n                }\n                if (!util.isUndefinedOrNull(opt.height)) {\n                    argsForSend.height = opt.height;\n                }\n            } else {\n                if (!util.isUndefinedOrNull(opt.bounds)) {\n                    argsForSend.bounds = opt.bounds;\n                }\n            }\n            if (!util.isUndefinedOrNull(opt.hideTabHeader)) {\n                argsForSend.hideTabHeader = opt.hideTabHeader;\n            }\n            return executor.detachTab(resultWindow, argsForSend);\n        }, success, error);\n    }\n\n    function setVisible(toBeVisible?: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.setVisible(resultWindow, toBeVisible);\n        }, success, error);\n    }\n\n    function showLoader(loader?: Glue42.Windows.Loader): Promise<Glue42.Windows.GDWindow> {\n        return executor.showLoader(resultWindow, loader);\n    }\n\n    function hideLoader(): Promise<Glue42.Windows.GDWindow> {\n        return executor.hideLoader(resultWindow);\n    }\n\n    function updateContext(context: any, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(context)) {\n                throw new Error(`\"context\" must not be null or undefined.`);\n            }\n\n            return executor.updateContext(resultWindow, context, false);\n        }, success, error);\n    }\n\n    function lock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.lock(resultWindow);\n        }, success, error);\n    }\n\n    function unlock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.unlock(resultWindow);\n        }, success, error);\n    }\n\n    function getIcon(success?: (icon: string) => void, error?: (error: string) => void): Promise<string> {\n        return utils.callbackifyPromise(() => {\n            return executor.getIcon(resultWindow);\n        }, success, error);\n    }\n\n    function setIcon(base64Image: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(base64Image)) {\n                throw new Error(`\"base64Image\" must be a non-empty string.`);\n            }\n            return executor.setIcon(resultWindow, base64Image);\n        }, success, error);\n    }\n\n    function setFrameColor(frameColor: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(frameColor)) {\n                throw new Error(`\"frameColor\" must be a non-empty string`);\n            }\n            return executor.setFrameColor(resultWindow, frameColor);\n        }, success, error);\n    }\n\n    function setTabHeaderVisible(toBeTabHeaderVisible: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof toBeTabHeaderVisible !== \"boolean\") {\n                throw new Error(`\"toBeTabHeaderVisible\" must hold a boolean value.`);\n            }\n            return executor.setTabHeaderVisible(resultWindow, toBeTabHeaderVisible);\n        }, success, error);\n    }\n\n    async function setTabTooltip(tooltip: string): Promise<Glue42.Windows.GDWindow> {\n        if (util.isNullOrWhiteSpace(tooltip)) {\n            throw new Error(`\"${tooltip}\" must not be null or undefined`);\n        }\n        return executor.setTabTooltip(resultWindow, tooltip);\n    }\n\n    function showPopup(config: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        return executor.showPopup(resultWindow, config);\n    }\n\n    function createFlydown(config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return executor.createFlydown(resultWindow.id, config);\n    }\n\n    function setModalState(isModal: boolean): Promise<void> {\n        return executor.setModalState(resultWindow.id, isModal || false);\n    }\n\n    function zoomIn(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomIn(resultWindow);\n        }, success, error);\n    }\n\n    function zoomOut(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomOut(resultWindow);\n        }, success, error);\n    }\n\n    function setZoomFactor(zoomFactor: number, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            if (isNaN(zoomFactor)) {\n                throw new Error(`zoomFactor is not a number`);\n            }\n            return executor.setZoomFactor(resultWindow, zoomFactor);\n        }, success, error);\n    }\n\n    function showDevTools() {\n        return executor.showDevTools(resultWindow);\n    }\n\n    function capture(captureOptions: Glue42.Windows.CaptureOptions): Promise<string> {\n        return executor.capture(resultWindow, captureOptions);\n    }\n\n    function flash(suppliedOptions?: boolean, mode?: Glue42.Windows.FlashMode): Promise<Glue42.Windows.GDWindow> {\n        const flashOptions: FlashOptions = {\n            shouldFlash: true,\n            mode: \"auto\"\n        };\n\n        if (typeof suppliedOptions === \"boolean\") {\n            flashOptions.shouldFlash = suppliedOptions;\n        }\n\n        if (typeof mode !== \"undefined\") {\n            flashOptions.mode = mode;\n        }\n\n        return executor.flash(resultWindow, flashOptions);\n    }\n\n    function print(printOptions: Glue42.Windows.PrintOptions): Promise<Glue42.Windows.GDWindow> {\n        return executor.print(resultWindow, printOptions);\n    }\n\n    function printToPDF(printToPDFOptions: Glue42.Windows.PrintToPDFOptions): Promise<string> {\n        return executor.printToPDF(resultWindow, printToPDFOptions);\n    }\n\n    function ungroup(ungroupOptions?: Glue42.Windows.UngroupOptions): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const unGroupChanged = onGroupChanged(\n                (win: Glue42.Windows.GDWindow, newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) => {\n                    if (id === win.id) {\n                        unGroupChanged();\n                        resolve(resultWindow);\n                    }\n                });\n\n            executor.ungroup(resultWindow, ungroupOptions)\n                .catch((e: string) => {\n                    unGroupChanged();\n                    reject(e);\n                });\n        });\n    }\n\n    function place(placementSettings: Glue42.Windows.PlacementSettings): Promise<void> {\n        return executor.place(resultWindow, placementSettings);\n    }\n\n    function refresh(ignoreCache: boolean) {\n        return executor.refresh(resultWindow, ignoreCache);\n    }\n\n    function download(url: string, opts: Glue42.Windows.DownloadOptions) {\n        return executor.download(resultWindow, url, opts);\n    }\n\n    function configure(settings: Glue42.Windows.WindowConfiguration) {\n        return executor.configureWindow(resultWindow, settings);\n    }\n\n    //#endregion \"AGM methods\"\n\n    //#region \"Events\"\n\n    function onTitleChanged(callback: (title: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onTitleChanged\", callback, [resultWindow.title, resultWindow]);\n    }\n\n    function onClose(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        if (id === undefined) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"onClose\", callback);\n    }\n\n    function onUrlChanged(callback: (url: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onUrlChanged\", callback);\n    }\n\n    function onFrameButtonAdded(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onFrameButtonAdded\", callback);\n    }\n\n    function onFrameButtonRemoved(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onFrameButtonRemoved\", callback);\n    }\n\n    function onFrameButtonClicked(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onFrameButtonClicked\", callback);\n    }\n\n    function onCollapsed(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        if (_isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"collapsed\", callback);\n    }\n\n    function onExpanded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        if (!_isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"expanded\", callback);\n    }\n\n    function onMaximized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"maximized\") {\n            return onEventCore(\"maximized\", callback, [resultWindow]);\n        } else {\n            return onEventCore(\"maximized\", callback);\n        }\n    }\n\n    function onMinimized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"minimized\") {\n            return onEventCore(\"minimized\", callback, [resultWindow]);\n        } else {\n            return onEventCore(\"minimized\", callback);\n        }\n    }\n\n    function onNormal(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"normal\") {\n            return onEventCore(\"normal\", callback, [resultWindow]);\n        } else {\n            return onEventCore(\"normal\", callback);\n        }\n    }\n\n    function onAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"attached\", callback);\n    }\n\n    function onDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"detached\", callback);\n    }\n\n    function onVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"visibility-changed\", callback);\n    }\n\n    function onContextUpdated(callback: (context: any, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"context-updated\", callback);\n    }\n\n    function onLockingChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"lock-changed\", callback);\n    }\n\n    function onBoundsChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"bounds-changed\", callback);\n    }\n\n    function onFocusChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"focus-changed\", callback);\n    }\n\n    function onStickyChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"sticky-changed\", callback);\n    }\n\n    function onFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"frame-color-changed\", callback);\n    }\n\n    function onTabHeaderVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"tab-header-visibility-changed\", callback);\n    }\n\n    function onWindowAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"window-attached\", callback);\n    }\n\n    function onWindowDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"window-detached\", callback);\n    }\n\n    function onGroupChanged(callback: (window: Glue42.Windows.GDWindow, newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) => void): UnsubscribeFunction {\n        return onEventCore(\"group-changed\", callback);\n    }\n\n    function onTabSelectionChanged(callback: (selectedWindow: Glue42.Windows.GDWindow, previousWindow: Glue42.Windows.GDWindow, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"tab-selection-changed\", callback);\n    }\n\n    function onClosing(callback: () => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        type GDHandler = (success: () => void, error: () => void) => void;\n        const callbackWrap: GDHandler = (success: () => void, error: () => void) => {\n            const promise = callback();\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onClosing(callbackWrap, id);\n    }\n\n    function onRefreshing(callback: (prevent: () => void) => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        type GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => void;\n        const callbackWrap: GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => {\n            const promise = callback(prevent);\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onRefreshing(callbackWrap, id);\n    }\n\n    function onZoomFactorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"zoom-factor-changed\", callback);\n    }\n\n    function onPlacementSettingsChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"placementSettingsChanged\", callback);\n    }\n\n    function onNeighboursChanged(callback: (neighbours: Glue42.Windows.Neighbours, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"neighbours-changed\", callback);\n    }\n\n    function onEventCore(key: string, callback: any, replayArguments?: any[]) {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        return _registry.add(key, callback, replayArguments);\n    }\n\n    function onNavigating(callback: (args: { newUrl: string }) => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        type Handler = (success: () => void, error: () => void, prevent: () => void, args: { newUrl: string }) => void;\n        const callbackWrap: Handler = (success: () => void, error: () => void, prevent: () => void, args: { newUrl: string }) => {\n            const promise = callback(args);\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onNavigating(callbackWrap, id);\n    }\n\n    //#endregion \"Events\"\n\n    //#region \"Stream function\"\n\n    function handleUpdate(updated: WindowConstructorOptions) {\n        _url = updated.url;\n        _title = updated.title;\n        _context = updated.context || {};\n        _bounds = updated.bounds;\n        _frameColor = updated.frameColor;\n        _focus = updated.focus;\n        _neighbours = updated.neighbours || {};\n        _groupId = updated.groupId;\n        _isGroupHeaderVisible = updated.isGroupHeaderVisible;\n        _isTabHeaderVisible = updated.isTabHeaderVisible;\n        _isTabSelected = updated.isTabSelected;\n        _settings = updated.settings;\n        _isVisible = updated.isVisible;\n        _isSticky = updated.isSticky;\n        _isCollapsed = updated.isCollapsed;\n        _windowState = updated.state;\n        _tabGroupId = updated.tabGroupId;\n        _frameId = updated.frameId;\n        _isLocked = updated.isLocked;\n        // _frameButtons = updated.fra;\n        // _group: Glue42.Windows.Group;\n        _zoomFactor = updated.zoomFactor;\n        _placementSettings = updated.placementSettings;\n    }\n\n    function handleTitleChanged(newTitle: string): void {\n        _title = newTitle;\n        executor.finished\n            .finally(() => {\n                _registry.execute(\"onTitleChanged\", newTitle, resultWindow);\n            });\n    }\n\n    function handleUrlChanged(newUrl: string): void {\n        _url = newUrl;\n        _registry.execute(\"onUrlChanged\", newUrl, resultWindow);\n    }\n\n    function handleVisibilityChanged(isVisible: boolean) {\n        if (isVisible === _isVisible) {\n            return;\n        }\n        _isVisible = isVisible;\n        _registry.execute(\"visibility-changed\", resultWindow);\n    }\n\n    function handleWindowSettingsChanged(settings: Glue42.Windows.WindowSettings): void {\n        _settings = settings;\n        _registry.execute(\"settings-changed\", resultWindow);\n    }\n\n    function handleContextUpdated(context: any): void {\n        _context = context;\n        _registry.execute(\"context-updated\", _context, resultWindow);\n    }\n\n    function handleWindowClose(): void {\n        if (id === undefined) {\n            return;\n        }\n        _registry.execute(\"onClose\", resultWindow);\n        id = undefined;\n    }\n\n    function handleFrameButtonAdded(frameButton: FrameButton): void {\n        const buttonObj: Glue42.Windows.ButtonInfo = [\"buttonId\", \"imageBase64\", \"order\", \"tooltip\"].reduce((memo: any, k) => {\n            memo[k] = frameButton[k];\n            return memo;\n        }, {}) as Glue42.Windows.ButtonInfo;\n\n        const frameButtonsIds = _frameButtons.map((btn) => {\n            return btn.buttonId;\n        });\n\n        if (frameButtonsIds.indexOf(frameButton.buttonId) === -1) {\n            _frameButtons.push(buttonObj);\n        }\n\n        _registry.execute(\"onFrameButtonAdded\", buttonObj, resultWindow);\n    }\n\n    function handleFrameButtonRemoved(frameButtonId: string): void {\n        let button: Glue42.Windows.ButtonInfo;\n        _frameButtons = _frameButtons.reduce((memo, btn) => {\n            if (btn.buttonId === frameButtonId) {\n                button = btn;\n            } else {\n                memo.push(btn);\n            }\n            return memo;\n        }, []);\n\n        if (button !== undefined) {\n            _registry.execute(\"onFrameButtonRemoved\", button, resultWindow);\n        }\n    }\n\n    function handleFrameButtonClicked(frameButton: FrameButton): void {\n        const button = _frameButtons.filter((btn) => {\n            return btn.buttonId === frameButton.buttonId;\n        });\n\n        if (button.length > 0) {\n            _registry.execute(\"onFrameButtonClicked\", button[0], resultWindow);\n        }\n    }\n\n    async function handleWindowChangeState(state: string): Promise<void> {\n        if (state === \"collapsed\") {\n            _isCollapsed = true;\n        } else if (state === \"expanded\") {\n            _isCollapsed = false;\n        } else {\n            _windowState = state as Glue42.Windows.WindowState;\n        }\n        await executor.finished;\n        _registry.execute(state, resultWindow);\n    }\n\n    function handleFrameIsLockedChanged(isLocked: boolean): void {\n        _isLocked = isLocked;\n        _registry.execute(\"lock-changed\", resultWindow);\n    }\n\n    function handleBoundsChanged(bounds: Glue42.Windows.Bounds): void {\n        if (_bounds.top === bounds.top && _bounds.left === bounds.left && _bounds.width === bounds.width && _bounds.height === bounds.height) {\n            return;\n        }\n        _bounds = bounds;\n        _registry.execute(\"bounds-changed\", resultWindow);\n    }\n\n    function handleFocusChanged(isFocused: boolean): void {\n        _focus = isFocused;\n        _registry.execute(\"focus-changed\", resultWindow);\n    }\n\n    function handleIsStickyChanged(isSticky: boolean): void {\n        _isSticky = isSticky;\n        _registry.execute(\"sticky-changed\", isSticky, resultWindow);\n    }\n\n    function handleFrameColorChanged(frameColor: string): void {\n        _frameColor = frameColor;\n        _registry.execute(\"frame-color-changed\", resultWindow);\n    }\n\n    function handleFrameAttached(tabGroupId: string, frameId: string, isTabHeaderVisible: boolean): void {\n        _tabGroupId = tabGroupId;\n        _frameId = frameId;\n        _isTabHeaderVisible = isTabHeaderVisible;\n        _registry.execute(\"frame-attached\", resultWindow);\n    }\n\n    function handleCompositionChanged(state: CompositionChangedData): void {\n        _neighbours = state.neighbors || {};\n        _tabIndex = state.index;\n        _registry.execute(\"neighbours-changed\", _neighbours, resultWindow);\n    }\n\n    function handleGroupHeaderVisibilityChanged(isGroupHeaderVisible: boolean): void {\n        _isGroupHeaderVisible = isGroupHeaderVisible;\n    }\n\n    function handleTabHeaderVisibilityChanged(isTabHeaderVisible: boolean): void {\n        if (_isTabHeaderVisible !== isTabHeaderVisible) {\n            _isTabHeaderVisible = isTabHeaderVisible;\n            _registry.execute(\"tab-header-visibility-changed\", resultWindow);\n        }\n    }\n\n    async function handleFrameSelectionChanged(newWindow: string, prevWindow: string) {\n        let selectedWindow: Glue42.Windows.GDWindow;\n        if (newWindow === id) {\n            _isTabSelected = true;\n            selectedWindow = resultWindow;\n        } else {\n            _isTabSelected = false;\n            selectedWindow = windowStore.get(newWindow) ? windowStore.get(newWindow).API : undefined;\n        }\n        const previousWindow = windowStore.get(prevWindow) ? windowStore.get(prevWindow).API : undefined;\n        await executor.finished;\n        _registry.execute(\"tab-selection-changed\", selectedWindow, previousWindow, resultWindow);\n    }\n\n    async function handleAttached(newTabGroupId: string, newFrameId: string, tabHeaderVisible: boolean, isLocked: boolean, winsToBeNotified: WindowWrapper[]): Promise<void> {\n        _tabGroupId = newTabGroupId;\n        _isTabHeaderVisible = tabHeaderVisible;\n        _frameId = newFrameId;\n        if (typeof isLocked !== \"undefined\") {\n            _isLocked = isLocked;\n        }\n        await executor.finished;\n        winsToBeNotified.forEach((w) => {\n            w.Events.handleWindowAttached(resultWindow);\n        });\n        _registry.execute(\"attached\", resultWindow);\n    }\n\n    function handleWindowAttached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-attached\", win);\n    }\n\n    async function handleDetached(isLocked: boolean, winsToBeNotified: WindowWrapper[]): Promise<void> {\n        _tabGroupId = undefined;\n        _isTabSelected = false;\n        if (typeof isLocked !== \"undefined\") {\n            _isLocked = isLocked;\n        }\n        await executor.finished;\n        winsToBeNotified.forEach((w) => {\n            w.Events.handleWindowDetached(resultWindow);\n        });\n        _registry.execute(\"detached\", resultWindow);\n    }\n\n    function handleWindowDetached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-detached\", win);\n    }\n\n    function handleZoomFactorChanged(zoomFactor: number): void {\n        _zoomFactor = zoomFactor;\n        _registry.execute(\"zoom-factor-changed\", resultWindow);\n    }\n\n    function handlePlacementSettingsChanged(placementSettings: Glue42.Windows.PlacementSettings): void {\n        let promise: Promise<Glue42.Displays.Display>;\n        const copy = placementSettings as any;\n        if (!copy.display) {\n            promise = Promise.resolve(undefined);\n        } else {\n            const displayAPI = displayAPIGetter();\n            if (!displayAPI) {\n                // display API is disabled\n                promise = Promise.resolve(undefined);\n            } else {\n                const index = copy.display - 1;\n                promise = new Promise((resolve, reject) => {\n                    displayAPI.all().then((displays) => {\n                        const display = displays.find((d) => d.index === index);\n                        resolve(display);\n                    }).catch(reject);\n                });\n            }\n        }\n\n        promise.then((d) => {\n            copy.display = d;\n            _placementSettings = copy;\n            _registry.execute(\"placementSettingsChanged\", resultWindow);\n        });\n    }\n    //#endregion \"Stream function\"\n\n    //#region \"Group Events\"\n    function handleGroupChanged(newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) {\n        _group = newGroup;\n        _groupId = newGroup?.id;\n\n        if (!util.isUndefinedOrNull(newGroup) && !util.isUndefinedOrNull(oldGroup)) {\n            _registry.execute(\"group-changed\", resultWindow, newGroup, oldGroup);\n        }\n    }\n\n    //#region \"Internal function\"\n\n    function getAllTabs(): Glue42.Windows.GDWindow[] {\n        const allWindows = windowStore.list;\n        if (_mode.toLowerCase() !== \"tab\") {\n            return [];\n        }\n        const tabs = Object.keys(allWindows).reduce<GDWindow[]>((memo, win) => {\n            const window: WindowWrapper = allWindows[win];\n            if (window\n                && window.API.tabGroupId\n                && typeof window.API.tabGroupId !== \"undefined\"\n                && typeof resultWindow.tabGroupId !== \"undefined\"\n                && window.API.tabGroupId === resultWindow.tabGroupId) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n        return tabs.sort((w1, w2) => {\n            if (w1.tabIndex !== w2.tabIndex) {\n                if (w1.tabIndex === -1) {\n                    return Number.MAX_SAFE_INTEGER;\n                }\n                if (w2.tabIndex === -1) {\n                    return Number.MIN_SAFE_INTEGER;\n                }\n            }\n            return w1.tabIndex - w2.tabIndex;\n        });\n    }\n\n    function mapWindowIdsToWindowObjects(windowIdArr: string[]): Glue42.Windows.GDWindow[] {\n        return windowIdArr.reduce((memo, winId) => {\n            const window = windowStore.get(winId);\n            if (window) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n    }\n\n    function getNeighboursByDirection(direction: string): Glue42.Windows.GDWindow[] {\n        const windowIds = _neighbours[direction];\n        if (typeof windowIds !== \"undefined\") {\n            return mapWindowIdsToWindowObjects(windowIds);\n        }\n    }\n\n    function getApplicationName(): string {\n        if (_context._APPLICATION_NAME) {\n            return _context._APPLICATION_NAME;\n        }\n        if (_context && _context._t42 && _context._t42.application) {\n            return _context._t42.application;\n        }\n        const info = getWindowInfo();\n        if (info) {\n            return info.applicationName;\n        }\n\n        // last try (NodeJS apps)\n        const appManager = appManagerGetter();\n        if (appManager) {\n            const instance = appManager.instances().find((i) => id === i.id);\n            if (instance) {\n                return instance.application?.name;\n            }\n        }\n\n        return undefined;\n    }\n\n    function getWindowInfo() {\n        if (typeof window !== \"undefined\" && window.glue42gd && window.glue42gd.getWindowInfo) {\n            const info = window.glue42gd.getWindowInfo(id);\n            if (!info) {\n                return undefined;\n            } else {\n                return info;\n            }\n        }\n    }\n\n    //#endregion \"Internal function\"\n\n    //#region \"API\"\n\n    resultWindow = {\n        get id() {\n            return _id;\n        },\n        get name() {\n            return _name;\n        },\n        get application() {\n            const appManager = appManagerGetter();\n            return appManager ? appManager.application(getApplicationName()) : undefined;\n        },\n        get hostInstance() {\n            return executor.hostInstance;\n        },\n        get agmInstance() {\n            if (typeof window !== \"undefined\" && window.glue42gd) {\n                return agm.servers().find((s) => s.windowId === this.id);\n            }\n            const appName = getApplicationName();\n            return appName ? { application: appName } : undefined;\n        },\n        get url() {\n            return _url;\n        },\n        get title() {\n            return _title;\n        },\n        get windowStyleAttributes() {\n            return _settings;\n        },\n        get settings() {\n            return _settings;\n        },\n        get tabGroupId() {\n            return _mode.toLowerCase() === \"tab\" ? _tabGroupId : undefined;\n        },\n        get tabIndex() {\n            return _mode.toLowerCase() === \"tab\" ? _tabIndex : undefined;\n        },\n        get frameId() {\n            return _frameId;\n        },\n        get frameButtons() {\n            return _frameButtons;\n        },\n        get mode() {\n            return _mode;\n        },\n        get state() {\n            return _windowState;\n        },\n        get isCollapsed() {\n            return _isCollapsed;\n        },\n        get isVisible() {\n            return _isVisible;\n        },\n        get isLocked() {\n            return _isLocked;\n        },\n        get context() {\n            return _context;\n        },\n        get bounds() {\n            return _bounds;\n        },\n        get minHeight() {\n            return _settings.minHeight;\n        },\n        get maxHeight() {\n            return _settings.maxHeight;\n        },\n        get minWidth() {\n            return _settings.minWidth;\n        },\n        get maxWidth() {\n            return _settings.maxWidth;\n        },\n        get isFocused() {\n            return _focus;\n        },\n        get frameColor() {\n            return _frameColor;\n        },\n        get opened() {\n            return resultWindow.id !== undefined;\n        },\n        get group() {\n            return _group;\n        },\n        get groupId() {\n            return _groupId;\n        },\n        get isSticky() {\n            return _isSticky;\n        },\n        get topNeighbours() {\n            return getNeighboursByDirection(\"top\");\n        },\n        get leftNeighbours() {\n            return getNeighboursByDirection(\"left\");\n        },\n        get rightNeighbours() {\n            return getNeighboursByDirection(\"right\");\n        },\n        get bottomNeighbours() {\n            return getNeighboursByDirection(\"bottom\");\n        },\n        get isGroupHeaderVisible() {\n            return _isGroupHeaderVisible;\n        },\n        get activityId() {\n            if (_context._t42) {\n                return _context._t42.activityId;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityId;\n        },\n        get activityWindowId() {\n            if (_context._t42) {\n                return _context._t42.activityWindowId;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityWindowId;\n        },\n        get windowType() {\n            return options.windowType || \"electron\";\n        },\n        get zoomFactor() {\n            return _zoomFactor;\n        },\n        get screen() {\n            if (typeof window !== \"undefined\" && window.glue42gd) {\n                return utils.getMonitor(resultWindow.bounds, (window.glue42gd as any).monitors);\n            }\n            return undefined;\n        },\n        get placementSettings(): Glue42.Windows.PlacementSettings {\n            return Object.assign({}, _placementSettings);\n        },\n        get jumpList(): JumpList {\n            return _jumpList;\n        },\n        maximize,\n        restore,\n        minimize,\n        maximizeRestore,\n        collapse,\n        expand,\n        toggleCollapse,\n        focus,\n        activate,\n        moveResize,\n        setTitle,\n        setStyle,\n        setOnTop,\n        resetButtons,\n        setSizeConstraints,\n        navigate,\n        addFrameButton,\n        removeFrameButton,\n        setVisible,\n        show: () => setVisible(true),\n        hide: () => setVisible(false),\n        center: (screen) => moveResize(utils.getDisplayCenterOfScreen(resultWindow.bounds, screen || resultWindow.screen)),\n        close,\n        snap,\n        showLoader,\n        hideLoader,\n        updateContext,\n        lock,\n        unlock,\n        getIcon,\n        setIcon,\n        setFrameColor,\n        setTabTooltip,\n        attachTab,\n        detachTab,\n        setTabHeaderVisible,\n        showPopup,\n        createFlydown,\n        setModalState,\n        setZoomFactor,\n        zoomIn,\n        zoomOut,\n        showDevTools,\n        capture,\n        flash,\n        setSticky,\n        print,\n        printToPDF,\n        place,\n        ungroup,\n        refresh,\n        download,\n        configure,\n        getChannel: async () => {\n            const wins = await getChannels().getWindowsWithChannels({ windowIds: [_id] });\n            return wins[0]?.channel;\n        },\n\n        onClose,\n        onUrlChanged,\n        onTitleChanged,\n        onFrameButtonAdded,\n        onFrameButtonRemoved,\n        onFrameButtonClicked,\n        onCollapsed,\n        onExpanded,\n        onMinimized,\n        onMaximized,\n        onNormal,\n        onAttached,\n        onDetached,\n        onVisibilityChanged,\n        onContextUpdated,\n        onLockingChanged,\n        onBoundsChanged,\n        onFrameColorChanged,\n        onFocusChanged,\n        onStickyChanged,\n        onGroupChanged,\n        onWindowAttached,\n        onWindowDetached,\n        onTabSelectionChanged,\n        onTabHeaderVisibilityChanged,\n        onClosing,\n        onRefreshing,\n        onZoomFactorChanged,\n        onPlacementSettingsChanged,\n        onNeighboursChanged,\n        onNavigating,\n\n        get tabs() {\n            return getAllTabs();\n        },\n\n        get isTabHeaderVisible() {\n            return _isTabHeaderVisible;\n        },\n\n        get isTabSelected() {\n            return _isTabSelected;\n        },\n\n        // @glue42/web compatibility layer\n        getURL() {\n            return Promise.resolve(_url);\n        },\n\n        getTitle() {\n            return Promise.resolve(_title);\n        },\n\n        getBounds(): Promise<Glue42.Windows.Bounds> {\n            return Promise.resolve(_bounds);\n        },\n\n        getContext(): Promise<any> {\n            return Promise.resolve(_context);\n        },\n\n        setContext(context: any): Promise<GDWindow> {\n            if (util.isUndefinedOrNull(context)) {\n                throw new Error(`\"context\" must not be null or undefined, set to empty object if you want to clear it out.`);\n            }\n\n            return executor.updateContext(resultWindow, context, true);\n        },\n\n        getDisplay(): Promise<Glue42.Displays.Display> {\n            const displayAPI = displayAPIGetter();\n            return displayAPI.getByWindowId(id);\n        },\n\n        resizeTo(width?: number, height?: number): Promise<GDWindow> {\n            return moveResize({ width, height });\n        },\n\n        moveTo(top?: number, left?: number): Promise<GDWindow> {\n            return moveResize({ top, left });\n        },\n\n        async getParentWindow() {\n            const myParentId = (_settings as any).parentInstanceId;\n            if (!myParentId) {\n                return undefined;\n            }\n            return windowStore.list[myParentId]?.API;\n        },\n\n        async getChildWindows() {\n            return Object.keys(windowStore.list)\n                .map((key) => windowStore.list[key].API)\n                .filter((w) => {\n                    const parentId = (w.settings as any).parentInstanceId;\n                    return parentId === id;\n                });\n        },\n\n        joinChannel: (name: string) => {\n            return getChannels().join(name, id);\n        },\n\n        leaveChannel: () => {\n            return getChannels().leave(id);\n        }\n    };\n\n    //#endregion \"API\"\n\n    //#endregion \"Group Events\"\n\n    const events: WindowEvents = {\n        handleUpdate,\n\n        handleWindowClose,\n        handleWindowChangeState,\n        handleTitleChanged,\n        handleVisibilityChanged,\n        handleUrlChanged,\n        handleWindowSettingsChanged,\n        handleContextUpdated,\n        handleFrameIsLockedChanged,\n        handleBoundsChanged,\n        handleFocusChanged,\n        handleFrameButtonAdded,\n        handleFrameButtonRemoved,\n        handleFrameButtonClicked,\n        handleFrameColorChanged,\n        handleFrameAttached,\n        handleFrameSelectionChanged,\n        handleCompositionChanged,\n        handleGroupHeaderVisibilityChanged,\n        handleTabHeaderVisibilityChanged,\n        handleGroupChanged,\n        handleAttached,\n        handleDetached,\n        handleWindowAttached,\n        handleWindowDetached,\n        handleZoomFactorChanged,\n        handleIsStickyChanged,\n        handlePlacementSettingsChanged\n    };\n\n    return {\n        API: resultWindow,\n        Events: events\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { DetachTabOptions, Executor, FlashOptions, JumpListSettingsInternal, JumpListUpdateSettings } from \"../../types\";\nimport { ShowFlydownData, ReformatedFlydownOptions, ReformatedFlydownZone, ReformatedPopupOptions, EventTypes } from \"./types\";\nimport { CallbackRegistry, default as CallbackFactory, UnsubscribeFunction } from \"callback-registry\";\nimport shortid from \"shortid\";\nimport windowStore from \"../../store\";\nimport { isNullOrWhiteSpace, isUndefinedOrNull } from \"../../../activity/helpers/util\";\n\nexport class GDExecutor implements Executor {\n    private agm: Glue42Core.AGM.API;\n    private agmTarget: {};\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _finished: Promise<void> = Promise.resolve();\n\n    public get hostInstance() {\n        return this.agmTarget;\n    }\n\n    public get finished() {\n        return this._finished;\n    }\n\n    public init(agm: Glue42Core.AGM.API, instance: Glue42Core.AGM.Instance | string) {\n        this.agm = agm;\n        this.agmTarget = instance;\n    }\n    // refactor\n    public handleEvent(data: any) {\n        this._registry.execute(\"event\", data);\n    }\n\n    public async open(options: Glue42.Windows.WindowCreateOptions) {\n        let finishedResolve: () => void;\n        this._finished = new Promise((resolve) => {\n            finishedResolve = resolve;\n        });\n        try {\n            const result = await this.agm.invoke<{ id: string }>(\"T42.Wnd.Create\", options, this.agmTarget);\n            if (result.returned === undefined) {\n                throw new Error(\"failed to execute T42.Wnd.Create - unknown reason\");\n            }\n\n            const id = result.returned.id;\n            const win = await windowStore.waitFor(id);\n            setTimeout(() => {\n                if (win.API.windowType === \"electron\") {\n                    // on normal windows urlCHanged has to be detected first in order for the window to be ready\n                    // that causes the user callbacks to miss urlChanged since they are not registered yet\n                    // here we 'replay' the urlChanged event\n                    win.Events.handleUrlChanged(win.API.url);\n                }\n            }, 0);\n            return win.API;\n        } catch (error) {\n            throw error;\n        } finally {\n            finishedResolve();\n        }\n    }\n\n    public async close(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"close\", { windowId: w.id }, `Closed`);\n        return w;\n    }\n\n    public async navigate(w: Glue42.Windows.GDWindow, newUrl: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"navigate\", { windowId: w.id, options: { url: newUrl } }, \"UrlChanged\");\n        return w;\n    }\n    // Calls the public methods of the window. No Call to GD is made\n    public async setStyle(w: Glue42.Windows.GDWindow, style: Glue42.Windows.WindowSettings): Promise<Glue42.Windows.GDWindow> {\n        const stylePromises: Array<Promise<any>> = [];\n        const wait = (promise: Promise<any>) => stylePromises.push(promise);\n\n        if (!isUndefinedOrNull(style.focus) && !w.isFocused) {\n            wait(w.focus());\n        }\n\n        // Todo: only if !isRestoring (hopefully setVisible does this check)\n        if (!isUndefinedOrNull(style.hidden)) {\n            const toBeVisible = !style.hidden;\n            wait(w.setVisible(toBeVisible));\n        }\n\n        if (!isUndefinedOrNull(style.onTop)) {\n            wait(w.setOnTop(style.onTop));\n        }\n\n        if (!isNullOrWhiteSpace(style.tabTooltip) || !isNullOrWhiteSpace((style as any).tabToolTip)) {\n            const toolTip = style.tabTooltip ?? (style as any).tabToolTip;\n            wait(w.setTabTooltip(toolTip));\n        }\n\n        if (!isNullOrWhiteSpace(style.tabTitle)) {\n            wait(this.execute(\"setTabTitle\", { windowId: w.id, options: { tabTitle: style.tabTitle } }));\n        }\n\n        const {\n            maxWidth, maxHeight, minWidth, minHeight,\n            allowClose, allowCollapse, allowLockUnlock, allowMaximize, allowMinimize\n        } = style;\n\n        wait(w.setSizeConstraints({ maxWidth, maxHeight, minWidth, minHeight }));\n        wait(w.resetButtons({ allowClose, allowCollapse, allowLockUnlock, allowMaximize, allowMinimize }));\n\n        await Promise.all(stylePromises);\n\n        return w;\n    }\n\n    public async setSizeConstraints(w: Glue42.Windows.GDWindow, constraints: Glue42.Windows.SizeConstraints): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setSizeConstraints\", { windowId: w.id, options: constraints });\n        return w;\n    }\n\n    public async setTabTooltip(w: Glue42.Windows.GDWindow, tabTooltip: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setTabTooltip\", { windowId: w.id, options: { tabTooltip } });\n        return w;\n    }\n\n    public async resetButtons(w: Glue42.Windows.GDWindow, buttonsConfig: Glue42.Windows.WindowButtons): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"resetButtons\", { windowId: w.id, options: buttonsConfig });\n        return w;\n    }\n\n    public async setOnTop(w: Glue42.Windows.GDWindow, onTop: boolean): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setOnTop\", { windowId: w.id, options: { onTop } });\n        return w;\n    }\n\n    public async setTitle(w: Glue42.Windows.GDWindow, newTitle: string): Promise<Glue42.Windows.GDWindow> {\n        const options = {\n            windowId: w.id,\n            options: {\n                title: newTitle\n            }\n        };\n        await this.execute(\"setTitle\", options, \"TitleChanged\");\n        return w;\n    }\n\n    public async setSticky(w: Glue42.Windows.GDWindow, isSticky: boolean): Promise<Glue42.Windows.GDWindow> {\n        const options = {\n            windowId: w.id,\n            options: {\n                isSticky\n            }\n        };\n        await this.execute(\"setSticky\", options);\n        return w;\n    }\n\n    public async moveResize(w: Glue42.Windows.GDWindow, bounds: Partial<Glue42.Windows.Bounds>): Promise<Glue42.Windows.GDWindow> {\n        if (typeof window !== \"undefined\" && (window.glueDesktop as any).versionNum < 31200) {\n            return new Promise(async (res, rej) => {\n                const resolveImmediately = this.areBoundsEqual(bounds, w);\n                let isDone = false;\n                const done = () => {\n                    if (isDone) {\n                        return;\n                    }\n                    isDone = true;\n\n                    if (unsubscribeBoundsChanged) {\n                        unsubscribeBoundsChanged();\n                        unsubscribeBoundsChanged = undefined;\n                    }\n                    res(w);\n                    if (resolveTimeout) {\n                        clearTimeout(resolveTimeout);\n                        resolveTimeout = undefined;\n                    }\n                };\n                let resolveTimeout: any;\n                let unsubscribeBoundsChanged: () => void;\n                if (!resolveImmediately) {\n                    unsubscribeBoundsChanged = w.onBoundsChanged((win: Glue42.Windows.GDWindow) => {\n                        if (!this.areBoundsEqual(bounds, win)) {\n                            return;\n                        }\n                        done();\n                    });\n                }\n\n                try {\n                    // always execute moveResize (we might have old bounds and prevent calls that are actually valid)\n                    await this.execute(\"moveResize\", { windowId: w.id, options: { bounds } });\n                } catch (error) {\n                    rej(error);\n                    return;\n                }\n\n                // if we're trying to resize with the bounds we already have\n                if (resolveImmediately) {\n                    done();\n                    return;\n                }\n\n                // if no bounds change in the next 1s resolve\n                resolveTimeout = setTimeout(() => {\n                    done();\n                }, 1000);\n            });\n        } else {\n            await this.execute(\"moveResize\", { windowId: w.id, options: { bounds } });\n        }\n        return w;\n    }\n\n    public async addFrameButton(w: Glue42.Windows.GDWindow, buttonInfo: Glue42.Windows.ButtonInfo): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"addButton\", { windowId: w.id, options: buttonInfo }, \"ButtonAdded\");\n        return w;\n    }\n\n    public async removeFrameButton(w: Glue42.Windows.GDWindow, buttonId: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"removeButton\", { windowId: w.id, options: buttonId }, \"ButtonRemoved\");\n        return w;\n    }\n\n    public async activate(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        let un: UnsubscribeFunction;\n        try {\n            const done = new Promise<void>((resolve, reject) => {\n                un = w.onFocusChanged(() => {\n                    resolve();\n                });\n            });\n            await Promise.all([this.execute(\"activate\", { windowId: w.id }, \"FocusChanged\"), done]);\n            return w;\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    public async focus(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        let un: UnsubscribeFunction;\n        try {\n            const done = new Promise<void>((resolve, reject) => {\n                un = w.onFocusChanged(() => {\n                    resolve();\n                });\n            });\n            await Promise.all([this.execute(\"focus\", { windowId: w.id }, \"FocusChanged\"), done]);\n            return w;\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    public async maximizeRestore(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"maximizeRestore\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async maximize(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"maximize\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async restore(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"restore\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async minimize(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"minimize\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async collapse(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"collapse\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async expand(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"expand\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async toggleCollapse(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"toggleCollapse\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async snap(w: Glue42.Windows.GDWindow, targetWindow: Glue42.Windows.GDWindow, direction: Glue42.Windows.RelativeDirection): Promise<Glue42.Windows.GDWindow> {\n        const args: any = {\n            targetWindowId: targetWindow.id\n        };\n\n        if (direction) {\n            args.snappingEdge = direction;\n        }\n        await this.execute(\"snap\", { windowId: w.id, options: args }, \"CompositionChanged\", `CompositionChanged-${targetWindow.id}`);\n        return w;\n    }\n\n    public async attachTab(w: Glue42.Windows.GDWindow, sourceWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.AttachOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"attachTab\", {\n            windowId: w.id,\n            options: {\n                index: options,\n                sourceWindowId: sourceWindow.id,\n                targetWindowId: w.id,\n            }\n        }, `WindowFrameAdded-${sourceWindow.id}`, `WindowFrameRemoved-${sourceWindow.id}`);\n        return w;\n    }\n\n    public async detachTab(w: Glue42.Windows.GDWindow, options: DetachTabOptions): Promise<Glue42.Windows.GDWindow> {\n        const eventKeys: string[] = [\"WindowFrameRemoved\", `WindowFrameAdded`];\n        if (!isUndefinedOrNull(options?.relativeTo)) {\n            eventKeys.push(`CompositionChanged`);\n            eventKeys.push(`CompositionChanged-${options.relativeTo}`);\n        } else {\n            eventKeys.push(\"BoundsChanged\");\n        }\n        await this.execute(\"detachTab\", { windowId: w.id, options }, ...eventKeys);\n        return w;\n    }\n\n    public async setVisible(w: Glue42.Windows.GDWindow, toBeVisible: boolean = true): Promise<Glue42.Windows.GDWindow> {\n        let command: string;\n        if (toBeVisible) {\n            command = \"show\";\n        } else {\n            command = \"hide\";\n        }\n\n        await this.execute(command, { windowId: w.id }, \"VisibilityChanged\");\n        return w;\n    }\n\n    public async showLoader(w: Glue42.Windows.GDWindow, loader?: Glue42.Windows.Loader): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"showLoadingAnimation\", { windowId: w.id, options: loader });\n        return w;\n    }\n\n    public async hideLoader(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"hideLoadingAnimation\", { windowId: w.id });\n        return w;\n    }\n\n    public async updateContext(w: Glue42.Windows.GDWindow, context: any, replace: boolean): Promise<Glue42.Windows.GDWindow> {\n        let un: UnsubscribeFunction;\n        try {\n            // as undefined values do not go through interop, setting a prop to undefined will lead to no change\n            // set this to null so it actually removes the prop\n            const contextWithoutUndefinedValues = this.swapUndefinedToNull(context);\n\n            const done = new Promise<void>((resolve, reject) => {\n                un = w.onContextUpdated(() => {\n                    resolve();\n                });\n            });\n            await Promise.all([this.execute(\"updateContext\", {\n                windowId: w.id, context: contextWithoutUndefinedValues, replace\n            }), done]);\n            return w;\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    public async lock(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"lockUnlock\", { windowId: w.id, options: { lock: true } }, \"FrameIsLockedChanged\");\n        return w;\n    }\n\n    public async unlock(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"lockUnlock\", { windowId: w.id, options: { lock: false } }, \"FrameIsLockedChanged\");\n        return w;\n    }\n\n    public async getIcon(w: Glue42.Windows.GDWindow): Promise<string> {\n        const result = await this.execute(\"getIcon\", {\n            windowId: w.id,\n            options: {}\n        });\n        return result.icon;\n    }\n\n    public async setIcon(w: Glue42.Windows.GDWindow, base64Image: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setIcon\", {\n            windowId: w.id,\n            options: {\n                dataURL: base64Image\n            }\n        });\n        return w;\n    }\n\n    public async setFrameColor(w: Glue42.Windows.GDWindow, frameColor: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setFrameColor\", { windowId: w.id, options: { frameColor } }, \"FrameColorChanged\");\n        return w;\n    }\n\n    public async setTabHeaderVisible(w: Glue42.Windows.GDWindow, toBeTabHeaderVisible: boolean): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setTabHeaderVisible\", {\n            windowId: w.id,\n            options: {\n                toShow: toBeTabHeaderVisible\n            }\n        }, \"TabHeaderVisibilityChanged\");\n        return w;\n    }\n\n    public async showPopup(targetWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        if (!options) {\n            throw new Error(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.targetLocation) {\n            optionsCopy.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation;\n        }\n\n        const reformatedOptions: ReformatedPopupOptions & { targetId: string } = {\n            ...optionsCopy,\n            popupBounds: optionsCopy.size,\n            targetId: targetWindow.id,\n            popupId: optionsCopy.windowId\n        };\n\n        await this.execute(\"showPopupWindow\", {\n            windowId: targetWindow.id,\n            options: reformatedOptions\n        });\n\n        return targetWindow;\n    }\n\n    public async createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        if (!options) {\n            throw new Error(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.horizontalOffset) {\n            optionsCopy.horizontalOffset = 0;\n        }\n\n        if (!optionsCopy.verticalOffset) {\n            optionsCopy.verticalOffset = 0;\n        }\n\n        const fullOptions: Glue42.Windows.FlydownOptions & { targetId: string, flydownBounds: Glue42.Windows.FlydownOptions[\"size\"] } = this.reformatFlydownOptions(windowId, optionsCopy);\n\n        return this.execute(\"setFlydownArea\", { windowId, options: fullOptions }).then(() => {\n            const zoneIds = fullOptions.zones.map((z) => z.id);\n\n            fullOptions.zones.forEach((z) => {\n                let callback: (...args: any[]) => any = typeof (z.flydownSize) === \"function\" ?\n                    z.flydownSize : () => z.flydownSize;\n\n                if (options.size instanceof Function && z.flydownSize) {\n                    callback = async (data: Glue42.Windows.ShowFlydownData, cancel: () => void) => {\n                        let result;\n                        // The options callback must be always invoked\n                        // If the property in the zone is null it will be automatically\n                        // assigned to the same callback from the code above reformatFlydownOptions\n                        if (options.size instanceof Function) {\n                            result = await options.size(data, cancel);\n                        }\n\n                        // If both are callbacks the zone has higher priority\n                        // If they are the same only one should be invoked\n                        if (z.flydownSize instanceof Function && z.flydownSize !== options.size) {\n                            return await z.flydownSize(data, cancel) || result;\n                        }\n\n                        // The options callback overwrites the bounds object specified in the zone\n                        return result || z.flydownSize;\n                    };\n                }\n                this._registry.clearKey(`${fullOptions.targetId}_${z.id}`);\n                this._registry.add(`${fullOptions.targetId}_${z.id}`, callback);\n            });\n\n            return {\n                destroy: () => this.clearFlydownArea(fullOptions.targetId, zoneIds),\n                options: optionsCopy\n            };\n        });\n    }\n\n    public async setModalState(windowId: string, isModal: boolean): Promise<void> {\n        return this.execute(\"setModalState\", { windowId, options: { isModal } });\n    }\n\n    public async handleFlydownBoundsRequested(targetId: string, data: ShowFlydownData) {\n        const cancelCallback = () => data.cancel = true;\n\n        const callbackData: Glue42.Windows.ShowFlydownData = {\n            zoneId: data.flydownId,\n            flydownWindowBounds: data.flydownWindowBounds,\n            flydownWindowId: data.flydownWindowId,\n        };\n\n        const responses = await Promise.all(this._registry.execute(`${targetId}_${data.flydownId}`, callbackData, cancelCallback));\n\n        if (responses.length === 1) {\n            const defaultResponse = { height: 0, width: 0, top: 0, left: 0 };\n            const response = typeof (responses[0]) === \"object\" && !Array.isArray(responses[0]) ? responses[0] : defaultResponse;\n            const responseOptions: ShowFlydownData = { ...data, flydownWindowBounds: response };\n\n            return responseOptions;\n        }\n    }\n\n    public async zoomIn(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomIn\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async zoomOut(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomOut\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async setZoomFactor(window: Glue42.Windows.GDWindow, zoomFactor: number): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setZoomFactor\", {\n            windowId: window.id,\n            options: {\n                zoomFactor\n            }\n        });\n        return window;\n    }\n\n    public async showDevTools(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"showDevTools\", {\n            windowId: window.id,\n        });\n\n        return window;\n    }\n\n    public async capture(window: Glue42.Windows.GDWindow, options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot = (await this.execute(\n            \"captureScreenshot\",\n            { windowId: window.id, options: { ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async captureGroup(windowIds: string[], options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot: string = (await this.execute(\n            \"captureGroupScreenshot\",\n            { windowId: windowIds[0], options: { groupWindowIds: windowIds, ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async flash(resultWindow: Glue42.Windows.GDWindow, options: FlashOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\n            \"flash\",\n            { windowId: resultWindow.id, options: { ...options } }\n        );\n\n        return resultWindow;\n    }\n\n    public async configure(windowId: string, options: Glue42.Windows.WindowsConfiguration): Promise<void> {\n        return this.execute(\n            \"configure\",\n            { windowId, options: { ...options } }\n        );\n    }\n\n    public async print(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PrintOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\n            \"print\",\n            { windowId: resultWindow.id, options: { ...options } }\n        );\n        return resultWindow;\n    }\n\n    public async printToPDF(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PrintToPDFOptions): Promise<string> {\n        const filePath: string = (await this.execute(\n            \"printToPDF\",\n            { windowId: resultWindow.id, options: { ...options } }\n        )).filePath;\n\n        return filePath;\n    }\n\n    public async place(window: Glue42.Windows.GDWindow, options: Glue42.Windows.PlacementSettings): Promise<void> {\n        const copy = { ...options } as any;\n        if (!options.display || options.display === \"current\") {\n            copy.display = await window.getDisplay();\n        }\n        // Glue42.Displays.API works with zero based array of displays, which means that the first monitor has index 0\n        // whereas GD works with non zero based array of displays, which means that the first monitor has index 1\n        copy.display = copy.display.index + 1;\n        return this.execute(\n            \"place\",\n            { windowId: window.id, options: { ...copy } }\n        );\n    }\n\n    public async refresh(resultWindow: Glue42.Windows.GDWindow, ignoreCache: boolean): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"refresh\", { windowId: resultWindow.id, options: { ignoreCache } });\n        return resultWindow;\n    }\n\n    public async download(resultWindow: Glue42.Windows.GDWindow, url: string, options: Glue42.Windows.DownloadOptions & { enableDownloadBar?: boolean } = {}): Promise<Glue42.Windows.DownloadResult> {\n        options.enableDownloadBar = !options.silent;\n        const result: { fileSize: number, fullPath: string, success: boolean } = await this.execute(\"downloadURL\", { windowId: resultWindow.id, options: { url, options } });\n        return {\n            url,\n            path: result.fullPath,\n            size: result.fileSize,\n        };\n    }\n\n    public async configureWindow(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.WindowConfiguration): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"configureWindow\", { windowId: resultWindow.id, options });\n        return resultWindow;\n    }\n\n    /**\n     * Invokes the container\n     * @param command\n     * @param options\n     * @param {...string} eventKeys which events types to be awaited before resolving - used only < GD 3.12\n     * @returns Invocation result\n     */\n    public async execute(command: string, options: any & { windowId: string }, ...eventKeys: string[]): Promise<any> {\n        const params = {\n            ...options,\n            command,\n        };\n        let finishedResolve: () => void;\n        this._finished = new Promise((resolve) => {\n            finishedResolve = resolve;\n        });\n        try {\n            if (typeof window !== \"undefined\" && (window.glueDesktop as any).versionNum < 31200) {\n                return await this.executeWithoutToken(params, ...eventKeys);\n            } else {\n                return await this.executeWithToken(params);\n            }\n        } catch (error) {\n            throw error;\n        } finally {\n            finishedResolve();\n        }\n    }\n\n    public async ungroup(w: Glue42.Windows.GDWindow, options: Glue42.Windows.UngroupOptions): Promise<Glue42.Windows.GDWindow> {\n        const args = {\n            windowId: w.id,\n            options\n        };\n        await this.execute(\"ungroup\", args);\n        return w;\n    }\n\n    public async updateJumpList(windowId: string, options: JumpListUpdateSettings): Promise<void> {\n        const args = {\n            windowId,\n            options\n        };\n        await this.execute(\"updateJumplist\", args);\n    }\n\n    public async getJumpList(windowId: string): Promise<JumpListSettingsInternal> {\n        const args = {\n            windowId,\n        };\n        const result = await this.execute(\"getJumplist\", args);\n        return result;\n    }\n\n    public onClosing(callback: (success: () => void, error: () => void) => void, id: string): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addCloseHandler(callback, id);\n        }\n    }\n\n    public onRefreshing(callback: (success: () => void, error: () => void, prevent: () => void) => void, id: string): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addRefreshHandler(callback, id);\n        }\n    }\n\n    public onNavigating(callback: (success: () => void, error: () => void, prevent: () => void, args: any) => void, id: string): () => Promise<void> {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addWillNavigateHandler(callback, id);\n        }\n    }\n\n    private reformatFlydownOptions(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        const assignGeneralIfUnassigned = (zone: Glue42.Windows.FlydownZone, prop: keyof Glue42.Windows.FlydownZone & keyof Glue42.Windows.FlydownOptions) => {\n            if (options[prop] && (zone[prop] === undefined || zone[prop] === null)) {\n                const valueFromOptions = options[prop];\n                (zone[prop] as any) = valueFromOptions;\n            }\n        };\n\n        const zones: ReformatedFlydownOptions[\"zones\"] = options.zones.map((z) => {\n            assignGeneralIfUnassigned(z, \"windowId\");\n            assignGeneralIfUnassigned(z, \"targetLocation\");\n\n            if (options.size && (z.flydownSize === undefined || z.flydownSize === null)) {\n                z.flydownSize = options.size;\n            }\n\n            (z as ReformatedFlydownZone).flydownBounds = z.flydownSize as any;\n            (z as ReformatedFlydownZone).flydownId = z.windowId;\n\n            if (!z.targetLocation) {\n                z.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation.Bottom;\n            }\n\n            return z;\n        });\n\n        return {\n            ...options,\n            zones,\n            targetId: windowId,\n            flydownBounds: options.size,\n            flydownActiveArea: options.activeArea\n        };\n    }\n\n    private clearFlydownArea(windowId: string, areaIds: string[]) {\n        return this.execute(\"clearFlydownWindowArea\", {\n            windowId,\n            options: {}\n        }).then(() => {\n            areaIds.forEach((id) => {\n                this._registry.clearKey(`${windowId}_${id}`);\n            });\n        });\n    }\n\n    private executeWithoutToken(params: { windowId: string }, ...eventKeys: string[]) {\n        const uns: UnsubscribeFunction[] = [];\n        const executed = eventKeys?.filter((k) => !isUndefinedOrNull(k)).map((key) => {\n            return new Promise<void>((r) => {\n                const [type, windowId = params.windowId] = key.split(\"-\");\n                uns.push(this._registry.add(\"event\", (data: { windowId: string, type: string }) => {\n                    if (data.type === type && data.windowId === windowId) {\n                        r();\n                    }\n                }));\n            });\n        });\n        const action = new Promise<any>((resolve, reject) => {\n            this.agm.invoke<any>(\"T42.Wnd.Execute\", params, this.agmTarget)\n                .then((i) => {\n                    if (i.returned && i.returned.errorMsg) {\n                        reject(i);\n                    } else {\n                        resolve(i.returned);\n                    }\n                })\n                .catch((e) => reject(e));\n        });\n        return Promise.all([action, ...executed])\n            .then((r) => {\n                return r[0];\n            })\n            .finally(() => {\n                uns.forEach((un) => un());\n            });\n    }\n\n    private async executeWithToken(options: any) {\n        let un: UnsubscribeFunction;\n        try {\n            const token = shortid.generate();\n            const event = new Promise<void>((r) => {\n                un = this._registry.add(\"event\", (data: any) => {\n                    if (data.token === token) {\n                        r();\n                    }\n                });\n            });\n            const execute = new Promise<any>((resolve, reject) => {\n                options.token = token;\n                this.agm.invoke<any>(\"T42.Wnd.Execute\", options, this.agmTarget)\n                    .then((i) => {\n                        if (i.returned && i.returned.errorMsg) {\n                            reject(i);\n                        } else {\n                            resolve(i.returned);\n                        }\n                    })\n                    .catch((i) => {\n                        reject(i);\n                    });\n            });\n\n            const result = await Promise.all([execute, event]);\n            return result[0];\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    private areBoundsEqual(requested: Partial<Glue42.Windows.Bounds>, w: Glue42.Windows.GDWindow) {\n        const current = w.bounds;\n        const settings = w.settings;\n        let height = requested.height;\n        let width = requested.width;\n        if (requested.height < settings.minHeight) {\n            height = settings.minHeight;\n        }\n        if (requested.height > settings.maxHeight) {\n            height = settings.maxHeight;\n        }\n        if (requested.width < settings.minWidth) {\n            width = settings.minWidth;\n        }\n        if (requested.width > settings.maxWidth) {\n            width = settings.maxWidth;\n        }\n\n        const areHeightsEqual = height ? current.height === height : true;\n        const areWidthsEqual = width ? current.width === width : true;\n        const areLeftsEqual = requested.left ? current.left === requested.left : true;\n        const areTopsEqual = requested.top ? current.top === requested.top : true;\n\n        return areHeightsEqual && areWidthsEqual && areLeftsEqual && areTopsEqual;\n    }\n\n    private swapUndefinedToNull(context: any) {\n        try {\n            // swap top level undefined values to null-s\n            const copy: any = {};\n            for (const key of Object.keys(context)) {\n                let value = context[key];\n                if (typeof value === \"undefined\") {\n                    value = null;\n                }\n                copy[key] = value;\n            }\n            return copy;\n        } catch {\n            return context;\n        }\n    }\n}\n\nexport default new GDExecutor();\n","import { default as windowStore } from \"../store\";\nimport { WindowWrapper } from \"../types\";\n\nexport function getWindowsByTabGroupId(windowId: string, tabGroupId: string): WindowWrapper[] {\n    const windows = windowStore.list;\n    return Object.keys(windows).reduce((memo, id) => {\n        const win = windows[id];\n        if (win.API.tabGroupId === tabGroupId && win.API.id !== windowId) {\n            memo.push(win);\n        }\n        return memo;\n    }, []);\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { default as windowStore } from \"../../store\";\nimport { Environment, Executor, WindowConstructorOptions, WindowEvents, WindowWrapper } from \"../../types\";\nimport windowFactory from \"../../window\";\nimport { default as executor } from \"./executor\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport {\n    FullInfoEvent,\n    StreamEvent,\n    WindowInfo,\n    GroupHeaderVisibilityChanged,\n    UrlChanged,\n    TitleChanged,\n    BoundsChanged,\n    FocusChanged,\n    CompositionChanged,\n    ExtendedStreamEvent,\n    EventWithResponseData,\n    ResponseTypes,\n    IsStickyChanged\n} from \"./types\";\nimport { getWindowsByTabGroupId } from \"../helpers\";\n\nexport default class GDEnvironment implements Environment {\n\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _agm: Glue42Core.AGM.API;\n    private _logger: Glue42Core.Logger.API;\n    private _waitTimeout: number = 10000;\n    private _agmInstance: Glue42Core.AGM.Instance | \"best\" | \"all\";\n    private _windowId: string;\n    private _appManagerGetter: () => Glue42.AppManager.API;\n    private _displayAPIGetter: () => Glue42.Displays.API;\n    private _channelsAPIGetter: () => Glue42.Channels;\n\n    constructor(agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, channelsAPIGetter: () => Glue42.Channels, instance?: Glue42Core.AGM.Instance, wndId?: string) {\n        this._agm = agm;\n        this._logger = logger.subLogger(\"gd-env\");\n        this._agmInstance = this.normalizeInstance(instance);\n        this._windowId = wndId;\n        this._appManagerGetter = appManagerGetter;\n        this._displayAPIGetter = displayAPIGetter;\n        this._channelsAPIGetter = channelsAPIGetter;\n    }\n\n    public init(): Promise<GDEnvironment> {\n        return new Promise((resolve, reject) => {\n            // if we don't have an Instance, thats means that we are running outside from any Tick42 Containers\n            // so our target is best\n            if (typeof this._agmInstance === \"undefined\") {\n                this._agmInstance = \"best\";\n            }\n\n            this._agm.registerAsync(\"T42.Wnd.OnEventWithResponse\", (args, caller, success, err) => {\n                this.respondToEvent(args as any).then(success).catch(err);\n            });\n\n            const streamPromise = new Promise<void>((streamResolve, streamReject) => {\n                this._agm.subscribe(\"T42.Wnd.OnEvent\", {\n                    waitTimeoutMs: this._waitTimeout,\n                    target: this._agmInstance,\n                    onData: (streamData: any) => {\n                        this.updateWindow(streamData.data, resolve);\n                        executor.handleEvent(streamData.data);\n                    },\n                    onConnected: (instance) => {\n                        this._agmInstance = this.normalizeInstance(instance);\n                        // Init the executor\n                        executor.init(this._agm, this._agmInstance);\n                    }\n                }).catch((err: any) => {\n                    reject(\"Can not subscribe for stream T42.Wnd.OnEvent. Err: \" + err);\n                });\n            });\n        });\n    }\n\n    public get executor(): Executor {\n        return executor;\n    }\n\n    public open(name: string, url: string, options: any): Promise<Glue42.Windows.GDWindow> {\n        options = options || {};\n        const copyOptions = { ...options };\n\n        if (copyOptions.relativeTo !== undefined && typeof copyOptions.relativeTo !== \"string\") {\n            copyOptions.relativeTo = copyOptions.relativeTo.id || \"\";\n        }\n\n        copyOptions.name = name;\n        copyOptions.url = url;\n\n        // This is for compatibility between gd2 and gd3\n        copyOptions.windowState = options.windowState || options.state;\n        // Otherwise glue desktop throws an error for extra properties\n        delete copyOptions.state;\n\n        return this.executor.open(copyOptions);\n    }\n\n    public createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return this.executor.createFlydown(windowId, options);\n    }\n\n    public async showPopup(windowId: string, options: Glue42.Windows.PopupOptions): Promise<void> {\n        const window = windowStore.get(windowId);\n        await this.executor.showPopup(window.API, options);\n    }\n\n    public tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-attached\", callback);\n    }\n\n    public tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-detached\", callback);\n    }\n\n    public onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void) {\n        return this._registry.add(\"frame-color-changed\", callback);\n    }\n\n    public onEvent(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"window-event\", callback);\n    }\n\n    public my(): string {\n        return this._windowId;\n    }\n\n    public execute<T>(command: string, windowId: string, options: {}): Promise<Glue42Core.AGM.InvocationResult<T>> {\n        return this._agm.invoke<T>(\"T42.Wnd.Execute\", {\n            command,\n            options,\n            windowId,\n        });\n    }\n\n    /** Groups */\n    public onCompositionChanged(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"composition-changed\", callback);\n    }\n\n    public onGroupHeaderVisibilityChanged(callback: (stream: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"group-header-changed\", callback);\n    }\n\n    public onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"got-focus\", callback);\n    }\n\n    public onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"lost-focus\", callback);\n    }\n\n    // TODO revise it\n    private normalizeInstance(instance: Glue42Core.AGM.Instance) {\n        if (!instance) {\n            return undefined;\n        }\n        return {\n            application: instance.application,\n            machine: instance.machine,\n            user: instance.user,\n        };\n    }\n    private respondToEvent(args: EventWithResponseData): Promise<ResponseTypes> {\n        if (args.type === \"ShowFlydownBoundsRequested\") {\n            return this.executor.handleFlydownBoundsRequested(args.data.windowId, args.data);\n        }\n\n        return Promise.reject(`There isn't a handler for ${args.type}`);\n    }\n\n    private updateWindow(windowInfo: StreamEvent, readyResolve: (env: GDEnvironment) => void) {\n        const extendedStreamEvent = this.getExtendedStreamEvent(windowInfo);\n\n        // this is the snapshot of all windows\n        if (windowInfo.type === \"Snapshot\") {\n            const windowInfoFullInfoEvent = (windowInfo as FullInfoEvent);\n            windowInfoFullInfoEvent.windows.forEach((w) => {\n                const existingWindow = windowStore.get(w.id);\n                if (existingWindow) {\n                    existingWindow.Events.handleUpdate(this.mapToWindowConstructorOptions(w));\n                } else {\n                    const win = this.createWindow(w.id, w);\n                    windowStore.markReadyToShow(win.API.id);\n                }\n                this._registry.execute(\"window-event\", extendedStreamEvent);\n            });\n            readyResolve(this);\n            return;\n        }\n\n        // global event\n        if (windowInfo.type === \"CommandExecuted\") {\n            this._registry.execute(\"window-event\", extendedStreamEvent);\n            return;\n        }\n\n        // if new window handle it separately\n        if (windowInfo.type === \"Created\") {\n            const windowInfoCreatedEvent = (windowInfo as StreamEvent);\n            const win = this.createWindow(windowInfoCreatedEvent.windowId, windowInfoCreatedEvent.data || {});\n            windowStore.setReadyState(win.API.id);\n            this._registry.execute(\"window-event\", extendedStreamEvent);\n            return;\n        }\n\n        // otherwise check if the window is in our internal collections and update its state\n        const windowObjectAndEvents: WindowWrapper = windowStore.get((windowInfo as StreamEvent).windowId);\n        if (!windowObjectAndEvents) {\n            this._logger.error(`received update for unknown window. Stream:', ${JSON.stringify(windowInfo, null, 4)}`);\n            return;\n        }\n\n        const theWindow: Glue42.Windows.GDWindow = windowObjectAndEvents.API;\n        const theWindowEvents: WindowEvents = windowObjectAndEvents.Events;\n\n        // handle bounds changed\n        if (windowInfo.type === \"BoundsChanged\") {\n            const windowInfoBoundsChangedEvent = (windowInfo as BoundsChanged);\n            theWindowEvents.handleBoundsChanged(windowInfoBoundsChangedEvent.data);\n        }\n\n        // handle url changed\n        if (windowInfo.type === \"UrlChanged\") {\n            const windowInfoUrlChangedEvent = (windowInfo as UrlChanged);\n            windowStore.setUrlChangedState(windowInfoUrlChangedEvent.windowId);\n            theWindowEvents.handleUrlChanged(windowInfoUrlChangedEvent.data);\n        }\n\n        // handle title changed\n        if (windowInfo.type === \"TitleChanged\") {\n            const windowInfoTitleChanged = (windowInfo as TitleChanged);\n            theWindowEvents.handleTitleChanged(windowInfoTitleChanged.data);\n        }\n\n        // handle isSticky changed\n        if (windowInfo.type === \"IsStickyChanged\") {\n            const windowInfoIsStickyChangedChanged = (windowInfo as IsStickyChanged);\n            theWindowEvents.handleIsStickyChanged(windowInfoIsStickyChangedChanged.data);\n        }\n\n        // handle visibility changed\n        if (windowInfo.type === \"VisibilityChanged\") {\n            theWindowEvents.handleVisibilityChanged(windowInfo.data);\n        }\n\n        // handle context changed\n        if (windowInfo.type === \"ContextChanged\") {\n            theWindowEvents.handleContextUpdated(windowInfo.data);\n        }\n\n        // handle window state changed\n        if (windowInfo.type === \"StateChanged\") {\n            theWindowEvents.handleWindowChangeState(windowInfo.data);\n        }\n\n        // handle frame color changed\n        if (windowInfo.type === \"FrameColorChanged\") {\n            theWindowEvents.handleFrameColorChanged(windowInfo.data);\n            this._registry.execute(\"frame-color-changed\", theWindow);\n        }\n\n        // handle composition changed - groups API\n        if (windowInfo.type === \"CompositionChanged\") {\n            const windowInfoCompositionChanged = windowInfo as CompositionChanged;\n            theWindowEvents.handleCompositionChanged(windowInfoCompositionChanged.data);\n            this._registry.execute(\"composition-changed\", windowInfoCompositionChanged.data);\n        }\n\n        if (windowInfo.type === \"GroupHeaderVisibilityChanged\") {\n            const info = windowInfo as GroupHeaderVisibilityChanged;\n            theWindowEvents.handleGroupHeaderVisibilityChanged(info.data.groupHeaderVisible);\n            this._registry.execute(\"group-header-changed\", info.data);\n        }\n\n        // handle focus changed\n        if (windowInfo.type === \"FocusChanged\") {\n            const windowInfoFocusChanged = (windowInfo as FocusChanged);\n            this.focusChanged(theWindowEvents, theWindow, windowInfoFocusChanged.data);\n        }\n\n        if (windowInfo.type === \"WindowFrameChanged\") {\n            theWindowEvents.handleFrameAttached(windowInfo.data.frameId, windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n            this._registry.execute(\"frame-changed\");\n        }\n\n        if (windowInfo.type === \"WindowFrameAdded\") {\n            const winsToBeNotified = getWindowsByTabGroupId(theWindow.id, windowInfo.data.frameId);\n            const data = windowInfo.data;\n            theWindowEvents.handleAttached(data.frameId, data.frameId, data.isTabHeaderVisible, data.isLocked, winsToBeNotified)\n                .then(async () => {\n                    // don't fire the event if it is the first window\n                    if (winsToBeNotified.length > 0) {\n                        await executor.finished;\n                        this._registry.execute(\"tab-attached\", theWindow, windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n                    }\n                });\n        }\n\n        if (windowInfo.type === \"WindowFrameRemoved\") {\n            // In the event, tabGroupId is empty, will be update on the next event FrameAttached\n            const oldTabGroupId = theWindow.tabGroupId;\n            const winsToBeNotified = getWindowsByTabGroupId(theWindow.id, oldTabGroupId);\n            theWindowEvents.handleDetached(windowInfo.data.isLocked, winsToBeNotified)\n                .then(async () => {\n                    // don't fire the event if it is the first window\n                    if (winsToBeNotified.length > 0) {\n                        await executor.finished;\n                        this._registry.execute(\"tab-detached\", theWindow, windowInfo.data.frameId, theWindow.tabGroupId);\n                    }\n                });\n        }\n\n        if (windowInfo.type === \"TabHeaderVisibilityChanged\") {\n            theWindowEvents.handleTabHeaderVisibilityChanged(windowInfo.data.isTabHeaderVisible);\n        }\n\n        if (windowInfo.type === \"FrameSelectionChanged\") {\n            theWindowEvents.handleFrameSelectionChanged(windowInfo.data.newWindowId, windowInfo.data.prevWindowId);\n        }\n\n        if (windowInfo.type === \"ButtonClicked\") {\n            theWindowEvents.handleFrameButtonClicked(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonAdded\") {\n            theWindowEvents.handleFrameButtonAdded(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonRemoved\") {\n            theWindowEvents.handleFrameButtonRemoved(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"WindowZoomFactorChanged\") {\n            theWindowEvents.handleZoomFactorChanged(windowInfo.data);\n        }\n\n        // Clear the window on close event\n        if (windowInfo.type === \"Closed\") {\n            windowStore.remove(windowObjectAndEvents);\n            theWindowEvents.handleWindowClose();\n        }\n\n        if (windowInfo.type === \"FrameIsLockedChanged\") {\n            theWindowEvents.handleFrameIsLockedChanged(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"PlacementSettingsChanged\") {\n            theWindowEvents.handlePlacementSettingsChanged(windowInfo.data);\n        }\n\n        // expose to external listeners\n        this._registry.execute(\"window-event\", extendedStreamEvent);\n    }\n\n    private createWindow(windowId: string, options: WindowInfo): WindowWrapper {\n        const windowObjAndEvents: WindowWrapper = windowFactory(windowId, this.mapToWindowConstructorOptions(options), executor, this._logger, this._appManagerGetter, this._displayAPIGetter, this._channelsAPIGetter, this._agm);\n        windowStore.add(windowObjAndEvents);\n        return windowObjAndEvents;\n    }\n\n    private focusChanged(theWindowEvents: WindowEvents, theWindow: Glue42.Windows.GDWindow, focus: boolean) {\n        theWindowEvents.handleFocusChanged(focus);\n        if (focus) {\n            this._registry.execute(\"got-focus\", theWindow);\n        } else {\n            this._registry.execute(\"lost-focus\", theWindow);\n        }\n    }\n\n    private mapToWindowConstructorOptions(args: WindowInfo): WindowConstructorOptions {\n        // TODO\n        return {\n            name: args.name,\n            context: args.context,\n            bounds: args.bounds,\n            url: args.url,\n            title: args.title,\n            isVisible: args.isVisible,\n            focus: args.isFocused,\n            state: args.state,\n            frameColor: args.frameColor,\n            groupId: args.groupId,\n            neighbours: args.neighbors,\n            isFocused: args.isFocused,\n            isGroupHeaderVisible: args.groupHeaderVisible,\n            isCollapsed: args.isCollapsed,\n            tabGroupId: args.frameId,\n            frameId: args.frameId,\n            mode: args.mode,\n            isTabHeaderVisible: args.isTabHeaderVisible,\n            isTabSelected: args.isActiveTab,\n            settings: args.settings,\n            windowType: args.windowType,\n            zoomFactor: args.zoomFactor,\n            // focus: args.focus,\n            isLocked: args.isLocked,\n            placementSettings: args.placementSettings,\n            isSticky: args.isSticky,\n            tabIndex: args.tabIndex,\n            // settings: windowStyleAttributes,\n            frameButtons: args.frameButtons,\n            jumpListOptions: args.jumpList\n        };\n    }\n\n    private getExtendedStreamEvent(streamEvent: StreamEvent): StreamEvent | ExtendedStreamEvent {\n        try {\n            // some events (e.g. Snapshot) do not have windowIds\n            if (!streamEvent.windowId) {\n                return streamEvent;\n            }\n\n            // try to get the window, if not there return the original event\n            const window = windowStore.get(streamEvent.windowId);\n            if (!window) {\n                return streamEvent;\n            }\n\n            const result: ExtendedStreamEvent = {\n                state: streamEvent.type,\n                windowName: window.API.name,\n                ...streamEvent\n            };\n\n            if (result.state === \"WindowFrameAdded\") {\n                result.state = \"TabAttached\";\n            }\n\n            if (result.state === \"StateChanged\") {\n                result.state = result.data.charAt(0).toUpperCase() + result.data.slice(1);\n            }\n\n            if (result.state === \"ButtonAdded\") {\n                result.state = \"FrameButtonAdded\";\n            }\n\n            if (result.state === \"ButtonRemoved\") {\n                result.state = \"FrameButtonRemoved\";\n            }\n\n            return result;\n        } catch (error) {\n            return streamEvent;\n        }\n    }\n}\n","import callbackRegistry, { CallbackRegistry } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { default as windowStore } from \"./store\";\nimport { Executor, GroupInternal, GroupWrapper, WindowWrapper } from \"./types\";\nimport { isNullOrWhiteSpace, isUndefinedOrNull } from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nexport default (id: string, executor: Executor): GroupWrapper => {\n\n    const _registry: CallbackRegistry = callbackRegistry();\n\n    const _windowsId: string[] = [];\n\n    //#region \"API functions\"\n\n    async function addWindow(winId: string): Promise<void> {\n        if (_windowsId.indexOf(winId) === -1) {\n            _windowsId.push(winId);\n            const win: WindowWrapper = windowStore.get(winId);\n            win.Events.handleGroupChanged(groupObject, undefined);\n            await executor.finished;\n            _registry.execute(\"window-added\", groupObject, win.API);\n        }\n    }\n\n    async function removeWindow(win: WindowWrapper): Promise<void> {\n        const index: number = _windowsId.indexOf(win.API.id);\n        if (index !== -1) {\n            _windowsId.splice(index, 1);\n            win.Events.handleGroupChanged(undefined, groupObject);\n            await executor.finished;\n            _registry.execute(\"window-removed\", groupObject, win.API);\n        }\n    }\n\n    function find(window: string | Glue42.Windows.GDWindow, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        let winId: string;\n        if (typeof window === \"string\") {\n            winId = window;\n        } else if (!isUndefinedOrNull(window)) {\n            winId = window.id;\n        }\n\n        const win = _mapToWindowObject(winId);\n        if (win) {\n            if (typeof success === \"function\") {\n                success(win);\n            }\n            return win;\n        } else {\n            if (typeof error === \"function\") {\n                error(`No window with ID: ${winId}`);\n            }\n        }\n    }\n\n    function windows(success?: (windows: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const mappedWindows: Glue42.Windows.GDWindow[] = _mapToWindowObjects();\n        if (typeof success === \"function\") {\n            success(mappedWindows);\n        }\n        return mappedWindows;\n    }\n\n    async function execute(command: string, options: any & { windowId: string }, ...keys: string[]): Promise<Glue42.Windows.Group> {\n        await executor.execute<Glue42.Windows.Group>(command, options, ...keys);\n        return groupObject;\n    }\n\n    //#endregion \"API functions\"\n\n    //#region \"Stream function\"\n\n    function handleGroupHeaderVisibilityChanged(windowInfo: any): void {\n        _registry.execute(\"header-visibility-changed\", groupObject);\n    }\n\n    //#endregion \"Stream function\"\n\n    //#region \"Internal function\"\n\n    function _mapToWindowObjects(): Glue42.Windows.GDWindow[] {\n        const winObjects: Glue42.Windows.GDWindow[] = [];\n\n        _windowsId.forEach((winId) => {\n            const windowObject = _mapToWindowObject(winId);\n            if (typeof windowObject !== \"undefined\") {\n                winObjects.push(windowObject);\n            }\n        });\n\n        return winObjects;\n    }\n\n    function _mapToWindowObject(windowId: string): Glue42.Windows.GDWindow {\n        return windowStore.get(windowId) ? windowStore.get(windowId).API : undefined;\n    }\n\n    function _getGroupHeaderVisibility(): boolean {\n        // if one of the windows has a flag hideGroupHeader the group header should be off.\n        const windowWithHiddenHeader = _mapToWindowObjects().find((w) => !w.isGroupHeaderVisible);\n        const _isGroupHeaderVisible = windowWithHiddenHeader === undefined;\n\n        return _isGroupHeaderVisible;\n    }\n\n    //#endregion \"Internal function\"\n\n    //#region \"Events\"\n\n    function onHeaderVisibilityChanged(callback?: (group: Glue42.Windows.Group) => void): () => void {\n        return _registry.add(\"header-visibility-changed\", callback);\n    }\n\n    function onWindowAdded(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function onWindowRemoved(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    //#endregion \"Events\"\n\n    //#region \"API\"\n\n    const groupObject: Glue42.Windows.Group = {\n        id,\n        get windows() {\n            return windows();\n        },\n        find,\n        get isHeaderVisible() {\n            return _getGroupHeaderVisibility();\n        },\n        showHeader: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"setGroupHeaderVisibility\", { windowId: _windowsId[0], options: { toShow: true } }, ..._windowsId.map((w) => `GroupHeaderVisibilityChanged-${w}`));\n            }, success, error);\n        },\n        hideHeader: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"setGroupHeaderVisibility\", { windowId: _windowsId[0], options: { toShow: false } }, ..._windowsId.map((w) => `GroupHeaderVisibilityChanged-${w}`));\n            }, success, error);\n        },\n        getTitle: async () => {\n            const r = await executor.execute<{ title: string }>(\"getGroupTitle\", { windowId: _windowsId[0] });\n            return r.title;\n        },\n        setTitle: async (title: string) => {\n            if (isNullOrWhiteSpace(title)) {\n                throw new Error(\"`title` must not be null or undefined.\");\n            }\n            return execute(\"setGroupTitle\", { windowId: _windowsId[0], options: { title } });\n        },\n        capture: (captureOptions: Glue42.Windows.CaptureOptions) => {\n            return executor.captureGroup(_windowsId, captureOptions);\n        },\n        maximize: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"maximizeGroup\", { windowId: _windowsId[0] }, ..._windowsId.map((w) => `StateChanged-${w}`));\n            }, success, error);\n        },\n        restore: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"restoreGroup\", { windowId: _windowsId[0] }, ..._windowsId.map((w) => `StateChanged-${w}`));\n            }, success, error);\n        },\n        onHeaderVisibilityChanged,\n        onWindowAdded,\n        onWindowRemoved,\n    };\n\n    const internal: GroupInternal = {\n        get windows() {\n            return _windowsId;\n        },\n        addWindow,\n        removeWindow,\n        handleGroupHeaderVisibilityChanged,\n    };\n\n    return {\n        groupAPI: groupObject,\n        groupInternal: internal,\n    };\n\n    //#endregion \"API\"\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { isNullOrWhiteSpace, isUndefinedOrNull } from \"../activity/helpers/util\";\nimport { CompositionChangedData } from \"./environment/gd/types\";\nimport groupFactory from \"./group\";\nimport { default as windowStore } from \"./store\";\nimport {\n    Environment,\n    GroupsInternal,\n    GroupsWrapper,\n    GroupWrapper,\n    WindowWrapper\n} from \"./types\";\n\nexport default (environment: Environment, logger: Glue42Core.Logger.API): GroupsWrapper => {\n    const _registry: CallbackRegistry = callbackRegistry();\n    const _groups: { [key: string]: GroupWrapper } = {};\n    let heardForWindowsCounter: number = -1;\n\n    // Getting already existing windows and create Group API for each window\n    const windows = windowStore.list;\n    Object.keys(windows).forEach((k) => {\n        const win = windows[k];\n        const groupId = win.API.groupId;\n        const winId = win.API.id;\n        // hidden windows doesn't have groupId\n        if (!isNullOrWhiteSpace(groupId)) {\n            addWindow(groupId, winId);\n        }\n    });\n\n    windowStore.onRemoved((w) => {\n        const group = findGroupWrapperByWindow(w.API);\n        removeWindow(group, w);\n    });\n\n    environment.onCompositionChanged((windowInfo: CompositionChangedData) => {\n        handleCompositionChanged(windowInfo);\n    });\n\n    environment.onGroupHeaderVisibilityChanged((windowInfo) => {\n        const windowId = windowInfo.windowId;\n        const group: Glue42.Windows.Group = findGroupByWindow(windowId);\n        if (typeof group !== \"undefined\") {\n            const groupEvents: GroupWrapper = _groups[group.id];\n\n            if (heardForWindowsCounter === -1) {\n                heardForWindowsCounter = group.windows.length;\n            }\n\n            heardForWindowsCounter--;\n            if (heardForWindowsCounter === 0) {\n                heardForWindowsCounter = -1;\n                groupEvents.groupInternal.handleGroupHeaderVisibilityChanged(windowInfo);\n            }\n        }\n    });\n\n    // Methods\n\n    function my(): Glue42.Windows.Group {\n        return findGroupByWindow(environment.my());\n    }\n\n    function list(success?: (groups: Glue42.Windows.Group[]) => void): Glue42.Windows.Group[] {\n        const result: Glue42.Windows.Group[] = Object.keys(_groups).map((groupId) => {\n            if (_groups[groupId]) {\n                return _groups[groupId].groupAPI;\n            }\n\n        });\n\n        if (typeof success === \"function\") {\n            success(result);\n        }\n        return result;\n    }\n\n    function findGroupByWindow(winId: string | Glue42.Windows.GDWindow, success?: (group: Glue42.Windows.Group) => void, error?: (error: string) => void): Glue42.Windows.Group {\n        let windowId: string;\n        if (typeof winId === \"string\") {\n            windowId = winId;\n        } else if (!isUndefinedOrNull(winId)) {\n            windowId = winId.id;\n        }\n        const result = Object.values(_groups).find((groupObj) => {\n            const group: Glue42.Windows.Group = groupObj.groupAPI;\n            const wins = group.windows.filter((w) => w.id === windowId);\n            return wins.length;\n        });\n        if (result) {\n            if (typeof success === \"function\") {\n                success(result.groupAPI);\n            }\n            return result.groupAPI;\n        } else {\n            if (typeof error === \"function\") {\n                error(`Cannot find the group of the window.`);\n            }\n        }\n    }\n\n    // Events\n    function onWindowMoved(callback?: (windowId: string, oldTabGroupId: string, newGroupId: string) => void): UnsubscribeFunction {\n        return _registry.add(\"window-moved\", callback);\n    }\n\n    // Private\n\n    function createOrGet(groupId: string): GroupWrapper {\n        if (!_groups.hasOwnProperty(groupId)) {\n            const createdGroup: GroupWrapper = groupFactory(groupId, environment.executor);\n            _groups[groupId] = createdGroup;\n            return createdGroup;\n        } else {\n            return _groups[groupId];\n        }\n    }\n\n    function deleteIfEmpty(group: GroupWrapper): void {\n        if (group.groupAPI.windows.length === 0) {\n            delete _groups[group.groupAPI.id];\n        }\n    }\n\n    // hidden window doesn't have a groupId\n    function addWindow(groupId: string, winId: string) {\n        const group = createOrGet(groupId);\n        group.groupInternal.addWindow(winId);\n        return group;\n    }\n\n    function removeWindow(group: GroupWrapper, win: WindowWrapper) {\n        if (!group) {\n            return;\n        }\n        group.groupInternal.removeWindow(win);\n        deleteIfEmpty(group);\n    }\n\n    function handleCompositionChanged(state: CompositionChangedData): void {\n        const groupId = state.groupId;\n        const windowId = state.windowId;\n        const win = windowStore.get(windowId);\n        if (!win) {\n            return;\n        }\n        const currentGroup = findGroupWrapperByWindow(win.API);\n        // if the window's visibility is changed to hidden, remove from the group\n        // or the window is closed.\n        if (isUndefinedOrNull(groupId)) {\n            removeWindow(currentGroup, win);\n            return;\n        }\n        // if the window's visibility is changed to visible, addOrCreate the group\n        if (isUndefinedOrNull(currentGroup) && !isUndefinedOrNull(groupId)) {\n            addWindow(groupId, win.API.id);\n            return;\n        }\n\n        if (currentGroup.groupAPI.id !== groupId) {\n            moveWindow(win, currentGroup.groupAPI.id, groupId);\n        }\n    }\n\n    function moveWindow(win: WindowWrapper, from: string, to: string) {\n        const winId = win.API.id;\n        const fromGroup = _groups[from];\n        removeWindow(fromGroup, win);\n        const toGroup = addWindow(to, winId);\n        win.Events.handleGroupChanged(toGroup.groupAPI, fromGroup.groupAPI);\n        _registry.execute(\"window-moved\", winId, from, to);\n    }\n\n    function findGroupWrapperByWindow(winId: string | Glue42.Windows.GDWindow): GroupWrapper {\n        let windowId: string;\n        if (typeof winId === \"string\") {\n            windowId = winId;\n        } else if (!isUndefinedOrNull(winId)) {\n            windowId = winId.id;\n        }\n        return Object.values(_groups).find((groupObj) => {\n            const groupInternal = groupObj.groupInternal;\n            const wins = groupInternal.windows.filter((id) => id === windowId);\n            return wins.length;\n        });\n    }\n\n    //#region \"API\"\n\n    const groups = {\n        get my() {\n            return my();\n        },\n        list,\n        findGroupByWindow,\n    };\n\n    //#endregion \"API\n\n    const events: GroupsInternal = { onWindowMoved };\n\n    return {\n        groupsAPI: groups,\n        groupsEvents: events,\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Environment, GroupsWrapper, WindowWrapper } from \"./types\";\nimport jumpListManager from \"./jumpList/manager\";\n\nimport { default as envDetector } from \"./environment/detector\";\nimport groupsFactory from \"./groups\";\nimport { default as windowStore } from \"./store\";\nimport executor from \"./environment/gd/executor\";\nimport * as util from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, channelsGetter: () => Glue42.Channels, gdMajorVersion: number): Glue42.Windows.API => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger;\n    let groups: GroupsWrapper;\n    let environment: Environment;\n\n    windowStore.init(_logger);\n\n    const isReady = new Promise<void>((resolve, reject) => {\n        envDetector(agm, _logger, appManagerGetter, displayAPIGetter, channelsGetter, gdMajorVersion)\n            .then((env) => {\n                environment = env;\n                groups = groupsFactory(env, _logger);\n                jumpListManager.init(env.executor, agm, _logger);\n                resolve();\n            })\n            .catch((e) => {\n                const err = `Environment detector fails with: ${e}`;\n                _logger.error(err);\n                reject(err);\n            });\n    });\n\n    function ready() {\n        return isReady;\n    }\n\n    function my(): Glue42.Windows.GDWindow {\n        const myWindow = windowStore.getIfReady(environment.my());\n        return myWindow ? myWindow.API : undefined;\n    }\n\n    function open(name: string, url: string, options?: Glue42.Windows.WindowSettings, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(name)) {\n                throw new Error(\"The window name is missing.\");\n            }\n            if (util.isNullOrWhiteSpace(url)) {\n                throw new Error(\"The window URL is missing.\");\n            }\n\n            if (!util.isUndefinedOrNull(options)) {\n                const optionsAsAny = options as any;\n                for (const prop of [\"minHeight\", \"maxHeight\", \"minWidth\", \"maxWidth\", \"width\", \"height\", \"top\", \"left\"]) {\n                    if (prop in optionsAsAny) {\n                        const value = optionsAsAny[prop];\n                        if (util.isUndefinedOrNull(value)) {\n                            delete optionsAsAny[prop];\n                            continue;\n                        }\n                        if (!util.isNumber(value)) {\n                            const errMessage = `${prop} must be a number`;\n                            throw new Error(errMessage);\n                        }\n                        if (optionsAsAny[prop] === \"width\" || optionsAsAny[prop] === \"height\") {\n                            if (value <= 0) {\n                                const errMessage = `${prop} must be a positive number`;\n                                throw new Error(errMessage);\n                            }\n                        }\n                    }\n                }\n            }\n            return environment.open(name, url, options);\n        }, success, error);\n    }\n\n    function find(name: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows).reduce((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (window?.API?.name === name) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n\n        const win = windowsForListing[0];\n        if (win) {\n            if (typeof success === \"function\") {\n                success(windowsForListing[0]);\n            }\n            return windowsForListing[0];\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with name:\" + name);\n            }\n        }\n    }\n\n    function findById(id: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows).reduce((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (typeof window !== \"undefined\" && window.API.id === id) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n        const win = windowsForListing[0];\n        if (win) {\n            if (typeof success === \"function\") {\n                success(windowsForListing[0]);\n            }\n            return windowsForListing[0];\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with such id:\" + id);\n            }\n        }\n    }\n\n    function list(success?: (window: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows)\n            .map((k) => {\n                return windows[k].API;\n            });\n\n        if (typeof success !== \"function\") {\n            return windowsForListing;\n        }\n\n        success(windowsForListing);\n    }\n\n    function configure(options: Glue42.Windows.WindowsConfiguration): Promise<void> {\n        const win = my();\n        const winId = win ? win.id : \"\";\n        return executor.configure(winId, options);\n    }\n\n    function windowAdded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function windowRemoved(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    function tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.tabAttached(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.tabDetached(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowFrameColorChanged(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowGotFocus(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowLostFocus(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onEvent(callback: (stream: any) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onEvent(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function createFlydown(targetId: string, config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return environment.createFlydown(targetId, config);\n    }\n\n    function showPopup(targetId: string, config: Glue42.Windows.PopupOptions): Promise<void> {\n        return environment.showPopup(targetId, config);\n    }\n\n    function handleWindowAdded(w: WindowWrapper) {\n        _registry.execute(\"window-added\", w.API);\n    }\n\n    function handleWindowRemoved(w: WindowWrapper) {\n        _registry.execute(\"window-removed\", w.API);\n    }\n\n    windowStore.onReadyWindow(handleWindowAdded);\n    windowStore.onRemoved(handleWindowRemoved);\n\n    // The API itself\n    return {\n        my,\n        open,\n        find,\n        findById,\n        list,\n        ready,\n        onWindowAdded: windowAdded,\n        windowAdded,\n        onWindowRemoved: windowRemoved,\n        windowRemoved,\n        onTabAttached: tabAttached,\n        onTabDetached: tabDetached,\n        onWindowFrameColorChanged,\n\n        get groups() {\n            return groups.groupsAPI;\n        },\n        onWindowGotFocus,\n        onWindowLostFocus,\n        onEvent,\n        createFlydown,\n        showPopup,\n        configure\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { Environment } from \"./../types\";\nimport { default as GD } from \"./gd/gd\";\nimport { Glue42 } from \"../../../glue\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, channelsAPIGetter: () => Glue42.Channels, gdMajorVersion: number): Promise<Environment> => {\n    const _logger = logger;\n    return new Promise((resolve, reject) => {\n        if (gdMajorVersion === 2) {\n            // We are running in HC\n            _logger.trace(\"running in HC\");\n            throw new Error(\"GD2 not supported\");\n        } else if (gdMajorVersion >= 3) {\n            // We are running in GD 3\n            // TODO expose instance in glu42gd\n            _logger.trace(\"running in GD 3\");\n            const gd = new GD(agm, _logger, appManagerGetter, displayAPIGetter, channelsAPIGetter, undefined, window.glue42gd.windowId);\n            gd.init()\n                .then(resolve)\n                .catch(reject);\n        } else {\n            // We are running in Browser or Node, we should check which stream is available\n            // But we need to pass the container as dependency\n            const gdPromise = new GD(agm, _logger, appManagerGetter, displayAPIGetter, channelsAPIGetter).init();\n            const wait = (ms: number) => new Promise((res, rej) => setTimeout(() => { rej(\"timeout waiting for streams\"); }, ms));\n            Promise.race([gdPromise, wait(10000)])\n                .then(resolve)\n                .catch(reject);\n        }\n    });\n};\n","import { Glue42 } from \"../../glue\";\n\n// provides a unified way to access layouts array\nexport class LayoutStore {\n    private layouts: Glue42.Layouts.Layout[] = [];\n\n    public removeWhere(condition: (l: Glue42.Layouts.Layout) => boolean) {\n        this.layouts = this.layouts.filter(condition);\n    }\n\n    public add(item: Glue42.Layouts.Layout) {\n        this.layouts.push(item);\n    }\n\n    public get all(): Glue42.Layouts.Layout[] {\n        return this.layouts;\n    }\n\n    public where(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout[] {\n        return this.layouts.filter(condition);\n    }\n\n    public first(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout {\n        return this.where(condition)[0];\n    }\n}\n\nexport default new LayoutStore();\n","import { Glue42 } from \"../../glue\";\nimport { CallbackRegistry } from \"callback-registry\";\nimport { LayoutsLibConfiguration } from \"./types\";\n\nconst SaveContextMethodName = \"T42.HC.GetSaveContext\";\ndeclare var htmlContainer: any;\n\n/**\n * Logic for apps that want to provide custom context on save\n */\nexport default class ContextProvider {\n\n    private interop: Glue42.Interop.API;\n\n    constructor(private config: LayoutsLibConfiguration, private activitiesGetter: () => Glue42.Activities.API, private callbacks: CallbackRegistry, private logger: Glue42.Logger.API) {\n        this.interop = config.agm;\n        this.registerRequestMethods();\n    }\n\n    public onSaveRequested(callback: (info?: Glue42.Layouts.SaveRequestContext) => Glue42.Layouts.SaveRequestResponse) {\n        return this.callbacks.add(\"saveRequested\", callback);\n    }\n\n    private isActivityOwner() {\n        // fallback for GD2 - remove once the bellow code is tested\n        if (typeof htmlContainer !== \"undefined\") {\n            const context = htmlContainer.getContext();\n            return context && context._t42 && context._t42.activityIsOwner;\n        }\n\n        // check if we're the activity owners\n        const activities = this.activitiesGetter();\n        if (!activities) {\n            return false;\n        }\n\n        if (!activities.inActivity) {\n            return false;\n        }\n\n        const myWindow = activities.my.window;\n        const myActivity = activities.my.activity;\n\n        if (!myActivity && !myWindow) {\n            return false;\n        }\n\n        return myActivity.owner.id === myWindow.id;\n    }\n\n    private registerRequestMethods() {\n        this.interop.register<Glue42.Layouts.SaveRequestContext>(SaveContextMethodName, (args) => {\n            const usersCbs = this.callbacks.execute(\"saveRequested\", args);\n            if (usersCbs?.length > 1) {\n                this.logger.warn(`Multiple subscriptions for \"glue.layouts.onSaveRequested\" - only the first one will be used`);\n            }\n            const requestResult = usersCbs[0] as Glue42.Layouts.SaveRequestResponse;\n            const autoSaveWindowContext = this.config.autoSaveWindowContext;\n\n            if (typeof autoSaveWindowContext === \"boolean\" && autoSaveWindowContext) {\n                return { autoSaveWindowContext };\n            } else if (Array.isArray(autoSaveWindowContext) && autoSaveWindowContext.length > 0) {\n                return { autoSaveWindowContext };\n            }\n            // always include the window context\n            const result: Glue42.Layouts.SaveRequestResponse = { windowContext: requestResult?.windowContext, activityContext: undefined };\n\n            // if we're the activity owner put the context too\n            if (this.isActivityOwner()) {\n                result.activityContext = requestResult?.activityContext;\n            }\n\n            return result;\n        });\n    }\n}\n","// A simple transformation that makes object to start with lowercase\n// Note that this is not full implementation as it supports only:\n// undefined, null, arrays, number, string, bool. Anything out of this\n// list is considered Object\nexport default function transformACSLayout(something: { [key: string]: any }): { [key: string]: any } {\n    if (!something) {\n        return something;\n    }\n\n    if (Array.isArray(something)) {\n        return something.map((item) => {\n            return transformACSLayout(item);\n        });\n    }\n\n    if (typeof something === \"string\" || typeof something === \"number\" || typeof something === \"boolean\") {\n        return something;\n    }\n\n    const initial: { [key: string]: any } = {};\n    return Object.keys(something).reduce((accumulator, current) => {\n        const value = something[current];\n        const convertedValue = transformACSLayout(value);\n\n        let key = current;\n        if (current[0].toLowerCase() !== current[0]) {\n            key = current[0].toLowerCase() + current.substr(1);\n        }\n\n        accumulator[key] = convertedValue;\n        return accumulator;\n    }, initial);\n}\n","import { Glue42 } from \"../../glue\";\n\nexport default class LayoutImpl implements Glue42.Layouts.Layout {\n    /** Name of the layout */\n    public name: string;\n\n    /** Type of the layout */\n    public type: Glue42.Layouts.LayoutType;\n\n    /** Array of components describing the applications that are saved in the layout */\n    public components: Glue42.Layouts.LayoutComponent[];\n\n    /** Context passed when the layout was saved */\n    public context: any;\n\n    /** Metadata passed when the layout was saved */\n    public metadata: any;\n\n    /** Version of the layout */\n    public version: string;\n\n    /** Displays of the layout */\n    public displays: any;\n\n    constructor(data: any) {\n        this.name = data.name;\n        this.type = data.type;\n        this.components = data.components;\n        this.context = data.context;\n        this.metadata = data.metadata;\n        this.version = data.version;\n        this.displays = data.displays;\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { LayoutsStream, HibernationResumeMessage, UpdateLayoutComponentContextMessage, LayoutsLibConfiguration } from \"./types\";\nimport store from \"./store\";\nimport generate from \"shortid\";\nimport { ACSSaveLayoutMessage, ACSRestoreMessage, ACSRestoreOptionsMessage, ACSMessage, ACSRenameMessage, ACSRemoveLayoutMessage, ACSImportMessage, ExportResultMessage } from \"./types\";\nimport { Glue42Core } from \"@glue42/core\";\nimport ContextProvider from \"./contextProvider\";\nimport transformACSLayout from \"./transform\";\nimport LayoutImpl from \"./layout\";\nimport { isBoolean, isNullOrWhiteSpace, isNumber, isObject, isString, isUndefinedOrNull } from \"../activity/helpers/util\";\n\nexport default class LayoutsAPIImpl implements Glue42.Layouts.API {\n    private appManager: Glue42.AppManager.API;\n    private provider: ContextProvider;\n\n    constructor(private config: LayoutsLibConfiguration, private stream: LayoutsStream, private callbacks: CallbackRegistry, logger: Glue42.Logger.API) {\n        this.appManager = config.appManager;\n        this.onEvent = stream.onEvent;\n        this.provider = new ContextProvider(config, config.activityGetter, callbacks, logger);\n        stream.subscribe();\n    }\n\n    public async setDefaultGlobal(name: string): Promise<void> {\n        await this.config.agm.invoke(\"T42.ACS.SelectDefaultLayout\", { name });\n        return;\n    }\n\n    public async clearDefaultGlobal(): Promise<void> {\n        await this.config.agm.invoke(\"T42.ACS.DeselectDefaultLayout\");\n        return;\n    }\n\n    public async getDefaultGlobal(): Promise<Glue42.Layouts.Layout | undefined> {\n        const result = await this.config.agm.invoke(\"T42.ACS.GetDefaultLayout\");\n        const layout = result.returned;\n        if (!layout) {\n            return undefined;\n        }\n        if (this.isSlimMode()) {\n            return layout;\n        }\n        return this.list().find((l) => l.name === layout.name && l.type === \"Global\");\n    }\n\n    public ready(): Promise<void> {\n        if (this.config.mode === \"fullWaitSnapshot\") {\n            return this.stream.gotSnapshot;\n        }\n        return this.stream.ready;\n    }\n\n    public save(layout: Glue42.Layouts.NewLayoutOptions): Promise<Glue42.Layouts.Layout> {\n        return new Promise<Glue42.Layouts.Layout>((resolve, reject) => {\n\n            this.verifyNotSlimMode();\n\n            if (isUndefinedOrNull(layout)) {\n                return reject(new Error(\"layout is required\"));\n            }\n\n            if (isNullOrWhiteSpace(layout.name)) {\n                return reject(new Error(\"layout.name argument is required\"));\n            }\n\n            if (isNullOrWhiteSpace(layout.type)) {\n                layout.type = \"Global\";\n            }\n\n            if (!isNullOrWhiteSpace(layout.activityId)) {\n                layout.type = \"Activity\";\n            }\n\n            const layoutObject: ACSSaveLayoutMessage = {\n                name: layout.name,\n                type: layout.type,\n                context: layout.context ?? {},\n                metadata: layout.metadata ?? {},\n                options: {},\n            };\n\n            if (layout.type === \"Activity\") {\n                let actId = layout.activityId;\n                if (!actId) {\n                    if (!this.appManager.myInstance.inActivity) {\n                        return reject(new Error(\"Current application is not in activity. Cannot save activity layout for it.\"));\n                    }\n                    actId = this.appManager.myInstance.activityId;\n                }\n                layoutObject.activityId = actId;\n            } else if (layout.type === \"Global\") {\n                if (Array.isArray(layout.ignoreInstances)) {\n                    layoutObject.options.ignoreInstances = layout.ignoreInstances;\n                }\n                if (Array.isArray(layout.instances)) {\n                    layoutObject.options.instances = layout.instances;\n                }\n            } else {\n                return reject(new Error(`layout type ${layout.type} is not supported`));\n            }\n\n            this.invokeMethodAndTrack(\"T42.ACS.SaveLayout\", layoutObject, resolve, reject);\n        });\n    }\n\n    public restore(options: Glue42.Layouts.RestoreOptions): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n            // TODO add validations...\n            if (isUndefinedOrNull(options)) {\n                return reject(new Error(\"options argument is required\"));\n            }\n\n            if (isNullOrWhiteSpace(options.name)) {\n                return reject(new Error(\"options.name argument is required\"));\n            }\n\n            if (isNullOrWhiteSpace(options.type)) {\n                options.type = \"Global\";\n            }\n\n            if (!isNullOrWhiteSpace(options.activityIdToJoin)) {\n                options.type = \"Activity\";\n            }\n\n            if (options.type === \"Activity\") {\n                if (isUndefinedOrNull(options.setActivityContext)) {\n                    options.setActivityContext = true;\n                }\n                if (typeof options.setActivityContext !== \"boolean\") {\n                    return reject(new Error(\"`setActivityContext` must hold a boolean value.\"));\n                }\n                options.activityIdToJoin = options.activityIdToJoin ?? this.appManager.myInstance.activityId;\n            }\n\n            // backwards compatibility\n            if (!isUndefinedOrNull(options.closeRunningInstance)) {\n                options.closeRunningInstances = options.closeRunningInstance;\n            }\n\n            if (isUndefinedOrNull(options.closeRunningInstances)) {\n                options.closeRunningInstances = true;\n            }\n\n            if (!isBoolean(options.closeRunningInstances)) {\n                return reject(new Error(\"`closeRunningInstances` must hold a boolean value.\"));\n            }\n\n            if (isUndefinedOrNull(options.closeMe)) {\n                options.closeMe = options.closeRunningInstances;\n            }\n\n            if (!isBoolean(options.closeMe)) {\n                return reject(new Error(\"`closeMe` must hold a boolean value.\"));\n            }\n\n            if (!isUndefinedOrNull(options.context) && !isObject(options.context)) {\n                return reject(new Error(\"`context` must hold an object value.\"));\n            }\n\n            if (!isUndefinedOrNull(options.timeout) && typeof options.timeout !== \"number\") {\n                return reject(new Error(\"`timeout` must hold an number value.\"));\n            }\n\n            options.context = options.context ?? {};\n\n            const restoreOptions: ACSRestoreOptionsMessage = {\n                activityToJoin: options.activityIdToJoin,\n                setActivityContext: options.setActivityContext,\n                ignoreActivityWindowTypes: options.ignoreActivityWindowTypes,\n                // not used in GD3\n                // restoreActivityOwner: options.restoreActivityOwner,\n                // closeOldWindows: options.closeRunningInstance,\n                reuseExistingWindows: options.reuseWindows,\n\n                closeRunningInstances: options.closeRunningInstances, // new\n                excludeFromClosing: options.closeMe ? [] : [this.appManager.myInstance.id]\n            };\n\n            const arg: ACSRestoreMessage = {\n                type: options.type,\n                name: options.name,\n                context: options.context,\n                options: restoreOptions\n            };\n            if (options.timeout) {\n                arg.timeout = options.timeout;\n            }\n\n            this.invokeMethodAndTrack(\"T42.ACS.RestoreLayout\", arg, resolve, reject, true);\n        });\n    }\n\n    public remove(type: string, name: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!name) {\n                return reject(new Error(\"name argument is required\"));\n            }\n\n            if (!type) {\n                return reject(new Error(\"type argument is required\"));\n            }\n\n            const msg: ACSRemoveLayoutMessage = {\n                type,\n                name,\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.RemoveLayout\", msg, resolve, reject);\n        });\n    }\n\n    public list(): Glue42.Layouts.Layout[] {\n        this.verifyNotSlimMode();\n        return store.all;\n    }\n\n    public import(layouts: Glue42.Layouts.Layout[], mode?: Glue42.Layouts.ImportMode): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n            if (!isUndefinedOrNull(mode)) {\n                if (mode !== \"merge\" && mode !== \"replace\") {\n                    return reject(new Error(`${mode} is not supported - only \"merge\" and \"replace\"`));\n                }\n            }\n            const msg: ACSImportMessage = {\n                mode: mode || \"replace\",\n                layouts\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.ImportLayouts\", msg, resolve, reject, true);\n        });\n    }\n\n    public export(layoutType?: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.Layout[]> {\n        return new Promise<Glue42.Layouts.Layout[]>((resolve, reject) => {\n            const handleResult = (result: ExportResultMessage) => {\n                let layouts: Glue42.Layouts.Layout[] = this.getObjectValues(result.Layouts).map((t) => new LayoutImpl(transformACSLayout(t)));\n                if (layoutType) {\n                    layouts = layouts.filter((l) => l.type === layoutType);\n                }\n                resolve(layouts);\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.ExportLayouts\", {}, handleResult, reject, true);\n        });\n    }\n\n    public rename(layout: Glue42.Layouts.Layout, newName: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!layout) {\n                return reject(new Error(\"layout argument is required\"));\n            }\n\n            if (!layout.name) {\n                return reject(new Error(\"name argument is required\"));\n            }\n\n            if (!layout.type) {\n                return reject(new Error(\"type argument is required\"));\n            }\n\n            const msg: ACSRenameMessage = { type: layout.type, oldName: layout.name, newName };\n\n            this.invokeMethodAndTrack(\"T42.ACS.RenameLayout\", msg, resolve, reject);\n        });\n    }\n\n    public updateMetadata(layout: Glue42.Layouts.Layout): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!layout) {\n                return reject(new Error(\"layout argument is required\"));\n            }\n\n            if (!layout.name) {\n                return reject(new Error(\"name argument is required\"));\n            }\n\n            if (!layout.type) {\n                return reject(new Error(\"type argument is required\"));\n            }\n\n            if (!layout.metadata) {\n                return reject(new Error(\"metadata argument is required\"));\n            }\n\n            const layoutObject: any = {\n                name: layout.name,\n                type: layout.type,\n                metadata: layout.metadata\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateMetadata\", layoutObject, resolve, reject, true);\n        });\n    }\n\n    public hibernate(name: string, options?: Glue42.Layouts.HibernationOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(new Error(\"name cannot be empty\"));\n            }\n            options = options || {};\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context: options.context || {},\n                metadata: options.metadata || {},\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.HibernateLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public resume(name: string, context?: any, options?: Glue42.Layouts.ResumeOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(new Error(\"name cannot be empty\"));\n            }\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context,\n                ...options\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.ResumeLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public async getCurrentLayout(): Promise<Glue42.Layouts.Layout | undefined> {\n        const result = await this.config.agm.invoke(\"T42.ACS.GetCurrentLayout\", {}, \"best\", { methodResponseTimeoutMs: 120 * 1000 });\n        let layout = result.returned.layout;\n        if (!layout) {\n            return undefined;\n        }\n        if (!this.isSlimMode()) {\n            // we have internal if we track layouts (so not slim mode), if not return the object we received from GD\n            layout = this.list().find((l) => l.name === layout.name && l.type === layout.type);\n        }\n        return layout;\n    }\n\n    public onAdded(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        const result = this.callbacks.add(\"added\", callback);\n\n        if (store.all.length > 0) {\n            store.all.forEach((layout) => {\n                try {\n                    callback(layout);\n                } catch (err) { /** */ }\n            });\n        }\n\n        return result;\n    }\n\n    public onRemoved(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"removed\", callback);\n    }\n\n    public onChanged(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"changed\", callback);\n    }\n\n    public onRestored(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"restored\", callback);\n    }\n\n    public onRenamed(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"renamed\", callback);\n    }\n\n    public onEvent(callback: (event: any) => void): () => void {\n        return this.stream.onEvent(callback);\n    }\n\n    public onSaveRequested(callback: (info?: Glue42.Layouts.SaveRequestContext) => Glue42.Layouts.SaveRequestResponse): UnsubscribeFunction {\n        return this.provider.onSaveRequested(callback);\n    }\n\n    public updateAppContextInCurrent(context: object): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (context && typeof context !== \"object\") {\n                return reject(new Error(\"context must be an object\"));\n            }\n            context = context ?? {};\n            const request: UpdateLayoutComponentContextMessage = {\n                context\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateLayoutComponentContext\", request, resolve, reject, true);\n        });\n    }\n\n    public updateDefaultContext(context: object): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (context && typeof context !== \"object\") {\n                return reject(new Error(\"context must be an object\"));\n            }\n            context = context ?? {};\n            const request: UpdateLayoutComponentContextMessage = {\n                context\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateDefaultContext\", request, resolve, reject, true);\n        });\n    }\n\n    public async get(name: string, type: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.Layout> {\n        const matching = this.list().find((l) => l.name === name && l.type === type);\n        if (!matching) {\n            throw new Error(`cannot find layout with name=${name} and type=${type}`);\n        }\n        return matching;\n    }\n\n    public async getAll(type: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.LayoutSummary[]> {\n        const matching = this.list().filter((l) => type === l.type);\n        return matching;\n    }\n\n    private isSlimMode() {\n        return this.config.mode === \"slim\";\n    }\n\n    private verifyNotSlimMode() {\n        if (this.isSlimMode()) {\n            throw Error(\"Operation not allowed in slim mode. Run in full mode.\");\n        }\n    }\n\n    private invokeMethodAndTrack(methodName: string, args: ACSMessage, resolve: (result: any) => void, reject: (err: any) => void, skipStreamEvent?: boolean) {\n        let streamEventReceived = skipStreamEvent;\n        let agmResult: any;\n\n        const token = generate();\n        args.token = token;\n\n        const handleResult = () => {\n            if (streamEventReceived && agmResult) {\n                resolve(agmResult);\n            }\n        };\n\n        if (!skipStreamEvent) {\n            this.stream.waitFor(token)\n                .then(() => {\n                    streamEventReceived = true;\n                    handleResult();\n                })\n                .catch((err: any) => {\n                    reject(err);\n                });\n        }\n\n        const responseHandler = (result: Glue42Core.AGM.InvocationResult<any>) => {\n            if (!result.returned) {\n                return reject(new Error(\"No result from method \" + methodName));\n            }\n\n            if (result.returned.status && (result.returned.status !== \"Success\" && result.returned.status !== \"PartialSuccess\")) {\n                return reject(new Error(result.returned));\n            }\n\n            agmResult = result.returned;\n            handleResult();\n        };\n\n        this.config.agm.invoke(methodName, args, \"best\", { methodResponseTimeoutMs: 120 * 1000 })\n            .then(responseHandler)\n            .catch((err: any) => reject(err));\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n}\n","import { LayoutsStream } from \"../types\";\nimport store, { LayoutStore } from \"../store\";\nimport { ACSStreamData, ACSLayout } from \"./messages\";\nimport LayoutImpl from \"../layout\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport transformACSLayout from \"../transform\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\n/**\n * ACS event stream related to layouts\n */\nexport default class ACSStream implements LayoutsStream {\n\n    public ready: Promise<void>;\n    public gotSnapshot: Promise<void>;\n\n    private resolveReady: () => void;\n    private rejectReady: (err: any) => void;\n\n    private resolveGotSnapshot: () => void;\n    private rejectGotSnapshot: (err: any) => void;\n\n    constructor(private agm: Glue42Core.AGM.API, private callbacks: CallbackRegistry) {\n\n        this.ready = new Promise<void>((resolve, reject) => {\n            this.resolveReady = resolve;\n            this.rejectReady = reject;\n        });\n\n        this.gotSnapshot = new Promise<void>((resolve, reject) => {\n            this.resolveGotSnapshot = resolve;\n            this.rejectGotSnapshot = reject;\n        });\n    }\n\n    public subscribe(noRetry?: boolean) {\n        const transform = (obj: object) => {\n            return this.getObjectValues(obj).map((t) => transformACSLayout(t));\n        };\n\n        // if we don't have OnLayoutEvent stream  we're running pre 2.1 GD version or outside GD,\n        if (!this.checkForLayoutEventMethod()) {\n            // if no retry resolve right away\n            if (noRetry) {\n                this.resolveReady();\n            }\n\n            // if we should retry, schedule  one more time\n            setTimeout(() => {\n                this.subscribe(true);\n            }, 500);\n        } else {\n            this.agm.subscribe(\"T42.ACS.OnLayoutEvent\", { waitTimeoutMs: 10000 })\n                .then((subs) => {\n                    subs.onData((args) => {\n                        const data = args.data as ACSStreamData;\n                        if (data.IsSnapshot) {\n                            this.resolveGotSnapshot();\n                        }\n\n                        this.addLayouts(transform(data.OnLayoutAdded));\n                        this.removeLayouts(transform(data.OnLayoutRemoved));\n                        this.changeLayouts(transform(data.OnLayoutChanged));\n                        this.renameLayouts(transform(data.OnLayoutRenamed));\n                        this.restoredLayout(transform(data.OnLayoutRestored));\n                        this.callbacks.execute(\"streamEvent\", data);\n                    });\n\n                    subs.onFailed((err) => {\n                        const msg = \"can not subscribe to T42.ACS.OnLayoutEvent \" + err;\n                        this.rejectReady(msg);\n                        this.rejectGotSnapshot(msg);\n                    });\n\n                    this.resolveReady();\n                })\n                .catch((err) => {\n                    const msg = \"Error subscribing for T42.ACS.OnLayoutEvent stream. Err: \" + err;\n                    this.rejectReady(msg);\n                    this.rejectGotSnapshot(msg);\n                });\n        }\n    }\n\n    public onEvent(callback: (streamEvent: ACSStreamData) => void): UnsubscribeFunction {\n        return this.callbacks.add(\"streamEvent\", callback);\n    }\n\n    public waitFor(token: string, timeout?: number): Promise<void> {\n        if (!timeout) {\n            timeout = 10000; // default timeout is 10 seconds\n        }\n        return new Promise<void>((resolve, reject) => {\n            let done = false;\n            const unsubscribe = this.onEvent((streamEvent) => {\n                if (streamEvent.Token === token) {\n                    done = true;\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            setTimeout(() => {\n                if (!done) {\n                    reject(\"timed out\");\n                }\n            }, timeout);\n        });\n    }\n\n    private checkForLayoutEventMethod() {\n        try {\n            return this.agm\n                .methods()\n                .map((m) => m.name)\n                .indexOf(\"T42.ACS.OnLayoutEvent\") !== -1;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    private addLayouts(layoutsData: any[]) {\n        if (!layoutsData) {\n            return;\n        }\n\n        layoutsData.forEach((layoutData) => {\n            const layout = new LayoutImpl(layoutData);\n            store.add(layout);\n            this.callbacks.execute(\"added\", layout);\n        });\n    }\n\n    private removeLayouts(removedLayouts: any[]) {\n        if (!removedLayouts) {\n            return;\n        }\n        removedLayouts.forEach((removedLayout) => {\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, removedLayout));\n\n            this.callbacks.execute(\"removed\", removedLayout);\n        });\n    }\n\n    private changeLayouts(changedLayouts: any[]) {\n        if (!changedLayouts) {\n            return;\n        }\n\n        changedLayouts.forEach((changedLayout) => {\n            // removed the changed layout and push it again\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, changedLayout));\n            store.add(new LayoutImpl(changedLayout));\n            // execute callback\n            this.callbacks.execute(\"changed\", changedLayout);\n        });\n\n    }\n\n    private renameLayouts(renamedLayouts: any[]) {\n        if (!renamedLayouts) {\n            return;\n        }\n\n        renamedLayouts.forEach((renamedLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: renamedLayout.type, name: renamedLayout.oldName }));\n\n            if (!existingLayout) {\n                throw Error(\"received rename event for unknown layout with type \" + renamedLayout.type + \" and name \" + renamedLayout.oldName);\n            }\n\n            existingLayout.name = renamedLayout.newName;\n\n            this.callbacks.execute(\"renamed\", existingLayout);\n        });\n    }\n\n    private compareLayouts(layout1: { name: string, type: string }, layout2: { name: string, type: string }) {\n        return layout1.name === layout2.name && layout1.type === layout2.type;\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n\n    private restoredLayout(restoredLayouts: any[]) {\n\n        if (!restoredLayouts) {\n            return;\n        }\n\n        restoredLayouts.forEach((restoredLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: restoredLayout.type, name: restoredLayout.name }));\n            this.callbacks.execute(\"restored\", existingLayout);\n        });\n    }\n}\n","import Layouts from \"./layouts\";\nimport ACSStream from \"./stream/acsStream\";\nimport streamNull from \"./stream/nullStream\";\nimport {LayoutsLibConfiguration, LayoutsStream } from \"./types\";\nimport callbackRegistry, { CallbackRegistry } from \"callback-registry\";\n\nexport default function(config: LayoutsLibConfiguration): Layouts {\n\n    if (!config.agm) {\n        throw Error(\"config.agm is required\");\n    }\n\n    if (!config.logger) {\n        throw Error(\"config.logger is required\");\n    }\n\n    // default mode to slim\n    config.mode = config.mode || \"slim\";\n\n    const logger = config.logger;\n    const callbacks: CallbackRegistry = callbackRegistry();\n\n    let acsStream: LayoutsStream;\n\n    if (config.mode === \"full\" || \"fullWaitSnapshot\") {\n        acsStream = new ACSStream(config.agm, callbacks);\n    } else {\n        acsStream = streamNull();\n    }\n\n    return new Layouts(config, acsStream, callbacks, logger);\n}\n","import { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport CallbackFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport CaptureOptions = Glue42.Displays.CaptureOptions;\n\nconst T42DisplayCommand = \"T42.Displays.Command\";\nconst T42DisplayOnEvent = \"T42.Displays.OnEvent\";\n\nexport default class DisplayManager implements Glue42.Displays.API {\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _registered = false;\n\n    constructor(\n        private _agm: Glue42Core.AGM.API,\n        private _logger: Glue42Core.Logger.API,\n    ) {\n        //\n    }\n\n    public all = async (): Promise<Glue42.Displays.Display[]> => {\n        const displays = await this.callGD<Glue42.Displays.Display[]>(DisplayCommand.GetAll, {});\n        return displays.map(this.decorateDisplay);\n    }\n\n    public get = async (id: number): Promise<Glue42.Displays.Display> => {\n        const display = await this.callGD<Glue42.Displays.Display>(DisplayCommand.Get, { id });\n        return this.decorateDisplay(display);\n    }\n\n    public getPrimary = async (): Promise<Glue42.Displays.Display> => {\n        const primary = (await this.all()).find((d) => d.isPrimary);\n        return primary;\n    }\n\n    public getByWindowId(id: string): Promise<Glue42.Displays.Display> {\n        const current = this.callGD<Glue42.Displays.Display>(DisplayCommand.GetByWindowId, { id });\n        return current;\n    }\n\n    public capture = async (options: CaptureOptions): Promise<string> => {\n        const screenshot = await this.callGD<string>(DisplayCommand.Capture, { ...options });\n        return screenshot;\n    }\n\n    public captureAll = async (options: Glue42.Displays.CaptureAllOptions): Promise<string | string[]> => {\n        const screenshots = await this.callGD<string | string[]>(DisplayCommand.CaptureAll, { ...options });\n        return screenshots;\n    }\n\n    public getMousePosition = async (): Promise<Glue42.Displays.Point> => {\n        const point = await this.callGD<Glue42.Displays.Point>(DisplayCommand.GetMousePosition);\n        return point;\n    }\n\n    public onDisplayChanged(cb: (displays: Glue42.Displays.Display[]) => void) {\n        this.register();\n        return this._registry.add(\"on-display-changed\", cb);\n    }\n\n    private callGD = async <T>(command: string, options?: object): Promise<T> => {\n        // Consider targeting only GD\n        const invocationResult = await this._agm.invoke(T42DisplayCommand, { options: { ...options }, command });\n        return invocationResult.returned.data;\n    }\n\n    private decorateDisplay = (original: Glue42.Displays.Display): Glue42.Displays.Display => {\n        const decoratedDisplay = {\n            ...original,\n            capture: (size: SizeOptions) => this.capture({ id: original.id, size })\n        };\n        const workAreaAsAny = decoratedDisplay.workArea as any;\n        workAreaAsAny.x = workAreaAsAny.left;\n        workAreaAsAny.y = decoratedDisplay.workArea.top;\n        return decoratedDisplay;\n    }\n\n    private register() {\n        if (this._registered) {\n            return;\n        }\n        this._registered = true;\n        this._agm.register(T42DisplayOnEvent, (args, caller) => {\n            const event = args.event;\n            const data = args.data;\n            switch (event) {\n                case \"display-changed\":\n                    this._registry.execute(\"on-display-changed\", data.displays.map(this.decorateDisplay));\n                    break;\n                default:\n                    this._logger.warn(`unknown event - ${event}`);\n                    break;\n            }\n        });\n    }\n}\n\ntype SizeOptions = Glue42.Displays.ScaleOptions | Glue42.Displays.AbsoluteSizeOptions;\n\nenum DisplayCommand {\n    Capture = \"capture\",\n    CaptureAll = \"captureAll\",\n    GetAll = \"getAll\",\n    Get = \"get\",\n    GetByWindowId = \"getByWindowId\",\n    GetMousePosition = \"getMousePosition\",\n}\n","import { Glue42 } from \"../../glue\";\nimport { ChannelsImpl } from \"./channels\";\n\nlet interop: Glue42.Interop.API;\nlet windowId: string;\n\nexport async function setupAGM(interopLib: Glue42.Interop.API, channels: ChannelsImpl) {\n    interop = interopLib;\n\n    if (typeof window !== \"undefined\") {\n        if (window.glue42gd) {\n            windowId = window.glue42gd.windowId;\n        }\n    }\n\n    if (!windowId) {\n        // not supported\n        return;\n    }\n\n    await interop.register(\"T42.Channels.Command\", (args: any) => {\n        const command = args.command;\n        if (!command) {\n            throw new Error(\"missing command argument\");\n        }\n        if (command === \"join\") {\n            const id = args.channel;\n            if (!id) {\n                throw new Error(\"missing argument id\");\n            }\n            // this is coming from GD (which means from selector switch, join without triggering selection change again)\n            channels.joinNoSelectorSwitch(id);\n            return;\n        }\n        if (command === \"leave\") {\n            channels.leaveNoSelectorSwitch();\n            return;\n        }\n        if (command === \"get\") {\n            const id = channels.current();\n            return { id };\n        }\n        throw new Error(`unknown command ${command}`);\n    });\n\n    // agm interface is available for SW windows only\n    interop.invoke(\"T42.Channels.Announce\", { swId: windowId, instance: interop.instance.instance });\n}\n\nexport async function switchChannel(channel?: string, id?: string) {\n    interop.invoke(\"T42.Channels.Announce\", {\n        swId: id ?? windowId,\n        command: \"switchChannel\",\n        data: { newChannel: channel }\n    });\n}\n","import { Glue42 } from \"../../glue\";\n\nconst CONTEXT_PREFIX = \"___channel___\";\nconst LATEST_FDC3_TYPE = \"latest_fdc3_type\";\n\nexport class SharedContextSubscriber {\n    private unsubscribeFunc: () => void;\n    private callback: any;\n\n    constructor(private contexts: Glue42.Contexts.API) {\n    }\n\n    public subscribe(callback: any): void {\n        this.callback = callback;\n    }\n\n    public subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): Promise<() => void> {\n        if (!this.isChannel(name)) {\n            return Promise.reject(new Error(`Channel with name: ${name} doesn't exist!`));\n        }\n\n        const contextName = this.createContextName(name);\n\n        return this.contexts.subscribe(contextName, (data, _, __, ___, extraData) => {\n            callback(data.data, data, extraData?.updaterId);\n        });\n    }\n\n    /** Unsubscribes from the current shared context, and subscribe to the passed one */\n    public async switchChannel(name: string): Promise<void> {\n        this.unsubscribe();\n        const contextName = this.createContextName(name);\n        this.unsubscribeFunc = await this.contexts.subscribe(contextName, (data, _, __, ___, extraData) => {\n            if (this.callback) {\n                this.callback(data.data, data, extraData?.updaterId);\n            }\n        });\n    }\n\n    public leave() {\n        if (this.callback) {\n            this.callback({}, undefined);\n        }\n        this.unsubscribe();\n    }\n\n    public all(): string[] {\n        const contextNames = this.contexts.all();\n        const channelContextNames = contextNames.filter((contextName) => contextName.startsWith(CONTEXT_PREFIX));\n        const channelNames = channelContextNames.map((channelContextName) => channelContextName.substr(CONTEXT_PREFIX.length));\n        return channelNames;\n    }\n\n    public getContextData(name: string): Promise<Glue42.Channels.ChannelContext> {\n        return new Promise((resolve, reject) => {\n            if (!this.isChannel(name)) {\n                return reject(new Error(`A channel with name: ${name} doesn't exist!`));\n            }\n\n            const contextName = this.createContextName(name);\n\n            this.contexts.subscribe(contextName, (data) => {\n                if (data[LATEST_FDC3_TYPE]) {\n                    const { latest_fdc3_type, ...rest } = data;\n\n                    resolve(rest);\n                }\n\n                resolve(data);\n            }).then((unsubscribeFunc) => unsubscribeFunc());\n        });\n    }\n\n    public updateChannel(name: string, data: { name: string, meta: any, data: any }): Promise<void> {\n        const contextName = this.createContextName(name);\n        return this.contexts.update(contextName, data);\n    }\n\n    public updateData(name: string, data: any) {\n        const contextName = this.createContextName(name);\n        const fdc3Type = this.getFDC3Type(data);\n\n        if (this.contexts.setPathSupported) {\n            const pathValues: Glue42.Contexts.PathValue[] = Object.keys(data).map((key) => {\n                return {\n                    path: `data.` + key,\n                    value: data[key]\n                };\n            });\n\n            if (fdc3Type) {\n                pathValues.push({ path: LATEST_FDC3_TYPE, value: fdc3Type });\n            }\n\n            return this.contexts.setPaths(contextName, pathValues);\n        } else {\n            if (fdc3Type) {\n                data[LATEST_FDC3_TYPE] = fdc3Type;\n            }\n\n            // pre 3.10, note that we update the data property only\n            return this.contexts.update(contextName, { data });\n        }\n    }\n\n    public isChannel(name: string): boolean {\n        return this.all().some((channelName) => channelName === name);\n    }\n\n    private unsubscribe(): void {\n        if (this.unsubscribeFunc) {\n            this.unsubscribeFunc();\n        }\n    }\n\n    private createContextName(name: string): string {\n        return CONTEXT_PREFIX + name;\n    }\n\n    private getFDC3Type(data: any): string | undefined {\n        const fdc3PropsArr = Object.keys(data).filter((key: string) => key.indexOf(\"fdc3_\") === 0);\n\n        if (fdc3PropsArr.length === 0) {\n            return;\n        }\n\n        if (fdc3PropsArr.length > 1) {\n            throw new Error(\"FDC3 does not support updating of multiple context keys\");\n        }\n\n        return fdc3PropsArr[0].split(\"_\").slice(1).join(\"_\");\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { SharedContextSubscriber } from \"./contexts\";\nimport { switchChannel } from \"./agm\";\n\nexport class ChannelsImpl implements Glue42.Channels.API {\n    private subsKey = \"subs\";\n    private changedKey = \"changed\";\n    private isInitialJoin = true;\n\n    private registry: CallbackRegistry = CallbackRegistryFactory();\n    private currentContext: string;\n\n    constructor(private shared: SharedContextSubscriber, private interop: Glue42.Interop.API, private getWindows: () => Glue42.Windows.API, private logger: Glue42.Logger.API) {\n        this.shared.subscribe(this.handler.bind(this));\n\n        if (typeof window !== \"undefined\" && typeof window.glue42gd !== \"undefined\") {\n            this.currentContext = (window.glue42gd as any).initialChannel;\n            if (this.currentContext) {\n                this.joinNoSelectorSwitch(this.currentContext);\n            }\n        }\n    }\n\n    public subscribe(callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): () => void {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n        return this.registry.add(this.subsKey, callback);\n    }\n\n    public async subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): Promise<() => void> {\n        if (typeof name !== \"string\") {\n            throw new Error(\"Please provide the name as a string!\");\n        }\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n        const unsubscribeFunc = await this.shared.subscribeFor(name, callback);\n        return unsubscribeFunc;\n    }\n\n    public async publish(data: object, name?: string): Promise<void> {\n        if (typeof data !== \"object\") {\n            throw new Error(\"Please provide the data as an object!\");\n        }\n\n        if (name) {\n            if (typeof name !== \"string\") {\n                throw new Error(\"Please provide the name as a string!\");\n            }\n\n            if (!this.shared.isChannel(name)) {\n                return Promise.reject(new Error(`A channel with name: ${name} doesn't exist!`));\n            }\n\n            return this.shared.updateData(name, data);\n        }\n\n        if (!this.currentContext) {\n            throw new Error(\"Not joined to any channel!\");\n        }\n        return this.shared.updateData(this.currentContext, data);\n    }\n\n    public all(): Promise<string[]> {\n        const channelNames = this.shared.all();\n        return Promise.resolve(channelNames);\n    }\n\n    public async list(): Promise<Glue42.Channels.ChannelContext[]> {\n        const channelNames = await this.all();\n        const channelContexts = await Promise.all(channelNames.map((channelName) => this.get(channelName)));\n        return channelContexts;\n    }\n\n    public get(name: string): Promise<Glue42.Channels.ChannelContext> {\n        if (typeof name !== \"string\") {\n            return Promise.reject(new Error(\"Please provide the channel name as a string!\"));\n        }\n\n        return this.shared.getContextData(name);\n    }\n\n    /* Returns info about my channel */\n    public getMy(): Promise<Glue42.Channels.ChannelContext> {\n        if (!this.currentContext) {\n            return Promise.resolve(undefined);\n        }\n        return this.get(this.currentContext);\n    }\n\n    public async join(name: string, windowId?: string): Promise<void> {\n        if (windowId) {\n            return switchChannel(name, windowId);\n        }\n        return this.joinCore(name);\n    }\n\n    public async joinNoSelectorSwitch(name: string): Promise<void> {\n        return this.joinCore(name, false);\n    }\n\n    public leave(windowId?: string) {\n        if (windowId) {\n            return switchChannel(undefined, windowId);\n        }\n        return this.leaveCore();\n    }\n\n    public leaveNoSelectorSwitch() {\n        return this.leaveCore(false);\n    }\n\n    public current(): string {\n        return this.currentContext;\n    }\n\n    public my(): string {\n        return this.current();\n    }\n\n    public changed(callback: (channel: string) => void): () => void {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n\n        return this.registry.add(this.changedKey, callback);\n    }\n\n    public onChanged(callback: (channel: string) => void): () => void {\n        return this.changed(callback);\n    }\n\n    public async add(info: Glue42.Channels.ChannelContext): Promise<Glue42.Channels.ChannelContext> {\n        if (typeof info !== \"object\") {\n            throw new Error(\"Please provide the info as an object!\");\n        }\n        if (typeof info.name === \"undefined\") {\n            throw new Error(\"info.name is missing!\");\n        }\n        if (typeof info.name !== \"string\") {\n            throw new Error(\"Please provide the info.name as a string!\");\n        }\n        if (typeof info.meta === \"undefined\") {\n            throw new Error(\"info.meta is missing!\");\n        }\n        if (typeof info.meta !== \"object\") {\n            throw new Error(\"Please provide the info.meta as an object!\");\n        }\n        if (typeof info.meta.color === \"undefined\") {\n            throw new Error(\"info.meta.color is missing!\");\n        }\n        if (typeof info.meta.color !== \"string\") {\n            throw new Error(\"Please provide the info.meta.color as a string!\");\n        }\n\n        const context: Glue42.Channels.ChannelContext = {\n            name: info.name,\n            meta: info.meta || {},\n            data: info.data || {}\n        };\n\n        // Note that we use `update` instead of `add` so that if the channel already exists we don't overwrite it.\n        await this.shared.updateChannel(info.name, context);\n\n        return context;\n    }\n\n    public async getWindowsOnChannel(channel: string): Promise<Glue42.Windows.GDWindow[]> {\n        const windowInfos = await this.getWindowsWithChannels({ channels: [channel] });\n        return windowInfos.map((w) => w.window);\n    }\n\n    public async getWindowsWithChannels(filter: Glue42.Channels.WindowWithChannelFilter): Promise<Glue42.Channels.WindowOnChannelInfo[]> {\n        try {\n            const info = await this.interop.invoke<{ windows: Array<{ windowId: string, channel: string, application: string }> }>(\"T42.Channels.Announce\", { command: \"getChannelsInfo\", data: { filter } });\n            const windows = this.getWindows();\n            if (info?.returned?.windows) {\n                return info.returned.windows.map((windowInfo) => {\n                    const window = windows.findById(windowInfo.windowId);\n                    return {\n                        window,\n                        channel: windowInfo.channel,\n                        application: windowInfo.application\n                    };\n                });\n            }\n        } catch (er) {\n            this.logger.error(`Error getting all channel enabled windows. This method is available since Glue42 3.12`, er);\n        }\n        return [];\n    }\n\n    private handler(data: object, context: Glue42.Channels.ChannelContext, updaterId: string): any {\n        this.registry.execute(this.subsKey, data, context, updaterId);\n    }\n\n    private async joinCore(name: string, changeSelector: boolean = true) {\n        if (typeof name !== \"string\") {\n            throw new Error(\"Please provide the channel name as a string!\");\n        }\n\n        if (!this.isInitialJoin && name === this.currentContext) {\n            // ignore joining the channel that we're already on, except when this is the very first call\n            return;\n        }\n        this.isInitialJoin = false;\n\n        // Checks if a channel exists with the provided name.\n        const doesChannelExist = (channelName: string): boolean => {\n            const channelNames = this.shared.all();\n            return channelNames.includes(channelName);\n        };\n\n        // Wait for 3k ms for the channel to appear if it doesn't already exist.\n        if (!doesChannelExist(name)) {\n            const channelExistsPromise = new Promise<void>((resolve, reject) => {\n                let timeoutId: NodeJS.Timeout;\n\n                // Check every 100 ms for a channel with the provided name.\n                const intervalId = setInterval(() => {\n                    if (doesChannelExist(name)) {\n                        clearTimeout(timeoutId);\n                        clearInterval(intervalId);\n                        resolve();\n                    }\n                }, 100);\n\n                timeoutId = setTimeout(() => {\n                    clearInterval(intervalId);\n\n                    return reject(new Error(`A channel with name: ${name} doesn't exist!`));\n                }, 3000);\n            });\n\n            await channelExistsPromise;\n        }\n\n        this.currentContext = name;\n        await this.shared.switchChannel(name);\n        if (changeSelector) {\n            switchChannel(name);\n        }\n        this.registry.execute(this.changedKey, name);\n    }\n\n    private leaveCore(changeSelector = true): Promise<void> {\n        this.currentContext = undefined;\n        this.registry.execute(this.changedKey, undefined);\n        this.shared.leave();\n        if (changeSelector) {\n            switchChannel();\n        }\n        return Promise.resolve();\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { setupAGM } from \"./agm\";\nimport { SharedContextSubscriber } from \"./contexts\";\nimport { ChannelsImpl } from \"./channels\";\n\nexport function factory(contexts: Glue42.Contexts.API, agm: Glue42.AGM.API, getWindows: () => Glue42.Windows.API, logger: Glue42.Logger.API): Glue42.Channels.API & { ready: () => Promise<void>; } {\n    const sharedContexts = new SharedContextSubscriber(contexts);\n    const channels = new ChannelsImpl(sharedContexts, agm, getWindows, logger);\n\n    setupAGM(agm, channels);\n\n    return {\n        subscribe: channels.subscribe.bind(channels),\n        subscribeFor: channels.subscribeFor.bind(channels),\n        publish: channels.publish.bind(channels),\n        all: channels.all.bind(channels),\n        list: channels.list.bind(channels),\n        get: channels.get.bind(channels),\n        join: channels.join.bind(channels),\n        leave: channels.leave.bind(channels),\n        // @ignore-ed, but kept for backwards compatibility.\n        current: channels.current.bind(channels),\n        my: channels.my.bind(channels),\n        // @ignore-ed, but kept for backwards compatibility.\n        changed: channels.changed.bind(channels),\n        onChanged: channels.onChanged.bind(channels),\n        // @ignore-ed as currently not entirely supported by the framework.\n        add: channels.add.bind(channels),\n        getWindowsOnChannel: channels.getWindowsOnChannel.bind(channels),\n        getWindowsWithChannels: channels.getWindowsWithChannels.bind(channels),\n        getMy: channels.getMy.bind(channels),\n        ready: () => (contexts as any).ready()\n    };\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\n\r\nconst CommandMethod = \"T42.Hotkeys.Command\";\r\nconst InvokeMethod = \"T42.Hotkeys.Invoke\";\r\n\r\nconst RegisterCommand = \"register\";\r\nconst UnregisterCommand = \"unregister\";\r\nconst UnregisterAllCommand = \"unregisterAll\";\r\n\r\nexport class HotkeysImpl implements Glue42.Hotkeys.API {\r\n\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private firstHotkey = true;\r\n    private hotkeys = new Map<string, Glue42.Hotkeys.HotkeyInfo>();\r\n\r\n    constructor(private agm: Glue42.AGM.API) {\r\n    }\r\n\r\n    public async register(info: string | Glue42.Hotkeys.HotkeyInfo, callback: Glue42.Hotkeys.HotkeyCallback): Promise<void> {\r\n        if (typeof info === \"undefined\") {\r\n            throw new Error(\"Hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof info === \"string\") {\r\n            info = {\r\n                hotkey: info\r\n            };\r\n        } else {\r\n            if (!info.hotkey) {\r\n                throw new Error(\"Info's hotkey parameter missing\");\r\n            }\r\n\r\n            info = {\r\n                hotkey: info.hotkey,\r\n                description: info.description\r\n            };\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(info.hotkey);\r\n        if (this.hotkeys.has(hkToLower)) {\r\n            throw new Error(`Shortcut for ${hkToLower} already registered`);\r\n        }\r\n\r\n        // if very first a hotkey is registered by this application register invoke AGM method\r\n        if (this.firstHotkey) {\r\n            this.firstHotkey = false;\r\n            await this.registerInvokeAGMMethod();\r\n        }\r\n        // store the callback\r\n        this.registry.add(hkToLower, callback);\r\n\r\n        // invoke GD method\r\n        await this.agm.invoke(CommandMethod, { command: RegisterCommand, hotkey: hkToLower, description: info.description });\r\n\r\n        this.hotkeys.set(hkToLower, info);\r\n    }\r\n\r\n    public async unregister(hotkey: string): Promise<void> {\r\n        if (typeof hotkey === \"undefined\") {\r\n            throw new Error(\"hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof hotkey !== \"string\") {\r\n            throw new Error(\"hotkey parameter must be string\");\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterCommand, hotkey: hkToLower });\r\n        this.hotkeys.delete(hkToLower);\r\n        this.registry.clearKey(hkToLower);\r\n    }\r\n\r\n    public async unregisterAll(): Promise<void> {\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterAllCommand });\r\n        this.hotkeys.clear();\r\n        this.registry.clear();\r\n    }\r\n\r\n    /**\r\n     * Whether this application has registered accelerator.\r\n     * @param hotkey\r\n     */\r\n    public isRegistered(hotkey: string): boolean {\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        return this.hotkeys.has(hkToLower);\r\n    }\r\n\r\n    private registerInvokeAGMMethod(): void {\r\n        this.agm.register(InvokeMethod, (args: {\r\n            key: string;\r\n        }) => {\r\n            const hkToLower = args.key.toLowerCase();\r\n            const info = this.hotkeys.get(hkToLower);\r\n            this.registry.execute(hkToLower, info);\r\n        });\r\n    }\r\n\r\n    private formatHotkey(hotkey: string): string {\r\n        if (hotkey) {\r\n            return hotkey.replace(/\\s/g, \"\").toLowerCase();\r\n        }\r\n    }\r\n}\r\n","import { Glue42 } from \"../glue\";\nimport { ActivitiesLibConfigObject, LibConfigObject, InternalConfig, LayoutsLibConfigObject, AppManagerLibConfigObject } from \"./types\";\n\ninterface InputModeObject {\n    mode?: boolean | string;\n    logger?: Glue42.LoggerConfig;\n}\n\nexport default (options: Glue42.Config): InternalConfig => {\n\n    // Possible options per lib (this is InputLibConfig type)\n    // * false - library is disabled (e.g. config.appManager = false)\n    // * true - library is enabled in running in default mode (e.g config.appManager = true).\n    //          Exception is if default mode is false - in that case it runs default true mode.\n    // * string - start in some mode (e.g. config.appManager = \"full\")\n    // * object - allows further customization (e.g config.appManager = {mode: \"full\", someSetting: 42})\n    //\n    // Some libs support different running modes, some do not.\n    //\n    // Currently defaults are:\n    // appManager: disabled\n    // layouts: enabled in 'slim' mode\n    // activities: enabled in 'trackMyTypeAndInitiatedFromMe' mode\n    // windows: enabled (does not support modes)\n    //\n    // InputLibConfig is transformed to LibConfigObject\n\n    type InputLibConfig = boolean | string | InputModeObject;\n\n    /**\n     * Transforms InputLibConfig (the config as specified from the user)\n     * to LibConfigObject(internal library configuration)\n     */\n    function getLibConfig<T extends LibConfigObject<string>>(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): T {\n\n        // if value is false return undefined\n        if (typeof value === \"boolean\" && !value) {\n            return undefined;\n        }\n\n        // find the mode of the library\n        const mode = getModeAsString(value, defaultMode, trueMode);\n\n        // if object we will replace the mode because appManager = {mode: true, setting: 42}\n        // should be turned into appManager = {mode: 'slim', setting: 42}\n        if (typeof value === \"object\") {\n            value.mode = mode;\n            return value as T;\n        }\n\n        return {\n            mode,\n        } as T;\n    }\n\n    /**\n     * Finds the mode based for a given library\n     * 1. If object we call recursively using object.mode for value\n     * 1. If the user hasn't specified anything we use the hard coded defaults\n     * 3. If the value is false or it got defaulted to false, we return undefined\n     * 4. If the value is true we return trueMode or defaultMode (if trueMode is undefined)\n     */\n    function getModeAsString(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): string {\n\n        if (typeof value === \"object\") {\n            // 1. if object\n            return getModeAsString(value.mode, defaultMode, trueMode) + \"\";\n        } else if (typeof value === \"undefined\") {\n            // 2. if the user does not pass anything\n            if (typeof defaultMode === \"boolean\" && !defaultMode) {\n                // 3. if gets defaulted to false, the library should be off\n                return undefined;\n            } else {\n                return defaultMode + \"\";\n            }\n        } else if (typeof value === \"boolean\") {\n            // 4. if the user passes true, use trueMode or defaultMode\n            if (value) {\n                // if the user passes true, use trueMode or defaultMode\n                return ((trueMode === undefined) ? defaultMode : trueMode) + \"\";\n            } else {\n                // 3. if the user passes false, the library should be off\n                return undefined;\n            }\n        }\n\n        return value + \"\";\n    }\n\n    const appDefaultMode = false;\n    const appDefaultTrueMode = \"startOnly\";\n\n    const activitiesDefaultMode = \"trackMyTypeAndInitiatedFromMe\";\n\n    const layoutsDefaultMode = \"slim\";\n\n    return {\n        layouts: getLibConfig<LayoutsLibConfigObject>(options.layouts, layoutsDefaultMode),\n        activities: getLibConfig<ActivitiesLibConfigObject>(options.activities, activitiesDefaultMode),\n        appManager: getLibConfig<AppManagerLibConfigObject>(options.appManager, appDefaultMode, appDefaultTrueMode),\n        windows: getLibConfig<LibConfigObject<string>>(options.windows, true),\n        channels: getLibConfig<LibConfigObject<string>>(options.channels || false, false),\n        displays: getLibConfig<LibConfigObject<string>>(options.displays, true)\n    };\n};\n","import { Glue42 } from \"../../glue\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\n\nexport class Glue42Notification implements Glue42.Notifications.Glue42Notification {\n    public readonly actions: Glue42.Notifications.Glue42NotificationAction[];\n    public badge: string;\n    public body: string;\n    public data: any;\n    public dir: NotificationDirection;\n    public icon: string;\n    public image: string;\n    public lang: string;\n    public renotify: boolean;\n    public requireInteraction: boolean;\n    public silent: boolean;\n    public tag: string;\n    public timestamp: number;\n    public title: string;\n    public readonly vibrate: number[];\n\n    public onclick: ((this: Notification, ev: Event) => any) | null;\n    public onclose: ((this: Notification, ev: Event) => any) | null;\n    public onerror: ((this: Notification, ev: Event) => any) | null;\n    public onshow: ((this: Notification, ev: Event) => any) | null;\n    public onaction: ((this: Notification, ev: Glue42.Notifications.ActionEvent) => any) | null;\n\n    private callbacks: CallbackRegistry = callbackRegistry();\n\n    public constructor(public options: Glue42.Notifications.Glue42NotificationOptions) {\n        this.actions = options.actions;\n        this.body = options.body;\n        this.badge = options.badge;\n        this.data = options.data;\n        this.dir = options.dir;\n        this.icon = options.icon;\n        this.image = options.image;\n        this.lang = options.lang;\n        this.renotify = options.renotify;\n        this.requireInteraction = options.requireInteraction;\n        this.silent = options.silent;\n        this.tag = options.tag;\n        this.timestamp = options.timestamp;\n        this.title = options.title;\n    }\n\n    public close(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    public addEventListener<K extends \"click\" | \"close\" | \"error\" | \"show\">(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    public addEventListener(type: any, listener: any, options?: any) {\n        this.callbacks.add(type, listener);\n    }\n    public removeEventListener<K extends \"click\" | \"close\" | \"error\" | \"show\">(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    public removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    public removeEventListener(type: any, listener: any, options?: any) {\n        // DO NOTHING FOR NOW\n    }\n    public dispatchEvent(event: Event): boolean {\n        this.callbacks.execute(event.type, event);\n        return true;\n    }\n}\n","import { Glue42 } from \"../../glue\";\n\nexport class PanelAPI implements Glue42.Notifications.NotificationPanelAPI {\n    constructor(private interop: Glue42.Interop.API) {\n    }\n\n    public toggle(): Promise<any> {\n        return this.interop.invoke(\"T42.Notifications.Show\");\n    }\n    public show(): Promise<any> {\n        return this.interop.invoke(\"T42.Notifications.Show\", { show: true });\n    }\n    public hide(): Promise<any> {\n        return this.interop.invoke(\"T42.Notifications.Hide\");\n    }\n    public isVisible(): Promise<boolean> {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { Glue42Notification } from \"./notification\";\nimport { GnsNotificationSettings, GnsNotificationActionSettings, GnsNotificationActionPayload } from \"./types\";\nimport generate from \"shortid\";\nimport { PanelAPI } from \"./panel\";\nconst STARTING_INDEX = 0;\n\nexport class Notifications implements Glue42.Notifications.API {\n    public panel: PanelAPI;\n\n    private methodsRegistered: boolean = false;\n    private NOTIFICATIONS_CONFIGURE_METHOD_NAME = \"T42.Notifications.Configure\";\n    private readonly methodNameRoot = \"T42.Notifications.Handler-\" + generate();\n    private nextId = 0;\n    private notifications: { [id: string]: Glue42Notification } = {};\n\n    constructor(private interop: Glue42.Interop.API) {\n        this.panel = new PanelAPI(interop);\n    }\n\n    public get maxActions(): number {\n        return 2;\n    }\n\n    public async raise(options: Glue42.Notifications.Glue42NotificationOptions): Promise<Glue42.Notifications.Glue42Notification> {\n        if (!options) {\n            throw new Error(\"invalid options - should be an object\");\n        }\n        if (!options.title) {\n            throw new Error(\"invalid options - should have title\");\n        }\n        if (!this.methodsRegistered) {\n            const bunchOfPromises = [];\n            for (let index = STARTING_INDEX; index < this.maxActions; index++) {\n                bunchOfPromises.push(\n                    this.interop.register(this.methodNameRoot + \"_\" + index, this.handleNotificationAction.bind(this))\n                );\n            }\n\n            await Promise.all(bunchOfPromises);\n            this.methodsRegistered = true;\n        }\n\n        // transform actions\n        const id = String(this.nextId++);\n        const type = options.type ?? \"Notification\";\n        const notification: GnsNotificationSettings = {\n            title: options.title,\n            type,\n            severity: options.severity ?? \"None\",\n            description: options.body,\n            glueRoutingDetailMethodName: this.methodNameRoot + \"_\" + STARTING_INDEX,\n            actions: [],\n            sourceId: id,\n            source: options.source\n        };\n\n        if (options.actions) {\n            const validActions = options.actions.slice(0, this.maxActions);\n\n            let index = STARTING_INDEX;\n            for (const action of validActions) {\n                const args: GnsNotificationActionPayload = { // this should include user arguments (action.interop?.arguments)\n                    g42notificationId: id,\n                    g42action: action.action,\n                    g42interopMethod: action.interop?.method,\n                    g42interopTarget: action.interop?.target,\n                };\n                // TODO, properly convert between args and GNS value\n                const parameters = Object.keys(args).map((key) => {\n                    const value = (args as any)[key];\n                    return {\n                        name: key,\n                        value: {\n                            stringValue: value\n                        }\n                    };\n                });\n\n                const glueAction: GnsNotificationActionSettings = {\n                    name: this.methodNameRoot + \"_\" + index,\n                    description: action.title,\n                    displayName: action.title,\n                    parameters\n                };\n\n                notification.actions.push(glueAction);\n                index++;\n            }\n        }\n\n        if (options.icon) {\n            notification.attributes = notification.attributes || [];\n            notification.attributes.push(\n                { key: \"icon\", value: { stringValue: options.icon } }\n            );\n        }\n\n        if (options.data) {\n            notification.attributes = notification.attributes || [];\n            const dataAsString = JSON.stringify(options.data);\n            notification.attributes.push(\n                { key: \"data\", value: { stringValue: dataAsString } }\n            );\n        }\n\n        if (typeof options.panelExpiry === \"number\") {\n            notification.attributes = notification.attributes || [];\n            notification.attributes.push(\n                { key: \"panelExpiry\", value: { stringValue: options.panelExpiry + \"\" } }\n            );\n        }\n\n        if (typeof options.toastExpiry === \"number\") {\n            notification.attributes = notification.attributes || [];\n            notification.attributes.push(\n                { key: \"toastExpiry\", value: { stringValue: options.toastExpiry + \"\" } }\n            );\n        }\n\n        await this.interop.invoke(\"T42.GNS.Publish.RaiseNotification\", { notification });\n\n        const g42notification = new Glue42Notification(options);\n        this.notifications[id] = g42notification;\n        return g42notification;\n    }\n\n    public async setFilter(filter: Glue42.Notifications.NotificationFilter): Promise<Glue42.Notifications.NotificationFilter> {\n        const result = await this.interop.invoke(\"T42.Notifications.Filter\", filter);\n        return result.returned;\n    }\n\n    public async getFilter(): Promise<Glue42.Notifications.NotificationFilter> {\n        const result = await this.interop.invoke(\"T42.Notifications.Filter\");\n        return result.returned;\n    }\n\n    public async configure(options: Glue42.Notifications.Configuration): Promise<void> {\n        if (!options || Array.isArray(options)) {\n            throw new Error(\"Invalid options - should be an object.\");\n        }\n\n        if (Object.values(options).length === 0) {\n            throw new Error(\"The argument must be a non-empty object.\");\n        }\n\n        Object.values(options).forEach((value) => {\n            if (typeof value !== undefined && typeof value !== \"boolean\") {\n                throw new Error(\"Expected type of option values - boolean.\");\n            }\n        });\n\n        const result = await this.interop.invoke(this.NOTIFICATIONS_CONFIGURE_METHOD_NAME, options);\n        return result.returned;\n    }\n\n    private handleNotificationAction(args: any) {\n        if (args.g42notificationId) {\n            // action click\n            const payload: GnsNotificationActionPayload = args as GnsNotificationActionPayload;\n            const id = payload.g42notificationId;\n            const notification = this.notifications[id];\n            if (!notification) {\n                return;\n            }\n\n            // user event\n            const event: { type: string, action?: string } = {\n                type: \"onaction\",\n                action: payload.g42action\n            };\n\n            if (notification.onaction) {\n                notification.onaction(event as Glue42.Notifications.ActionEvent);\n            }\n\n            // interop\n            const actionDefinition = (notification.actions || []).find((item) => item.action === payload.g42action);\n            const actionInterop = actionDefinition.interop;\n            if (actionInterop) {\n                this.interop.invoke(actionInterop.method, actionInterop.arguments || {}, actionInterop.target || \"best\");\n            }\n\n            // dispatch\n            notification.dispatchEvent(event as Glue42.Notifications.ActionEvent);\n        } else if (args.notification && args.notification.sourceNotificationId) {\n            // notification click\n            const id = args.notification.sourceNotificationId;\n            const notification = this.notifications[id];\n            if (!notification) {\n                return;\n            }\n\n            // user event\n            const event = { type: \"onclick\" };\n            if (notification.onclick) {\n                notification.onclick(event as Event);\n            }\n\n            // interop call\n            const clickInterop = notification.options.clickInterop;\n            if (clickInterop) {\n                this.interop.invoke(clickInterop.method, clickInterop.arguments || {}, clickInterop.target || \"best\");\n            }\n\n            // dispatch\n            notification.dispatchEvent(event as Event);\n        }\n    }\n}\n","import CallbackRegistryFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\nimport { Glue42 } from \"../../glue\";\r\nimport { Glue42Core } from \"@glue42/core\";\r\n\r\nconst ThemesConfigurationMethodName = \"T42.Themes.Configuration\";\r\ninterface ThemesConfiguration {\r\n    setThemesMethodName: string;\r\n    getThemesMethodName: string;\r\n    sharedContextName: string;\r\n    getThemesConfigurationMethodName: string;\r\n}\r\ninterface GetResult {\r\n    all: Glue42.Themes.Theme[];\r\n    selected: string;\r\n}\r\nexport class ThemesImpl implements Glue42.Themes.API {\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private sharedContextName: string;\r\n    private getMethodName: string;\r\n    private setMethodName: string;\r\n    private isSubscribed = false;\r\n\r\n    constructor(private core: Glue42Core.GlueCore) {\r\n        this.getConfiguration();\r\n    }\r\n\r\n    public async list(): Promise<Glue42.Themes.Theme[]> {\r\n        await this.getConfiguration();\r\n        if (!this.getMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n        return (await this.getAll()).returned.all;\r\n    }\r\n\r\n    public async getCurrent(): Promise<Glue42.Themes.Theme> {\r\n        await this.getConfiguration();\r\n        if (!this.getMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n        const all = await this.getAll();\r\n        return all.returned.all.find((t) => t.name === all.returned.selected);\r\n    }\r\n\r\n    public async select(theme: string): Promise<void> {\r\n        await this.getConfiguration();\r\n        if (!this.setMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n\r\n        await this.core.interop.invoke(this.setMethodName, { theme });\r\n    }\r\n\r\n    public onChanged(callback: (theme: Glue42.Themes.Theme) => any): UnsubscribeFunction {\r\n        this.subscribe();\r\n        return this.registry.add(\"changed\", callback);\r\n    }\r\n\r\n    private async getConfiguration() {\r\n        try {\r\n            if (this.sharedContextName) {\r\n                return;\r\n            }\r\n            const config = await this.core.interop.invoke<ThemesConfiguration>(ThemesConfigurationMethodName);\r\n            this.sharedContextName = config.returned.sharedContextName;\r\n            this.getMethodName = config.returned.getThemesMethodName;\r\n            this.setMethodName = config.returned.setThemesMethodName;\r\n        } catch (error) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async getAll() {\r\n        await this.getConfiguration();\r\n        return await this.core.interop.invoke<GetResult>(this.getMethodName);\r\n    }\r\n\r\n    private async subscribe() {\r\n        await this.getConfiguration();\r\n        if (this.isSubscribed) {\r\n            return;\r\n        }\r\n        this.isSubscribed = true;\r\n        this.core.contexts.subscribe(this.sharedContextName, (data: { all: Glue42.Themes.Theme[], selected: string }) => {\r\n            if (data && data.all && data.selected) {\r\n                this.registry.execute(\"changed\", data.all.find((t) => t.name === data.selected));\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Glue42 } from \"../../glue\";\nimport { AppDefinition, GetWindowsInfoResult, GetWindowsInfoResultItem, IntentInfo } from \"./types\";\n\nconst GLUE42_FDC3_INTENTS_METHOD_PREFIX = \"Tick42.FDC3.Intents.\";\n\nexport class Intents implements Glue42.Intents.API {\n    private myIntents = new Set<string>();\n\n    constructor(private interop: Glue42.Interop.API, private windows: Glue42.Windows.API, private logger: Glue42.Logger.API) {\n    }\n\n    public async find(intentFilter?: string | Glue42.Intents.IntentFilter): Promise<Glue42.Intents.Intent[]> {\n        let intents = await this.all();\n        if (typeof intentFilter === \"undefined\") {\n            return intents;\n        }\n\n        if (typeof intentFilter === \"string\") {\n            return intents.filter((intent) => intent.name === intentFilter);\n        }\n\n        if (typeof intentFilter !== \"object\") {\n            throw new Error(\"Please provide the intentFilter as a string or an object!\");\n        }\n\n        if (intentFilter.contextType) {\n            const ctToLower = intentFilter.contextType.toLowerCase();\n            intents = intents.filter((intent) => intent.handlers.some((handler) => handler.contextTypes?.some((ct) => ct.toLowerCase() === ctToLower)));\n        }\n\n        if (intentFilter.name) {\n            intents = intents.filter((intent) => intent.name === intentFilter.name);\n        }\n\n        return intents;\n    }\n\n    public async raise(intent: string | Glue42.Intents.IntentRequest): Promise<Glue42.Intents.IntentResult> {\n        if ((typeof intent !== \"string\" && typeof intent !== \"object\") || (typeof intent === \"object\" && typeof intent.intent !== \"string\")) {\n            throw new Error(\"Please provide the intent as a string or an object with an intent property!\");\n        }\n\n        if (typeof intent === \"string\") {\n            intent = {\n                intent\n            };\n        }\n\n        const intentName = intent.intent;\n        const intentDef = await this.get(intentName);\n\n        if (typeof intentDef === \"undefined\") {\n            throw new Error(`Intent ${intentName} not found.`);\n        }\n\n        const isDynamicIntent = !intentDef.handlers.some((intentDefHandler) => intentDefHandler.type === \"app\");\n\n        // Default to \"reuse\" in the case of a dynamic intent and to \"startNew\" if target isn't provided.\n        const target = intent.target || (isDynamicIntent ? \"reuse\" : \"startNew\");\n        // The handler that will execute the intent.\n        let handler: Glue42.Intents.IntentHandler;\n        const anAppHandler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"app\");\n        if (target === \"startNew\") {\n            handler = anAppHandler;\n        } else if (target === \"reuse\") {\n            const anInstanceHandler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"instance\");\n            handler = anInstanceHandler || anAppHandler;\n        } else if (target.instance) {\n            handler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"instance\" && intentHandler.instanceId === target.instance);\n        } else if (target.app) {\n            handler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"app\" && intentHandler.applicationName === target.app);\n        } else {\n            throw new Error(`Invalid intent target: ${JSON.stringify(target)}`);\n        }\n\n        if (!handler) {\n            throw new Error(`Can not raise intent for request ${JSON.stringify(intent)} - can not find intent handler.`);\n        }\n\n        let instanceId = handler.instanceId;\n        if (handler.type === \"app\") {\n            instanceId = await this.startApp(handler.applicationName, intent.options);\n        }\n\n        const result: Partial<Glue42.Intents.IntentResult> = await this.raiseIntentToInstance(instanceId, intentName, intent.context);\n        result.request = intent;\n        result.handler = handler;\n\n        return result as Glue42.Intents.IntentResult;\n    }\n\n    public async all(): Promise<Glue42.Intents.Intent[]> {\n        // Gathers all intents from:\n        // 1. Application definitions\n        // 2. Running instances (application can register dynamic intents by calling `addIntentListener()` that aren't predefined inside of their application definitions)\n        // It also populates intent handlers (actual entities that can handle the intent).\n        let apps: AppDefinition[];\n        try {\n            const result = await this.interop.invoke<{ applications: AppDefinition[] }>(\"T42.ACS.GetApplications\", { withIntentsInfo: true });\n            apps = result.returned.applications;\n        } catch (e) {\n            this.logger.error(`Failed to get the applications!`, e);\n            return [];\n        }\n        const intents: { [key: string]: Glue42.Intents.Intent } = {};\n        const appsWithIntents = apps.filter((app) => app.intents && app.intents.length > 0);\n        //  Gather app handlers from application definitions.\n        for (const app of appsWithIntents) {\n            for (const intentDef of app.intents) {\n                let intent = intents[intentDef.name];\n                if (!intent) {\n                    intent = {\n                        name: intentDef.name,\n                        handlers: [],\n                    };\n                    intents[intentDef.name] = intent;\n                }\n\n                const handler: Glue42.Intents.IntentHandler = {\n                    applicationName: app.name,\n                    applicationTitle: app.title || \"\",\n                    applicationDescription: app.caption,\n                    displayName: intentDef.displayName,\n                    contextTypes: intentDef.contexts,\n                    applicationIcon: app.icon,\n                    type: \"app\"\n                };\n\n                intent.handlers.push(handler);\n            }\n        }\n\n        const servers = this.interop.servers();\n        const serverWindowIds = servers.map((server) => server.windowId).filter((serverWindowId) => typeof serverWindowId !== \"undefined\");\n\n        const T42WndGetInfo = \"T42.Wnd.GetInfo\";\n        const isT42WndGetInfoMethodRegistered = this.interop.methods().some((method) => method.name === T42WndGetInfo);\n\n        let windowsInfos: GetWindowsInfoResultItem[];\n        // For backwards compatibility with previous versions of Glue Desktop, the windows' titles will be attempted to be obtained using the Windows API.\n        if (isT42WndGetInfoMethodRegistered) {\n            try {\n                const result = await this.interop.invoke<GetWindowsInfoResult>(T42WndGetInfo, { ids: serverWindowIds });\n                windowsInfos = result.returned.windows;\n            } catch (e) {\n                // Swallow the error. The windows' titles will be attempted to be obtained using the Windows API.\n            }\n        }\n\n        // Discover all running instances that provide intents, and add them to the corresponding intent.\n        for (const server of servers) {\n            await Promise.all(server.getMethods()\n                .filter((method) => method.name.startsWith(GLUE42_FDC3_INTENTS_METHOD_PREFIX))\n                .map(async (method) => {\n                    const intentName = method.name.replace(GLUE42_FDC3_INTENTS_METHOD_PREFIX, \"\");\n                    let intent = intents[intentName];\n                    if (!intent) {\n                        intent = {\n                            name: intentName,\n                            handlers: [],\n                        };\n                        intents[intentName] = intent;\n                    }\n                    const info = method.flags.intent as Omit<Glue42.Intents.AddIntentListenerRequest, \"intent\">;\n\n                    const app = apps.find((appWithIntents) => appWithIntents.name === server.application);\n                    let appIntent: IntentInfo | undefined;\n                    if (app && app.intents) {\n                        appIntent = app.intents.find((appDefIntent) => appDefIntent.name === intentName);\n                    }\n\n                    const title = await this.windowsIdToTitle(server.windowId, windowsInfos);\n                    const handler: Glue42.Intents.IntentHandler = {\n                        instanceId: server.instance,\n                        applicationName: server.application,\n                        applicationIcon: info.icon || app?.icon,\n                        applicationTitle: app?.title || \"\",\n                        applicationDescription: info.description || app?.caption,\n                        displayName: info.displayName || appIntent?.displayName,\n                        contextTypes: info.contextTypes || appIntent?.contexts,\n                        instanceTitle: title,\n                        type: \"instance\"\n                    };\n                    intent.handlers.push(handler);\n                }));\n        }\n\n        return Object.values(intents);\n    }\n\n    public addIntentListener(intent: string | Glue42.Intents.AddIntentListenerRequest, handler: (context: Glue42.Intents.IntentContext) => any): { unsubscribe: () => void } {\n        if ((typeof intent !== \"string\" && typeof intent !== \"object\") || (typeof intent === \"object\" && typeof intent.intent !== \"string\")) {\n            throw new Error(\"Please provide the intent as a string or an object with an intent property!\");\n        }\n        if (typeof handler !== \"function\") {\n            throw new Error(\"Please provide the handler as a function!\");\n        }\n\n        // `addIntentListener()` is sync.\n        // tslint:disable-next-line:no-console\n        const intentName = typeof intent === \"string\" ? intent : intent.intent;\n        const methodName = `${GLUE42_FDC3_INTENTS_METHOD_PREFIX}${intentName}`;\n        let intentFlag: Omit<Glue42.Intents.AddIntentListenerRequest, \"intent\"> = {};\n        let registerPromise: Promise<void>;\n\n        const alreadyRegistered = this.myIntents.has(intentName);\n\n        if (alreadyRegistered) {\n            throw new Error(`Intent listener for intent ${intentName} already registered!`);\n        }\n\n        this.myIntents.add(intentName);\n\n        const result = {\n            unsubscribe: (): void => {\n                this.myIntents.delete(intentName);\n\n                registerPromise\n                    .then(() => this.interop.unregister(methodName))\n                    .catch((err) => this.logger.trace(`Unregistration of a method with name ${methodName} failed with reason: ${err}`));\n            }\n        };\n\n        if (typeof intent === \"object\") {\n            const { intent: removed, ...rest } = intent;\n            intentFlag = rest;\n        }\n\n        registerPromise = this.interop.register({ name: methodName, flags: { intent: intentFlag } }, (args: Glue42.Intents.IntentContext) => {\n            if (this.myIntents.has(intentName)) {\n                return handler(args);\n            }\n        });\n\n        registerPromise.catch((err) => {\n            this.myIntents.delete(intentName);\n\n            this.logger.warn(`Registration of a method with name ${methodName} failed with reason: ${err}`);\n        });\n\n        return result;\n    }\n\n    private async get(intent: string): Promise<Glue42.Intents.Intent> {\n        return (await this.all()).find((registeredIntent) => registeredIntent.name === intent);\n    }\n\n    private async startApp(application: string, options?: Glue42.AppManager.ApplicationStartOptions) {\n        const result = await this.interop.invoke<{ Name: string, Id: string }>(\"T42.ACS.StartApplication\", { Name: application, options });\n        return result.returned.Id;\n    }\n\n    private async raiseIntentToInstance(instanceId: string, intent: string, context?: Glue42.Intents.IntentContext): Promise<{ result: any }> {\n        const methodName = `${GLUE42_FDC3_INTENTS_METHOD_PREFIX}${intent}`;\n        let interopServer = this.interop.servers().find((server) => server.instance === instanceId);\n        if (!interopServer) {\n            // Wait 30 sec for the server to appear.\n            await (new Promise<void>((resolve, reject) => {\n                let timeoutId: any;\n\n                const unsub = this.interop.serverAdded((server) => {\n                    if (server.instance === instanceId) {\n                        interopServer = server;\n                        resolve();\n                        clearTimeout(timeoutId);\n                        unsub();\n                    }\n                });\n\n                timeoutId = setTimeout(() => {\n                    unsub();\n                    reject(new Error(`Can not find interop server for instance ${instanceId}`));\n                }, 30 * 1000);\n            }));\n        }\n\n        const method = interopServer.getMethods().find((registeredMethod) => registeredMethod.name === methodName);\n        if (!method) {\n            // Wait 10 sec for the method to appear.\n            await (new Promise<void>((resolve, reject) => {\n                let timeoutId: any;\n\n                const unsub = this.interop.methodAdded((addedMethod) => {\n                    if (addedMethod.name === methodName) {\n                        resolve();\n                        clearTimeout(timeoutId);\n                        unsub();\n                    }\n                });\n\n                timeoutId = setTimeout(() => {\n                    unsub();\n                    reject(new Error(`Can not find interop method ${methodName} for instance ${instanceId}`));\n                }, 10 * 1000);\n            }));\n        }\n\n        const result = await this.interop.invoke(methodName, context, { instance: instanceId });\n\n        return {\n            result: result.returned\n        };\n    }\n\n    private async windowsIdToTitle(id: string, windowsInfos?: GetWindowsInfoResultItem[]): Promise<string> {\n        if (typeof windowsInfos !== \"undefined\") {\n            return windowsInfos.find((windowsInfo) => windowsInfo.id === id)?.title;\n        }\n\n        // The Windows API could be undefined e.g. when running inside of a node environment.\n        const window = this.windows?.findById(id);\n        const title = await window?.getTitle();\n        return title;\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { isFunction, isObject, isString } from \"../activity/helpers/util\";\n\nexport interface AppPreferences {\n    app: string;\n    data: any;\n    lastUpdate: Date;\n}\n\nexport class Prefs {\n\n    private registry: CallbackRegistry = CallbackRegistryFactory();\n    private interopMethodRegistered = false;\n\n    constructor(private appName: string, private interop: Glue42.Interop.API) {\n    }\n\n    public async get(app?: string): Promise<AppPreferences | undefined> {\n        const data = (await this.interop.invoke(\"T42.Prefs.Get\", { app: app ?? this.appName }));\n        return data.returned;\n    }\n\n    public async set(data: any, options?: { app: string }): Promise<void> {\n        this.verifyDataObject(data);\n        await this.interop.invoke(\"T42.Prefs.Set\", { app: options?.app ?? this.appName, data, merge: false });\n    }\n\n    public async setFor(app: string, data: any): Promise<void> {\n        this.verifyApp(app);\n        this.verifyDataObject(data);\n        return this.set(data, { app });\n    }\n\n    public async update(data: any, options?: { app: string }) {\n        this.verifyDataObject(data);\n        await this.interop.invoke(\"T42.Prefs.Set\", { app: options?.app ?? this.appName, data, merge: true });\n    }\n\n    public async updateFor(app: string, data: any) {\n        this.verifyApp(app);\n        this.verifyDataObject(data);\n        return this.update(data, { app });\n    }\n\n    public async clear(app?: string) {\n        await this.interop.invoke(\"T42.Prefs.Set\", { app: app ?? this.appName, clear: true });\n    }\n\n    public async clearFor(app: string) {\n        this.verifyApp(app);\n        await this.interop.invoke(\"T42.Prefs.Set\", { app, clear: true });\n    }\n\n    public async getAll(): Promise<AppPreferences[]> {\n        const data = (await this.interop.invoke(\"T42.Prefs.Get\"));\n        return data.returned;\n    }\n\n    public async clearAll() {\n        await this.interop.invoke(\"T42.Prefs.Set\", { clear: true });\n    }\n\n    public subscribe(callback: (prefs: AppPreferences) => void): () => void {\n        this.verifyCallback(callback);\n        return this.subscribeFor(this.appName, callback);\n    }\n\n    public subscribeFor(app: string, callback: (prefs: AppPreferences) => void): () => void {\n        this.verifyApp(app);\n        this.verifyCallback(callback);\n        const unsubscribeFn = this.registry.add(app, callback);\n\n        // register the method if needed and then send the subscription request\n        this.registerInteropIfNeeded()\n            .then(() => {\n                this.interop.invoke(\"T42.Prefs.Get\", { app, subscribe: true });\n            });\n\n        return () => {\n            unsubscribeFn();\n        };\n    }\n\n    private async registerInteropIfNeeded() {\n        if (this.interopMethodRegistered) {\n            return;\n        }\n        this.interopMethodRegistered = true;\n\n        await this.interop.register(\"T42.Prefs.Update\", (args) => {\n            this.registry.execute(args.app, args);\n        });\n    }\n\n    private verifyApp(app: string) {\n        if (!app) {\n            throw new Error(`app should be defined`);\n        }\n        if (!isString(app)) {\n            throw new Error(`app should be a string`);\n        }\n    }\n    private verifyDataObject(data: any) {\n        if (!data) {\n            throw new Error(`data should be defined`);\n        }\n        if (!isObject(data)) {\n            throw new Error(`data should be an object`);\n        }\n    }\n\n    private verifyCallback(callback: any) {\n        if (!isFunction(callback)) {\n            throw new Error(`callback should be defined`);\n        }\n    }\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { isObject, isString } from \"../activity/helpers/util\";\r\n\r\nconst enum Commands {\r\n    GetCookies = \"get-cookies\",\r\n    SetCookie = \"set-cookie\",\r\n    RemoveCookie = \"remove-cookie\"\r\n}\r\n\r\nexport class Cookies implements Glue42.Cookies.API {\r\n\r\n    constructor(private methodName: string, private interop: Glue42.Interop.API) {\r\n    }\r\n\r\n    public async get(filter?: Glue42.Cookies.CookiesGetFilter): Promise<Glue42.Cookies.Cookie[]> {\r\n        const result = await this.invoke<{ cookies: Glue42.Cookies.Cookie[] }>(Commands.GetCookies, { filter });\r\n        return result.returned.cookies;\r\n    }\r\n\r\n    public async set(cookie: Glue42.Cookies.CookiesSetDetails): Promise<void> {\r\n        this.verifyCookieObject(cookie);\r\n        await this.invoke<Glue42.Cookies.Cookie[]>(Commands.SetCookie, cookie);\r\n    }\r\n\r\n    public async remove(url: string, name: string): Promise<void> {\r\n        if (!isString(url)) {\r\n            throw new Error(`url should be a string`);\r\n        }\r\n        if (!isString(name)) {\r\n            throw new Error(`name should be a string`);\r\n        }\r\n        await this.invoke<Glue42.Cookies.Cookie[]>(Commands.RemoveCookie, { url, name });\r\n    }\r\n\r\n    private invoke<T>(command: Commands, data: any) {\r\n        return this.interop.invoke<T>(this.methodName, { command, args: data });\r\n    }\r\n\r\n    private verifyCookieObject(cookie: Glue42.Cookies.CookiesSetDetails) {\r\n        if (!cookie) {\r\n            throw new Error(`cookie should be defined`);\r\n        }\r\n        if (!isObject(cookie)) {\r\n            throw new Error(`cookie should be an object`);\r\n        }\r\n    }\r\n}\r\n","import CoreFactory, { Glue42Core } from \"@glue42/core\";\nimport { ActivityModule } from \"./activity/main\";\nimport AppManagerFactory from \"./app-manager/main\";\nimport WindowsFactory from \"./windows/main\";\nimport LayoutsFactory from \"./layouts/main\";\nimport DisplayManager from \"./displays/displayManager\";\nimport { factory as channels } from \"./channels/main\";\nimport { factory as hotkeys } from \"./hotkeys/main\";\n\nimport { Glue42 } from \"../glue\";\nimport { version } from \"../package.json\";\nimport prepareConfig from \"./config\";\nimport { LibConfigObject } from \"./types\";\nimport { ActivityMode } from \"./activity/activityConfig\";\nimport Utils from \"./utils\";\nimport { Notifications } from \"./notifications/main\";\nimport { factory as themes } from \"./themes/main\";\nimport { Intents } from \"./intents/intents\";\nimport { FactoryCallInfo } from \"./factoryCallInfo\";\nimport { Prefs } from \"./prefs/index\";\nimport { factory as cookies } from \"./cookies/main\";\n\nconst callInfo: FactoryCallInfo = new FactoryCallInfo();\n\nconst factory = async (options: Glue42.Config): Promise<Glue42.Glue> => {\n    let firstRun = false;\n    if (!callInfo.initialized) {\n        firstRun = true;\n        callInfo.init(options);\n    }\n\n    // if running in GD, do not allow creating multiple instance of this API in the same page\n    const glue42gd: Glue42.GDObject = typeof window !== \"undefined\" && window.glue42gd;\n    if (glue42gd) {\n        if (!firstRun) {\n            callInfo.addCall(options);\n            return callInfo.promise;\n        }\n    }\n    const g = await factoryCore(options, glue42gd);\n    callInfo.resolve(g);\n    return g;\n};\n\nconst factoryCore = async (options: Glue42.Config, glue42gd: Glue42.GDObject): Promise<Glue42.Glue> => {\n    const T42GDExecuteMethod = \"T42.GD.Execute\";\n    const gdMajorVersion = Utils.getGDMajorVersion();\n    // get config object\n    // basically selecting some properties (and defaulting them)\n    // it's used to extract things like layouts, appManager, activities etc things\n    // that glueCore itself doesn't know about\n    options = options || {};\n    const glueConfig = prepareConfig(options);\n    options.gateway = options.gateway || {};\n\n    let _appManager: any;\n    let _activity: any;\n    let _windows: any;\n    let _displays: any;\n    let _channels: Glue42.Channels;\n\n    // dependency graph:\n    //   windows: agm, appManager (via getter)\n    //   activities: contexts, agm, logger, windows, appManager (via getter)\n    //   appManager: agm, windows, logger, activities\n    //   layouts: agm, appManager, logger\n    function createWindows(core: Glue42Core.GlueCore) {\n        if (glueConfig.windows) {\n\n            const windowsLogger = getLibLogger(\"windows\", core.logger, glueConfig.windows);\n\n            _windows = WindowsFactory(\n                core.agm,\n                windowsLogger,\n                () => {\n                    return _appManager;\n                },\n                () => {\n                    return _displays;\n                },\n                () => {\n                    return _channels;\n                },\n                gdMajorVersion);\n            debugLog(_windows);\n            return _windows;\n        }\n    }\n\n    function createActivities(core: Glue42Core.GlueCore) {\n        if (glueConfig.activities) {\n            if (ActivityModule.checkIsUsingGW3Implementation && ActivityModule.checkIsUsingGW3Implementation(core.connection)) {\n\n                const activityLogger = getLibLogger(\"activity\", core.logger, glueConfig.activities);\n\n                _activity = new ActivityModule({\n                    connection: core.connection,\n                    contexts: core.contexts,\n                    agm: core.agm,\n                    logger: activityLogger,\n                    logLevel: \"info\",\n                    disableAutoAnnounce: false,\n                    disposeRequestHandling: \"exit\",\n                    announcementInfo: null,\n                    windows: _windows,\n                    appManagerGetter: () => {\n                        return _appManager;\n                    },\n                    mode: glueConfig.activities.mode as ActivityMode,\n                    typesToTrack: glueConfig.activities.typesToTrack,\n                    activityId: glue42gd?.activityInfo?.activityId,\n                    gdMajorVersion\n                }).api;\n                debugLog(_activity);\n                return _activity;\n            }\n        }\n    }\n\n    function createAppManager(core: Glue42Core.GlueCore) {\n        if (!glueConfig.appManager) {\n            return;\n        }\n\n        const logger = getLibLogger(\"appManager\", core.logger, glueConfig.appManager);\n\n        // AppManager v3\n        _appManager = AppManagerFactory({\n            agm: core.agm,\n            windows: _windows,\n            logger,\n            activities: _activity,\n            mode: glueConfig.appManager.mode,\n            gdMajorVersion\n        });\n        debugLog(_appManager);\n        return _appManager;\n    }\n\n    function createLayouts(core: Glue42Core.GlueCore) {\n        if (!glueConfig.layouts) {\n            return;\n        }\n\n        const logger = getLibLogger(\"layouts\", core.logger, glueConfig.layouts);\n        const layoutsConfig = glueConfig.layouts;\n        const lay = LayoutsFactory({\n            agm: core.agm,\n            appManager: _appManager,\n            activityGetter: () => _activity,\n            logger,\n            mode: layoutsConfig.mode,\n            autoSaveWindowContext: layoutsConfig.autoSaveWindowContext ?? false,\n            gdMajorVersion\n        });\n        debugLog(lay);\n        return lay;\n    }\n\n    function createChannels(core: Glue42Core.GlueCore) {\n        if (!glueConfig.channels) {\n            return;\n        }\n\n        if (!core.contexts) {\n            // TODO log - notify the user that he can not use channels without context\n            return;\n        }\n\n        // Logger\n        const logger = getLibLogger(\"channels\", core.logger, glueConfig.channels);\n\n        _channels = channels(core.contexts, core.agm, () => _windows, logger);\n\n        debugLog(_channels);\n        return _channels;\n    }\n\n    function createHotkeys(core: Glue42Core.GlueCore) {\n        const hotkeysAPI = hotkeys(core.agm);\n\n        debugLog(hotkeysAPI);\n        return hotkeysAPI;\n    }\n\n    function createIntents(core: Glue42Core.GlueCore) {\n        const intentsAPI = new Intents(core.agm, _windows, core.logger.subLogger(\"intents\"));\n\n        debugLog(intentsAPI);\n        return intentsAPI;\n    }\n\n    function createNotifications(core: Glue42Core.GlueCore) {\n        const notificationsAPI = new Notifications(core.interop);\n\n        debugLog(notificationsAPI);\n        return notificationsAPI;\n    }\n\n    function createDisplaysApi(core: Glue42Core.GlueCore) {\n        if (glueConfig.displays) {\n            const displaysLogger = getLibLogger(\"displays\", core.logger, glueConfig.displays);\n\n            _displays = new DisplayManager(core.agm, displaysLogger);\n            debugLog(_displays);\n            return _displays;\n        }\n    }\n\n    function createThemes(core: Glue42Core.GlueCore) {\n        if (!core.contexts) {\n            // TODO log - notify the user that he can not use themes without context\n            return;\n        }\n        const themesAPI = themes(core);\n\n        debugLog(themesAPI);\n        return themesAPI;\n    }\n\n    function createPrefs(core: Glue42Core.GlueCore) {\n        const appName = options.application ?? glue42gd?.application ?? core.interop.instance.application;\n        const prefs = new Prefs(appName, core.interop);\n\n        debugLog(prefs);\n        return prefs;\n    }\n\n    function createCookies(core: Glue42Core.GlueCore) {\n        const api = cookies(core.interop, T42GDExecuteMethod);\n\n        debugLog(api);\n        return api;\n    }\n\n    function getLibLogger(loggerName: string, logger: Glue42Core.Logger.API, config: LibConfigObject<string>) {\n        const newLogger = logger.subLogger(loggerName);\n\n        if (config && config.logger) {\n            const loggerConfig = config.logger;\n            if (loggerConfig.console) {\n                newLogger.consoleLevel(loggerConfig.console);\n            }\n            if (loggerConfig.publish) {\n                newLogger.publishLevel(loggerConfig.publish);\n            }\n            // not supported in GD3\n            // if (loggerConfig.metrics) {\n            //  newLogger.metricsLevel(loggerConfig.metrics);\n            // }\n        }\n\n        return newLogger;\n    }\n\n    const ext: Glue42Core.Extension = {\n        // define extra libraries for glue-core to raise\n        libs: [\n            { name: \"windows\", create: createWindows },\n            { name: \"activities\", create: createActivities },\n            { name: \"appManager\", create: createAppManager },\n            { name: \"layouts\", create: createLayouts },\n            { name: \"channels\", create: createChannels },\n            { name: \"hotkeys\", create: createHotkeys },\n            { name: \"displays\", create: createDisplaysApi },\n            { name: \"intents\", create: createIntents },\n            { name: \"notifications\", create: createNotifications },\n            { name: \"themes\", create: createThemes },\n            { name: \"prefs\", create: createPrefs },\n            { name: \"cookies\", create: createCookies }\n        ],\n\n        version,\n\n        enrichGlue: (glue: Glue42Core.GlueCore) => {\n            // put some data to config\n            glue.config.activities = glueConfig.activities;\n            glue.config.windows = glueConfig.windows;\n            glue.config.appManager = glueConfig.appManager;\n            glue.config.layouts = glueConfig.layouts;\n            glue.config.channels = glueConfig.channels;\n            glue.config.displays = glueConfig.displays;\n        },\n    };\n\n    const currentLog: any[] = [];\n    if (typeof window !== \"undefined\") {\n        if (!(window as any).glueFactoryLog) {\n            (window as any).glueFactoryLog = [];\n        }\n        (window as any).glueFactoryLog.push(currentLog);\n    }\n\n    function debugLog(entry: any) {\n        currentLog.push(entry);\n    }\n\n    const glueApi = (await CoreFactory(options, ext)) as Glue42.Glue;\n\n    // Decorate the ready glue object with extra functionalities coming from the user-defined libraries.\n    if (Array.isArray(options?.libraries) && options.libraries.length) {\n        await Promise.all(options.libraries.map((lib) => lib(glueApi, options)));\n    }\n\n    return glueApi;\n};\n\nfactory.coreVersion = (CoreFactory as any).version;\nfactory.version = version;\nfactory.calls = callInfo;\n\nexport default factory;\n","import { Glue42 } from \"../glue\";\n\ninterface CallDetails {\n    date: Date;\n    config: Glue42.Config;\n}\n\nexport class FactoryCallInfo {\n\n    public promise: Promise<Glue42.Glue>;\n    public initialized = false;\n    public details: CallDetails[] = [];\n    public reject: (reason?: any) => void = () => { /** Do nothing - default impl. - will be replaced */};\n    public resolve: (value: Glue42.Glue | PromiseLike<Glue42.Glue>) => void = () => { /** Do nothing - default impl. - will be replaced */};\n\n    public init(config: Glue42.Config) {\n        this.initialized = true;\n        this.addCall(config);\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n\n    public addCall(config: Glue42.Config) {\n        this.details.push({ date: new Date(), config });\n    }\n\n    public done(g: Glue42.Glue) {\n        this.resolve(g);\n    }\n\n    public error(e: Error) {\n        this.reject(e);\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { HotkeysImpl } from \"./hotkeys\";\n\nexport function factory(agm: Glue42.AGM.API): Glue42.Hotkeys.API & { ready: () => Promise<void>; } {\n    const hotkeys = new HotkeysImpl(agm);\n\n    return {\n        register: hotkeys.register.bind(hotkeys),\n        unregister: hotkeys.unregister.bind(hotkeys),\n        unregisterAll: hotkeys.unregisterAll.bind(hotkeys),\n        isRegistered: hotkeys.isRegistered.bind(hotkeys),\n\n        ready: () => Promise.resolve()\n    };\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { ThemesImpl } from \"./themes\";\r\nimport { Glue42Core } from \"@glue42/core\";\r\n\r\nexport function factory(core: Glue42Core.GlueCore): Glue42.Themes.API & { ready: () => Promise<void>; } {\r\n    const themes = new ThemesImpl(core);\r\n\r\n    return {\r\n        list: themes.list.bind(themes),\r\n        getCurrent: themes.getCurrent.bind(themes),\r\n        select: themes.select.bind(themes),\r\n        onChanged: themes.onChanged.bind(themes),\r\n        ready: () => Promise.resolve(),\r\n    };\r\n}\r\n","import { Glue42 } from \"../../glue\";\r\nimport { Cookies } from \"./index\";\r\n\r\nexport function factory(agm: Glue42.AGM.API, methodName: string): Glue42.Cookies.API & { ready: () => Promise<void>; } {\r\n    const cookies = new Cookies(methodName, agm);\r\n\r\n    return {\r\n        get: cookies.get.bind(cookies),\r\n        remove: cookies.remove.bind(cookies),\r\n        set: cookies.set.bind(cookies),\r\n        ready: () => Promise.resolve()\r\n    };\r\n}\r\n","import CreateGlue from \"./glue\";\n\nlet whatToExpose = CreateGlue;\nlet shouldSetToWindow = true;\n\nif (typeof window !== \"undefined\") {\n    // if glue42gd (running in GD3) and autoInjected\n    const glue42gd = (window as any).glue42gd;\n    if (glue42gd && glue42gd.autoInjected) {\n        whatToExpose = (window as any).Glue;\n        // no need to set to window, it's already there\n        shouldSetToWindow = false;\n    }\n\n    if (shouldSetToWindow) {\n        (window as any).Glue = whatToExpose;\n    }\n\n    // remove GlueCore from the window object (injected by Glue-core)\n    delete (window as any).GlueCore;\n}\n// add default library for ES6 modules\n(whatToExpose as any).default = whatToExpose;\n\nexport default whatToExpose;\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__spreadArrays","il","r","k","a","j","jl","MetricTypes","getMetricTypeByValue","metric","type","getTypeByValue","Date","serializeMetric","serializedMetrics","values","keys","reduce","memo","key","innerType","composite","defineNestedComposite","description","context","name","normalizeMetricName","path","join","getMetricValueByType","now","publishNestedComposite","getTime","Boolean","toString","flatten","arr","flat","toFlatten","concat","isArray","composeMsgForRootStateMetric","system","merged","root","getAggregateState","highestState","sort","state","aggregateDesc","msg","forEach","m","idx","slice","aggregateDescription","Helpers","definition","parent","transport","Error","BaseMetric","createMetric","defineProperty","get","_a","repo","enumerable","configurable","update","newValue","updateMetric","NumberMetric","_super","incrementBy","num","increment","decrement","decrementBy","ObjectMetric","mergeValues","_this","StringMetric","TimestampMetric","protocol","separator","_transport","_name","_description","_repo","_parent","_path","_buildPath","shadowedSystem","_state","id","_subSystems","_metrics","_getOrCreateMetric","metricObject","expectedType","metricDef","matching","filter","shadowedMetric","existing","catch","me","subSystems","metrics","subSystem","nameSystem","descriptionSystem","match","_system","getState","setState","stateDescription","updateSystem","stringMetric","timestampMetric","objectMetric","numberMetric","aggState","shadowedSubSystem","createSystem","Repository","options","init","addSystemMetrics","clickStream","undefined","rootSystem","useClickStream","navigator","userAgent","document","clickStream_1","documentClickHandler","target","className","getAttribute","timestamp","tagName","toLowerCase","href","title","page","window","location","addEventListener","attachEvent","urlMetric","appNameMetric","startUrl","glue42gd","appName","NullProtocol","PerfTracker","api","initialPublishTimeout","publishInterval","lastCount","scheduleCollection","setTimeout","collect","setInterval","collectMemory","collectEntries","memory","performance","JSON","stringify","totalJSHeapSize","usedJSHeapSize","allEntries","getEntries","jsonfiedEntries","map","toJSON","connection","config","joinPromise","session","replayRepo","replaySystem","ss","createMetricsMsg","Description","Value","send","metricClone","cloneMetric","updateMetricCore","canUpdate","publishMetricsMsg","sendFireAndForget","canUpdateMetric","_b","resolveReadyPromise","domain","onJoined","reconnect","defineRootMetricsMsg","service","instance","shadowedUpdateMetric","stateObj","rootMetric","peer_id","peerId","gw3","disableAutoAppSystem","featureMetric","reportingSystem","def","featureMetricFunc","action","payload","addFAVSupport","perfConfig","pagePerformanceMetrics","enabled","initPerf","createRegistry","errorHandling","_userErrorHandler","callbacks","_handleError","exceptionArtifact","errParam","stack","console","error","add","callback","replayArgumentsArr","callbacksForKey","replayArgument","includes","err","allForKey","acc","element","index","execute","argumentsArr","_i","results","clear","clearKey","default","lib","InProcTransport","settings","logger","registry","gw","facade","connect","_client","message","messageHandler","client","sendObject","_msg","onMessage","onConnectedChanged","close","open","SharedWorkerTransport","workerFile","worker","SharedWorker","port","onmessage","data","postMessage","Utils","getGDMajorVersion","glueDesktop","version","ver","Number","substr","isNaN","isNode","_isNode","global","process","PromiseWrapper","resolved","promise","delay","time","timers","timer","timerName","marks","endTime","period","startTime","mark","currentTime","diff","timerObj","stop","WebSocketConstructor","require","WebSocket","WS","startupTimer","_running","_registry","wsRequests","ws","waitForSocketConnection","info","pw","failed","readyState","openSocket","retryInterval","retriesLeft","reconnectInterval","reconnectAttempts","notifyForSocketState","debug","initiateSocket","retries","onerror","reason","seen_1","WeakSet","has","notifyStatusChanged","onclose","onopen","identity","application","wsRequest","status","seed","alphabet","previousSeed","shuffled","randomFromSeed","nextValue","_seed_","ORIGINAL","reset","setCharacters","_alphabet_","unique","split","item","ind","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","Math","floor","splice","shuffle","alphabet_1","characters","lookup","crypto","msCrypto","randomByteBrowser","getRandomValues","random","dest","Uint8Array","encode_1","number","loopCounter","str","pow","decode_1","indexOf","isValid","len","lib$1","fn","module","exports","createCommonjsModule","counter","previousSeconds","clusterWorkerId","generate","seconds","seedValue","workerId","newCharacters","decode","shortid","domainSession","successMessages","errorMessages","_latestOptions","isJoined","tryReconnecting","_connectionOn","disconnected","loggedIn","on","handleSuccessMessage","handleErrorMessage","sm","requestsMap","destination","wasReconnect","handleJoined","requestId","request_id","entry","success","getNextRequestId","tag","skipPeerId","successMsg","_tag","errorMsg","warn","leave","onLeft","connected","GW3ProtocolImpl","protocolVersion","datePrefix","datePrefixLen","dateMinLen","datePrefixFirstChar","_isLoggedIn","shouldTryLogin","initialLogin","initialLoginAttempts","sessions","handleDisconnected","ping","processStringMessage","parse","substring","milliseconds","parseInt","ex","msgType","createStringMessage","oldToJson","datePrefix_1","processObjectMessage","createObjectMessage","login","authentication","e_1","helloMsg","sendOptions","welcomeMsg","token","err_1","_c","loginConfig","username","password","gatewayToken","getNewGWToken","method","flowName","provider","flowCallback","sessionId","secret","providerContext","globalDomain","subLogger","maxRetries","Buffer","from","resolvedIdentity","resolved_identity","availableDomains","available_domains","access_token","setLoggedIn","logout","promises","pingTimer","clearTimeout","all","domainName","domainLogger","bind","authToken","res","getGWToken","MessageReplayerImpl","specs","specsNames","messages","subs","subsRefCount","specs_1","spec","name_1","_loop_1","refCount","this_1","sub","processMessage","types","isDone","name_2","drain","off","PromisePlus","executor","timeoutMilliseconds","timeoutMessage","timeout","WebPlatformTransport","iAmConnected","parentReady","children","extContentAvailable","extContentConnecting","extContentConnected","parentInExtMode","parentPingTimeout","connectionRequestTimeout","defaultTargetString","connectionAccepted","handle","handleConnectionAccepted","connectionRejected","handleConnectionRejected","connectionRequest","handleConnectionRequest","handleParentReady","parentPing","handleParentPing","platformPing","handlePlatformPing","platformReady","handlePlatformReady","clientUnload","handleClientUnload","manualUnload","handleManualUnload","extConnectionResponse","handleExtConnectionResponse","extSetupRequest","handleExtSetupRequest","gatewayDisconnect","handleGatewayDisconnect","gatewayInternalConnect","handleGatewayInternalConnect","glue42ext","setUpMessageListener","setUpUnload","setupPlatformUnloadListener","opener","top","parentType","manualSetReadyState","publicWindowId","_communicationId","glue42ExtOut","glue42core","clientId","myClientId","ownWindowId","windowId","initiateInternalConnection","waitParent","requestConnectionPermissionFromExt","initiateRemoteConnection","event","connectionResolve","connectionReject","bridgeInstanceId","request","clientType","parentWindowId","connectionNotPossibleMsg","parentCheck","isIframe","self","parentPingResolve","parentPingInterval","clearInterval","checkMessageTypeValid","messageType","extMode","handleAcceptanceOfMyRequest","handleAcceptanceOfGrandChildRequest","isPreferredActivated","processExtContentConnection","applicationName","communicationId","extData","glue42ExtInc","child","find","c","grandChildId","source","origin","rejectConnectionRequest","typeToValidate","rejection","waitForContentScript","extConnectionResolve","extConnectionReject","approved","content","AsyncSequelizer","minSequenceInterval","queue","isExecutingQueue","enqueue","executeQueue","operation","actionResult","error_1","shift","intervalBreak","Connection","messageHandlers","ids","_connected","isTrace","_swapTransport","_switchInProgress","_transportSubscriptions","_sequelizer","inproc","sharedWorker","webPlatform","canPublish","unsubConnectionChanged","handleConnectionChanged","unsubOnMessage","handleTransportMessage","_defaultTransport","switchTransport","switchTargetTransport","verifyPromise","isSwitchSuccess","trace","getNewSecondaryTransport","_targetTransport","_targetAuth","getNewSecondaryAuth","_defaultAuth","verifyConnection","onLibReAnnounced","setLibReAnnounced","isObjectBasedTransport","strMessage","isLoggedIn","currentServer","authRequest","newAuth","error_2","transportSwap","prepareDefaultSwap","distributeMessage","handlers","handlerId","handler","loggerError","log","replaySpecs","replayer","msgObj","unsub","left","ready","transportConfig","url","auth","order","Logger","logFn","subLoggers","customLogFn","loggerFullName","includeTimeAndLevel","existingSub","publishLevel","level","_publishLevel","consoleLevel","_consoleLevel","publishMessage","compareWith","loggerName","interop","Interop","methods","InteropMethodName","invoke","prefix","date","getHours","getMinutes","getSeconds","getMilliseconds","toPrint","GW_MESSAGE_CREATE_CONTEXT","GW_MESSAGE_ACTIVITY_CREATED","GW_MESSAGE_ACTIVITY_DESTROYED","GW_MESSAGE_CONTEXT_CREATED","GW_MESSAGE_CONTEXT_ADDED","GW_MESSAGE_SUBSCRIBE_CONTEXT","GW_MESSAGE_SUBSCRIBED_CONTEXT","GW_MESSAGE_UNSUBSCRIBE_CONTEXT","GW_MESSAGE_DESTROY_CONTEXT","GW_MESSAGE_CONTEXT_DESTROYED","GW_MESSAGE_UPDATE_CONTEXT","GW_MESSAGE_CONTEXT_UPDATED","GW_MESSAGE_JOINED_ACTIVITY","ContextMessageReplaySpec","GW3ContextData","contextId","isAnnounced","activityId","updateCallbacks","hasCallbacks","applyContextDelta","delta","deepClone","commands","command","deletePath","setValueToPath","added_1","added","updated_1","updated","removed","mergeObjectsProperties","obj","hash","WeakMap","Set","RegExp","flags","set","Map","val","what","withWhat","right","deepEqual","x","pathArr","isSubset","superObj","subObj","every","ele","InvokeStatus","GW3Bridge","_contextNameToData","_gw3Subscriptions","_nextCallbackSubscriptionNumber","_contextNameToId","_contextIdToName","_protocolVersion","_contextsTempCache","_contextsSubscriptionsCache","_connection","_logger","_trackAllContexts","trackAllContexts","_reAnnounceKnownContexts","reAnnounceKnownContexts","_gw3Session","resetState","reInitiateState","subscribeToContextCreatedMessages","subscribeToContextUpdatedMessages","subscribeToContextDestroyedMessages","handleContextCreatedMessage","handleContextUpdatedMessage","handleContextDestroyedMessage","contextsDomainInfo","uri","dispose","contextName","createContext","lifetime","createContextMsg","context_id","contextData","hasReceivedSnapshot","currentContext","calculatedDelta","calculateContextDeltaV2","calculateContextDeltaV1","gwResponse","handleUpdated","updaterId","setPath","setPathSupported","setPaths","pathValues","pathValues_1","pathValue","pathValues_2","subscribe","_d","_r","un","unsubscribe","subscriptionKey","thisCallbackSubscriptionNumber","subscription","subKey","hadCallbacks","clone","joinedActivity","sentExplicitSubscription","sendSubscribe","sendUnsubscribe","destroy","extraData","oldContext","invokeUpdateCallbacks","createdMessageTypes_1","createdMessageType","contextCreatedMsg","activity_id","_systemContextsSubKey","updatedMessageTypes_1","updatedMessageType","contextUpdatedMsg","justSeen","context_snapshot","updater_id","updateCallbackIndex","updateCallback","destroyedMessageTypes_1","destroyedMessageType","destroyedMsg","to","cacheSoFar","ctxName","lastKnownData","_e","flushQueue","ContextsModule","_bridge","checkName","checkData","checkPath","paths","paths_1","promisify","successCallback","errorCallback","rejectAfter","ms","clearTimeoutIfThere","Client","configuration","callProtocolSubscribe","targetServers","stream","successProxy","errorProxy","methodResponseTimeout","waitTimeoutMs","methodDef","method_response_timeout","wait_for_method_timeout","delayTillNow","currentServers","getServerMethodsByFilterAndTarget","retry_1","streamInfo","servers","methodFilter","filterCopy","getServers","serverMethodMap","server","getMethods","methodsForInstance","getMethodsForInstance","methodAdded","onMethodAdded","methodRemoved","onMethodRemoved","serverAdded","onServerAdded","serverRemoved","onServerRemoved","serverMethodAdded","onServerMethodAdded","serverMethodRemoved","onServerMethodRemoved","argumentObj","additionalOptions","getInvokePromise","methodDefinition","serversMethodMap","errorObj","additionalOptionsCopy","invokePromises","invocationMessages","methodResponseTimeoutMs","tryToAwaitForMethods","supportsStreaming","objectTypes","metadata","called_with","executed_by","returned","serversMethodPair","invId","invokePromise","race","invocationId","getInvocationResultObj","invocationResults","calledWith","all_return_values","invokeMessage","Success","allValues","currentValue","all_errors","allErrors","currError","invResult","interval","filterByTarget","matches","myMatches","serverMethodPair","instanceMatch","localMachine","isLocal","instanceFilter","instanceDefinition","containsProps","methodMatch","repoMethod","prop","isMatch","filterValue","repoMethodValue","filterValueEl","String","matchingServers","resultMethodsObject","methodKey","identifier","prev","current","matchingMethods","ServerSubscription","branchKey","closeSingleSubscription","pushDataToSingle","Request","requestContext","accept","acceptRequestOnBranch","acceptOnBranch","branch","rejectRequest","ServerStreaming","onSubRequest","rc","rm","handleSubRequest","onSubAdded","handleSubAdded","onSubRemoved","handleSubRemoved","streamCallbacks","subscriptionRequestHandler","subscriptionAddedHandler","subscriptionRemovedHandler","ServerBranch","subscriptions","getSubscriptionList","closeAllSubscriptions","pushData","ServerStream","_protocol","_repoMethod","_server","branches","bList","getBranchList","def2","accepts","displayName","returns","unregister","updateRepoMethod","Server","serverRepository","invocations","currentlyUnregistering","streaming","onInvoked","onMethodInvoked","createStream","streamDef","existingStream","streamMethodDefinition","getList","some","serverMethod","protocolState","streamUserObject","repoId","remove","register","wrappedCallbackFunction","resultCallback","resultValue","args","userCallback","registerCore","registerAsync","wrappedCallback","resultCalled_1","methodResult","userCallbackAsync","forStream","methodToBeRemoved","unregisterWithPredicate","removeMethodsOrStreams","filterPredicate","methodsOrStreamsToRemove","methodsToRemove","methodUnregPromises","addAsCurrentlyUnregistering","methodName","theFunction","unregisterInProgress","methodToExecute","invocationArgs","unStrException","_value","methodInvocationResult","InstanceWrapper","API","wrapped","getStreams","refreshWrappedObject","refresh","unwrap","user","pid","machine","environment","region","hideMethodSystemFlags","ClientRepository","methodsCount","myServer","wrapper","unwrappedInstance","addServer","serverId","serverEntry","removeServerById","methodId","removeServerMethod","addServerMethod","createMethodIdentifier","that","gatewayId","display_name","object_types","input_signature","result_signature","getServersByMethod","clientMethodDefinition","extractMethodsFromServers","hideServerMethodSystemFlags","unsubscribeFunc","serversWithMethodsToReplay","returnUnsubWithDelayedReplay","methodsToReplay","unsubCalled","getServerById","methodInfo","allServers","collectionToReplay","clientMethods","entries","ServerRepository","nextId","getById","SUBSCRIPTION_REQUEST","SUBSCRIPTION_ADDED","SUBSCRIPTION_REMOVED","ServerStreaming$1","repository","ERR_URI_SUBSCRIPTION_FAILED","nextStreamId","handleAddInterest","handleRemoveInterest","streamingMethod","subscriptionsMap","branchKeyToStreamIdMap","streamId","getStreamId","subscription_id","subscribeMsg","stream_id","sendSubscriptionFailed","br","dropSubscriptionMessage","closeMultipleSubscriptions","subscriptionsToClose","drop","allSubscriptions","onSubscriptionLifetimeEvent","method_id","eventName","handlerFunc","getNextStreamId","caller_id","arguments_kv","subscriptionId","errorMessage","reason_uri","needleBranch","ServerProtocol","clientRepository","handleInvokeMessage","isStreaming","registerMsg","restrictions","invocation_id","callerId","UserSubscription","subscriptionData","params","trackedServers","pair","onData","dataCallback","queued","dataItem","onClosed","closedCallback","onFailed","onConnected","setNewSubscription","newSub","TimedCache","cache","timeoutIds","timeoutId","elementIdx","findIndex","ELEMENT_TTL_MS","flush","elements","STATUS_AWAITING_ACCEPT","STATUS_SUBSCRIBED","ERR_MSG_SUB_FAILED","ON_CLOSE_MSG_CLIENT_INIT","ClientStreaming","subscriptionsList","timedCache","subscriptionIdToLocalKeyMap","nextSubLocalKey","handleErrorSubscribing","errorResponse","subLocalKey","pendingSub","callArgs","callOnClosedHandlers","handleSubscribed","acceptingServer","isFirstResponse","serverInstance","handleEventData","trackedServersFound","isPrivateData","oob","sendingServerId","receivedStreamData","requestArguments","private","onDataHandlers","queuedData","handleSubscriptionCancelled","expectedNewLength","closers","getNextSubscriptionLocalKey","registerSubscription","server_id","drainSubscriptions","drainSubscriptionsCache","subsInfo","localKey","closeSubscription","closingServer","closersCount","closingServerId","ClientProtocol","handlePeerAdded","handlePeerRemoved","handleMethodsAddedMessage","handleMethodsRemovedMessage","handleResultMessage","handleInvocationError","newPeerId","new_peer_id","remoteId","meta","local","serverInfo","removedPeerId","removed_id","methodIdList","gW3ProtocolFactory","libConfig","readyPromise","reconnectionPromises","existingSubscriptions","existingSubscriptions_1","registeredMethods","_loop_2","registeredMethods_1","handleReconnect","protocolPromise","waitForMethod","MessageBus","publish","topic","routingKey","removeEmptyValues","routing_key","target_identity","response","watchOnEvent","keysMatch","cleaned","obj1","obj2","keysObj1","allMatch","GlueCore","userConfig","ext","gdVersion","preloadPromise","gdPreloadPromise","_interop","_contexts","_bus","_allowTrace","glueInitTimer","internalConfig","nodeStartingContext","startingContextString","env","_GD_STARTING_CONTEXT_","getApplication","glue42electron","uid","applicationConfig","_f","instanceId","gwConfig","gateway","gwURL","uniqueAppName","appInstanceId","getConnection","windowAsAny","containerApplication","htmlContainer","containerName","bus","gwToken","getAuth","gdConsoleLevel","defaultLevel","consoleLogLevel","getLogger","contexts","libs","customLogger","prepareConfig","registerLib","inner","initTime","initEndTime","initStartTime","setupInterop","initTimer","agmConfig","setupContexts","hasActivities","activities","setupBus","setupExternalLibs","externalLibs","createCallback","setupExternalLib","authPromise","authConfig","metricsPublishingEnabledFunc","getMetricsPublishingEnabled","RegisterInstanceMethodName","typedError","registerInstanceIfNeeded","libsReadyPromises","coreVersion","glue","feedback","feedbackInfo","agm","glueVer","glueConfig","browser","timing","initTimes","duration","extOptions","enrichGlue","updatePerfData","deprecatedDecorator","wrong","proper","agmAny","method_added","method_removed","server_added","server_method_aded","server_method_removed","ActivityEntity","_id","_update","other","_updateCore","_beforeDelete","isNumber","arg","isString","isObject","isUndefined","isUndefinedOrNull","isNullOrWhiteSpace","test","isBoolean","isFunction","ifNotUndefined","doWithIt","ActivityType","ownerWindow","helperWindows","super","_ownerWindow","_helperWindows","hw","covertToWindowDef","initiate","_manager","windowType","WindowType","appByWindowTypeGetter","_appByWindowTypeGetter","windows","getWindows","activity","isIndependent","createWindow","EntityEvent","entitiy","entity","EntityEventContext","eventType","ActivityStatusChangeEventContext","newStatus","oldStatus","EntityEventType","StatusChange","ActivityContextChangedEventContext","ActivityContextChange","ActivityState","ActivityAGM","_activity","_ensureHasAgm","AGM","util.isUndefinedOrNull","w","methodNames","methodsForWindow","currentWindowMethod","activityServers","util.isString","potentialTargets","util.isArray","firstElem","_isInstance","_isActivityWindow","win","parameters","AttachedActivityDescriptor","manager","ownerActivityId","_ownerActivityId","ownerId","windowIds","frameColor","detach","descriptor","detachActivities","nextTick","cb","nodeify","util.isFunction","resp","Activity","actType","_actType","_status","_context","_ownerId","_agm","getActivityType","owner","addWindow","addWindowToActivity","createStackedWindows","windowTypes","leaveWindowFromActivity","getWindowsByType","setContext","setActivityContext","updateContext","updateActivityContext","onStatusChange","subscribeActivityEvents","ns","os","onWindowEvent","subscribeWindowEvents","onContextChanged","subscribeActivityContextChanged","act","stopActivity","attach","attachActivities","onActivityAttached","subscribeActivitiesAttached","newActId","oldActId","onDetached","subscribeActivitiesDetached","newAct","originalActivity","_updateDescriptors","allStates","_attached","attached","setFrameColor","color","callbacksToWait","underlyingWindow","getFrameColor","LogLevel","GlueLogger","_glueLogger","static","GetTypeName","Level","Trace","_getMessage","Debug","Info","Warn","object","exec","ActivityWindow","windowGetter","hcWindowId","Get","_type","_activityId","_instance","_isIndependent","_windowGetter","_hcWindowId","getBounds","getWindowBounds","getWindowType","util.isUndefined","getActivityById","isOwner","setVisible","isVisible","setWindowVisibility","activate","focus","activateWindow","setBounds","bounds","setWindowBounds","closeWindow","onActivityJoined","_subscribeForActivityWindowEvent","ActivityWindowJoinedActivity","onActivityRemoved","ActivityWindowLeftActivity","ActivityStatus","getMessage","gwMmessageError","gwMessageAddActivityTypes","gwMessageActivityCreated","gwMessageActivityDestroyed","gwMessageActivityInitiated","gwMessageJoinedActivity","gwMessageActivityJoined","gwMessageActivityLeft","gwMessageOwnerChanged","gwMessageAddPeerFactories","gwMessagePeerFactoriesAdded","gwMessagePeerFactoriesRemoved","gwMessagePeerCreated","_config","_windows","_sessionJoinedPromise","_sessionJoinedPromiseResolve","_activityJoinedPromise","_activityJoinedPromiseResolve","activityInfo","addRefreshHandler","setGWToken","addWillNavigateHandler","nameToWindowType","windowName","owner_type","helper_types","peer_type","owner_id","activity_type","bridgeType","forwardActivityTypeMessagesToStatusEventHandlers","handleActivityCreatedMessage","handleActivityDestroyedMessage","forwardActivityMessagesToStatusEventHandlers","forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers","forwardPeerFactoryMessagesToStatusEventHandlers","forwardPeerFactoryMessagesToPeerFactoryRequests","handlePeerFactoriesAdded","handlePeerFactoriesRemoved","forwardActivityWindowMessagesToEventHandlers","disposeRequestHandling","my","exit","mode","activity_types","typesToTrack","initReady","onActivityTypeStatusChange","_activityTypeStatusChangeCallbacks","registerActivityType","activityTypeName","toActivityPeerConfig","windowDefinition","activityType","activityTypeGwMessageEntityToActivityType","invokeCallbacks","Added","unregisterActivityType","Removed","onWindowTypeStatusChange","_windowTypeStatusChangeCallbacks","registerWindowFactory","factory","_peerFactoriesRegisteredByUs","factories","peerFactoryGwMessageEntityToWindowType","unregisterWindowFactory","factory_ids","onActivityStatusChange","_activityChangeCallbacks","initiateActivity","initiateMsg","initial_context","isOverrideTypeDefinition","types_override","helpers","wd","sendCreateAndMapResultingMessagesToPromise","initMsg","_activityTypesInitiatedFromMe","fullReplace","removedKeys","announceWindow","activityWindowId","registerWindow","independent","shouldSendReady","_activityWindowChangeCallbacks","getAgmInstance","generateWindowGetter","onActivityWindowChange","layout","width","height","cellSize","joinPeer","joinActivity","peer_name","created_id","destroy_peer_id","getAnnouncementInfo","announcementInfo","activityWindowType","activityWindowIndependent","activityWindowName","search","URLSearchParams","searchParams","maybeName","target_id","Updated","leaveActivity","getActivityTypes","getWindowTypes","getActivities","getActivityWindows","windowDefinitions","visible","cloneActivity","cloneOptions","into","merge","newActivityInfo","onActivitiesAttached","onActivitiesDetached","onActivityAttachedDescriptorsRefreshed","getAttachedDescriptors","getRandomRequestId","forwardAddedAndRemovedMessagesToEventHandler","addedMessageType","removedMessageType","mapper","getGetEntityEvent","isAdded","sub1","sub2","forwardMessageToEventHandler","getEntityEvent","ent","h","initiatedMessageType","initiatedMessageFilter","createdMessageFilter","cancelledMessageType","cancelledMessageFilter","createdMessageToPromiseResolution","listenForRecreates","reqId","resolveCreatedPromise","rejectCreatedPromise","createdPromise","initiatedSubscription","createdSubscription","cancelledSubscription","errorSubscription","initiatedMessageAck","dropSubscriptions","dropSubscription","msg4","recreated","msg1","msg2","msg3","toReturn","peerFactoryIdAndOwnerIdToWindowType","factoryId","peerType","_peerIdAndFactoryIdToPeerType","_contextSubscriptions","subscribeToContext","async","unsubscribeContext","activityCreatedMessage","participants","createdMessage","activityGwMessageToActivity","activityToActivityStatusChangeEvent","peer_factory","gateway_token","joinedMessage","joinedId","joined_id","joinedType","joined_type","joinedName","joined_name","left_id","list","ActivityMy","_m","am","_subscribeMyContextChanged","_subscribeMyWindowEvent","_subscribeActivitiesAttached","_subscribeActivitiesDetached","onWindowFrameColorChanged","_subscribeWindowFrameColorChanged","_w","announcedWindows","myWin","_myActivityJoinedCallbacks","onActivityLeft","_myActivityRemovedCallbacks","_myContextUpdateCallbacks","_myAttached","onActivityDetached","_myDetached","onAttachedToActivity","_myAttachedTo","onDetachedFromActivity","_myDetachedFrom","onFrameColorChanged","_myActivityFrameColorChanged","myActivity","_notifyMyContextChanged","_notifyMyWindowEvent","callbackStore","_notifyAttached","_notifyDetached","_notifyAttachedTo","_notifyDetachedFrom","detached","oldAct","ReadyMarker","signalsToWait","_signals","_callbacks","setCallback","isSet","isError","_error","signal","getError","EntityObservableCollection","processNew","_processNew","addOne","items","_items","internalEntity","_updateInternalCollections","_notifyListeners","getByName","getOrWait","entityAddedHandler","_listeners","listener","entityAsAny","isActivityDestroy","Destroyed","isWindowClose","Closed","oldEntity","ActivityManager","bridge","autoAnnounce","_activityTypes","_grabEntity","_windowTypes","_activities","_dataReadyMarker","_descriptorsMarker","_readyMarker","dataErr","_announcedWindows","errCatch","refreshDescriptors","_handleActivitiesAttached","_handleActivitiesDetached","_handleActivityDescriptorsRefreshed","_handleWindowFrameColorChanged","_subscribeForData","aw","_getInitialData","usingHc","ownerWindowType","helperWindowTypes","ownerDefinition","helperDefinitions","relativeTo","relativeDirection","windowStyleAttributes","actId","subscribeActivityTypeEvents","at","factoryMethod","util.isObject","getName","array","predicate","util.some","currentWindow","windowEventHandler","unsubscribeWindowEvents","subscribeWindowTypeEvents","wt","wrappingHandler","_windowHandlers","found","windowTypeOrConfiguration","relativeToWindow","invalidKeys","filteredWindowTypeOrConfiguration","wid","relativeWindowTypes","stackedWindow","tasks","removedKey","descriptors","stateWrapped","u","_attachedCallbacks","_detachedCallbacks","subscribeActivityFrameColorChanged","_frameColorChangesCallbacks","ac","descriptorAsObjectFromAPI","oldActivityId","newActivityId","ActivityManagementAPI","_my","activityTypes","_getActivityTypesWrapper","_getWindowTypesWrapper","registerFactory","unregisterFactory","announce","instances","onAttached","onActivityFrameColorChanged","ActivityAPI","_mgr","aware","inActivity","getAvailableFrameColors","ActivityModule","logLevel","_isUsingHCImplementation","gdMajorVersion","_isUsingGW3Implementation","checkIsUsingGW3Implementation","activityManager","disableAutoAnnounce","My","_api","_readyPromise","isUsingHCImplementation","isUsingGW3Implementation","GetFunctionalEntitlementMethodName","CanIMethodName","OnEventMethodName","objectValues","objectClone","ApplicationImpl","_appManager","CallbackRegistryFactory","onInstanceStarted","onInstanceStopped","onAppRemoved","app","onAppChanged","onAppAvailable","_props","IsReady","onAppUnavailable","Title","Version","autoStart","AutoStart","isShell","IsShell","caption","Caption","hidden","IsHidden","container","ApplicationName","ActivityWindowType","windowSettings","Arguments","allowMultiple","AllowMultiple","available","icon","Icon","iconURL","IconUrl","sortOrder","SortOrder","userProperties","UserProperties","isActivity","Type","Mode","styleAttributes","WindowStyleAttributes","searchFor","modeIndex","startModeIndex","stopModeIndex","style","updateFromProps","props","Name","start","startTimeout","waitForAGMInstance","waitForAGMReady","waitForApplicationInstance","waitFunc","onInstanceAgmServerReady","acsResult","Context","Options","waitForInterop","Id","handleInstanceStarted","ActivityId","IsActivityOwner","AgmServers","onAvailable","onUnavailable","onChanged","onRemoved","InstanceImpl","_appName","startFailed","_unsubscribeInstanceStopped","_unsubscribeInstanceAgmServerReady","activityInstance","isActivityOwner","_isActivityOwner","activityInstances","activityOwnerInstance","inst","_startUpContext","_title","isActivityInstance","_isActivityInstance","_inActivity","isSingleWindowApp","_agmInstance","onAgmReady","onStopped","getWindow","onWindowAdded","updateAgmInstanceFromProps","agmInstances","handleInstanceStopped","getContext","AppManagerImpl","_gdMajorVersion","_apps","_instances","_getAppId","_updateAppFromProps","_getAppOrThrow","_getInstanceId","_getInstanceAppName","_updateInstanceFromProps","_getInstanceOrThrow","_matchInstance","_getInstanceByIdAndName","EntitlementsImpl","_agmInvoke","Region","Branches","Branch","ResultMessage","funct","AgmNames.GetFunctionalEntitlementMethodName","Entitlement","Function","func","AgmNames.CanIMethodName","Result","registerMethod","transformFunction","_isMethodRegistered","prevent","InMemoryStoreCommandMethodName","InMemoryStore","import","apps","export","createAppDef","details","START_ONLY","SKIP_ICONS","appManager","entitlements","skipIcon","applications","handleAppAdded","snapshot","skipIcons","initiated","resolveFunc","rejectFunc","resultPromise","AgmNames.OnEventMethodName","streamData","events","onApplicationAddedEventArgs","handleAppUpdated","handleAppRemoved","handleAppReady","onApplicationStartedEventArgs","handleInstanceStartFailed","handleInstanceUpdated","handleInstanceAgmServerReady","handleBranchModified","handleBranchesModified","hasMyAppInSnapShot","hasMyInstanceInSnapShot","subscriptionFactory","onAppAdded","myInstance","getMyInstance","onInstanceUpdated","onInstanceStartFailed","getRegion","getBranches","getCurrentBranch","getFunctionalEntitlement","getFunctionalEntitlementBranch","setCurrentBranch","setRegion","currentUser","canI","canIBranch","onBranchesChanged","restart","onShuttingDown","inMemory","randomByte","encode","build","require$$0","T42JumpListAction","_executor","registerCallbackMethod","setEnabled","updateJumpList","createCategory","actions","category","toUpdateActions","removeCategory","manageActionCallback","createActions","categoryTitle","removeActions","catgoryTitle","currentCategory","getJumpListSettings","categories","actionCallback","getActionCallback","callbackId","singleInstanceTitle","multiInstanceTitle","getJumpList","updateAction","_groupActionCallbacks","categoryActionCallbacks","accCal","delete","_registered","caller","callbackAction","cal","CallbackFactory","_pendingWindows","getIfReady","remote","_pendingWindowsStates","urlChanged","setReadyState","targetWindowState","markReadyToShow","setUrlChangedState","waitFor","waitForTimeoutInMilliseconds","onReadyWindow","onAdded","fail","displays","workingAreaWidth","workingAreaHeight","monitor","totalOverlap","calculateTotalOverlap","display","max","r1","r2","r1x","r1y","r1xMax","r1yMax","r2x","r2y","r2xMax","r2yMax","min","JumpListActions","_categoryTitle","jumpListManager","getActions","JumpListCategories","getCategories","cat","JumpList","_categories","appManagerGetter","displayAPIGetter","channelsAPIGetter","getChannels","channels","resultWindow","_mode","_group","_bounds","_url","_frameColor","_focus","_neighbours","neighbours","_groupId","groupId","_isGroupHeaderVisible","isGroupHeaderVisible","_isTabHeaderVisible","isTabHeaderVisible","_isTabSelected","isTabSelected","_settings","_isVisible","_isSticky","isSticky","_isCollapsed","isCollapsed","_windowState","_tabGroupId","tabGroupId","_tabIndex","tabIndex","_frameId","frameId","_isLocked","isLocked","_frameButtons","frameButtons","_zoomFactor","zoomFactor","_placementSettings","placementSettings","_jumpList","moveResize","utils","callbackifyPromise","toBeVisible","onGroupChanged","onEventCore","replayArguments","getNeighboursByDirection","direction","winId","windowStore","getApplicationName","_APPLICATION_NAME","_t42","getWindowInfo","hostInstance","agmInstance","minHeight","maxHeight","minWidth","maxWidth","isFocused","opened","group","topNeighbours","leftNeighbours","rightNeighbours","bottomNeighbours","screen","getMonitor","monitors","jumpList","maximize","restore","minimize","maximizeRestore","collapse","expand","toggleCollapse","setTitle","newTitle","setStyle","styleAsAny","util.isNumber","setOnTop","onTop","resetButtons","buttons","setSizeConstraints","constraints","navigate","newUrl","util.isNullOrWhiteSpace","addFrameButton","buttonInfo","buttonId","imageBase64","removeFrameButton","show","hide","center","getDisplayCenterOfScreen","snap","showLoader","loader","hideLoader","lock","unlock","getIcon","setIcon","base64Image","setTabTooltip","tooltip","attachTab","tab","opt","sourceWindow","attachOptions","selected","detachTab","argsForSend","hideTabHeader","setTabHeaderVisible","toBeTabHeaderVisible","showPopup","createFlydown","setModalState","isModal","setZoomFactor","zoomIn","zoomOut","showDevTools","capture","captureOptions","flash","suppliedOptions","flashOptions","shouldFlash","setSticky","print","printOptions","printToPDF","printToPDFOptions","place","ungroup","ungroupOptions","unGroupChanged","newGroup","oldGroup","ignoreCache","download","opts","configure","configureWindow","getChannel","getWindowsWithChannels","channel","onClose","onUrlChanged","onTitleChanged","onFrameButtonAdded","onFrameButtonRemoved","onFrameButtonClicked","onCollapsed","onExpanded","onMinimized","onMaximized","onNormal","onVisibilityChanged","onContextUpdated","onLockingChanged","onBoundsChanged","onFocusChanged","onStickyChanged","onWindowAttached","onWindowDetached","onTabSelectionChanged","onTabHeaderVisibilityChanged","onClosing","onRefreshing","onZoomFactorChanged","onPlacementSettingsChanged","onNeighboursChanged","onNavigating","tabs","allWindows","w1","w2","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getAllTabs","getURL","getTitle","getDisplay","getByWindowId","resizeTo","moveTo","myParentId","parentInstanceId","joinChannel","leaveChannel","Events","handleUpdate","handleWindowClose","handleWindowChangeState","finished","handleTitleChanged","finally","handleVisibilityChanged","handleUrlChanged","handleWindowSettingsChanged","handleContextUpdated","handleFrameIsLockedChanged","handleBoundsChanged","handleFocusChanged","handleFrameButtonAdded","frameButton","buttonObj","btn","handleFrameButtonRemoved","frameButtonId","button","handleFrameButtonClicked","handleFrameColorChanged","handleFrameAttached","handleFrameSelectionChanged","newWindow","prevWindow","selectedWindow","previousWindow","handleCompositionChanged","neighbors","handleGroupHeaderVisibilityChanged","handleTabHeaderVisibilityChanged","handleGroupChanged","handleAttached","newTabGroupId","newFrameId","tabHeaderVisible","winsToBeNotified","handleWindowAttached","handleDetached","handleWindowDetached","handleZoomFactorChanged","handleIsStickyChanged","handlePlacementSettingsChanged","copy","displayAPI","agmTarget","_finished","handleEvent","finishedResolve","stylePromises","wait","tabTooltip","tabToolTip","toolTip","tabTitle","allowClose","allowCollapse","allowLockUnlock","allowMaximize","allowMinimize","buttonsConfig","versionNum","rej","resolveImmediately","areBoundsEqual","unsubscribeBoundsChanged","resolveTimeout","targetWindow","targetWindowId","snappingEdge","sourceWindowId","eventKeys","replace","contextWithoutUndefinedValues","swapUndefinedToNull","dataURL","toShow","optionsCopy","targetLocation","reformatedOptions","popupBounds","size","targetId","popupId","horizontalOffset","verticalOffset","fullOptions","reformatFlydownOptions","zoneIds","zones","z","flydownSize","cancel","clearFlydownArea","callbackData","zoneId","flydownId","flydownWindowBounds","flydownWindowId","responses","defaultResponse","groupWindowIds","filePath","enableDownloadBar","silent","fullPath","fileSize","executeWithoutToken","executeWithToken","addCloseHandler","assignGeneralIfUnassigned","zone","valueFromOptions","flydownBounds","flydownActiveArea","activeArea","areaIds","uns","executed","requested","areHeightsEqual","areWidthsEqual","areLeftsEqual","areTopsEqual","getWindowsByTabGroupId","GDEnvironment","wndId","normalizeInstance","_windowId","_appManagerGetter","_displayAPIGetter","_channelsAPIGetter","respondToEvent","streamResolve","streamReject","_waitTimeout","updateWindow","copyOptions","windowState","tabAttached","tabDetached","onEvent","onCompositionChanged","onGroupHeaderVisibilityChanged","onWindowGotFocus","onWindowLostFocus","handleFlydownBoundsRequested","windowInfo","readyResolve","extendedStreamEvent","getExtendedStreamEvent","existingWindow","mapToWindowConstructorOptions","windowInfoCreatedEvent","windowObjectAndEvents","theWindow","theWindowEvents","windowInfoBoundsChangedEvent","windowInfoUrlChangedEvent","windowInfoTitleChanged","windowInfoIsStickyChangedChanged","windowInfoCompositionChanged","groupHeaderVisible","windowInfoFocusChanged","focusChanged","oldTabGroupId","newWindowId","prevWindowId","windowObjAndEvents","windowFactory","isActiveTab","jumpListOptions","streamEvent","charAt","toUpperCase","callbackRegistry","_windowsId","groupObject","_mapToWindowObjects","winObjects","windowObject","_mapToWindowObject","mappedWindows","isHeaderVisible","showHeader","hideHeader","captureGroup","onHeaderVisibilityChanged","onWindowRemoved","groupAPI","groupInternal","removeWindow","_groups","heardForWindowsCounter","findGroupByWindow","groupObj","createdGroup","groupFactory","createOrGet","deleteIfEmpty","findGroupWrapperByWindow","currentGroup","fromGroup","toGroup","moveWindow","groupEvents","groupsAPI","groupsEvents","onWindowMoved","channelsGetter","groups","isReady","GD","gdPromise","envDetector","groupsFactory","myWindow","windowAdded","windowRemoved","optionsAsAny","windowsForListing","findById","onTabAttached","unsubFunc","unsubscribed","onTabDetached","removeWhere","condition","layouts","where","first","ContextProvider","activitiesGetter","registerRequestMethods","onSaveRequested","activityIsOwner","usersCbs","requestResult","autoSaveWindowContext","windowContext","activityContext","transformACSLayout","something","accumulator","convertedValue","LayoutImpl","components","LayoutsAPIImpl","activityGetter","isSlimMode","l","gotSnapshot","save","verifyNotSlimMode","layoutObject","ignoreInstances","invokeMethodAndTrack","activityIdToJoin","closeRunningInstance","closeRunningInstances","closeMe","restoreOptions","activityToJoin","ignoreActivityWindowTypes","reuseExistingWindows","reuseWindows","excludeFromClosing","store","layoutType","getObjectValues","Layouts","rename","newName","oldName","updateMetadata","hibernate","resume","onRestored","onRenamed","updateAppContextInCurrent","updateDefaultContext","skipStreamEvent","agmResult","streamEventReceived","handleResult","ACSStream","resolveReady","rejectReady","resolveGotSnapshot","rejectGotSnapshot","noRetry","transform","checkForLayoutEventMethod","IsSnapshot","addLayouts","OnLayoutAdded","removeLayouts","OnLayoutRemoved","changeLayouts","OnLayoutChanged","renameLayouts","OnLayoutRenamed","restoredLayout","OnLayoutRestored","Token","layoutsData","layoutData","removedLayouts","removedLayout","existingLayout","compareLayouts","changedLayouts","changedLayout","renamedLayouts","renamedLayout","layout1","layout2","restoredLayouts","acsStream","DisplayManager","callGD","DisplayCommand","GetAll","decorateDisplay","isPrimary","Capture","CaptureAll","GetMousePosition","original","decoratedDisplay","workAreaAsAny","workArea","GetByWindowId","onDisplayChanged","switchChannel","swId","newChannel","CONTEXT_PREFIX","LATEST_FDC3_TYPE","SharedContextSubscriber","subscribeFor","isChannel","createContextName","___","startsWith","channelContextName","getContextData","latest_fdc3_type","rest","updateChannel","updateData","fdc3Type","getFDC3Type","channelName","fdc3PropsArr","ChannelsImpl","shared","initialChannel","joinNoSelectorSwitch","subsKey","channelNames","getMy","joinCore","leaveCore","leaveNoSelectorSwitch","changed","changedKey","er","changeSelector","isInitialJoin","doesChannelExist","channelExistsPromise","intervalId","sharedContexts","interopLib","setupAGM","getWindowsOnChannel","CommandMethod","HotkeysImpl","hotkey","hkToLower","formatHotkey","hotkeys","firstHotkey","registerInvokeAGMMethod","isRegistered","getLibConfig","defaultMode","trueMode","getModeAsString","Glue42Notification","badge","dir","image","lang","renotify","requireInteraction","removeEventListener","dispatchEvent","PanelAPI","toggle","Notifications","panel","maxActions","methodsRegistered","bunchOfPromises","methodNameRoot","handleNotificationAction","notification","severity","glueRoutingDetailMethodName","sourceId","validActions","g42notificationId","g42action","g42interopMethod","g42interopTarget","stringValue","glueAction","attributes","dataAsString","panelExpiry","toastExpiry","g42notification","notifications","NOTIFICATIONS_CONFIGURE_METHOD_NAME","onaction","actionInterop","sourceNotificationId","onclick","clickInterop","ThemesImpl","core","getConfiguration","getMethodName","getAll","theme","setMethodName","sharedContextName","getThemesMethodName","setThemesMethodName","isSubscribed","GLUE42_FDC3_INTENTS_METHOD_PREFIX","Intents","intentFilter","intents","intent","contextType","ctToLower","contextTypes","ct","intentName","intentDef","isDynamicIntent","intentDefHandler","anAppHandler","intentHandler","startApp","raiseIntentToInstance","withIntentsInfo","appsWithIntents","applicationTitle","applicationDescription","applicationIcon","serverWindowIds","serverWindowId","T42WndGetInfo","windowsInfos","appWithIntents","appIntent","appDefIntent","windowsIdToTitle","instanceTitle","addIntentListener","registerPromise","intentFlag","myIntents","registeredIntent","interopServer","registeredMethod","addedMethod","windowsInfo","Prefs","verifyDataObject","verifyApp","verifyCallback","unsubscribeFn","registerInteropIfNeeded","interopMethodRegistered","Cookies","cookies","cookie","verifyCookieObject","callInfo","initialized","addCall","firstRun","factoryCore","_displays","_channels","getLibLogger","newLogger","loggerConfig","windowsLogger","WindowsFactory","debugLog","activityLogger","AppManagerFactory","layoutsConfig","lay","LayoutsFactory","hotkeysAPI","unregisterAll","displaysLogger","intentsAPI","notificationsAPI","themesAPI","themes","getCurrent","select","prefs","currentLog","glueFactoryLog","glueApi","CoreFactory","libraries","calls","whatToExpose","CreateGlue","shouldSetToWindow","autoInjected","Glue"],"mappings":"sQAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,KAClEP,EAAcC,EAAGC,EAC5B,EAEA,SAASO,EAAUR,EAAGC,GAElB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,EACnF,CAEA,IAAIK,EAAW,WAQX,OAPAA,EAAWZ,OAAOa,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOhB,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,GAEJF,EAASS,MAAMb,KAAMU,UAChC,EAEA,SAASI,EAAUC,EAASC,EAAYC,EAAGC,GACvC,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAAUA,EAAOC,KAAOT,EAAQQ,EAAOL,OAAS,IAAIN,GAAE,SAAUG,GAAWA,EAAQQ,EAAOL,UAAWO,KAAKR,EAAWK,GACnIH,GAAMN,EAAYA,EAAUL,MAAME,EAASC,GAAc,KAAKS,UAEtE,CAEA,SAASM,EAAYhB,EAASiB,GAC1B,IAAsGC,EAAGC,EAAG5B,EAAG6B,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPhC,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOiC,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEV,KAAMgB,EAAK,GAAIC,MAASD,EAAK,GAAIE,OAAUF,EAAK,IAAwB,mBAAXG,SAA0BT,EAAES,OAAOC,UAAY,WAAa,OAAO7C,OAAUmC,EACvJ,SAASM,EAAKhC,GAAK,OAAO,SAAUqC,GAAK,OACzC,SAAcC,GACV,GAAId,EAAG,MAAM,IAAIe,UAAU,mCAC3B,KAAOZ,OACH,GAAIH,EAAI,EAAGC,IAAM5B,EAAY,EAARyC,EAAG,GAASb,EAAU,OAAIa,EAAG,GAAKb,EAAS,SAAO5B,EAAI4B,EAAU,SAAM5B,EAAEM,KAAKsB,GAAI,GAAKA,EAAET,SAAWnB,EAAIA,EAAEM,KAAKsB,EAAGa,EAAG,KAAKlB,KAAM,OAAOvB,EAE3J,OADI4B,EAAI,EAAG5B,IAAGyC,EAAK,CAAS,EAARA,EAAG,GAAQzC,EAAEiB,QACzBwB,EAAG,IACP,KAAK,EAAG,KAAK,EAAGzC,EAAIyC,EAAI,MACxB,KAAK,EAAc,OAAXX,EAAEC,QAAgB,CAAEd,MAAOwB,EAAG,GAAIlB,MAAM,GAChD,KAAK,EAAGO,EAAEC,QAASH,EAAIa,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKX,EAAEI,IAAIS,MAAOb,EAAEG,KAAKU,MAAO,SACxC,QACI,KAAM3C,EAAI8B,EAAEG,MAAMjC,EAAIA,EAAEK,OAAS,GAAKL,EAAEA,EAAEK,OAAS,KAAkB,IAAVoC,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEX,EAAI,EAAG,SACjG,GAAc,IAAVW,EAAG,MAAczC,GAAMyC,EAAG,GAAKzC,EAAE,IAAMyC,EAAG,GAAKzC,EAAE,IAAM,CAAE8B,EAAEC,MAAQU,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYX,EAAEC,MAAQ/B,EAAE,GAAI,CAAE8B,EAAEC,MAAQ/B,EAAE,GAAIA,EAAIyC,EAAI,MAC7D,GAAIzC,GAAK8B,EAAEC,MAAQ/B,EAAE,GAAI,CAAE8B,EAAEC,MAAQ/B,EAAE,GAAI8B,EAAEI,IAAIU,KAAKH,GAAK,MACvDzC,EAAE,IAAI8B,EAAEI,IAAIS,MAChBb,EAAEG,KAAKU,MAAO,SAEtBF,EAAKf,EAAKpB,KAAKG,EAASqB,GAC1B,MAAOV,GAAKqB,EAAK,CAAC,EAAGrB,GAAIQ,EAAI,UAAeD,EAAI3B,EAAI,EACtD,GAAY,EAARyC,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAExB,MAAOwB,EAAG,GAAKA,EAAG,QAAK,EAAQlB,MAAM,GArB9BL,CAAK,CAACf,EAAGqC,KAuB7D,CAEA,SAASK,IACL,IAAK,IAAI5C,EAAI,EAAGC,EAAI,EAAG4C,EAAK1C,UAAUC,OAAQH,EAAI4C,EAAI5C,IAAKD,GAAKG,UAAUF,GAAGG,OACxE,IAAI0C,EAAI1D,MAAMY,GAAI+C,EAAI,EAA3B,IAA8B9C,EAAI,EAAGA,EAAI4C,EAAI5C,IACzC,IAAK,IAAI+C,EAAI7C,UAAUF,GAAIgD,EAAI,EAAGC,EAAKF,EAAE5C,OAAQ6C,EAAIC,EAAID,IAAKF,IAC1DD,EAAEC,GAAKC,EAAEC,GACjB,OAAOH,CACX,CAEA,IAAIK,EACQ,EADRA,EAEQ,EAFRA,EAGW,EAHXA,EAIQ,EAGZ,SAASC,EAAqBC,GAC1B,OAAIA,EAAOC,OAASH,EACT,YAEFE,EAAOC,OAASH,EACd,SAEFE,EAAOC,OAASH,EACd,SAEFE,EAAOC,OAASH,EACd,SAEJ,SACX,CACA,SAASI,EAAevC,GACpB,OAAIA,EAAMtB,cAAgB8D,KACf,YAEe,iBAAVxC,EACL,SAEe,iBAAVA,EACL,SAEe,iBAAVA,EACL,SAGA,QAEf,CACA,SAASyC,EAAgBJ,GACrB,IAAIK,EAAoB,GACpBJ,EAAOF,EAAqBC,GAChC,GAAa,WAATC,EAAmB,CACnB,IAAIK,EAAS1E,OAAO2E,KAAKP,EAAOrC,OAAO6C,QAAO,SAAUC,EAAMC,GAC1D,IAAIC,EAAYT,EAAeF,EAAOrC,MAAM+C,IAC5C,GAAkB,WAAdC,EAAwB,CACxB,IAAIC,EAAYC,EAAsBb,EAAOrC,MAAM+C,IACnDD,EAAKC,GAAO,CACRT,KAAM,SACNa,YAAa,GACbC,QAAS,GACTH,UAAWA,QAIfH,EAAKC,GAAO,CACRT,KAAMU,EACNG,YAAa,GACbC,QAAS,IAGjB,OAAON,IACR,IACHJ,EAAkBO,UAAYN,EAMlC,OAJAD,EAAkBW,KAAOC,EAAoBjB,EAAOkB,KAAKC,KAAK,KAAO,IAAMnB,EAAOgB,MAClFX,EAAkBJ,KAAOA,EACzBI,EAAkBS,YAAcd,EAAOc,YACvCT,EAAkBU,QAAU,GACrBV,CACX,CACA,SAASQ,EAAsBP,GAC3B,OAAO1E,OAAO2E,KAAKD,GAAQE,QAAO,SAAUC,EAAMC,GAC9C,IAAIT,EAAOC,EAAeI,EAAOI,IAgBjC,OAdID,EAAKC,GADI,WAATT,EACY,CACRA,KAAM,SACNa,YAAa,GACbC,QAAS,GACTH,UAAWC,EAAsBP,EAAOI,KAIhC,CACRT,KAAMA,EACNa,YAAa,GACbC,QAAS,IAGVN,IACR,GACP,CACA,SAASQ,EAAoBD,GACzB,YAAoB,IAATA,GAAwBA,EAAKjE,OAAS,GAAiB,MAAZiE,EAAK,GAChD,IAAMA,EAGNA,CAEf,CACA,SAASI,EAAqBpB,GAE1B,MAAa,cADFD,EAAqBC,GAErBG,KAAKkB,MAGLC,EAAuBtB,EAAOrC,MAE7C,CACA,SAAS2D,EAAuBhB,GAC5B,MAAsB,iBAAXA,EACAA,EAEJ1E,OAAO2E,KAAKD,GAAQE,QAAO,SAAUC,EAAMC,GAC9C,IAAI/C,EAAQ2C,EAAOI,GAanB,MAZqB,iBAAV/C,GAAsBA,EAAMtB,cAAgB8D,KACnDM,EAAKC,GAAOY,EAAuB3D,GAE9BA,EAAMtB,cAAgB8D,KAC3BM,EAAKC,GAAO,IAAIP,KAAKxC,GAAO4D,UAEvB5D,EAAMtB,cAAgBmF,QAC3Bf,EAAKC,GAAO/C,EAAM8D,WAGlBhB,EAAKC,GAAO/C,EAET8C,IACR,GACP,CACA,SAASiB,EAAQC,GACb,OAAOA,EAAInB,QAAO,SAAUoB,EAAMC,GAC9B,OAAOD,EAAKE,OAAO/F,MAAMgG,QAAQF,GAAaH,EAAQG,GAAaA,KACpE,GACP,CA8BA,SAASG,EAA6BC,GAClC,IACIC,EAASR,EADSO,EAAOE,KAAKC,qBAE9BC,EAA+BH,EA/BxBI,MAAK,SAAU3C,EAAGhE,GACzB,OAAKgE,EAAE4C,MAGF5G,EAAE4G,MAGA5G,EAAE4G,MAAQ5C,EAAE4C,OAFP,EAHD,KAMZ,GAwBCC,EAtBR,SAA8Bb,GAC1B,IAAIc,EAAM,GAUV,OATAd,EAAIe,SAAQ,SAAUC,EAAGC,EAAKjD,GAC1B,IAAIuB,EAAOyB,EAAEzB,KAAKC,KAAK,KACnByB,IAAQjD,EAAE5C,OAAS,EACnB0F,GAAOvB,EAAO,IAAMyB,EAAE3B,KAAO,KAAO2B,EAAE7B,YAGtC2B,GAAOvB,EAAO,IAAMyB,EAAE3B,KAAO,KAAO2B,EAAE7B,YAAc,OAGxD2B,EAAI1F,OAAS,IACN0F,EAAII,MAAM,EAAG,KAAO,MAGpBJ,CAEf,CAKwBK,CAAqBZ,GACzC,MAAO,CACHpB,YAAa0B,EACb7E,MAAO0E,EAAaE,MAE5B,CAqNA,IAAIQ,EACU,SAAUC,EAAYC,EAAQC,GACpC,GAAmB,OAAfF,GAA6C,iBAAfA,EAC9B,MAAM,IAAIG,MAAM,sBAEpB,GAAe,OAAXF,GAAqC,iBAAXA,EAC1B,MAAM,IAAIE,MAAM,kBAEpB,GAAkB,OAAdD,GAA2C,iBAAdA,EAC7B,MAAM,IAAIC,MAAM,sBAKxBC,EAAc,WACd,SAASA,EAAWJ,EAAYf,EAAQiB,EAAWvF,EAAOsC,GACtD7D,KAAK4G,WAAaA,EAClB5G,KAAK6F,OAASA,EACd7F,KAAK8G,UAAYA,EACjB9G,KAAKuB,MAAQA,EACbvB,KAAK6D,KAAOA,EACZ7D,KAAK8E,KAAO,GACZ6B,EAAiBC,EAAYf,EAAQiB,GACrC9G,KAAK8E,KAAOe,EAAOf,KAAK2B,MAAM,GAC9BzG,KAAK8E,KAAK5B,KAAK2C,EAAOjB,MACtB5E,KAAK4E,KAAOgC,EAAWhC,KACvB5E,KAAK0E,YAAckC,EAAWlC,YAC9BoC,EAAUG,aAAajH,MAmB3B,OAjBAR,OAAO0H,eAAeF,EAAW9G,UAAW,OAAQ,CAChDiH,IAAK,WACD,IAAIC,EACJ,OAA8B,QAAtBA,EAAKpH,KAAK6F,cAA2B,IAAPuB,OAAgB,EAASA,EAAGC,MAEtEC,YAAY,EACZC,cAAc,IAElB/H,OAAO0H,eAAeF,EAAW9G,UAAW,KAAM,CAC9CiH,IAAK,WAAc,OAAOnH,KAAK6F,OAAOf,KAAO,IAAMF,MACnD0C,YAAY,EACZC,cAAc,IAElBP,EAAW9G,UAAUsH,OAAS,SAAUC,GAEpC,OADAzH,KAAKuB,MAAQkG,EACNzH,KAAK8G,UAAUY,aAAa1H,OAEhCgH,CACX,IAEIW,EAAgB,SAAUC,GAE1B,SAASD,EAAaf,EAAYf,EAAQiB,EAAWvF,GACjD,OAAOqG,EAAOhH,KAAKZ,KAAM4G,EAAYf,EAAQiB,EAAWvF,EAAOmC,IAAuB1D,KAc1F,OAhBAF,EAAU6H,EAAcC,GAIxBD,EAAazH,UAAU2H,YAAc,SAAUC,GAC3C9H,KAAKwH,OAAOxH,KAAKuB,MAAQuG,IAE7BH,EAAazH,UAAU6H,UAAY,WAC/B/H,KAAK6H,YAAY,IAErBF,EAAazH,UAAU8H,UAAY,WAC/BhI,KAAK6H,aAAa,IAEtBF,EAAazH,UAAU+H,YAAc,SAAUH,GAC3C9H,KAAK6H,aAAmB,EAAPC,IAEdH,CACX,EAAEX,GAEEkB,EAAgB,SAAUN,GAE1B,SAASM,EAAatB,EAAYf,EAAQiB,EAAWvF,GACjD,OAAOqG,EAAOhH,KAAKZ,KAAM4G,EAAYf,EAAQiB,EAAWvF,EAAOmC,IAAuB1D,KAc1F,OAhBAF,EAAUoI,EAAcN,GAIxBM,EAAahI,UAAUsH,OAAS,SAAUC,GAEtC,OADAzH,KAAKmI,YAAYV,GACVzH,KAAK8G,UAAUY,aAAa1H,OAEvCkI,EAAahI,UAAUiI,YAAc,SAAUjE,GAC3C,IAAIkE,EAAQpI,KACZ,OAAOR,OAAO2E,KAAKnE,KAAKuB,OAAO+E,SAAQ,SAAUhD,QACpB,IAAdY,EAAOZ,KACd8E,EAAM7G,MAAM+B,GAAKY,EAAOZ,QAI7B4E,CACX,EAAElB,GAEEqB,EAAgB,SAAUT,GAE1B,SAASS,EAAazB,EAAYf,EAAQiB,EAAWvF,GACjD,OAAOqG,EAAOhH,KAAKZ,KAAM4G,EAAYf,EAAQiB,EAAWvF,EAAOmC,IAAuB1D,KAE1F,OAJAF,EAAUuI,EAAcT,GAIjBS,CACX,EAAErB,GAEEsB,EAAmB,SAAUV,GAE7B,SAASU,EAAgB1B,EAAYf,EAAQiB,EAAWvF,GACpD,OAAOqG,EAAOhH,KAAKZ,KAAM4G,EAAYf,EAAQiB,EAAWvF,EAAOmC,IAA0B1D,KAK7F,OAPAF,EAAUwI,EAAiBV,GAI3BU,EAAgBpI,UAAU+E,IAAM,WAC5BjF,KAAKwH,OAAO,IAAIzD,OAEbuE,CACX,EAAEtB,GAEF,SAASnB,EAAOjB,EAAMyC,EAAMkB,EAAU1B,EAAQnC,GAC1C,IAAK2C,EACD,MAAM,IAAIN,MAAM,0BAEpB,IAAKwB,EACD,MAAM,IAAIxB,MAAM,yBAEpB,IAwEwBjC,EAAM0D,EAxE1BC,EAAaF,EACbG,EAAQ9D,EACR+D,EAAejE,GAAe,GAC9BkE,EAAQvB,EACRwB,EAAUhC,EACViC,EA2DJ,SAASC,EAAWC,GAChB,IAAKA,IAAmBA,EAAenC,OACnC,MAAO,GAEX,IAAI/B,EAAOiE,EAAWC,EAAenC,QAErC,OADA/B,EAAK5B,KAAK8F,EAAepE,MAClBE,EAjECiE,CAAWlC,GACnBoC,EAAS,GACTC,GAiE0BV,EAjEC,MAiEP1D,EAjEAgE,IAkEHhE,EAAKnE,OAAS,EAAKmE,EAAKC,KAAKyD,GAAa,IAlEzB5D,GAClCmB,EAAOsB,EAAKtB,KACZoD,EAAc,GACdC,EAAW,GA6Bf,SAASC,EAAmBC,EAAcC,EAAchI,EAAO0F,GAC3D,IAAIuC,EAAY,CAAE5E,KAAM,IAEpB4E,EADwB,iBAAjBF,EACK,CAAE1E,KAAM0E,GAGRA,EAEhB,IAAIG,EAAWL,EAASM,QAAO,SAAUC,GAAkB,OAAOA,EAAe/E,OAAS4E,EAAU5E,QACpG,GAAI6E,EAAS9I,OAAS,EAAG,CACrB,IAAIiJ,EAAWH,EAAS,GACxB,GAAIG,EAAS/F,OAAS0F,EAClB,MAAM,IAAIxC,MAAM,kBAAoByC,EAAU5E,KAAO,4CAOzD,YALqB,IAAVrD,GACPqI,EACKpC,OAAOjG,GACPsI,OAAM,eAERD,EAEX,IAAIhG,EAASqD,EAAauC,GAE1B,OADAJ,EAASlG,KAAKU,GACPA,EA+BX,IAAIkG,EAAK,CACDlF,WACA,OAAO8D,GAEPhE,kBACA,OAAOiE,GAEPtB,WACA,OAAOuB,GAEP/B,aACA,OAAOgC,GAEX/D,KAAMgE,EACNI,GAAIA,EACJnD,KAAMA,EACFgE,iBACA,OAAOZ,GAEPa,cACA,OAAOZ,GAEXa,UAxGJ,SAAmBC,EAAYC,GAC3B,IAAKD,GAAoC,IAAtBA,EAAWvJ,OAC1B,MAAM,IAAIoG,MAAM,oBAEpB,IAAIqD,EAAQjB,EAAYO,QAAO,SAAUnJ,GAAK,OAAOA,EAAEqE,OAASsF,KAChE,GAAIE,EAAMzJ,OAAS,EACf,OAAOyJ,EAAM,GAEjB,IAAIC,EAAUxE,EAAOqE,EAAYtB,EAAOH,EAAYqB,EAAIK,GAExD,OADAhB,EAAYjG,KAAKmH,GACVA,GA+FPC,SAAU,WACN,OAAOrB,GAEXsB,SAhGJ,SAAkBpE,EAAOqE,GACrBvB,EAAS,CAAE9C,MAAOA,EAAOzB,YAAa8F,GACtC/B,EAAWgC,aAAaX,EAAIb,IA+F5ByB,aA7FJ,SAAsB9D,EAAYrF,GAC9B,OAAO8H,EAAmBzC,EAAYlD,EAAoBnC,GAAO,SAAUiI,GAAa,OAAO,IAAInB,EAAamB,EAAWM,EAAIrB,EAAYlH,OA6F3IoJ,gBArFJ,SAAyB/D,EAAYrF,GACjC,OAAO8H,EAAmBzC,EAAYlD,EAAuBnC,GAAO,SAAUiI,GAAa,OAAO,IAAIlB,EAAgBkB,EAAWM,EAAIrB,EAAYlH,OAqFjJqJ,aAzFJ,SAAsBhE,EAAYrF,GAC9B,OAAO8H,EAAmBzC,EAAYlD,EAAoBnC,GAAO,SAAUiI,GAAa,OAAO,IAAItB,EAAasB,EAAWM,EAAIrB,EAAYlH,OAyF3IsJ,aA7FJ,SAAsBjE,EAAYrF,GAC9B,OAAO8H,EAAmBzC,EAAYlD,EAAoBnC,GAAO,SAAUiI,GAAa,OAAO,IAAI7B,EAAa6B,EAAWM,EAAIrB,EAAYlH,OA6F3IyE,kBAjDJ,WACI,IAAI8E,EAAW,GAef,OAdItL,OAAO2E,KAAK8E,GAAQtI,OAAS,GAC7BmK,EAAS5H,KAAK,CACV0B,KAAM8D,EACN5D,KAAMgE,EACN3C,MAAO8C,EAAO9C,MACdzB,YAAauE,EAAOvE,cAG5ByE,EAAY7C,SAAQ,SAAUyE,GAC1B,IAAInJ,EAASmJ,EAAkB/E,oBAC3BpE,EAAOjB,OAAS,GAChBmK,EAAS5H,KAAKrC,MAAMiK,EAAUlJ,MAG/BkJ,IAoCX,OADArC,EAAWuC,aAAalB,GACjBA,CACX,CAEA,IAAImB,EAAc,WACd,SAASA,EAAWC,EAAS3C,GACzBA,EAAS4C,KAAKnL,MACdA,KAAK+F,KAAOF,EAAO,GAAI7F,KAAMuI,GAC7BvI,KAAKoL,iBAAiBpL,KAAK+F,KAAMmF,EAAQG,kBAAuCC,IAAxBJ,EAAQG,aAkDpE,OAhDAJ,EAAW/K,UAAUkL,iBAAmB,SAAUG,EAAYC,GAI1D,GAHyB,oBAAdC,WACPF,EAAWb,aAAa,YAAae,UAAUC,WAE/CF,GAAsC,oBAAbG,SAA0B,CACnD,IAAIC,EAAgBL,EAAWtB,UAAU,eACrC4B,EAAuB,SAAUnK,GACjC,IAAI0F,EACJ,GAAK1F,EAAEoK,OAAP,CAGA,IAAIA,EAASpK,EAAEoK,OACXC,EAAYD,GAAiD,QAAvC1E,EAAK0E,EAAOE,aAAa,gBAA6B,IAAP5E,EAAgBA,EAAU,GACnGwE,EAAchB,aAAa,mBAAoB,CAC3C/G,KAAM,QACNoI,UAAW,IAAIlI,KACf+H,OAAQ,CACJC,UAAWA,EACX7C,GAAI4C,EAAO5C,GACXrF,KAAM,IAAMiI,EAAOI,QAAQC,cAAgB,IAC3CC,KAAMN,EAAOM,MAAQ,QAIjCR,EAAchB,aAAa,OAAQ,CAC/ByB,MAAOV,SAASU,MAChBC,KAAMC,OAAOC,SAASJ,OAEtBT,SAASc,iBACTd,SAASc,iBAAiB,QAASZ,GAGnCF,SAASe,YAAY,UAAWb,GAGxBN,EAAWb,aAAa,aAAa,IAAK3G,MAAQsB,YAClE,IAAIsH,EAAYpB,EAAWb,aAAa,WAAY,IAChDkC,EAAgBrB,EAAWb,aAAa,UAAW,IACvD,GAAsB,oBAAX6B,OAAwB,CAC/B,QAA+B,IAApBA,OAAOC,SAA0B,CACxC,IAAIK,EAAWN,OAAOC,SAASJ,KAC/BO,EAAUnF,OAAOqF,QAEU,IAApBN,OAAOO,UACdF,EAAcpF,OAAO+E,OAAOO,SAASC,WAI1C9B,CACX,IAEI+B,EAAgB,WAChB,SAASA,KAgBT,OAdAA,EAAa9M,UAAUiL,KAAO,SAAU9D,KAExC2F,EAAa9M,UAAU8K,aAAe,SAAUnF,GAC5C,OAAO1E,QAAQC,WAEnB4L,EAAa9M,UAAUuK,aAAe,SAAU7G,EAAQuC,GACpD,OAAOhF,QAAQC,WAEnB4L,EAAa9M,UAAU+G,aAAe,SAAUrD,GAC5C,OAAOzC,QAAQC,WAEnB4L,EAAa9M,UAAUwH,aAAe,SAAU9D,GAC5C,OAAOzC,QAAQC,WAEZ4L,CACX,IAEIC,EAAe,WACf,SAASA,EAAYC,EAAKC,EAAuBC,GAC7CpN,KAAKkN,IAAMA,EACXlN,KAAKqN,UAAY,EACjBrN,KAAKmN,sBAAwB,IAC7BnN,KAAKoN,gBAAkB,IACvBpN,KAAKmN,sBAAwBA,QAAqEA,EAAwBnN,KAAKmN,sBAC/HnN,KAAKoN,gBAAkBA,QAAyDA,EAAkBpN,KAAKoN,gBACvGpN,KAAKsN,qBACLtN,KAAK6F,OAAS7F,KAAKkN,IAAIjD,UAAU,cAAe,qDAmCpD,OAjCAgD,EAAY/M,UAAUoN,mBAAqB,WACvC,IAAIlF,EAAQpI,KACZuN,YAAW,WACPnF,EAAMoF,UACNC,aAAY,WACRrF,EAAMoF,YACPpF,EAAMgF,mBACVpN,KAAKmN,wBAEZF,EAAY/M,UAAUsN,QAAU,WAC5B,IACIxN,KAAK0N,gBACL1N,KAAK2N,iBAET,MAAOvG,MAGX6F,EAAY/M,UAAUwN,cAAgB,WAClC,IAAIE,EAASrB,OAAOsB,YAAYD,OAChC5N,KAAK6F,OAAO6E,aAAa,SAAUoD,KAAKC,UAAU,CAC9CC,gBAAiBJ,EAAOI,gBACxBC,eAAgBL,EAAOK,mBAG/BhB,EAAY/M,UAAUyN,eAAiB,WACnC,IAAIO,EAAa3B,OAAOsB,YAAYM,aACpC,KAAID,EAAWvN,QAAUX,KAAKqN,WAA9B,CAGArN,KAAKqN,UAAYa,EAAWvN,OAC5B,IAAIyN,EAAkBF,EAAWG,KAAI,SAAU7N,GAAK,OAAOA,EAAE8N,YAC7DtO,KAAK6F,OAAO6E,aAAa,UAAWoD,KAAKC,UAAUK,MAEhDnB,CACX,IAEIjD,WAAqBkB,GACrB,IAAI3C,EAKAA,EAJC2C,EAAQqD,YAA4C,iBAAvBrD,EAAQqD,WAtkB9C,SAAcA,EAAYC,GACtB,IAIIC,EACAC,EALAtG,EAAQpI,KACZ,IAAKuO,GAAoC,iBAAfA,EACtB,MAAM,IAAIxH,MAAM,oCAIpB,IA0CI4H,EAAa,SAAUtH,GACvBuH,EAAavH,EAAKtB,OAElB6I,EAAe,SAAU/I,GACzBmF,EAAanF,GACbA,EAAOmE,QAAQ1D,SAAQ,SAAUC,GAC7BU,EAAaV,MAEjBV,EAAOkE,WAAWzD,SAAQ,SAAUuI,GAChCD,EAAaC,OAGjB7D,EAAe,SAAUnF,GAAU,OAAO/E,EAAUsH,OAAO,OAAQ,GAAQ,WAC3E,IAAIxE,EAAQkL,EACZ,OAAO/M,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EACD,YAAsBiJ,IAAlBzF,EAAOgB,OACA,CAAC,GAEL,CAAC,EAAG4H,GACf,KAAK,EAuBD,OAtBArH,EAAG9E,OACHsB,EAAS,CACLgB,KAAMC,EAAoBgB,EAAOf,KAAKC,KAAK,KAAO,IAAMc,EAAOjB,KAAO,UACtEf,KAAM,SACNW,UAAW,CACPuK,YAAa,CACTlL,KAAM,SACNa,YAAa,IAEjBsK,MAAO,CACHnL,KAAM,SACNa,YAAa,KAGrBA,YAAa,eACbC,QAAS,IAEbmK,EAAmB,CACfjL,KAAM,SACNmG,QAAS,CAACpG,IAEd8K,EAAQO,KAAKH,GACN,CAAC,WAyCpB7H,EAAe,SAAUrD,GAAU,OAAO9C,EAAUsH,OAAO,OAAQ,GAAQ,WAC3E,IAAI8G,EAAa3I,EAAGuI,EACpB,OAAO/M,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EAED,OADA6M,EAAcC,EAAYvL,GACnB,CAAC,EAAG6K,GACf,KAAK,EAWD,OAVArH,EAAG9E,OACHiE,EAAIvC,EAAgBkL,GACpBJ,EAAmB,CACfjL,KAAM,SACNmG,QAAS,CAACzD,IAEdmI,EAAQO,KAAKH,QACoB,IAAtBI,EAAY3N,OACnB6N,EAAiBF,GAEd,CAAC,WAkBpBE,EAAmB,SAAUxL,GAC7B,GAAIyL,IAAa,CACb,IAAI9N,EAAQyD,EAAqBpB,GAC7B0L,EAAoB,CACpBzL,KAAM,UACNK,OAAQ,CAAC,CACDU,KAAMC,EAAoBjB,EAAOkB,KAAKC,KAAK,KAAO,IAAMnB,EAAOgB,MAC/DrD,MAAOA,EACP0K,UAAWlI,KAAKkB,SAG5B,OAAOyJ,EAAQa,kBAAkBD,GAErC,OAAOnO,QAAQC,WAEf+N,EAAc,SAAUvL,GACxB,IAAIsL,EAAc9O,EAAS,GAAIwD,GAI/B,MAH4B,iBAAjBA,EAAOrC,OAAuC,OAAjBqC,EAAOrC,QAC3C2N,EAAY3N,MAAQnB,EAAS,GAAIwD,EAAOrC,QAErC2N,GAEPG,EAAY,WACZ,IAAIjI,EACJ,IAEI,OAD6C,QAAjCA,EAAKoH,EAAOgB,uBAAoC,IAAPpI,EAAgBA,aAAoB,OAAO,CAAO,KAG3G,MAAOqI,GACH,OAAO,IAGf,MAAO,CACHtE,KApMO,SAAU9D,GACjB,IAAIqI,EACJjB,EAAc,IAAItN,SAAQ,SAAUC,GAChCsO,EAAsBtO,MAE1BsN,EAAUH,EAAWoB,OAAO,YACpBC,UAAS,SAAUC,IAClBA,GAAaH,IACdA,IACAA,OAAsBpE,GAE1B,IAgBIwE,EAAuB,CACvBjM,KAAM,SACNmG,QAAS,CAlBS,CAClBpF,KAAM,SACNf,KAAM,SACNW,UAAW,CACPuK,YAAa,CACTlL,KAAM,SACNa,YAAa,IAEjBsK,MAAO,CACHnL,KAAM,SACNa,YAAa,KAGrBA,YAAa,eACbC,QAAS,MAMb+J,EAAQO,KAAKa,GACTD,GACAlB,EAAWtH,MAGnBqH,EAAQ3J,KAAK,CACTc,OAAQ2I,EAAO3I,OACfkK,QAASvB,EAAOuB,QAChBC,SAAUxB,EAAOwB,YA8JrBhF,aAAcA,EACdP,aA5Ge,SAAU5E,EAAQM,GAAS,OAAOrF,EAAUsH,OAAO,OAAQ,GAAQ,WAClF,IAAI6H,EAAsBC,EAAUC,EACpC,OAAOpO,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EAAG,MAAO,CAAC,EAAGoM,GACnB,KAAK,EA4BD,OA3BArH,EAAG9E,OACH2N,EAAuB,CACnBpM,KAAM,UACNK,OAAQ,CAAC,CACDU,KAAMC,EAAoBgB,EAAOf,KAAKC,KAAK,KAAO,IAAMc,EAAOjB,KAAO,UACtErD,MAAO,CACHwN,YAAa5I,EAAMzB,YACnBsK,MAAO7I,EAAMA,OAEjB8F,UAAWlI,KAAKkB,SAG5ByJ,EAAQO,KAAKgB,GACbC,EAAWtK,EAA6BC,GACxCsK,EAAa,CACTtM,KAAM,UACNuM,QAAS7B,EAAW8B,OACpBnM,OAAQ,CAAC,CACDU,KAAM,SACNrD,MAAO,CACHwN,YAAamB,EAASxL,YACtBsK,MAAOkB,EAAS3O,OAEpB0K,UAAWlI,KAAKkB,SAG5ByJ,EAAQO,KAAKkB,GACN,CAAC,WA4EpBlJ,aAAcA,EACdS,aAnDe,SAAU9D,GAAU,OAAO9C,EAAUsH,OAAO,OAAQ,GAAQ,WAC3E,IAAI8G,EACJ,OAAOnN,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EAED,OADA6M,EAAcC,EAAYvL,GACnB,CAAC,EAAG6K,GACf,KAAK,EAGD,OAFArH,EAAG9E,OACH8M,EAAiBF,GACV,CAAC,WA2C5B,CAyXmBoB,CAAIpF,EAAQqD,WAAYrD,GAHxB,IAAI8B,EAKnB,IACIzB,EADO,IAAIN,EAAWC,EAAS3C,GACbxC,KACjBmF,EAAQqF,uBACThF,EAAaA,EAAWtB,UAAU,QAEtC,IAAIiD,EAkBR,SAAuBrH,GACnB,IAII2K,EAJAC,EAAkB5K,EAAOoE,UAAU,aACnCyG,EAAM,CACN9L,KAAM,YAGN+L,EAAoB,SAAU/L,EAAMgM,EAAQC,GAC5C,QAAoB,IAATjM,GAAiC,KAATA,EAC/B,MAAM,IAAImC,MAAM,qBAEf,QAAsB,IAAX6J,GAAqC,KAAXA,EACtC,MAAM,IAAI7J,MAAM,uBAEf,QAAuB,IAAZ8J,GAAuC,KAAZA,EACvC,MAAM,IAAI9J,MAAM,wBAEfyJ,EAIDA,EAAchJ,OAAO,CACjB5C,KAAMA,EACNgM,OAAQA,EACRC,QAASA,IANbL,EAAgBC,EAAgB7F,aAAa8F,EAAK,CAAE9L,KAAMA,EAAMgM,OAAQA,EAAQC,QAASA,KAWjG,OADAhL,EAAO2K,cAAgBG,EAChB9K,CACX,CA/CciL,CAAcvF,GAExB,OAGJ,SAAkB2B,EAAKsB,GACnB,IAAIpH,EAAIqI,EACR,GAAsB,oBAAXlD,OACP,OAEJ,IAAIwE,EAA+I,QAAjItB,EAAgF,QAA1ErI,EAAgB,OAAXmF,aAA8B,IAAXA,YAAoB,EAASA,OAAOO,gBAA6B,IAAP1F,OAAgB,EAASA,EAAG4C,eAA4B,IAAPyF,OAAgB,EAASA,EAAGuB,uBACnLD,IACAvC,EAASuC,IAETvC,aAAuC,EAASA,EAAOyC,UAChD,IAAIhE,EAAYC,EAAKsB,EAAOrB,sBAAuBqB,EAAOpB,gBAEzE,CAhBI8D,CAAShE,EAAKhC,EAAQ8F,wBACf9D,CACV,EA8CD,SAASiE,EAAejG,GACpB,GAAIA,GAAWA,EAAQkG,eACiB,mBAA1BlG,EAAQkG,eACW,QAA1BlG,EAAQkG,eACkB,WAA1BlG,EAAQkG,eACkB,UAA1BlG,EAAQkG,cACX,MAAM,IAAIrK,MAAM,mIAA2ImE,EAAQkG,cAAgB,eAEvL,IAAIC,EAAoBnG,GAA4C,mBAA1BA,EAAQkG,eAAgClG,EAAQkG,cACtFE,EAAY,GAqEhB,SAASC,EAAaC,EAAmBlN,GACrC,IAAImN,EAAWD,aAA6BzK,MAAQyK,EAAoB,IAAIzK,MAAMyK,GAClF,GAAIH,EACAA,EAAkBI,OADtB,CAIA,IAAIpL,EAAM,qDAAwD/B,EAAM,aAAgBmN,EAASC,MACjG,GAAIxG,EACA,OAAQA,EAAQkG,eACZ,IAAK,MACD,OAAOO,QAAQC,MAAMvL,GACzB,IAAK,SACD,OACJ,IAAK,QACD,MAAM,IAAIU,MAAMV,GAG5BsL,QAAQC,MAAMvL,IAYlB,MAAO,CACHwL,IAlGJ,SAAavN,EAAKwN,EAAUC,GACxB,IAAIC,EAAkBV,EAAUhN,GA0BhC,OAzBK0N,IACDA,EAAkB,GAClBV,EAAUhN,GAAO0N,GAErBA,EAAgB9O,KAAK4O,GACjBC,GACAxE,YAAW,WACPwE,EAAmBzL,SAAQ,SAAU2L,GACjC,IAAI7K,EACJ,GAA8B,QAAzBA,EAAKkK,EAAUhN,UAAyB,IAAP8C,OAAgB,EAASA,EAAG8K,SAASJ,GACvE,IACQnS,MAAMgG,QAAQsM,GACdH,EAASjR,WAAMyK,EAAW2G,GAG1BH,EAASjR,WAAMyK,EAAW,CAAC2G,IAGnC,MAAOE,GACHZ,EAAaY,EAAK7N,SAI/B,GAEA,WACH,IAAI8N,EAAYd,EAAUhN,GACrB8N,IASoB,KANzBA,EAAYA,EAAUhO,QAAO,SAAUiO,EAAKC,EAASC,GAIjD,OAHMD,IAAYR,GAAYO,EAAI1R,SAAW4R,GACzCF,EAAInP,KAAKoP,GAEND,IACR,KACW1R,cACH2Q,EAAUhN,GAGjBgN,EAAUhN,GAAO8N,KAyDzBI,QArDJ,SAAiBlO,GAEb,IADA,IAAImO,EAAe,GACVC,EAAK,EAAGA,EAAKhS,UAAUC,OAAQ+R,IACpCD,EAAaC,EAAK,GAAKhS,UAAUgS,GAErC,IAAIV,EAAkBV,EAAUhN,GAChC,IAAK0N,GAA8C,IAA3BA,EAAgBrR,OACpC,MAAO,GAEX,IAAIgS,EAAU,GAWd,OAVAX,EAAgB1L,SAAQ,SAAUwL,GAC9B,IACI,IAAIlQ,EAASkQ,EAASjR,WAAMyK,EAAWmH,GACvCE,EAAQzP,KAAKtB,GAEjB,MAAOuQ,GACHQ,EAAQzP,UAAKoI,GACbiG,EAAaY,EAAK7N,OAGnBqO,GAkCPC,MAbJ,WACItB,EAAY,IAaZuB,SAXJ,SAAkBvO,GACQgN,EAAUhN,WAIzBgN,EAAUhN,IAQzB,GACewO,QAAU3B,EACzB,IAAI4B,EAAM5B,EAEN6B,EAAmB,WACnB,SAASA,EAAgBC,EAAUC,GAC/B,IAAI9K,EAAQpI,KACZA,KAAKmT,SAAWJ,IAChB/S,KAAKoT,GAAKH,EAASI,OACnBrT,KAAKoT,GAAGE,SAAQ,SAAUC,EAASC,GAC/BpL,EAAMqL,eAAeD,MACtB1R,MAAK,SAAU4R,GACdtL,EAAMsL,OAASA,KA4CvB,OAzCAlU,OAAO0H,eAAe8L,EAAgB9S,UAAW,yBAA0B,CACvEiH,IAAK,WACD,OAAO,GAEXG,YAAY,EACZC,cAAc,IAElByL,EAAgB9S,UAAUyT,WAAa,SAAUtN,GAC7C,OAAIrG,KAAK0T,QACL1T,KAAK0T,OAAOzE,KAAK5I,GACVlF,QAAQC,aAAQkK,IAGhBnK,QAAQE,OAAO,kBAG9B2R,EAAgB9S,UAAU+O,KAAO,SAAU2E,GACvC,OAAOzS,QAAQE,OAAO,kBAE1B2R,EAAgB9S,UAAU2T,UAAY,SAAU/B,GAC5C,OAAO9R,KAAKmT,SAAStB,IAAI,YAAaC,IAE1CkB,EAAgB9S,UAAU4T,mBAAqB,SAAUhC,GAErD,OADAA,GAAS,GACF,cAEXkB,EAAgB9S,UAAU6T,MAAQ,WAC9B,OAAO5S,QAAQC,WAEnB4R,EAAgB9S,UAAU8T,KAAO,WAC7B,OAAO7S,QAAQC,WAEnB4R,EAAgB9S,UAAU0E,KAAO,WAC7B,MAAO,aAEXoO,EAAgB9S,UAAU2P,UAAY,WAClC,OAAO1O,QAAQC,WAEnB4R,EAAgB9S,UAAUuT,eAAiB,SAAUpN,GACjDrG,KAAKmT,SAASX,QAAQ,YAAanM,IAEhC2M,CACX,IAEIiB,EAAyB,WACzB,SAASA,EAAsBC,EAAYhB,GACvC,IAAI9K,EAAQpI,KACZA,KAAKkT,OAASA,EACdlT,KAAKmT,SAAWJ,IAChB/S,KAAKmU,OAAS,IAAIC,aAAaF,GAC/BlU,KAAKmU,OAAOE,KAAKC,UAAY,SAAU5S,GACnC0G,EAAMqL,eAAe/R,EAAE6S,OAuC/B,OApCA/U,OAAO0H,eAAe+M,EAAsB/T,UAAW,yBAA0B,CAC7EiH,IAAK,WACD,OAAO,GAEXG,YAAY,EACZC,cAAc,IAElB0M,EAAsB/T,UAAUyT,WAAa,SAAUtN,GAEnD,OADArG,KAAKmU,OAAOE,KAAKG,YAAYnO,GACtBlF,QAAQC,WAEnB6S,EAAsB/T,UAAU+O,KAAO,SAAU2E,GAC7C,OAAOzS,QAAQE,OAAO,kBAE1B4S,EAAsB/T,UAAU2T,UAAY,SAAU/B,GAClD,OAAO9R,KAAKmT,SAAStB,IAAI,YAAaC,IAE1CmC,EAAsB/T,UAAU4T,mBAAqB,SAAUhC,GAE3D,OADAA,GAAS,GACF,cAEXmC,EAAsB/T,UAAU6T,MAAQ,WACpC,OAAO5S,QAAQC,WAEnB6S,EAAsB/T,UAAU8T,KAAO,WACnC,OAAO7S,QAAQC,WAEnB6S,EAAsB/T,UAAU0E,KAAO,WACnC,MAAO,iBAEXqP,EAAsB/T,UAAU2P,UAAY,WACxC,OAAO1O,QAAQC,WAEnB6S,EAAsB/T,UAAUuT,eAAiB,SAAUpN,GACvDrG,KAAKmT,SAASX,QAAQ,YAAanM,IAEhC4N,CACX,IAEIQ,EAAS,WACT,SAASA,KA+BT,OA7BAA,EAAMC,kBAAoB,WACtB,GAAsB,oBAAXnI,QAGNA,OAAOoI,aAGPpI,OAAOoI,YAAYC,QAAxB,CAGA,IAAIC,EAAMC,OAAOvI,OAAOoI,YAAYC,QAAQG,OAAO,EAAG,IACtD,OAAOC,MAAMH,QAAOvJ,EAAYuJ,IAEpCJ,EAAMQ,OAAS,WACX,QAA6B,IAAlBR,EAAMS,QACb,OAAOT,EAAMS,QAEjB,GAAsB,oBAAX3I,OAEP,OADAkI,EAAMS,SAAU,GACT,EAEX,IACIT,EAAMS,QAA6D,qBAAnD1V,OAAOU,UAAUmF,SAASzE,KAAKuU,OAAOC,SAE1D,MAAO1T,GACH+S,EAAMS,SAAU,EAEpB,OAAOT,EAAMS,SAEVT,CACX,IAEIY,EAAkB,WAClB,SAASA,IACL,IAAIjN,EAAQpI,KACZA,KAAK2B,UAAW,EAChB3B,KAAKsV,UAAW,EAChBtV,KAAKuV,QAAU,IAAIpU,SAAQ,SAAUC,EAASC,GAC1C+G,EAAMhH,QAAU,SAAUd,GACtB8H,EAAMkN,UAAW,EACjBlU,EAAQd,IAEZ8H,EAAM/G,OAAS,SAAU8Q,GACrB/J,EAAMzG,UAAW,EACjBN,EAAO8Q,OAcnB,OAVAkD,EAAeG,MAAQ,SAAUC,GAC7B,OAAO,IAAItU,SAAQ,SAAUC,GAAW,OAAOmM,WAAWnM,EAASqU,OAEvEjW,OAAO0H,eAAemO,EAAenV,UAAW,QAAS,CACrDiH,IAAK,WACD,OAAOnH,KAAK2B,UAAY3B,KAAKsV,UAEjChO,YAAY,EACZC,cAAc,IAEX8N,CACX,IAEIK,EAAS,GAIb,SAASC,EAAOC,GACZ,IAAIhM,EAAW8L,EAAOE,GACtB,GAAIhM,EACA,OAAOA,EAEX,IAAIiM,EAAQ,GACZ,SAAS5Q,IACL,OAAO,IAAIlB,MAAOoB,UAEtB,IAEI2Q,EACAC,EAHAC,EAAY/Q,IAUhB,SAASgR,EAAKrR,EAAM6Q,GAChB,IAAIS,EAAcT,QAAmCA,EAAOxQ,IACxDkR,EAAO,EACPN,EAAMlV,OAAS,IACfwV,EAAOD,EAAcL,EAAMA,EAAMlV,OAAS,GAAG8U,MAEjDI,EAAM3S,KAAK,CAAE0B,KAAMA,EAAM6Q,KAAMS,EAAaC,KAAMA,IAftDF,EAAK,QAASD,GAiBd,IAAII,EAAW,CACPJ,gBACA,OAAOA,GAEPF,cACA,OAAOA,GAEPC,aACA,OAAOA,GAEXM,KAxBJ,WAII,OAFAJ,EAAK,MADLH,EAAU7Q,KAEV8Q,EAASD,EAAUE,GAsBnBC,KAAMA,EACNJ,MAAOA,GAGX,OADAH,EAAOE,GAAaQ,EACbA,CACX,CAEA,IAAIE,EAAuB7B,EAAMQ,SAAWsB,QAAQ,MAAQhK,OAAOiK,UAC/DC,EAAM,WACN,SAASA,EAAGxD,EAAUC,GAOlB,GANAlT,KAAK0W,aAAef,EAAM,cAC1B3V,KAAK2W,UAAW,EAChB3W,KAAK4W,UAAY7D,IACjB/S,KAAK6W,WAAa,GAClB7W,KAAKiT,SAAWA,EAChBjT,KAAKkT,OAASA,GACTlT,KAAKiT,SAAS6D,GACf,MAAM,IAAI/P,MAAM,iBAyKxB,OAtKA0P,EAAGvW,UAAU2T,UAAY,SAAU/B,GAC/B,OAAO9R,KAAK4W,UAAU/E,IAAI,YAAaC,IAE3C2E,EAAGvW,UAAU+O,KAAO,SAAU5I,EAAK6E,GAC/B,IAAI9C,EAAQpI,KACZ,OAAO,IAAImB,SAAQ,SAAUC,EAASC,GAClC+G,EAAM2O,yBAAwB,WAC1B,IAAI3P,EACJ,IACwB,QAAnBA,EAAKgB,EAAM0O,UAAuB,IAAP1P,GAAyBA,EAAG6H,KAAK5I,GAC7DjF,IAEJ,MAAOM,GACHL,EAAOK,MAEZL,OAGXoV,EAAGvW,UAAU8T,KAAO,WAChB,IAAI5L,EAAQpI,KAGZ,OAFAA,KAAKkT,OAAO8D,KAAK,iBACjBhX,KAAK2W,UAAW,EACT,IAAIxV,SAAQ,SAAUC,EAASC,GAClC+G,EAAM2O,wBAAwB3V,EAASC,OAG/CoV,EAAGvW,UAAU6T,MAAQ,WAKjB,OAJA/T,KAAK2W,UAAW,EACZ3W,KAAK8W,IACL9W,KAAK8W,GAAG/C,QAEL5S,QAAQC,WAEnBqV,EAAGvW,UAAU4T,mBAAqB,SAAUhC,GACxC,OAAO9R,KAAK4W,UAAU/E,IAAI,qBAAsBC,IAEpD2E,EAAGvW,UAAU0E,KAAO,WAChB,OAAO5E,KAAKiT,SAAS6D,IAEzBL,EAAGvW,UAAU2P,UAAY,WACrB,IAAIzI,EACe,QAAlBA,EAAKpH,KAAK8W,UAAuB,IAAP1P,GAAyBA,EAAG2M,QACvD,IAAIkD,EAAK,IAAI5B,EAIb,OAHArV,KAAK+W,yBAAwB,WACzBE,EAAG7V,aAEA6V,EAAG1B,SAEdkB,EAAGvW,UAAU6W,wBAA0B,SAAUjF,EAAUoF,GACvD,IAAI9P,EACJ8P,EAASA,QAAuCA,aAAyB,EACpElX,KAAK2W,SAIkE,KAApD,QAAlBvP,EAAKpH,KAAK8W,UAAuB,IAAP1P,OAAgB,EAASA,EAAG+P,aAI5DnX,KAAK6W,WAAW3T,KAAK,CAAE4O,SAAUA,EAAUoF,OAAQA,IAC/ClX,KAAK6W,WAAWlW,OAAS,GAG7BX,KAAKoX,cAPDtF,IAJAoF,EAAO,sBAAwBlX,KAAKiT,SAAS6D,GAAK,oCAa1DL,EAAGvW,UAAUkX,WAAa,SAAUC,EAAeC,GAC/C,OAAOxW,EAAUd,UAAM,OAAQ,GAAQ,WAEnC,IAAIoI,EAAQpI,KACZ,OAAO+B,EAAY/B,MAAM,SAAUyP,GAC/B,OAAQA,EAAGpN,OACP,KAAK,EAQD,GAPArC,KAAK0W,aAAaT,KAAK,uBACD3K,IAAlB+L,IACAA,EAAgBrX,KAAKiT,SAASsE,wBAEP,IAAhBD,IACPA,EAActX,KAAKiT,SAASuE,wBAEZlM,IAAhBgM,EAA2B,CAC3B,GAAoB,IAAhBA,EAEA,OADAtX,KAAKyX,qBAAqB,sBAAwBzX,KAAKiT,SAAS6D,GAAK,kCAC9D,CAAC,GAEZ9W,KAAKkT,OAAOwE,MAAM,cAAgBJ,EAAc,sBAAwBD,EAAgB,QAE5F5H,EAAGpN,MAAQ,EACf,KAAK,EAED,OADAoN,EAAGlN,KAAKW,KAAK,CAAC,EAAG,GAAK,IACf,CAAC,EAAGlD,KAAK2X,kBACpB,KAAK,EAID,OAHAlI,EAAGnN,OACHtC,KAAK0W,aAAaT,KAAK,oBACvBjW,KAAKyX,uBACE,CAAC,EAAG,GACf,KAAK,EAMD,OALKhI,EAAGnN,OACRiL,YAAW,WACP,IAAIqK,OAA0BtM,IAAhBgM,OAA4BhM,EAAYgM,EAAc,EACpElP,EAAMgP,WAAWC,EAAeO,KACjCP,GACI,CAAC,EAAG,GACf,KAAK,EAAG,MAAO,CAAC,WAKhCZ,EAAGvW,UAAUyX,eAAiB,WAC1B,IAAIvP,EAAQpI,KACRiX,EAAK,IAAI5B,EAuCb,OAtCArV,KAAKkT,OAAOwE,MAAM,oBAAsB1X,KAAKiT,SAAS6D,GAAK,OAC3D9W,KAAK8W,GAAK,IAAIR,EAAqBtW,KAAKiT,SAAS6D,IAAM,IACvD9W,KAAK8W,GAAGe,QAAU,SAAU1F,GACxB,IAAI2F,EAAS,GACb,IACIA,EAAShK,KAAKC,UAAUoE,GAE5B,MAAOP,GACH,IAAImG,EAAS,IAAIC,QAUjBF,EAAShK,KAAKC,UAAUoE,GATT,SAAU7N,EAAK/C,GAC1B,GAAqB,iBAAVA,GAAgC,OAAVA,EAAgB,CAC7C,GAAIwW,EAAOE,IAAI1W,GACX,OAEJwW,EAAOlG,IAAItQ,GAEf,OAAOA,KAIf0V,EAAG5V,OAAO,SACV+G,EAAM8P,qBAAoB,EAAOJ,IAErC9X,KAAK8W,GAAGqB,QAAU,SAAUhG,GACxB/J,EAAM8K,OAAO8D,KAAK,aAAe7E,GACjC8E,EAAG5V,OAAO,UACV+G,EAAM8P,qBAAoB,IAE9BlY,KAAK8W,GAAGsB,OAAS,WACb,IAAIhR,EACJgB,EAAMsO,aAAaT,KAAK,aACxB7N,EAAM8K,OAAO8D,KAAK,cAAmD,QAAlC5P,EAAKgB,EAAM6K,SAASoF,gBAA6B,IAAPjR,OAAgB,EAASA,EAAGkR,cACzGrB,EAAG7V,UACHgH,EAAM8P,qBAAoB,IAE9BlY,KAAK8W,GAAGxC,UAAY,SAAUd,GAC1BpL,EAAMwO,UAAUpE,QAAQ,YAAagB,EAAQe,OAE1C0C,EAAG1B,SAEdkB,EAAGvW,UAAUuX,qBAAuB,SAAU7F,GAC1C5R,KAAK6W,WAAWvQ,SAAQ,SAAUiS,GAC1B3G,EACI2G,EAAUrB,QACVqB,EAAUrB,OAAOtF,GAIrB2G,EAAUzG,cAGlB9R,KAAK6W,WAAa,IAEtBJ,EAAGvW,UAAUgY,oBAAsB,SAAUM,EAAQV,GACjD9X,KAAK4W,UAAUpE,QAAQ,qBAAsBgG,EAAQV,IAElDrB,CACX,IASA,IAAIgC,EAAO,EAgBX,IAMIC,EACAC,EAEAC,EATAC,EAAiB,CACjBC,UAVJ,WAEI,OADAL,GAAe,KAAPA,EAAc,OAAS,cAEnC,EAQIA,KANJ,SAAiBM,GACbN,EAAOM,CACX,GAOIC,EAAW,mEAMf,SAASC,IACLL,GAAW,CACf,CAEA,SAASM,EAAcC,GACnB,GAAKA,GAQL,GAAIA,IAAeT,EAAnB,CAIA,GAAIS,EAAWxY,SAAWqY,EAASrY,OAC/B,MAAM,IAAIoG,MAAM,uCAAyCiS,EAASrY,OAAS,qCAAuCwY,EAAWxY,OAAS,gBAAkBwY,GAG5J,IAAIC,EAASD,EAAWE,MAAM,IAAI3P,QAAO,SAAS4P,EAAMC,EAAKhU,GAC1D,OAAOgU,IAAQhU,EAAIiU,YAAYF,MAGlC,GAAIF,EAAOzY,OACP,MAAM,IAAIoG,MAAM,uCAAyCiS,EAASrY,OAAS,yDAA2DyY,EAAOrU,KAAK,OAGtJ2T,EAAWS,EACXF,UAxBQP,IAAaM,IACbN,EAAWM,EACXC,IAuBZ,CAiCA,SAASQ,IACL,OAAIb,IAGJA,EAtBJ,WACSF,GACDQ,EAAcF,GAQlB,IALA,IAGIU,EAHAC,EAAcjB,EAASW,MAAM,IAC7BO,EAAc,GACdvW,EAAIwV,EAAeC,YAGhBa,EAAYhZ,OAAS,GACxB0C,EAAIwV,EAAeC,YACnBY,EAAiBG,KAAKC,MAAMzW,EAAIsW,EAAYhZ,QAC5CiZ,EAAY1W,KAAKyW,EAAYI,OAAOL,EAAgB,GAAG,IAE3D,OAAOE,EAAY7U,KAAK,GAC5B,CAMeiV,GAEf,CAYA,IAAIC,EAAa,CACbC,WAlDJ,SAAoBf,GAEhB,OADAD,EAAcC,GACPT,CACX,EAgDID,KA9CJ,SAAmBA,GACfI,EAAeJ,KAAKA,GAChBE,IAAiBF,IACjBQ,IACAN,EAAeF,EAEvB,EAyCI0B,OARJ,SAAgB5H,GAEZ,OADuBkH,IACClH,EAC5B,EAMIqG,SAAUa,GAGVW,EAA2B,iBAAX7N,SAAwBA,OAAO6N,QAAU7N,OAAO8N,UAWpE,IAAIC,EATJ,WACI,IAAKF,IAAWA,EAAOG,gBACnB,OAAyC,GAAlCV,KAAKC,MAAsB,IAAhBD,KAAKW,UAE3B,IAAIC,EAAO,IAAIC,WAAW,GAE1B,OADAN,EAAOG,gBAAgBE,GACN,GAAVA,EAAK,EAChB,EAkBA,IAAIE,EAdJ,SAAgBR,EAAQS,GAMpB,IALA,IACI/Y,EADAgZ,EAAc,EAGdC,EAAM,IAEFjZ,GACJiZ,GAAYX,EAAWS,GAAW,EAAIC,EAAgB,GAASP,KAC/DzY,EAAO+Y,EAAUf,KAAKkB,IAAI,GAAIF,EAAc,GAC5CA,IAEJ,OAAOC,CACX,EAiBA,IAAIE,EARJ,SAAgB9R,GACZ,IAAIgR,EAAaD,EAAWrB,WAC5B,MAAO,CACHhE,QAA+C,GAAtCsF,EAAWe,QAAQ/R,EAAG6L,OAAO,EAAG,IACzCZ,OAA8C,GAAtC+F,EAAWe,QAAQ/R,EAAG6L,OAAO,EAAG,IAEhD,EAmBA,IAAImG,GAfJ,SAAmBhS,GACf,IAAKA,GAAoB,iBAAPA,GAAmBA,EAAGvI,OAAS,EAC7C,OAAO,EAKX,IAFA,IAAIuZ,EAAaD,EAAWC,aACxBiB,EAAMjS,EAAGvI,OACLH,EAAI,EAAGA,EAAI2a,EAAI3a,IACnB,IAAmC,IAA/B0Z,EAAWe,QAAQ/R,EAAG1I,IACtB,OAAO,EAGf,OAAO,CACX,EAII4a,GAxLJ,SAA8BC,EAAIC,GACjC,OAAiCD,EAA1BC,EAAS,CAAEC,QAAS,IAAiBD,EAAOC,SAAUD,EAAOC,OACrE,CAsLYC,EAAqB,SAAUF,GAU3C,IAaIG,EAGAC,EANAC,EAAmB,EAYvB,SAASC,IAEL,IAAId,EAAM,GAENe,EAAUhC,KAAKC,MAAmC,MAA5B/V,KAAKkB,MA1BjB,gBA0Cd,OAdI4W,IAAYH,EACZD,KAEAA,EAAU,EACVC,EAAkBG,GAGtBf,GAAYH,EAASV,EAAWE,OA/BtB,GAgCVW,GAAYH,EAASV,EAAWE,OAAQwB,GACpCF,EAAU,IACVX,GAAYH,EAASV,EAAWE,OAAQsB,IAE5CX,GAAYH,EAASV,EAAWE,OAAQ0B,EAG5C,CAwCAP,EAAOC,QAAUK,EACjBN,EAAOC,QAAQK,SAAWA,EAC1BN,EAAOC,QAAQ9C,KAjCf,SAAcqD,GAEV,OADA7B,EAAWxB,KAAKqD,GACTR,EAAOC,OAClB,EA+BAD,EAAOC,QAAQpH,OAvBf,SAAgB4H,GAEZ,OADAJ,EAAkBI,EACXT,EAAOC,OAClB,EAqBAD,EAAOC,QAAQrB,WAdf,SAAoB8B,GAKhB,YAJsB1Q,IAAlB0Q,GACA/B,EAAWC,WAAW8B,GAGnB/B,EAAWrB,UACtB,EASA0C,EAAOC,QAAQU,OAASjB,EACxBM,EAAOC,QAAQL,QAAUA,EACzB,OACkBU,YACAnD,QACAtE,UACA+F,cACA+B,UACAf,QAElB,IAAIgB,GAAUd,GAEd,SAASe,GAAexM,EAAQpB,EAAY2E,EAAQkJ,EAAiBC,GACnD,MAAV1M,IACAA,EAAS,UAEbyM,EAAkBA,GAAmB,CAAC,WACtCC,EAAgBA,GAAiB,CAAC,SAClC,IAEIC,EAFAC,GAAW,EACXC,GAAkB,EAElBC,GAAgB,EAChBnL,EAAYyB,IAChBxE,EAAWmO,cA4EX,WACID,GAAgB,EAChBvJ,EAAOwE,MAAM,sBACb6E,GAAW,EACXC,GAAkB,EAClBlL,EAAUkB,QAAQ,SAAU,CAAEkK,cAAc,OAhFhDnO,EAAWoO,UAkFX,WACIF,GAAgB,EACZD,IACAtJ,EAAOwE,MAAM,iDACb3S,EAAKuX,OArFb/N,EAAWqO,GAAG,WAAW,SAAUvW,GAAO,OAAOwW,EAAqBxW,MACtEkI,EAAWqO,GAAG,SAAS,SAAUvW,GAAO,OAAOyW,EAAmBzW,MAClEkI,EAAWqO,GAAG,UAAU,SAAUvW,GAAO,OAAOwW,EAAqBxW,MACjE+V,GACAA,EAAgB9V,SAAQ,SAAUyW,GAC9BxO,EAAWqO,GAAGG,GAAI,SAAU1W,GAAO,OAAOwW,EAAqBxW,SAGnEgW,GACAA,EAAc/V,SAAQ,SAAUyW,GAC5BxO,EAAWqO,GAAGG,GAAI,SAAU1W,GAAO,OAAOyW,EAAmBzW,SAGrE,IAAI2W,EAAc,GAClB,SAASjY,EAAKmG,GAEV,OADAoR,EAAiBpR,EACV,IAAI/J,SAAQ,SAAUC,EAASC,GAClC,GAAIkb,EACAnb,QADJ,CAIA,IAAIqN,EACJ,GAAe,WAAXkB,EACAlB,EAAcgO,EAAgBtb,QAAQC,QAAQ,IAAMD,QAAQE,OAAO,iCAGnE6R,EAAOwE,MAAM,kBAAoB/H,GAOjClB,EAAcQ,EANA,CACVpL,KAAM,OACNoZ,YAAatN,EACbA,OAAQ,SACRzE,QAASA,IAIjBuD,EACK3M,MAAK,YA+BlB,WACIoR,EAAOwE,MAAM,YAAc/H,GAC3B4M,GAAW,EACX,IAAIW,EAAeV,EACnBA,GAAkB,EAClBlL,EAAUkB,QAAQ,WAAY0K,GAnCtBC,GACA/b,OAECyI,OAAM,SAAUsI,GACjBe,EAAOwE,MAAM,iBAAmB/H,EAAS,YAAc7B,KAAKC,UAAUoE,IACtE9Q,EAAO8Q,UA0DnB,SAAS2K,EAAmBzW,GACxB,GAAIsJ,IAAWtJ,EAAIsJ,OAAnB,CAGA,IAAIyN,EAAY/W,EAAIgX,WACpB,GAAKD,EAAL,CAGA,IAAIE,EAAQN,EAAYI,GACnBE,GAGLA,EAAM1L,MAAMvL,KAEhB,SAASwW,EAAqBxW,GAC1B,GAAIA,EAAIsJ,SAAWA,EAAnB,CAGA,IAAIyN,EAAY/W,EAAIgX,WACpB,GAAKD,EAAL,CAGA,IAAIE,EAAQN,EAAYI,GACnBE,GAGLA,EAAMC,QAAQlX,KAElB,SAASmX,IACL,OAAOtB,KAEX,SAASjN,EAAK5I,EAAKoX,EAAKvS,GACpBA,EAAUA,GAAW,GACrB7E,EAAIgX,WAAahX,EAAIgX,YAAcG,IACnCnX,EAAIsJ,OAAStJ,EAAIsJ,QAAUA,EACtBzE,EAAQwS,aACTrX,EAAI+J,QAAU7B,EAAW8B,QAE7B,IAAI+M,EAAY/W,EAAIgX,WACpB,OAAO,IAAIlc,SAAQ,SAAUC,EAASC,GAClC2b,EAAYI,GAAa,CACrBG,QAAS,SAAUI,UACRX,EAAYI,GACnBO,EAAWC,KAAOH,EAClBrc,EAAQuc,IAEZ/L,MAAO,SAAUiM,GACb3K,EAAO4K,KAAK,cAAgBhQ,KAAKC,UAAU8P,GAAY,gBAAkB/P,KAAKC,UAAU1H,WACjF2W,EAAYI,GACnBS,EAASD,KAAOH,EAChBpc,EAAOwc,KAGftP,EACKU,KAAK5I,EAAK6E,GACVrB,OAAM,SAAUsI,GACjB6K,EAAYI,GAAWxL,MAAM,CAAEO,IAAKA,UAUhD,MAAO,CACHpN,KAAMA,EACNgZ,MA1HJ,WACI,MAAe,WAAXpO,EACOxO,QAAQC,WAEnB8R,EAAOwE,MAAM,oBAAsB/H,EAAS,OAM5C6M,GAAkB,EACXvN,EANQ,CACXpL,KAAM,QACNoZ,YAAatN,EACbA,OAAQ,WAIP7N,MAAK,WACNya,GAAW,EACXjL,EAAUkB,QAAQ,aAEjB3I,OAAM,WACP0S,GAAW,EACXjL,EAAUkB,QAAQ,eAyGtB5C,SAjFJ,SAAkBkC,GAId,OAHIyK,GACAzK,GAAS,GAENR,EAAUO,IAAI,WAAYC,IA8EjCkM,OA5EJ,SAAgBlM,GAIZ,OAHKyK,GACDzK,IAEGR,EAAUO,IAAI,SAAUC,IAyE/B7C,KAAMA,EACNM,kBAZJ,SAA2BlJ,GAIvB,OAHAA,EAAIgX,WAAahX,EAAIgX,WAAahX,EAAIgX,WAAaG,IACnDnX,EAAIsJ,OAAStJ,EAAIsJ,QAAUA,EAC3BtJ,EAAI+J,QAAU7B,EAAW8B,OAClB9B,EAAWU,KAAK5I,IASvBuW,GAAI,SAAU/Y,EAAMiO,GAChBvD,EAAWqO,GAAG/Y,GAAM,SAAUwC,GAC1B,GAAIA,EAAIsJ,SAAWA,EAGnB,IACImC,EAASzL,GAEb,MAAO3E,GACHwR,EAAOtB,MAAM,qBAAuBlQ,EAAI,OAASA,EAAEgQ,MAAQ,gBAAkB5D,KAAKC,UAAU1H,GAAM3E,QAI9Gib,SAAU,SAAU7K,GAAY,OAAOvD,EAAWoO,SAAS7K,IAC3DmM,UAAW,SAAUnM,GAAY,OAAOvD,EAAW0P,UAAUnM,IAC7D4K,aAAc,SAAU5K,GAAY,OAAOvD,EAAWmO,aAAa5K,IAC/DzB,aACA,OAAO9B,EAAW8B,QAElBV,aACA,OAAOA,GAGnB,CAEA,IAAIuO,GAAmB,WACnB,SAASA,EAAgB3P,EAAY0E,EAAUC,GAC3C,IAAI9K,EAAQpI,KACZA,KAAKuO,WAAaA,EAClBvO,KAAKiT,SAAWA,EAChBjT,KAAKkT,OAASA,EACdlT,KAAKme,gBAAkB,EACvBne,KAAKoe,WAAa,aAClBpe,KAAKqe,cAAgBre,KAAKoe,WAAWzd,OACrCX,KAAKse,WAAate,KAAKqe,cAAgB,EACvCre,KAAKue,oBAAsBve,KAAKoe,WAAW,GAC3Cpe,KAAKmT,SAAWJ,IAChB/S,KAAKwe,aAAc,EACnBxe,KAAKye,gBAAiB,EACtBze,KAAK0e,cAAe,EACpB1e,KAAK2e,qBAAuB,EAC5B3e,KAAK4e,SAAW,GAChBrQ,EAAWmO,cAAa,WACpBtU,EAAMyW,wBAEV7e,KAAK8e,OAoTT,OAlTAtf,OAAO0H,eAAegX,EAAgBhe,UAAW,aAAc,CAC3DiH,IAAK,WACD,OAAOnH,KAAKwe,aAEhBlX,YAAY,EACZC,cAAc,IAElB2W,EAAgBhe,UAAU6e,qBAAuB,SAAUvL,GACvD,IAAIpL,EAAQpI,KACRqG,EAAMyH,KAAKkR,MAAMxL,GAAS,SAAUlP,EAAK/C,GACzC,GAAqB,iBAAVA,EACP,OAAOA,EAEX,GAAIA,EAAMZ,OAASyH,EAAMkW,WACrB,OAAO/c,EAEX,GAAIA,EAAM,KAAO6G,EAAMmW,oBACnB,OAAOhd,EAEX,GAAIA,EAAM0d,UAAU,EAAG7W,EAAMiW,iBAAmBjW,EAAMgW,WAClD,OAAO7c,EAEX,IACI,IAAI2d,EAAeC,SAAS5d,EAAM0d,UAAU7W,EAAMiW,cAAe9c,EAAMZ,QAAS,IAChF,OAAIqU,MAAMkK,GACC3d,EAEJ,IAAIwC,KAAKmb,GAEpB,MAAOE,GACH,OAAO7d,MAGf,MAAO,CACH8E,IAAKA,EACLgZ,QAAShZ,EAAIxC,OAGrBqa,EAAgBhe,UAAUof,oBAAsB,SAAU9L,GACtD,IAAI+L,EAAYxb,KAAK7D,UAAUoO,OAC/B,IACI,IAAIkR,EAAexf,KAAKoe,WAKxB,OAJAra,KAAK7D,UAAUoO,OAAS,WACpB,OAAOkR,EAAexf,KAAKmF,WAElB2I,KAAKC,UAAUyF,WAI5BzP,KAAK7D,UAAUoO,OAASiR,IAGhCrB,EAAgBhe,UAAUuf,qBAAuB,SAAUjM,GACvD,IAAKA,EAAQ3P,KACT,MAAM,IAAIkD,MAAM,oCAEpB,MAAO,CACHV,IAAKmN,EACL6L,QAAS7L,EAAQ3P,OAGzBqa,EAAgBhe,UAAUwf,oBAAsB,SAAUlM,GACtD,OAAOA,GAEX0K,EAAgBhe,UAAUyf,MAAQ,SAAUnR,EAAQqB,GAChD,OAAO/O,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAI4f,EAAuBC,EAAKzY,EAAI0Y,EAAUC,EAAaC,EAAY3Z,EAAK4Z,EAAOxQ,EAAIyQ,EACvF,OAAOne,EAAY/B,MAAM,SAAUmgB,GAC/B,OAAQA,EAAG9d,OACP,KAAK,EASD,GARArC,KAAKkT,OAAOwE,MAAM,iBAClB1X,KAAKogB,YAAc5R,EACdxO,KAAKogB,cACNpgB,KAAKogB,YAAc,CAAEC,SAAU,GAAIC,SAAU,KAEjDtgB,KAAKye,gBAAiB,EACtBmB,EAAiB,GACjB5f,KAAKuO,WAAWgS,aAAe/R,EAAO+R,cACjC/R,EAAO+R,aAAc,MAAO,CAAC,EAAG,GACrC,IAAK1Q,EAAW,MAAO,CAAC,EAAG,GAC3BsQ,EAAG9d,MAAQ,EACf,KAAK,EAED,OADA8d,EAAG5d,KAAKW,KAAK,CAAC,EAAG,GAAK,IACf,CAAC,EAAGlD,KAAKwgB,iBACpB,KAAK,EAGD,OAFAP,EAAQE,EAAG7d,OACXkM,EAAO+R,aAAeN,EACf,CAAC,EAAG,GACf,KAAK,EAGD,OAFAJ,EAAMM,EAAG7d,OACTtC,KAAKkT,OAAO4K,KAAK,8CAAgD+B,aAAiC,EAASA,EAAIrM,UAAYqM,IACpH,CAAC,EAAG,GACf,KAAK,EAID,OAHAD,EAAea,OAAS,gBACxBb,EAAeK,MAAQzR,EAAO+R,aAC9BvgB,KAAKuO,WAAWgS,aAAe/R,EAAO+R,aAC/B,CAAC,EAAG,IACf,KAAK,EACD,MAA0B,SAApB/R,EAAOkS,SAA6B,CAAC,EAAG,IAC9Cd,EAAee,SAAW,MAC1Bf,EAAea,OAAS,eAClBjS,EAAOoS,cAAgBpS,EAAOqS,WACpCzZ,EAAKwY,EACE,CAAC,EAAGpR,EAAOoS,aAAapS,EAAOqS,UAAW,QAFM,CAAC,EAAG,IAG/D,KAAK,EAKD,OAJAzZ,EAAG6Y,MACEE,EAAG7d,OACCiS,KACAlP,SAAS,UACX,CAAC,EAAG,GACf,KAAK,EAAG,MAAM,IAAI0B,MAAM,uBACxB,KAAK,EAAG,MAAO,CAAC,EAAG,IACnB,KAAK,EACD,GAAIyH,EAAOyR,MACPL,EAAea,OAAS,eACxBb,EAAeK,MAAQzR,EAAOyR,WAE7B,GAAIzR,EAAO6R,SACZT,EAAea,OAAS,SACxBb,EAAeD,MAAQnR,EAAO6R,SAC9BT,EAAekB,OAAStS,EAAO8R,aAE9B,KAAI9R,EAAOmS,SAKZ,MAAM,IAAI5Z,MAAM,uBAAyB+G,KAAKC,UAAUS,IAJxDoR,EAAee,SAAWnS,EAAOmS,SACjCf,EAAemB,gBAAkBvS,EAAOuS,gBAK5CZ,EAAG9d,MAAQ,GACf,KAAK,GACDyd,EAAW,CACPjc,KAAM,QACNwU,SAAUrY,KAAKiT,SAASoF,SACxBuH,eAAgBA,GAEhBpR,EAAOqS,YACPf,EAASzC,WAAa7O,EAAOqS,WAEjC7gB,KAAKghB,aAAe7E,GAAc,SAAUnc,KAAKuO,WAAYvO,KAAKkT,OAAO+N,UAAU,iBAAkB,CACjG,UACA,QACA,2BAEJlB,EAAc,CAAErC,YAAY,GACxB1d,KAAK0e,eACLqB,EAAY1I,cAAgBrX,KAAKiT,SAASsE,kBAC1CwI,EAAYmB,WAAalhB,KAAKiT,SAASuE,mBAE3C2I,EAAG9d,MAAQ,GACf,KAAK,GACD8d,EAAG5d,KAAKW,KAAK,CAAC,GAAI,GAAI,GAAI,KAC1B8c,OAAa,EACbG,EAAG9d,MAAQ,GACf,KAAK,GACD,MAAO,CAAC,EAAGrC,KAAKghB,aAAa/R,KAAK6Q,OAAUxU,EAAWyU,IAC3D,KAAK,GAED,MAAmB,4BADnB1Z,EAAM8Z,EAAG7d,QACCuB,KAA2C,CAAC,EAAG,KACzDoc,EAAQkB,OAAOC,KAAK/a,EAAIuZ,eAAeK,MAAO,UACxCzR,EAAOoS,cAAgBpS,EAAOqS,WACpCpR,EAAKqQ,EAASF,eACP,CAAC,EAAGpR,EAAOoS,aAAapS,EAAOqS,UAAWZ,KAFM,CAAC,EAAG,KAG/D,KAAK,GACDxQ,EAAGwQ,MACEE,EAAG7d,OACCiS,KACAlP,SAAS,UAClB8a,EAAG9d,MAAQ,GACf,KAAK,GAED,OADAyd,EAASzC,WAAa7O,EAAOqS,UACtB,CAAC,EAAG,IACf,KAAK,GACD,GAAiB,YAAbxa,EAAIxC,KAEJ,OADAmc,EAAa3Z,EACN,CAAC,EAAG,IAEV,KAAiB,UAAbA,EAAIxC,KACH,IAAIkD,MAAM,0BAA4BV,EAAIyR,QAG1C,IAAI/Q,MAAM,kDAAoDV,EAAIxC,MAEhF,KAAK,GAAI,MAAO,CAAC,EAAG,IACpB,KAAK,GAWD,OAVA7D,KAAK0e,cAAe,EACpB1e,KAAKkT,OAAOwE,MAAM,gCAAkCsI,EAAW5P,SAC/DpQ,KAAKuO,WAAW8B,OAAS2P,EAAW5P,QACpCpQ,KAAKuO,WAAW8S,iBAAmBrB,EAAWsB,kBAC9CthB,KAAKuO,WAAWgT,iBAAmBvB,EAAWwB,kBAC1CxB,EAAW9U,UACXlL,KAAKuO,WAAW0R,MAAQD,EAAW9U,QAAQuW,aAC3CzhB,KAAKuO,WAAWyI,KAAOgJ,EAAW9U,QAAQ8L,MAE9ChX,KAAK0hB,aAAY,GACV,CAAC,EAAG1B,EAAWsB,mBAC1B,KAAK,GAGD,MAFApB,EAAQC,EAAG7d,OACXtC,KAAKkT,OAAOtB,MAAM,kCAAoCsO,EAAM1M,SAAW0M,EAAM7Z,KAAO6Z,EAAMpI,QAAUoI,GAAQA,GACtGA,EACV,KAAK,GAID,OAHI1R,GAAUA,EAAOoS,cAAgBpS,EAAOqS,WACxCrS,EAAOoS,aAAapS,EAAOqS,UAAW,MAEnC,CAAC,GACZ,KAAK,GAAI,MAAO,CAAC,WAKjC3C,EAAgBhe,UAAUyhB,OAAS,WAC/B,OAAO7gB,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAI4hB,EACJ,OAAO7f,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EASD,OARArC,KAAKkT,OAAOwE,MAAM,kBAClB1X,KAAKye,gBAAiB,EAClBze,KAAK6hB,WACLC,aAAa9hB,KAAK6hB,WAEtBD,EAAW5hB,KAAK4e,SAASvQ,KAAI,SAAUK,GACnCA,EAAQqP,WAEL,CAAC,EAAG5c,QAAQ4gB,IAAIH,IAC3B,KAAK,EAED,OADAxa,EAAG9E,OACI,CAAC,WAK5B4b,EAAgBhe,UAAUyc,SAAW,SAAU7K,GAI3C,OAHI9R,KAAKwe,aACL1M,IAEG9R,KAAKmT,SAAStB,IAAI,aAAcC,IAE3CoM,EAAgBhe,UAAUyP,OAAS,SAAUqS,EAAYC,EAAc7F,EAAiBC,GACpF,IAAI3N,EAAU1O,KAAK4e,SAASlV,QAAO,SAAUnJ,GAAK,OAAOA,EAAEoP,SAAWqS,KAAe,GAKrF,OAJKtT,IACDA,EAAUyN,GAAc6F,EAAYhiB,KAAKuO,WAAY0T,EAAc7F,EAAiBC,GACpFrc,KAAK4e,SAAS1b,KAAKwL,IAEhBA,GAEXwP,EAAgBhe,UAAU2e,mBAAqB,WAC3C,IAAIzW,EAAQpI,KAGZ,GAFAA,KAAK0hB,aAAY,GACA1hB,KAAKye,gBACJze,KAAK0e,aAAc,CACjC,GAAI1e,KAAK2e,sBAAwB,EAC7B,OAEJ3e,KAAK2e,uBAGT,GADA3e,KAAKkT,OAAOwE,MAAM,qCAAuC1X,KAAKye,gBAC1Dze,KAAKye,eAAgB,CACrB,IAAKze,KAAKogB,YACN,MAAM,IAAIrZ,MAAM,iBAEpB/G,KAAKuO,WAAWoR,MAAM3f,KAAKogB,aAAa,GACnCvW,OAAM,WACP0D,WAAWnF,EAAMyW,mBAAmBqD,KAAK9Z,GAAQA,EAAM6K,SAASsE,mBAAqB,UAIjG2G,EAAgBhe,UAAUwhB,YAAc,SAAUngB,GAC9CvB,KAAKwe,YAAcjd,EACfvB,KAAKwe,aACLxe,KAAKmT,SAASX,QAAQ,eAG9B0L,EAAgBhe,UAAU4e,KAAO,WAC7B,IAAI1W,EAAQpI,KACPA,KAAKye,iBAGNze,KAAKwe,aACLxe,KAAKuO,WAAWU,KAAK,CAAEpL,KAAM,SAEjC7D,KAAK6hB,UAAYtU,YAAW,WACxBnF,EAAM0W,SACP,OAEPZ,EAAgBhe,UAAUiiB,UAAY,WAIlC,OAAKniB,KAAKghB,aAGHhhB,KAAKghB,aAAa/R,KANJ,CACjBpL,KAAM,iBAML/B,MAAK,SAAUsgB,GAChB,OAAOA,EAAInC,SAJJ9e,QAAQE,OAAO,IAAI0F,MAAM,8BAOxCmX,EAAgBhe,UAAUsgB,cAAgB,WACtC,QAAsBlV,WAAXiB,OAAsB,CAC7B,IAAIO,EAAWP,OAAOO,SACtB,GAAIA,EACA,OAAOA,EAASuV,aAGxB,OAAOlhB,QAAQE,OAAO,IAAI0F,MAAM,uBAE7BmX,CACX,IAEIoE,GAAuB,WACvB,SAASA,EAAoBC,GACzBviB,KAAKwiB,WAAa,GAClBxiB,KAAKyiB,SAAW,GAChBziB,KAAK0iB,KAAO,GACZ1iB,KAAK2iB,aAAe,GACpB3iB,KAAKuiB,MAAQ,GACb,IAAK,IAAI7P,EAAK,EAAGkQ,EAAUL,EAAO7P,EAAKkQ,EAAQjiB,OAAQ+R,IAAM,CACzD,IAAImQ,EAAOD,EAAQlQ,GACnB1S,KAAKuiB,MAAMM,EAAKje,MAAQie,EACxB7iB,KAAKwiB,WAAWtf,KAAK2f,EAAKje,OA6DlC,OA1DA0d,EAAoBpiB,UAAUiL,KAAO,SAAUoD,GAC3C,IAAInG,EAAQpI,KACZA,KAAKuO,WAAaA,EAClB,IAAK,IAAImE,EAAK,EAAGtL,EAAKpH,KAAKwiB,WAAY9P,EAAKtL,EAAGzG,OAAQ+R,IAgBnD,IAfA,IAAIoQ,EAAS1b,EAAGsL,GACZqQ,EAAU,SAAUlf,GACpB,IAAImf,EAAWC,EAAON,aAAa9e,GAMnC,GALKmf,IACDA,EAAW,GAEfA,GAAY,EACZC,EAAON,aAAa9e,GAAQmf,EACxBA,EAAW,EACX,MAAO,WAEX,IAAIE,EAAM3U,EAAWqO,GAAG/Y,GAAM,SAAUwC,GAAO,OAAO+B,EAAM+a,eAAetf,EAAMwC,MACjF4c,EAAOP,KAAK7e,GAAQqf,GAEpBD,EAASjjB,KACJyP,EAAK,EAAG0Q,EAAKngB,KAAKuiB,MAAMO,GAAQM,MAAO3T,EAAK0Q,EAAGxf,OAAQ8O,IAAM,CAElEsT,EADW5C,EAAG1Q,MAK1B6S,EAAoBpiB,UAAUijB,eAAiB,SAAUtf,EAAMwC,GAC3D,IAAIrG,KAAKqjB,QAAWhd,EAGpB,IAAK,IAAIqM,EAAK,EAAGtL,EAAKpH,KAAKwiB,WAAY9P,EAAKtL,EAAGzG,OAAQ+R,IAAM,CACzD,IAAI4Q,EAASlc,EAAGsL,GAChB,IAAgD,IAA5C1S,KAAKuiB,MAAMe,GAAQF,MAAMnI,QAAQpX,GAAc,CAC/C,IAAI4e,EAAWziB,KAAKyiB,SAASa,IAAW,GACxCtjB,KAAKyiB,SAASa,GAAUb,EACxBA,EAASvf,KAAKmD,MAI1Bic,EAAoBpiB,UAAUqjB,MAAQ,SAAU3e,EAAMkN,GAClD,IAAI1K,EACA0K,IACC9R,KAAKyiB,SAAS7d,IAAS,IAAI0B,QAAQwL,UAEjC9R,KAAKyiB,SAAS7d,GACrB,IAAK,IAAI8N,EAAK,EAAGjD,EAAKzP,KAAKuiB,MAAM3d,GAAMwe,MAAO1Q,EAAKjD,EAAG9O,OAAQ+R,IAAM,CAChE,IAAI7O,EAAO4L,EAAGiD,GACd1S,KAAK2iB,aAAa9e,IAAS,EACvB7D,KAAK2iB,aAAa9e,IAAS,IACA,QAA1BuD,EAAKpH,KAAKuO,kBAA+B,IAAPnH,GAAyBA,EAAGoc,IAAIxjB,KAAK0iB,KAAK7e,WACtE7D,KAAK0iB,KAAK7e,UACV7D,KAAK2iB,aAAa9e,WAG1B7D,KAAKuiB,MAAM3d,GACb5E,KAAKuiB,MAAM5hB,SACZX,KAAKqjB,QAAS,IAGff,CACX,IAEImB,GAAc,SAAUC,EAAUC,EAAqBC,GACvD,OAAO,IAAIziB,SAAQ,SAAUC,EAASC,GAClC,IAAIwiB,EAAUtW,YAAW,WAErBlM,EADcuiB,GAAkB,wBAA0BD,KAE3DA,GACmB,IAAIxiB,QAAQuiB,GAE7B5hB,MAAK,SAAUF,GAChBkgB,aAAa+B,GACbziB,EAAQQ,MAEPiI,OAAM,SAAU+H,GACjBkQ,aAAa+B,GACbxiB,EAAOuQ,QAGnB,EAEIkS,GAAwB,WACxB,SAASA,EAAqB7Q,EAAUC,EAAQmF,GAC5CrY,KAAKiT,SAAWA,EAChBjT,KAAKkT,OAASA,EACdlT,KAAKqY,SAAWA,EAChBrY,KAAK+jB,cAAe,EACpB/jB,KAAKgkB,aAAc,EACnBhkB,KAAK2B,UAAW,EAChB3B,KAAKikB,SAAW,GAChBjkB,KAAKkkB,qBAAsB,EAC3BlkB,KAAKmkB,sBAAuB,EAC5BnkB,KAAKokB,qBAAsB,EAC3BpkB,KAAKqkB,iBAAkB,EACvBrkB,KAAKskB,kBAAoB,IACzBtkB,KAAKukB,yBAA2B,IAChCvkB,KAAKwkB,oBAAsB,IAC3BxkB,KAAKmT,SAAWJ,IAChB/S,KAAKyiB,SAAW,CACZgC,mBAAoB,CAAE7f,KAAM,qBAAsB8f,OAAQ1kB,KAAK2kB,yBAAyBzC,KAAKliB,OAC7F4kB,mBAAoB,CAAEhgB,KAAM,qBAAsB8f,OAAQ1kB,KAAK6kB,yBAAyB3C,KAAKliB,OAC7F8kB,kBAAmB,CAAElgB,KAAM,oBAAqB8f,OAAQ1kB,KAAK+kB,wBAAwB7C,KAAKliB,OAC1FgkB,YAAa,CAAEpf,KAAM,cAAe8f,OAAQ1kB,KAAKglB,kBAAkB9C,KAAKliB,OACxEilB,WAAY,CAAErgB,KAAM,aAAc8f,OAAQ1kB,KAAKklB,iBAAiBhD,KAAKliB,OACrEmlB,aAAc,CAAEvgB,KAAM,eAAgB8f,OAAQ1kB,KAAKolB,mBAAmBlD,KAAKliB,OAC3EqlB,cAAe,CAAEzgB,KAAM,gBAAiB8f,OAAQ1kB,KAAKslB,oBAAoBpD,KAAKliB,OAC9EulB,aAAc,CAAE3gB,KAAM,eAAgB8f,OAAQ1kB,KAAKwlB,mBAAmBtD,KAAKliB,OAC3EylB,aAAc,CAAE7gB,KAAM,eAAgB8f,OAAQ1kB,KAAK0lB,mBAAmBxD,KAAKliB,OAC3E2lB,sBAAuB,CAAE/gB,KAAM,wBAAyB8f,OAAQ1kB,KAAK4lB,4BAA4B1D,KAAKliB,OACtG6lB,gBAAiB,CAAEjhB,KAAM,kBAAmB8f,OAAQ1kB,KAAK8lB,sBAAsB5D,KAAKliB,OACpF+lB,kBAAmB,CAAEnhB,KAAM,oBAAqB8f,OAAQ1kB,KAAKgmB,wBAAwB9D,KAAKliB,OAC1FimB,uBAAwB,CAAErhB,KAAM,yBAA0B8f,OAAQ1kB,KAAKkmB,6BAA6BhE,KAAKliB,QAE7GA,KAAKkkB,sBAAwB3X,OAAO4Z,UACpCnmB,KAAKomB,uBACLpmB,KAAKqmB,cACLrmB,KAAKsmB,8BACAtmB,KAAKiT,SAASoB,OACfrU,KAAK6G,OAAS0F,OAAOga,QAAUha,OAAOia,IACtCxmB,KAAKymB,WAAala,OAAOga,OAAS,UACG,IAAjCha,OAAO3H,KAAKqW,QAAQ,QAAiB,YAAc,OAujB/D,OApjBA6I,EAAqB5jB,UAAUwmB,oBAAsB,WACjD1mB,KAAK+jB,cAAe,EACpB/jB,KAAKgkB,aAAc,GAEvBxkB,OAAO0H,eAAe4c,EAAqB5jB,UAAW,oBAAqB,CACvEiH,IAAK,WACD,OAAOnH,KAAK2mB,gBAEhBrf,YAAY,EACZC,cAAc,IAElB/H,OAAO0H,eAAe4c,EAAqB5jB,UAAW,kBAAmB,CACrEiH,IAAK,WACD,OAAOnH,KAAK4mB,kBAEhBtf,YAAY,EACZC,cAAc,IAElBuc,EAAqB5jB,UAAUyT,WAAa,SAAUtN,GAClD,OAAOvF,EAAUd,UAAM,OAAQ,GAAQ,WACnC,OAAO+B,EAAY/B,MAAM,SAAUoH,GAC/B,GAAIpH,KAAKokB,oBACL,MAAO,CAAC,EAAG7X,OAAOiI,YAAY,CAAEqS,aAAcxgB,GAAOrG,KAAKwkB,sBAE9D,IAAKxkB,KAAKqU,KACN,MAAM,IAAItN,MAAM,4DAGpB,OADA/G,KAAKqU,KAAKG,YAAYnO,GACf,CAAC,UAIpB7G,OAAO0H,eAAe4c,EAAqB5jB,UAAW,yBAA0B,CAC5EiH,IAAK,WACD,OAAO,GAEXG,YAAY,EACZC,cAAc,IAElBuc,EAAqB5jB,UAAU2T,UAAY,SAAU/B,GACjD,OAAO9R,KAAKmT,SAAStB,IAAI,YAAaC,IAE1CgS,EAAqB5jB,UAAU+O,KAAO,WAClC,OAAO9N,QAAQE,OAAO,kBAE1ByiB,EAAqB5jB,UAAU4T,mBAAqB,SAAUhC,GAC1D,OAAO9R,KAAKmT,SAAStB,IAAI,qBAAsBC,IAEnDgS,EAAqB5jB,UAAU8T,KAAO,WAClC,OAAOlT,EAAUd,UAAM,OAAQ,GAAQ,WACnC,OAAO+B,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EAED,OADArC,KAAKkT,OAAOwE,MAAM,qDACX,CAAC,EAAG1X,KAAKsT,WACpB,KAAK,EAGD,OAFAlM,EAAG9E,OACHtC,KAAKkY,qBAAoB,GAClB,CAAC,WAK5B4L,EAAqB5jB,UAAU6T,MAAQ,WACnC,IAAI3M,EAAIqI,EACJ+D,EAAU,CACVsT,WAAY,CACRjjB,KAAM7D,KAAKyiB,SAASsD,kBAAkBnhB,KACtC2P,KAAM,CACFwS,SAAU/mB,KAAKgnB,WACfC,YAAsC,QAAxB7f,EAAKpH,KAAKqY,gBAA6B,IAAPjR,OAAgB,EAASA,EAAG8f,YAOtF,OAHqB,QAApBzX,EAAKzP,KAAKqU,YAAyB,IAAP5E,GAAyBA,EAAG+E,YAAYhB,GACrExT,KAAKgkB,aAAc,EACnBhkB,KAAKkY,qBAAoB,EAAO,uBACzB/W,QAAQC,WAEnB0iB,EAAqB5jB,UAAU0E,KAAO,WAClC,MAAO,gBAEXkf,EAAqB5jB,UAAU2P,UAAY,WACvC,OAAO/O,EAAUd,UAAM,OAAQ,GAAQ,WACnC,OAAO+B,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EAAG,MAAO,CAAC,EAAGrC,KAAK+T,SACxB,KAAK,EAED,OADA3M,EAAG9E,OACI,CAAC,EAAGnB,QAAQC,mBAKvC0iB,EAAqB5jB,UAAUoT,QAAU,WACrC,OAAOxS,EAAUd,UAAM,OAAQ,GAAQ,WACnC,OAAO+B,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EACD,OAAKrC,KAAKiT,SAASoB,KACZ,CAAC,EAAGrU,KAAKmnB,8BADgB,CAAC,EAAG,GAExC,KAAK,EAGD,OAFA/f,EAAG9E,OACHtC,KAAKkT,OAAOwE,MAAM,8CACX,CAAC,GACZ,KAAK,EACD,IAAK1X,KAAKymB,aAAezmB,KAAK6G,OAC1B,MAAM,IAAIE,MAAM,iFAGpB,OADA/G,KAAKkT,OAAOwE,MAAM,cAAoC,WAApB1X,KAAKymB,WAA0B,QAAU,cAAgB,mCACpF,CAAC,EAAGzmB,KAAKonB,WAAWpnB,KAAK6G,OAAQ7G,KAAKymB,aACjD,KAAK,EAED,OADArf,EAAG9E,OACEtC,KAAKqkB,gBACH,CAAC,EAAGrkB,KAAKqnB,sCADkB,CAAC,EAAG,GAE1C,KAAK,EACDjgB,EAAG9E,OACH8E,EAAG/E,MAAQ,EACf,KAAK,EAAG,MAAO,CAAC,EAAGrC,KAAKsnB,yBAAyBtnB,KAAK6G,OAAQ7G,KAAKymB,aACnE,KAAK,EAGD,OAFArf,EAAG9E,OACHtC,KAAKkT,OAAOwE,MAAM,QAA8B,WAApB1X,KAAKymB,WAA0B,QAAU,cAAgB,wBAC9E,CAAC,WAK5B3C,EAAqB5jB,UAAUinB,2BAA6B,WACxD,IAAI/e,EAAQpI,KACZ,OAAO,IAAImB,SAAQ,SAAUC,EAASC,GAClC+G,EAAM8K,OAAOwE,MAAM,+CACnBtP,EAAMiM,KAAOjM,EAAM6K,SAASoB,KACxBjM,EAAM2b,aACN3b,EAAM8K,OAAO4K,KAAK,6EAGtB1V,EAAMiM,KAAKC,UAAY,SAAUiT,GAC7B,IAAIngB,EAAIqI,EACR,IAAIrH,EAAM2b,eAAwC,QAArB3c,EAAKmgB,EAAMhT,YAAyB,IAAPnN,OAAgB,EAASA,EAAG0f,YAAtF,CAIA,IAAIvS,EAA6B,QAArB9E,EAAK8X,EAAMhT,YAAyB,IAAP9E,OAAgB,EAASA,EAAGqX,WAChEvS,IAGDA,EAAK1Q,OAASuE,EAAMqa,SAASwD,uBAAuBrhB,MAAQ2P,EAAKgJ,UACjEnV,EAAMue,eAAiBve,EAAM6K,SAASiU,SAClC9e,EAAMiQ,WACNjQ,EAAMiQ,SAAS6O,SAAW9e,EAAMue,gBAEpCvlB,KAEAmT,EAAK1Q,OAASuE,EAAMqa,SAASwD,uBAAuBrhB,MAAQ2P,EAAK3C,OACjEvQ,EAAOkT,EAAK3C,aAfZxJ,EAAM+K,SAASX,QAAQ,YAAa+U,EAAMhT,OAkBlDnM,EAAMiM,KAAKG,YAAY,CACnBsS,WAAY,CACRjjB,KAAMuE,EAAMqa,SAASwD,uBAAuBrhB,aAK5Dkf,EAAqB5jB,UAAUonB,yBAA2B,SAAUxb,EAAQ2a,GACxE,IAAIre,EAAQpI,KACZ,OAAOyjB,IAAY,SAAUriB,EAASC,GAClC,IAAI+F,EACJgB,EAAMof,kBAAoBpmB,EAC1BgH,EAAMqf,iBAAmBpmB,EACzB+G,EAAM4e,WAAyC,QAA3B5f,EAAKgB,EAAM4e,kBAA+B,IAAP5f,EAAgBA,EAAK8U,KAC5E,IAAIwL,EAAwC,cAArBtf,EAAMqe,WAA6Bla,OAAO3H,KAAKqa,UAAU,EAAG1S,OAAO3H,KAAKqW,QAAQ,SAAW1O,OAAO3H,KACrH+iB,EAAU,CACVb,WAAY,CACRjjB,KAAMuE,EAAMqa,SAASqC,kBAAkBlgB,KACvCmiB,SAAU3e,EAAM4e,WAChBY,WAA2B,QAAfnB,GAAuC,cAAfA,EAA6B,aAAe,QAChFiB,iBAAkBA,IAI1B,GADAtf,EAAM8K,OAAOwE,MAAM,iCAAmC+O,GAClDre,EAAM+b,qBAIN,OAHAwD,EAAQb,WAAWc,WAAa,QAChCD,EAAQb,WAAWY,iBAAmBtf,EAAM4e,WAC5CW,EAAQb,WAAWe,eAAiBzf,EAAMyf,eACnCtb,OAAOiI,YAAYmT,EAASvf,EAAMoc,qBAE7C1Y,EAAO0I,YAAYmT,EAASvf,EAAMoc,uBACnCxkB,KAAKukB,yBAA0B,sDAEtCT,EAAqB5jB,UAAUknB,WAAa,SAAUtb,EAAQ2a,GAC1D,OAAO3lB,EAAUd,UAAM,OAAQ,GAAQ,WAChC,IAAC8nB,EAA0BC,EAC1B3f,EAAQpI,KACZ,OAAO+B,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EAwBD,GAvBAylB,EAA2B,wFAC3BC,EAActE,IAAY,SAAUriB,EAASC,GACzC,IAAI2mB,EAAWzb,OAAO0b,OAAS1b,OAAOia,IACtC,GAAmB,QAAfC,IAAyBuB,EACzB,OAAO3mB,EAAOymB,GAElB1f,EAAM8f,kBAAoB9mB,EAC1B,IAAIoS,EAAU,CACVsT,WAAY,CACRjjB,KAAqB,WAAf4iB,EAA0Bre,EAAMqa,SAAS0C,aAAavgB,KAAOwD,EAAMqa,SAASwC,WAAWrgB,OAGrGwD,EAAM8K,OAAOwE,MAAM,gBAAkB+O,EAAa,wBAClDre,EAAM+f,mBAAqB1a,aAAY,WACnC3B,EAAO0I,YAAYhB,EAASpL,EAAMoc,uBACnC,OACJxkB,KAAKskB,kBAAmBwD,IACfje,OAAM,WACVzB,EAAM+f,qBACNC,cAAchgB,EAAM+f,2BACb/f,EAAM+f,wBAGhBnoB,KAAKkkB,oBACN,MAAO,CAAC,EAAG6D,GAEf3gB,EAAG/E,MAAQ,EACf,KAAK,EAED,OADA+E,EAAG7E,KAAKW,KAAK,CAAC,EAAG,GAAK,IACf,CAAC,EAAG6kB,GACf,KAAK,EAED,OADA3gB,EAAG9E,OACI,CAAC,GACZ,KAAK,EAGD,OAFU8E,EAAG9E,OACbtC,KAAKkT,OAAOwE,MAAM,0GACX,CAAC,EAAG1X,KAAKqnB,sCACpB,KAAK,EAED,OADAjgB,EAAG9E,OACI,CAAC,EAAG,GACf,KAAK,EAAG,MAAO,CAAC,WAKhCwhB,EAAqB5jB,UAAUkmB,qBAAuB,WAClD,IAAIhe,EAAQpI,KACRA,KAAKiT,SAASoB,KACdrU,KAAKkT,OAAOwE,MAAM,yEAGtBnL,OAAOE,iBAAiB,WAAW,SAAU8a,GACzC,IAAIngB,EACAmN,EAA6B,QAArBnN,EAAKmgB,EAAMhT,YAAyB,IAAPnN,OAAgB,EAASA,EAAG0f,WACrE,GAAKvS,IAAQnM,EAAMzG,SAGnB,GAAKyG,EAAMigB,sBAAsB9T,EAAK1Q,MAAtC,CAIA,IAAIykB,EAAc/T,EAAK1Q,KACvBuE,EAAM8K,OAAOwE,MAAM,8CAAgD4Q,GACnElgB,EAAMqa,SAAS6F,GAAa5D,OAAO6C,QAL/Bnf,EAAM8K,OAAOtB,MAAM,gFAAkF2C,EAAK1Q,UAQtHigB,EAAqB5jB,UAAUmmB,YAAc,WACzC,IAAIje,EAAQpI,KACRA,KAAKiT,SAASoB,KACdrU,KAAKkT,OAAOwE,MAAM,sEAGtBnL,OAAOE,iBAAiB,gBAAgB,WACpC,IAAIrF,EAAIqI,EACR,IAAIrH,EAAMgc,oBAAV,CAGA,IAAI5Q,EAAU,CACVsT,WAAY,CACRjjB,KAAMuE,EAAMqa,SAAS8C,aAAa3gB,KAClC2P,KAAM,CACFwS,SAAU3e,EAAM4e,WAChBC,YAAuC,QAAzB7f,EAAKgB,EAAMiQ,gBAA6B,IAAPjR,OAAgB,EAASA,EAAG8f,YAInF9e,EAAMvB,QACNuB,EAAMvB,OAAO2N,YAAYhB,EAASpL,EAAMoc,qBAEtB,QAArB/U,EAAKrH,EAAMiM,YAAyB,IAAP5E,GAAyBA,EAAG+E,YAAYhB,QAG9EsQ,EAAqB5jB,UAAU8kB,kBAAoB,SAAUuC,GACzD,IAAIngB,EACJpH,KAAKkT,OAAOwE,MAAM,+EAClB1X,KAAKgkB,aAAc,EACnB,IAAIzP,EAA6B,QAArBnN,EAAKmgB,EAAMhT,YAAyB,IAAPnN,OAAgB,EAASA,EAAG0f,WACjEvS,GAAQA,EAAKgU,UACbvoB,KAAKkT,OAAOwE,MAAM,iHAClB1X,KAAK6nB,eAAiBtT,EAAKgU,QAAQrB,SACnClnB,KAAKqkB,iBAAkB,GAEvBrkB,KAAKkoB,oBACLloB,KAAKkoB,2BACEloB,KAAKkoB,mBAEZloB,KAAKmoB,qBACLC,cAAcpoB,KAAKmoB,2BACZnoB,KAAKmoB,qBAGpBrE,EAAqB5jB,UAAUolB,oBAAsB,WACjDtlB,KAAKkT,OAAOwE,MAAM,0CAClB1X,KAAKgkB,aAAc,EACfhkB,KAAKkoB,oBACLloB,KAAKkoB,2BACEloB,KAAKkoB,mBAEZloB,KAAKmoB,qBACLC,cAAcpoB,KAAKmoB,2BACZnoB,KAAKmoB,qBAGpBrE,EAAqB5jB,UAAUykB,yBAA2B,SAAU4C,GAChE,IAAIngB,EACAmN,EAA6B,QAArBnN,EAAKmgB,EAAMhT,YAAyB,IAAPnN,OAAgB,EAASA,EAAG0f,WACrE,OAAI9mB,KAAKgnB,aAAezS,EAAKwS,SAClB/mB,KAAKwoB,4BAA4BjU,GAErCvU,KAAKyoB,oCAAoClU,EAAMgT,IAE1DzD,EAAqB5jB,UAAUsoB,4BAA8B,SAAUjU,GACnE,IAAInM,EAAQpI,KAGZ,GAFAA,KAAKkT,OAAOwE,MAAM,yDAClB1X,KAAK0oB,qBAAuBnU,EAAKmU,qBAC7B1oB,KAAKmkB,qBACL,OAAOnkB,KAAK2oB,4BAA4BpU,GAE5C,GAAKA,EAAKF,KAAV,CAiBA,GAbArU,KAAK2mB,eAAqC,WAApB3mB,KAAKymB,WAA0Bla,OAAO3H,KACpC,QAApB5E,KAAKymB,WAAuBlS,EAAKsT,eAC7Btb,OAAO3H,KAAKqa,UAAU,EAAG1S,OAAO3H,KAAKqW,QAAQ,SACjDjb,KAAKqY,UAAgC,QAApBrY,KAAKymB,aACtBzmB,KAAKqY,SAAS6O,SAAWlnB,KAAK2mB,gBAE9B3mB,KAAKqY,UAAY9D,EAAKxH,UACtB/M,KAAKqY,SAASC,YAAc/D,EAAKxH,QACjC/M,KAAKqY,SAASuQ,gBAAkBrU,EAAKxH,SAEzC/M,KAAK4mB,iBAAmBrS,EAAKsU,gBAC7B7oB,KAAKqU,KAAOE,EAAKF,KACjBrU,KAAKqU,KAAKC,UAAY,SAAU5S,GAAK,OAAO0G,EAAM+K,SAASX,QAAQ,YAAa9Q,EAAE6S,OAC9EvU,KAAKwnB,kBAIL,OAHAxnB,KAAKkT,OAAOwE,MAAM,4DAClB1X,KAAKwnB,gCACExnB,KAAKwnB,kBAGhBxnB,KAAKkT,OAAOtB,MAAM,uFAtBd5R,KAAKkT,OAAOtB,MAAM,wEAwB1BkS,EAAqB5jB,UAAUyoB,4BAA8B,SAAUpU,GACnE,IAAInM,EAAQpI,KAoBZ,GAnBAA,KAAKkT,OAAOwE,MAAM,0FAClB1X,KAAKmkB,sBAAuB,EAC5BnkB,KAAKokB,qBAAsB,EAC3BpkB,KAAK2mB,eAAiB3mB,KAAK6nB,gBAAkB7nB,KAAKgnB,WAC9ChnB,KAAKmkB,sBAAwBnkB,KAAKqY,WAClCrY,KAAKqY,SAAS6O,SAAWlnB,KAAK2mB,gBAE9B3mB,KAAKqY,UAAY9D,EAAKxH,UACtB/M,KAAKqY,SAASC,YAAc/D,EAAKxH,QACjC/M,KAAKqY,SAASuQ,gBAAkBrU,EAAKxH,SAEzCR,OAAOE,iBAAiB,WAAW,SAAU8a,GACzC,IAAIngB,EACA0hB,EAAgC,QAArB1hB,EAAKmgB,EAAMhT,YAAyB,IAAPnN,OAAgB,EAASA,EAAG2hB,aACnED,GAGL1gB,EAAM+K,SAASX,QAAQ,YAAasW,MAEpC9oB,KAAKwnB,kBAIL,OAHAxnB,KAAKkT,OAAOwE,MAAM,4DAClB1X,KAAKwnB,gCACExnB,KAAKwnB,mBAIpB1D,EAAqB5jB,UAAUuoB,oCAAsC,SAAUlU,EAAMgT,GACjF,GAAIvnB,KAAKmkB,sBAAwBnkB,KAAKokB,oBAClCpkB,KAAKkT,OAAOwE,MAAM,6FADtB,CAIA1X,KAAKkT,OAAOwE,MAAM,mEAAqEnD,EAAKwS,UAC5F,IAAIiC,EAAQhpB,KAAKikB,SAASgF,MAAK,SAAUC,GAAK,OAAOA,EAAEC,eAAiB5U,EAAKwS,YACxEiC,GAILA,EAAM/K,WAAY,EAClBje,KAAKkT,OAAOwE,MAAM,iCAAmCnD,EAAKwS,SAAW,mEACrExS,EAAKsT,eAAiB7nB,KAAK2mB,eAC3BqC,EAAMI,OAAO5U,YAAY+S,EAAMhT,KAAMyU,EAAMK,OAAQ,CAAC9U,EAAKF,QANrDrU,KAAKkT,OAAOtB,MAAM,qDAAuD2C,EAAKwS,SAAW,mDASjGjD,EAAqB5jB,UAAU2kB,yBAA2B,WACtD7kB,KAAKkT,OAAOwE,MAAM,kHACd1X,KAAKynB,mBACLznB,KAAKynB,iBAAiB,mHACfznB,KAAKynB,mBAGpB3D,EAAqB5jB,UAAU6kB,wBAA0B,SAAUwC,GAC/D,GAAIvnB,KAAKmkB,qBACLnkB,KAAKkT,OAAOwE,MAAM,0EADtB,CAIA,IAAI0R,EAAS7B,EAAM6B,OACf7U,EAAOgT,EAAMhT,KAAKuS,WACtB,IAAKvS,EAAKqT,YAAkC,eAApBrT,EAAKqT,WACzB,OAAO5nB,KAAKspB,wBAAwBF,EAAQ7B,EAAM8B,OAAQ,wFAE9D,IAAK9U,EAAKwS,SACN,OAAO/mB,KAAKspB,wBAAwBF,EAAQ7B,EAAM8B,OAAQ,iFAE9D,GAAwB,WAApBrpB,KAAKymB,aAA4BzmB,KAAK6G,OACtC,OAAO7G,KAAKspB,wBAAwBF,EAAQ7B,EAAM8B,OAAQ,iGAE9DrpB,KAAKkT,OAAOwE,MAAM,mDAAqDnD,EAAKwS,UAC5E/mB,KAAKikB,SAAS/gB,KAAK,CAAEimB,aAAc5U,EAAKwS,SAAUqC,OAAQA,EAAQnL,WAAW,EAAOoL,OAAQ9B,EAAM8B,SAClGrpB,KAAKkT,OAAOwE,MAAM,eAAiBnD,EAAKwS,SAAW,+DACnD/mB,KAAK6G,OAAO2N,YAAY+S,EAAMhT,KAAMvU,KAAKwkB,uBAE7CV,EAAqB5jB,UAAUglB,iBAAmB,SAAUqC,GACxD,GAAKvnB,KAAKgkB,YAIV,GAAKhkB,KAAK+jB,aAAV,CAIA,IAAIvQ,EAAU,CACVsT,WAAY,CACRjjB,KAAM7D,KAAKyiB,SAASuB,YAAYpf,OAGpC5E,KAAKokB,sBACL5Q,EAAQsT,WAAWyB,QAAU,CAAErB,SAAUlnB,KAAKgnB,aAElD,IAAIoC,EAAS7B,EAAM6B,OACnBppB,KAAKkT,OAAOwE,MAAM,oDAClB0R,EAAO5U,YAAYhB,EAAS+T,EAAM8B,aAb9BrpB,KAAKkT,OAAOwE,MAAM,oEAJlB1X,KAAKkT,OAAOwE,MAAM,0DAmB1BoM,EAAqB5jB,UAAUomB,4BAA8B,WACzD,IAAIle,EAAQpI,KACZA,KAAK6T,WAAU,SAAUxN,GACJ,mBAAbA,EAAIxC,OACJuE,EAAM8K,OAAOwE,MAAM,kCACnBtP,EAAM4b,aAAc,EACpB5b,EAAM8P,qBAAoB,EAAO,yBAI7C4L,EAAqB5jB,UAAUwlB,mBAAqB,WAChD,IAAIte,EAAIqI,EACJ+D,EAAU,CACVsT,WAAY,CACRjjB,KAAM7D,KAAKyiB,SAAS8C,aAAa3gB,KACjC2P,KAAM,CACFwS,SAAU/mB,KAAKgnB,WACfC,YAAsC,QAAxB7f,EAAKpH,KAAKqY,gBAA6B,IAAPjR,OAAgB,EAASA,EAAG8f,YAItF,GAAIlnB,KAAKokB,oBACL,OAAO7X,OAAOiI,YAAY,CAAEqS,aAAcrT,GAAWxT,KAAKwkB,qBAEzC,QAApB/U,EAAKzP,KAAKqU,YAAyB,IAAP5E,GAAyBA,EAAG+E,YAAYhB,IAEzEsQ,EAAqB5jB,UAAUslB,mBAAqB,SAAU+B,GAC1D,IAAIhT,EAAOgT,EAAMhT,KAAKuS,WAClBC,EAAWxS,aAAmC,EAASA,EAAKA,KAAKwS,SAChEA,EAIY/mB,KAAKikB,SAASgF,MAAK,SAAUD,GAAS,OAAOA,EAAMG,eAAiBpC,MAKrF/mB,KAAKkT,OAAOwE,MAAM,sCAAwCqP,GAC1D/mB,KAAKikB,SAAWjkB,KAAKikB,SAASva,QAAO,SAAUsf,GAAS,OAAOA,EAAMG,eAAiBpC,MAJlF/mB,KAAKkT,OAAO4K,KAAK,wFALjB9d,KAAKkT,OAAO4K,KAAK,6EAWzBgG,EAAqB5jB,UAAUklB,mBAAqB,WAChDplB,KAAKkT,OAAOtB,MAAM,yFAEtBkS,EAAqB5jB,UAAUgY,oBAAsB,SAAUM,EAAQV,GACnE9X,KAAK+jB,aAAevL,EACpBxY,KAAKmT,SAASX,QAAQ,qBAAsBgG,EAAQV,IAExDgM,EAAqB5jB,UAAUmoB,sBAAwB,SAAUkB,GAC7D,MAAiC,iBAAnBA,KAAiCvpB,KAAKyiB,SAAS8G,IAEjEzF,EAAqB5jB,UAAUopB,wBAA0B,SAAUF,EAAQC,EAAQvR,GAC/E9X,KAAK2B,UAAW,EAChB3B,KAAKkT,OAAOtB,MAAMkG,GAClB,IAAI0R,EAAY,CACZ1C,WAAY,CACRjjB,KAAM7D,KAAKyiB,SAASmC,mBAAmBhgB,OAG/CwkB,EAAO5U,YAAYgV,EAAWH,IAElCvF,EAAqB5jB,UAAUmnB,mCAAqC,WAChE,IAAIjf,EAAQpI,KACZ,OAAOA,KAAKypB,uBACP3nB,MAAK,WAAc,OAAO2hB,IAAY,SAAUriB,EAASC,GAC1D+G,EAAMshB,qBAAuBtoB,EAC7BgH,EAAMuhB,oBAAsBtoB,EAM5B+G,EAAM8K,OAAOwE,MAAM,+DACnBnL,OAAOiI,YANO,CACVsS,WAAY,CACRjjB,KAAM,oBAIcuE,EAAMoc,uBACnCpc,EAAMkc,kBAAmB,8IAEhCR,EAAqB5jB,UAAU0lB,4BAA8B,SAAU2B,GACnE,IAAIngB,EAEJ,KADiC,QAArBA,EAAKmgB,EAAMhT,YAAyB,IAAPnN,OAAgB,EAASA,EAAG0f,YAC3D8C,UAAY5pB,KAAK2pB,oBACvB,OAAO3pB,KAAK2pB,oBAAoB,6IAEhC3pB,KAAK0pB,uBACL1pB,KAAKmkB,sBAAuB,EAC5BnkB,KAAKkT,OAAOwE,MAAM,sDAClB1X,KAAK0pB,8BACE1pB,KAAK0pB,uBAGpB5F,EAAqB5jB,UAAU4lB,sBAAwB,aAGvDhC,EAAqB5jB,UAAU8lB,wBAA0B,aAGzDlC,EAAqB5jB,UAAUgmB,6BAA+B,aAG9DpC,EAAqB5jB,UAAUupB,qBAAuB,WAClD,IAAIriB,EAEJ,SADkD,QAA3BA,EAAKmF,OAAO4Z,iBAA8B,IAAP/e,OAAgB,EAASA,EAAGyiB,SAE3E1oB,QAAQC,UAEZqiB,IAAY,SAAUriB,GACzBmL,OAAOE,iBAAiB,kBAAkB,WACtCrL,SAELpB,KAAKukB,yBAA0B,sEAE/BT,CACX,IAYIgG,GAAmB,WACnB,SAASA,EAAgBC,QACO,IAAxBA,IAAkCA,EAAsB,GAC5D/pB,KAAK+pB,oBAAsBA,EAC3B/pB,KAAKgqB,MAAQ,GACbhqB,KAAKiqB,kBAAmB,EAsD5B,OApDAH,EAAgB5pB,UAAUgqB,QAAU,SAAUtZ,GAC1C,IAAIxI,EAAQpI,KACZ,OAAO,IAAImB,SAAQ,SAAUC,EAASC,GAClC+G,EAAM4hB,MAAM9mB,KAAK,CAAE0N,OAAQA,EAAQxP,QAASA,EAASC,OAAQA,IAC7D+G,EAAM+hB,mBAGdL,EAAgB5pB,UAAUiqB,aAAe,WACrC,OAAOrpB,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAIoqB,EAAWC,EAAcC,EAC7B,OAAOvoB,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EACD,GAAIrC,KAAKiqB,iBACL,MAAO,CAAC,GAEZjqB,KAAKiqB,kBAAmB,EACxB7iB,EAAG/E,MAAQ,EACf,KAAK,EACD,IAAKrC,KAAKgqB,MAAMrpB,OAAQ,MAAO,CAAC,EAAG,GAEnC,KADAypB,EAAYpqB,KAAKgqB,MAAMO,SAGnB,OADAvqB,KAAKiqB,kBAAmB,EACjB,CAAC,GAEZ7iB,EAAG/E,MAAQ,EACf,KAAK,EAED,OADA+E,EAAG7E,KAAKW,KAAK,CAAC,EAAG,GAAK,IACf,CAAC,EAAGknB,EAAUxZ,UACzB,KAAK,EAGD,OAFAyZ,EAAejjB,EAAG9E,OAClB8nB,EAAUhpB,QAAQipB,GACX,CAAC,EAAG,GACf,KAAK,EAGD,OAFAC,EAAUljB,EAAG9E,OACb8nB,EAAU/oB,OAAOipB,GACV,CAAC,EAAG,GACf,KAAK,EAAG,MAAO,CAAC,EAAGtqB,KAAKwqB,iBACxB,KAAK,EAED,OADApjB,EAAG9E,OACI,CAAC,EAAG,GACf,KAAK,EAED,OADAtC,KAAKiqB,kBAAmB,EACjB,CAAC,WAK5BH,EAAgB5pB,UAAUsqB,cAAgB,WACtC,IAAIpiB,EAAQpI,KACZ,OAAO,IAAImB,SAAQ,SAAUihB,GAAO,OAAO7U,WAAW6U,EAAKha,EAAM2hB,yBAE9DD,CACX,IAEIW,GAAc,WACd,SAASA,EAAWxX,EAAUC,GAe1B,GAdAlT,KAAKiT,SAAWA,EAChBjT,KAAKkT,OAASA,EACdlT,KAAK0qB,gBAAkB,GACvB1qB,KAAK2qB,IAAM,EACX3qB,KAAKmT,SAAWJ,IAChB/S,KAAK4qB,YAAa,EAClB5qB,KAAK6qB,SAAU,EACf7qB,KAAK8qB,gBAAiB,EACtB9qB,KAAK+qB,mBAAoB,EACzB/qB,KAAKgrB,wBAA0B,GAC/BhrB,KAAKirB,YAAc,IAAInB,IACvB7W,EAAWA,GAAY,IACduE,kBAAoBvE,EAASuE,mBAAqB,GAC3DvE,EAASsE,kBAAoBtE,EAASsE,mBAAqB,IACvDtE,EAASiY,OACTlrB,KAAK8G,UAAY,IAAIkM,EAAgBC,EAASiY,OAAQhY,EAAO+N,UAAU,kBAEtE,GAAIhO,EAASkY,aACdnrB,KAAK8G,UAAY,IAAImN,EAAsBhB,EAASkY,aAAcjY,EAAO+N,UAAU,uBAElF,GAAIhO,EAASmY,YACdprB,KAAK8G,UAAY,IAAIgd,GAAqB7Q,EAASmY,YAAalY,EAAO+N,UAAU,gBAAiBhO,EAASoF,cAE1G,SAAoB/M,IAAhB2H,EAAS6D,GAId,MAAM,IAAI/P,MAAM,uCAHhB/G,KAAK8G,UAAY,IAAI2P,EAAGxD,EAAUC,EAAO+N,UAAU,OAKvDjhB,KAAK6qB,QAAU3X,EAAOmY,WAAW,SACjCnY,EAAOwE,MAAM,iBAAmB1X,KAAK8G,UAAUlC,OAAS,cACxD5E,KAAKuI,SAAW,IAAI2V,GAAgBle,KAAMiT,EAAUC,EAAO+N,UAAU,aACrE,IAAIqK,EAAyBtrB,KAAK8G,UAAUgN,mBAAmB9T,KAAKurB,wBAAwBrJ,KAAKliB,OAC7FwrB,EAAiBxrB,KAAK8G,UAAU+M,UAAU7T,KAAKyrB,uBAAuBvJ,KAAKliB,OAC/EA,KAAKgrB,wBAAwB9nB,KAAKooB,GAClCtrB,KAAKgrB,wBAAwB9nB,KAAKsoB,GAClCxrB,KAAK0rB,kBAAoB1rB,KAAK8G,UAmSlC,OAjSAtH,OAAO0H,eAAeujB,EAAWvqB,UAAW,kBAAmB,CAC3DiH,IAAK,WACD,IAAIC,EACJ,OAAgC,QAAxBA,EAAKpH,KAAKuI,gBAA6B,IAAPnB,OAAgB,EAASA,EAAG+W,iBAExE7W,YAAY,EACZC,cAAc,IAElBkjB,EAAWvqB,UAAUyrB,gBAAkB,SAAU1Y,GAC7C,OAAOnS,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAIoI,EAAQpI,KACZ,OAAO+B,EAAY/B,MAAM,SAAUoH,GAC/B,MAAO,CAAC,EAAGpH,KAAKirB,YAAYf,SAAQ,WAAc,OAAOppB,EAAUsH,OAAO,OAAQ,GAAQ,WAC/E,IAACwjB,EAAuBC,EAAeC,EAC1C,OAAO/pB,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EACD,IAAK4Q,GAAgC,iBAAbA,EACpB,MAAM,IAAIlM,MAAM,0EAEpB,QAA6B,IAAlBkM,EAASpP,KAChB,MAAM,IAAIkD,MAAM,gEAUpB,OARA/G,KAAKkT,OAAO6Y,MAAM,4CAA8Cje,KAAKC,UAAUkF,IAC/E2Y,EAA0C,cAAlB3Y,EAASpP,KAAuB7D,KAAKgsB,yBAAyB/Y,GAAYjT,KAAK0rB,kBACvG1rB,KAAKisB,iBAAmBL,EACxB5rB,KAAKksB,YAAgC,cAAlBjZ,EAASpP,KAAuB7D,KAAKmsB,oBAAoBlZ,GAAYjT,KAAKosB,aAC7FP,EAAgB7rB,KAAKqsB,mBACrBrsB,KAAK8qB,gBAAiB,EACtB9qB,KAAK+qB,mBAAoB,EACzB/qB,KAAKkT,OAAO6Y,MAAM,iEACX,CAAC,EAAG/rB,KAAK8G,UAAUiN,SAC9B,KAAK,EACD3M,EAAG9E,OACH8E,EAAG/E,MAAQ,EACf,KAAK,EAED,OADA+E,EAAG7E,KAAKW,KAAK,CAAC,EAAG,GAAK,IACf,CAAC,EAAG2oB,GACf,KAAK,EAKD,OAJAzkB,EAAG9E,OACHwpB,EAAkB9rB,KAAK8G,YAAc8kB,EACrC5rB,KAAKkT,OAAO8D,KAAK,8EAAgF8U,GACjG9rB,KAAK+qB,mBAAoB,EAClB,CAAC,EAAG,CAAExN,QAASuO,IAC1B,KAAK,EAKD,OAJU1kB,EAAG9E,OACbtC,KAAKkT,OAAO8D,KAAK,yFACjBhX,KAAK2rB,gBAAgB,CAAE9nB,KAAM,YAC7B7D,KAAK+qB,mBAAoB,EAClB,CAAC,EAAG,CAAExN,SAAS,IAC1B,KAAK,EAAG,MAAO,CAAC,qBAO5CkN,EAAWvqB,UAAUosB,iBAAmB,SAAUxa,GAC9C,OAAO9R,KAAKmT,SAAStB,IAAI,iBAAkBC,IAE/C2Y,EAAWvqB,UAAUqsB,kBAAoB,SAAUxZ,GAC/C/S,KAAKmT,SAASX,QAAQ,iBAAkBO,IAE5C0X,EAAWvqB,UAAU+O,KAAO,SAAUuE,EAAStI,GAC3C,GAAIlL,KAAK8G,UAAU6M,YACf3T,KAAK8G,UAAU0lB,uBAAwB,CACvC,IAAInmB,EAAMrG,KAAKuI,SAASmX,oBAAoBlM,GAI5C,OAHIxT,KAAK6qB,SACL7qB,KAAKkT,OAAO6Y,MAAM,MAAQje,KAAKC,UAAU1H,IAEtCrG,KAAK8G,UAAU6M,WAAWtN,EAAK6E,GAGtC,IAAIuhB,EAAazsB,KAAKuI,SAAS+W,oBAAoB9L,GAInD,OAHIxT,KAAK6qB,SACL7qB,KAAKkT,OAAO6Y,MAAM,MAAQU,GAEvBzsB,KAAK8G,UAAUmI,KAAKwd,EAAYvhB,IAG/Cuf,EAAWvqB,UAAU0c,GAAK,SAAU/Y,EAAM4P,GACtC5P,EAAOA,EAAKsI,mBACuBb,IAA/BtL,KAAK0qB,gBAAgB7mB,KACrB7D,KAAK0qB,gBAAgB7mB,GAAQ,IAEjC,IAAIqF,EAAKlJ,KAAK2qB,MAEd,OADA3qB,KAAK0qB,gBAAgB7mB,GAAMqF,GAAMuK,EAC1B,CACH5P,KAAMA,EACNqF,GAAIA,IAGZuhB,EAAWvqB,UAAUsjB,IAAM,SAAUxM,UAC1BhX,KAAK0qB,gBAAgB1T,EAAKnT,KAAKsI,eAAe6K,EAAK9N,KAE9D1J,OAAO0H,eAAeujB,EAAWvqB,UAAW,cAAe,CACvDiH,IAAK,WACD,OAAOnH,KAAKuI,SAASmkB,YAEzBplB,YAAY,EACZC,cAAc,IAElBkjB,EAAWvqB,UAAU+d,UAAY,SAAUnM,GACvC,IAAI1J,EAAQpI,KACZ,OAAOA,KAAKuI,SAASoU,UAAS,WAC1B,IAAIgQ,EAAgBvkB,EAAMtB,UAAUlC,OACpCkN,EAAS6a,OAGjBlC,EAAWvqB,UAAUwc,aAAe,SAAU5K,GAC1C,OAAO9R,KAAKmT,SAAStB,IAAI,eAAgBC,IAE7C2Y,EAAWvqB,UAAUyf,MAAQ,SAAUiN,EAAa/c,GAChD,OAAO/O,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAI6sB,EAASxU,EAAUyU,EACvB,OAAO/qB,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EACIrC,KAAKosB,eACNpsB,KAAKosB,aAAeQ,GAEpB5sB,KAAK8qB,iBACL9qB,KAAKkT,OAAO6Y,MAAM,kDAClBc,EAAU7sB,KAAK+sB,gBACfH,EAAcC,QAAyCA,EAAUD,GAErE5sB,KAAKkT,OAAO6Y,MAAM,iCAAmC/rB,KAAK8G,UAAUlC,OAAS,aAAekJ,KAAKC,UAAU6e,IAC3GxlB,EAAG/E,MAAQ,EACf,KAAK,EAED,OADA+E,EAAG7E,KAAKW,KAAK,CAAC,EAAG,GAAK,IACf,CAAC,EAAGlD,KAAK8G,UAAUkN,QAC9B,KAAK,EAID,OAHA5M,EAAG9E,OACHtC,KAAKkT,OAAO6Y,MAAM,cAAgB/rB,KAAK8G,UAAUlC,OAAS,uBAC1D+Q,EAAM,cAAcM,KAAK,oBAClB,CAAC,EAAGjW,KAAKuI,SAASoX,MAAMiN,EAAa/c,IAChD,KAAK,EAID,OAHAwI,EAAWjR,EAAG9E,OACdtC,KAAKkT,OAAO6Y,MAAM,4BAA8Bje,KAAKC,UAAUsK,IAC/D1C,EAAM,cAAcM,KAAK,sBAClB,CAAC,EAAGoC,GACf,KAAK,EAMD,MALAyU,EAAU1lB,EAAG9E,OACTtC,KAAK+qB,oBACL/qB,KAAKkT,OAAO6Y,MAAM,+EAClB/rB,KAAKgtB,sBAEH,IAAIjmB,MAAM+lB,GACpB,KAAK,EAAG,MAAO,CAAC,WAKhCrC,EAAWvqB,UAAUyhB,OAAS,WAC1B,OAAO7gB,EAAUd,UAAM,OAAQ,GAAQ,WACnC,OAAO+B,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EAAG,MAAO,CAAC,EAAGrC,KAAKuI,SAASoZ,UACjC,KAAK,EAED,OADAva,EAAG9E,OACI,CAAC,EAAGtC,KAAK8G,UAAUiN,SAC9B,KAAK,EAED,OADA3M,EAAG9E,OACI,CAAC,WAK5BmoB,EAAWvqB,UAAUyc,SAAW,SAAU7K,GACtC,OAAO9R,KAAKuI,SAASoU,SAAS7K,IAElC2Y,EAAWvqB,UAAUyP,OAAS,SAAUA,EAAQyM,EAAiBC,GAC7D,OAAOrc,KAAKuI,SAASoH,OAAOA,EAAQ3P,KAAKkT,OAAO+N,UAAU,UAAYtR,GAASyM,EAAiBC,IAEpGoO,EAAWvqB,UAAUiiB,UAAY,WAC7B,OAAOniB,KAAKuI,SAAS4Z,aAEzBsI,EAAWvqB,UAAU2P,UAAY,WAC7B,OAAO7P,KAAK8G,UAAU+I,aAE1B4a,EAAWvqB,UAAU+sB,kBAAoB,SAAUzZ,EAAS3P,GACxD,IAAIuE,EAAQpI,KACRktB,EAAWltB,KAAK0qB,gBAAgB7mB,EAAKsI,oBACxBb,IAAb4hB,GACA1tB,OAAO2E,KAAK+oB,GAAU5mB,SAAQ,SAAU6mB,GACpC,IAAIC,EAAUF,EAASC,GACvB,QAAgB7hB,IAAZ8hB,EACA,IACIA,EAAQ5Z,GAEZ,MAAO5B,GACH,IACIxJ,EAAM8K,OAAOtB,MAAM,+BAAiCA,EAAMF,MAAOE,GAErE,MAAOyb,GACH1b,QAAQ2b,IAAI,yBAA0B1b,SAO9D6Y,EAAWvqB,UAAUqrB,wBAA0B,SAAUtN,GACjDje,KAAK4qB,aAAe3M,IAGxBje,KAAK4qB,WAAa3M,EACdA,GACIje,KAAKiT,SAASsa,aAAevtB,KAAKiT,SAASsa,YAAY5sB,SACvDX,KAAKwtB,SAAW,IAAIlL,GAAoBtiB,KAAKiT,SAASsa,aACtDvtB,KAAKwtB,SAASriB,KAAKnL,OAEvBA,KAAKmT,SAASX,QAAQ,cAGtBxS,KAAKmT,SAASX,QAAQ,kBAG9BiY,EAAWvqB,UAAUurB,uBAAyB,SAAUplB,GACpD,IAAIonB,EAEAA,EADe,iBAARpnB,EACErG,KAAKuI,SAASwW,qBAAqB1Y,GAGnCrG,KAAKuI,SAASkX,qBAAqBpZ,GAE5CrG,KAAK6qB,SACL7qB,KAAKkT,OAAO6Y,MAAM,MAAQje,KAAKC,UAAU0f,IAE7CztB,KAAKitB,kBAAkBQ,EAAOpnB,IAAKonB,EAAOpO,UAE9CoL,EAAWvqB,UAAUmsB,iBAAmB,WACpC,IAAIjkB,EAAQpI,KACZ,OAAOyjB,IAAY,SAAUriB,GACzB,IAAIssB,EA1VgC5b,EACxC6b,EA0VQC,GA3VgC9b,EA2VF,WAC1B4b,GACAA,IAEJtsB,KA9VRusB,EA0VmC,EAzVhC,WAEU,KADbA,GAEI7b,MA4VA4b,EAAQtlB,EAAMkkB,kBAAiB,SAAUvZ,GACrC,MAAiB,YAAbA,EAAInO,MAGS,aAAbmO,EAAInO,KAFGgpB,SAEX,OAIL,IAAO,4EAEdnD,EAAWvqB,UAAU8rB,yBAA2B,SAAU/Y,GACtD,IAAI7L,EACJ,KAA0C,QAAnCA,EAAK6L,EAAS4a,uBAAoC,IAAPzmB,OAAgB,EAASA,EAAG0mB,KAC1E,MAAM,IAAI/mB,MAAM,oCAEpB,OAAO,IAAI0P,EAAGjX,OAAOa,OAAO,GAAIL,KAAKiT,SAAU,CAAE6D,GAAI7D,EAAS4a,gBAAgBC,IAAKtW,kBAAmB,IAAMxX,KAAKkT,OAAO+N,UAAU,kBAEtIwJ,EAAWvqB,UAAUisB,oBAAsB,SAAUlZ,GACjD,IAAI7L,EACJ,KAA0C,QAAnCA,EAAK6L,EAAS4a,uBAAoC,IAAPzmB,OAAgB,EAASA,EAAG2mB,MAC1E,MAAM,IAAIhnB,MAAM,iDAEpB,OAAOkM,EAAS4a,gBAAgBE,MAEpCtD,EAAWvqB,UAAU6sB,cAAgB,WAEjC,GADA/sB,KAAK8qB,gBAAiB,EACjB9qB,KAAKisB,kBAAqBjsB,KAAKksB,YAApC,CAIAlsB,KAAKgrB,wBAAwB1kB,SAAQ,SAAUonB,GAAS,OAAOA,OAC/D1tB,KAAKgrB,wBAA0B,GAC/BhrB,KAAK8G,UAAY9G,KAAKisB,iBACtB,IAAIX,EAAyBtrB,KAAK8G,UAAUgN,mBAAmB9T,KAAKurB,wBAAwBrJ,KAAKliB,OAC7FwrB,EAAiBxrB,KAAK8G,UAAU+M,UAAU7T,KAAKyrB,uBAAuBvJ,KAAKliB,OAG/E,OAFAA,KAAKgrB,wBAAwB9nB,KAAKooB,GAClCtrB,KAAKgrB,wBAAwB9nB,KAAKsoB,GAC3BxrB,KAAKksB,YAVRlsB,KAAKkT,OAAO4K,KAAK,iHAAmH9d,KAAK0rB,kBAAoB,uBAAyB1rB,KAAKksB,YAAc,kCAYjNzB,EAAWvqB,UAAU8sB,mBAAqB,WACtC,IAAI5kB,EAAQpI,KACZA,KAAKgrB,wBAAwB1kB,SAAQ,SAAUonB,GAAS,OAAOA,OAC/D1tB,KAAKgrB,wBAA0B,GAC/BhrB,KAAK8G,UAAUiN,QAAQlK,OAAM,SAAU+H,GAAS,OAAOxJ,EAAM8K,OAAO4K,KAAK,qBAAuB1V,EAAMtB,UAAUlC,OAAS,iDAAmDkJ,KAAKC,UAAU6D,OAC3L5R,KAAKisB,iBAAmBjsB,KAAK0rB,kBAC7B1rB,KAAKksB,YAAclsB,KAAKosB,aACxBpsB,KAAK8qB,gBAAiB,GAEnBL,CACX,IAEIuD,GAAQ,CAAC,QAAS,QAAS,OAAQ,OAAQ,QAAS,OACpDC,GAAU,WACV,SAASA,EAAOrpB,EAAMiC,EAAQqnB,GAC1BluB,KAAK4E,KAAOA,EACZ5E,KAAK6G,OAASA,EACd7G,KAAKmuB,WAAa,GAClBnuB,KAAKkuB,MAAQvc,QACb3R,KAAKouB,aAAc,EACnBpuB,KAAK4E,KAAOA,EAER5E,KAAK8E,KADL+B,EACYA,EAAO/B,KAAO,IAAMF,EAGpBA,EAEhB5E,KAAKquB,eAAiB,IAAMruB,KAAK8E,KAAO,IACxC9E,KAAKsuB,qBAAuBJ,EACxBA,IACAluB,KAAKkuB,MAAQA,EACbluB,KAAKouB,aAAc,GAuH3B,OApHAH,EAAO/tB,UAAU+gB,UAAY,SAAUrc,GACnC,IAAI2pB,EAAcvuB,KAAKmuB,WAAWzkB,QAAO,SAAUuX,GAC/C,OAAOA,EAAUrc,OAASA,KAC3B,GACH,QAAoB0G,IAAhBijB,EACA,OAAOA,EAEX/uB,OAAO2E,KAAKnE,MAAMsG,SAAQ,SAAUhC,GAChC,GAAIA,IAAQM,EACR,MAAM,IAAImC,MAAM,2CAGxB,IAAImc,EAAM,IAAI+K,EAAOrpB,EAAM5E,KAAMA,KAAKouB,YAAcpuB,KAAKkuB,WAAQ5iB,GAEjE,OADAtL,KAAKmuB,WAAWjrB,KAAKggB,GACdA,GAEX+K,EAAO/tB,UAAUsuB,aAAe,SAAUC,GACtC,IAAIrnB,EAIJ,OAHIqnB,IACAzuB,KAAK0uB,cAAgBD,GAElBzuB,KAAK0uB,gBAAyC,QAAtBtnB,EAAKpH,KAAK6G,cAA2B,IAAPO,OAAgB,EAASA,EAAGonB,iBAE7FP,EAAO/tB,UAAUyuB,aAAe,SAAUF,GACtC,IAAIrnB,EAIJ,OAHIqnB,IACAzuB,KAAK4uB,cAAgBH,GAElBzuB,KAAK4uB,gBAAyC,QAAtBxnB,EAAKpH,KAAK6G,cAA2B,IAAPO,OAAgB,EAASA,EAAGunB,iBAE7FV,EAAO/tB,UAAUotB,IAAM,SAAU9Z,EAASib,EAAO7c,GAC7C5R,KAAK6uB,eAAeJ,GAAS,OAAQjb,EAAS5B,IAElDqc,EAAO/tB,UAAU6rB,MAAQ,SAAUvY,GAC/BxT,KAAKstB,IAAI9Z,EAAS,UAEtBya,EAAO/tB,UAAUwX,MAAQ,SAAUlE,GAC/BxT,KAAKstB,IAAI9Z,EAAS,UAEtBya,EAAO/tB,UAAU8W,KAAO,SAAUxD,GAC9BxT,KAAKstB,IAAI9Z,EAAS,SAEtBya,EAAO/tB,UAAU4d,KAAO,SAAUtK,GAC9BxT,KAAKstB,IAAI9Z,EAAS,SAEtBya,EAAO/tB,UAAU0R,MAAQ,SAAU4B,EAASrB,GACxCnS,KAAKstB,IAAI9Z,EAAS,UAEtBya,EAAO/tB,UAAUmrB,WAAa,SAAUoD,EAAOK,GAG3C,OAFed,GAAM/S,QAAQwT,IACRT,GAAM/S,QAAQ6T,GAAe9uB,KAAK2uB,gBAAkB,UAG7EV,EAAO/tB,UAAU2uB,eAAiB,SAAUJ,EAAOjb,EAAS5B,GACxD,IAAImd,EAAa/uB,KAAKquB,eACtB,GAAc,UAAVI,IAAsB7c,EAAO,CAC7B,IAAIlQ,EAAI,IAAIqF,MACRrF,EAAEgQ,QACF8B,EACIA,EACI,KACA9R,EAAEgQ,MACG2H,MAAM,MACN5S,MAAM,GACN1B,KAAK,OAG1B,GAAI/E,KAAKqrB,WAAWoD,EAAOzuB,KAAKwuB,gBAAiB,CAC7C,IAAIQ,EAAUf,EAAOgB,QACrB,GAAID,EACA,IACQA,EAAQE,QAAQ,CAAEtqB,KAAMqpB,EAAOkB,oBAAqBxuB,OAAS,GAC7DquB,EAAQI,OAAOnB,EAAOkB,kBAAmB,CACrC9oB,IAAK,GAAKmN,EACVN,OAAQ6b,EACRN,MAAOA,IAInB,MAAOrnB,KAIf,GAAIpH,KAAKqrB,WAAWoD,GAAQ,CACxB,IAAIY,EAAS,GACb,GAAIrvB,KAAKsuB,oBAAqB,CAC1B,IAAIgB,EAAO,IAAIvrB,KAEfsrB,EAAS,KADEC,EAAKC,WAAa,IAAMD,EAAKE,aAAe,IAAMF,EAAKG,aAAe,IAAMH,EAAKI,mBACtE,MAAQjB,EAAQ,KAE1C,IAAIkB,EAAU,GAAKN,EAASN,EAAa,KAAOvb,EAChD,OAAQib,GACJ,IAAK,QACDzuB,KAAKkuB,MAAMxW,MAAMiY,GACjB,MACJ,IAAK,QACG3vB,KAAKkuB,MAAMxW,MACX1X,KAAKkuB,MAAMxW,MAAMiY,GAGjB3vB,KAAKkuB,MAAMZ,IAAIqC,GAEnB,MACJ,IAAK,OACD3vB,KAAKkuB,MAAMlX,KAAK2Y,GAChB,MACJ,IAAK,OACD3vB,KAAKkuB,MAAMpQ,KAAK6R,GAChB,MACJ,IAAK,QACD3vB,KAAKkuB,MAAMtc,MAAM+d,EAAS/d,MAK1Cqc,EAAOkB,kBAAoB,oBACpBlB,CACX,IAEI2B,GAA4B,iBAC5BC,GAA8B,UAC9BC,GAAgC,YAChCC,GAA6B,kBAC7BC,GAA2B,gBAC3BC,GAA+B,oBAC/BC,GAAgC,qBAChCC,GAAiC,sBACjCC,GAA6B,kBAC7BC,GAA+B,oBAC/BC,GAA4B,iBAC5BC,GAA6B,kBAC7BC,GAA6B,SAE7BC,GAA2B,CACvB7rB,WACA,MAAO,WAEPwe,YACA,MAAO,CACHwM,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,MAKR5b,GAAU,QAkMd,IAAI8b,GAAkB,WAClB,SAASA,EAAeC,EAAW/rB,EAAMgsB,EAAaC,GAClD7wB,KAAK8wB,gBAAkB,GACvB9wB,KAAK2wB,UAAYA,EACjB3wB,KAAK4E,KAAOA,EACZ5E,KAAK4wB,YAAcA,EACnB5wB,KAAK6wB,WAAaA,EAClB7wB,KAAK2E,QAAU,GAiBnB,OAfA+rB,EAAexwB,UAAU6wB,aAAe,WACpC,OAAOvxB,OAAO2E,KAAKnE,KAAK8wB,iBAAiBnwB,OAAS,GAEtD+vB,EAAexwB,UAAUoK,SAAW,WAChC,OAAItK,KAAK4wB,aAAe5wB,KAAK+wB,eAClB,EAEP/wB,KAAK4wB,YACE,EAEP5wB,KAAK+wB,eACE,EAEJ,GAEJL,CACX,IAEA,SAASM,GAAkBrsB,EAASssB,EAAO/d,GACvC,IAII,IAHIA,aAAuC,EAASA,EAAOmY,WAAW,YAClEnY,SAAgDA,EAAO6Y,MAAM,0BAA4Bje,KAAKC,UAAUkjB,GAAS,eAAiBnjB,KAAKC,UAAUpJ,MAEhJssB,EACD,OAAOtsB,EAEX,GAAIssB,EAAMhY,MAEN,OADAtU,EAAUvE,EAAS,GAAI6wB,EAAMhY,OAIjC,GADAtU,EAAUusB,GAAUvsB,OAAS2G,GACzB2lB,EAAME,SAAU,CAChB,IAAK,IAAIze,EAAK,EAAGtL,EAAK6pB,EAAME,SAAUze,EAAKtL,EAAGzG,OAAQ+R,IAAM,CACxD,IAAI0e,EAAUhqB,EAAGsL,GACI,WAAjB0e,EAAQvtB,KACRwtB,GAAW1sB,EAASysB,EAAQtsB,MAEN,QAAjBssB,EAAQvtB,MACbytB,GAAe3sB,EAASysB,EAAQ7vB,MAAO6vB,EAAQtsB,MAGvD,OAAOH,EAEX,IAAI4sB,EAAUN,EAAMO,MAChBC,EAAYR,EAAMS,QAClBC,EAAUV,EAAMU,QAgBpB,OAfIJ,GACA/xB,OAAO2E,KAAKotB,GAASjrB,SAAQ,SAAUhC,GACnCK,EAAQL,GAAOitB,EAAQjtB,MAG3BmtB,GACAjyB,OAAO2E,KAAKstB,GAAWnrB,SAAQ,SAAUhC,GACrCstB,GAAuBttB,EAAKK,EAAS8sB,MAGzCE,GACAA,EAAQrrB,SAAQ,SAAUhC,UACfK,EAAQL,MAGhBK,EAEX,MAAOjD,GAEH,OADAwR,SAAgDA,EAAOtB,MAAM,gCAAkC9D,KAAKC,UAAUkjB,GAAS,eAAiBnjB,KAAKC,UAAUpJ,GAAUjD,GAC1JiD,EAEf,CACA,SAASusB,GAAUW,EAAKC,GAEpB,GADAA,EAAOA,GAAQ,IAAIC,QACfvyB,OAAOqyB,KAASA,EAChB,OAAOA,EAEX,GAAIA,aAAeG,IACf,OAAO,IAAIA,IAAIH,GAEnB,GAAIC,EAAK7Z,IAAI4Z,GACT,OAAOC,EAAK3qB,IAAI0qB,GAEpB,IAAIjwB,EAASiwB,aAAe9tB,KAAO,IAAIA,KAAK8tB,GACtCA,aAAeI,OAAS,IAAIA,OAAOJ,EAAIzI,OAAQyI,EAAIK,OAC/CL,EAAI5xB,YAAc,IAAI4xB,EAAI5xB,YACtBT,OAAOW,OAAO,MAQ5B,OAPA2xB,EAAKK,IAAIN,EAAKjwB,GACViwB,aAAeO,KACfzyB,MAAMyhB,KAAKyQ,GAAK,SAAUzqB,GACtB,IAAI9C,EAAM8C,EAAG,GAAIirB,EAAMjrB,EAAG,GAC1B,OAAOxF,EAAOuwB,IAAI7tB,EAAK4sB,GAAUmB,EAAKP,OAGvCtyB,OAAOa,OAAOQ,MAAMrB,OAAQ2D,EAAe,CAACvB,GAASpC,OAAO2E,KAAK0tB,GAAKxjB,KAAI,SAAU/J,GACvF,IAAI8C,EACJ,OAAQA,EAAK,IAAO9C,GAAO4sB,GAAUW,EAAIvtB,GAAMwtB,GAAO1qB,MAE9D,CACA,IAAIwqB,GAAyB,SAAUttB,EAAKguB,EAAMC,GAC9C,IAAIC,EAAQD,EAASjuB,GACrB,QAAcgH,IAAVknB,EACA,OAAOF,EAEX,IAAI3E,EAAO2E,EAAKhuB,GAChB,OAAKqpB,GAAS6E,EAIM,iBAAT7E,GACS,iBAATA,GACS,kBAATA,GACU,iBAAV6E,GACU,iBAAVA,GACU,kBAAVA,GACP7yB,MAAMgG,QAAQgoB,IACdhuB,MAAMgG,QAAQ6sB,IACdF,EAAKhuB,GAAOkuB,EACLF,IAEXA,EAAKhuB,GAAO9E,OAAOa,OAAO,GAAIstB,EAAM6E,GAC7BF,IAfHA,EAAKhuB,GAAOkuB,EACLF,EAef,EACA,SAASG,GAAUC,EAAGxwB,GAClB,GAAIwwB,IAAMxwB,EACN,OAAO,EAEX,KAAMwwB,aAAalzB,QAAa0C,aAAa1C,QACzC,OAAO,EAEX,GAAIkzB,EAAEzyB,cAAgBiC,EAAEjC,YACpB,OAAO,EAEX,IAAK,IAAIL,KAAK8yB,EACV,GAAKA,EAAE7yB,eAAeD,GAAtB,CAGA,IAAKsC,EAAErC,eAAeD,GAClB,OAAO,EAEX,GAAI8yB,EAAE9yB,KAAOsC,EAAEtC,GAAf,CAGA,GAAsB,iBAAV8yB,EAAE9yB,GACV,OAAO,EAEX,IAAK6yB,GAAUC,EAAE9yB,GAAIsC,EAAEtC,IACnB,OAAO,GAGf,IAAK,IAAIA,KAAKsC,EACV,GAAIA,EAAErC,eAAeD,KAAO8yB,EAAE7yB,eAAeD,GACzC,OAAO,EAGf,OAAO,CACX,CACA,SAAS0xB,GAAeO,EAAKtwB,EAAOuD,GAChC,IACItE,EADAmyB,EAAU7tB,EAAKuU,MAAM,KAEzB,IAAK7Y,EAAI,EAAGA,EAAImyB,EAAQhyB,OAAS,EAAGH,IAC3BqxB,EAAIc,EAAQnyB,MACbqxB,EAAIc,EAAQnyB,IAAM,IAES,iBAApBqxB,EAAIc,EAAQnyB,MACnBqxB,EAAIc,EAAQnyB,IAAM,IAEtBqxB,EAAMA,EAAIc,EAAQnyB,IAEtBqxB,EAAIc,EAAQnyB,IAAMe,CACtB,CACA,SAASqxB,GAASC,EAAUC,GACxB,OAAOtzB,OAAO2E,KAAK2uB,GAAQC,OAAM,SAAUC,GACvC,MAA2B,iBAAhBF,EAAOE,GACPJ,IAAUC,aAA2C,EAASA,EAASG,KAAS,GAAIF,EAAOE,IAAQ,IAEvGF,EAAOE,MAAUH,aAA2C,EAASA,EAASG,MAE7F,CACA,SAAS3B,GAAWQ,EAAK/sB,GACrB,IACItE,EADAmyB,EAAU7tB,EAAKuU,MAAM,KAEzB,IAAK7Y,EAAI,EAAGA,EAAImyB,EAAQhyB,OAAS,EAAGH,IAAK,CACrC,IAAKqxB,EAAIc,EAAQnyB,IACb,OAEJqxB,EAAMA,EAAIc,EAAQnyB,WAEfqxB,EAAIc,EAAQnyB,GACvB,CAEA,IAyxBIyyB,GAzxBAC,GAAa,WACb,SAASA,EAAU1kB,GACf,IACIpH,EADAgB,EAAQpI,KAEZA,KAAKmzB,mBAAqB,GAC1BnzB,KAAKozB,kBAAoB,GACzBpzB,KAAKqzB,gCAAkC,EACvCrzB,KAAKszB,iBAAmB,GACxBtzB,KAAKuzB,iBAAmB,GACxBvzB,KAAKwzB,sBAAmBloB,EACxBtL,KAAKyzB,mBAAqB,GAC1BzzB,KAAK0zB,4BAA8B,GACnC1zB,KAAK2zB,YAAcnlB,EAAOD,WAC1BvO,KAAK4zB,QAAUplB,EAAO0E,OACtBlT,KAAK6zB,kBAAoBrlB,EAAOslB,iBAChC9zB,KAAK+zB,yBAA2BvlB,EAAOwlB,wBACvCh0B,KAAKi0B,YAAcj0B,KAAK2zB,YAAYhkB,OAAO,SAAU,CACjDogB,GACAG,GACAG,GACAE,KAEJvwB,KAAKi0B,YAAYvX,aAAa1c,KAAKk0B,WAAWhS,KAAKliB,OACnDA,KAAKi0B,YAAYrkB,UAAS,SAAUsN,GAChC,GAAKA,EAGL,OAAK9U,EAAM2rB,8BAGX3rB,EAAM+rB,kBAAkBryB,MAAK,WAAc,OAAOsG,EAAMurB,YAAYpH,kBAAkB,CAAE3nB,KAAM,gBAFnFwD,EAAMurB,YAAYpH,kBAAkB,CAAE3nB,KAAM,gBAI3D5E,KAAKo0B,oCACLp0B,KAAKq0B,oCACLr0B,KAAKs0B,sCACgC,QAApCltB,EAAKpH,KAAK2zB,YAAYnG,gBAA6B,IAAPpmB,GAAyBA,EAAGmc,MAAMkN,GAAyB7rB,MAAM,SAAU4O,GACpH,IAAI3P,EAAO2P,EAAQ3P,KACdA,IAGDA,IAASksB,IACTlsB,IAASmsB,IACTnsB,IAASgsB,GACTznB,EAAMmsB,4BAA4B/gB,GAE7B3P,IAASqsB,IACdrsB,IAAS0sB,IACT1sB,IAAS2sB,GACTpoB,EAAMosB,4BAA4BhhB,GAE7B3P,IAASwsB,IACdxsB,IAASisB,IACT1nB,EAAMqsB,8BAA8BjhB,OAqmBhD,OAjmBAhU,OAAO0H,eAAegsB,EAAUhzB,UAAW,kBAAmB,CAC1DiH,IAAK,WACD,IAAIC,EACJ,IAAKpH,KAAKwzB,iBAAkB,CACxB,IAAIkB,EAAqB10B,KAAK2zB,YAAYpS,iBAAiB0H,MAAK,SAAU3pB,GAAK,MAAiB,YAAVA,EAAEq1B,OACxF30B,KAAKwzB,iBAAiI,QAA7GpsB,EAAKstB,aAA+D,EAASA,EAAmB9f,eAA4B,IAAPxN,EAAgBA,EAAK,EAEvK,OAAOpH,KAAKwzB,kBAEhBlsB,YAAY,EACZC,cAAc,IAElB/H,OAAO0H,eAAegsB,EAAUhzB,UAAW,mBAAoB,CAC3DiH,IAAK,WACD,OAAOnH,KAAKme,iBAAmB,GAEnC7W,YAAY,EACZC,cAAc,IAElB2rB,EAAUhzB,UAAU00B,QAAU,WAC1B,IAAK,IAAIliB,EAAK,EAAGtL,EAAKpH,KAAKozB,kBAAmB1gB,EAAKtL,EAAGzG,OAAQ+R,IAAM,CAChE,IAAIwQ,EAAM9b,EAAGsL,GACb1S,KAAK2zB,YAAYnQ,IAAIN,GAGzB,IAAK,IAAI2R,KADT70B,KAAKozB,kBAAkBzyB,OAAS,EACRX,KAAKmzB,mBACrBnzB,KAAKszB,iBAAiBzzB,eAAeg1B,WAC9B70B,KAAKmzB,mBAAmB0B,IAI3C3B,EAAUhzB,UAAU40B,cAAgB,SAAUlwB,EAAM2P,GAChD,IAAInM,EAAQpI,KACZ,OAAOA,KAAKi0B,YACPhlB,KAAK,CACNpL,KAAM+rB,GACNjgB,OAAQ,SACR/K,KAAMA,EACN2P,KAAMA,EACNwgB,SAAU,aAETjzB,MAAK,SAAUkzB,GAChB5sB,EAAMkrB,iBAAiB1uB,GAAQowB,EAAiBC,WAChD7sB,EAAMmrB,iBAAiByB,EAAiBC,YAAcrwB,EACtD,IAAIswB,EAAc9sB,EAAM+qB,mBAAmBvuB,IAAS,IAAI8rB,GAAesE,EAAiBC,WAAYrwB,GAAM,OAAM0G,GAOhH,OANA4pB,EAAYtE,aAAc,EAC1BsE,EAAYtwB,KAAOA,EACnBswB,EAAYvE,UAAYqE,EAAiBC,WACzCC,EAAYvwB,QAAUqwB,EAAiBzgB,MAAQA,EAC/C2gB,EAAYC,qBAAsB,EAClC/sB,EAAM+qB,mBAAmBvuB,GAAQswB,EAC1BF,EAAiBC,eAGhC/B,EAAUhzB,UAAU6hB,IAAM,WACtB,IAAI3Z,EAAQpI,KACZ,OAAOR,OAAO2E,KAAKnE,KAAKmzB,oBACnBzpB,QAAO,SAAU9E,GAAQ,OAAOwD,EAAM+qB,mBAAmBvuB,GAAMgsB,gBAExEsC,EAAUhzB,UAAUsH,OAAS,SAAU5C,EAAMqsB,GACzC,IAAI7pB,EACJ,OAAOtG,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAIk1B,EAAaE,EAAgBC,EAC7BjtB,EAAQpI,KACZ,OAAO+B,EAAY/B,MAAM,SAAUyP,GAC/B,OAAQA,EAAGpN,OACP,KAAK,EAED,OADA6yB,EAAcl1B,KAAKmzB,mBAAmBvuB,KACjBswB,EAAYtE,aAGjCwE,EAAiBF,EAAYvwB,QACvBuwB,EAAYnE,eAAuB,CAAC,EAAG,GACtC,CAAC,EAAG/wB,KAAKmH,IAAI+tB,EAAYtwB,QAJrB,CAAC,EAAG5E,KAAK80B,cAAclwB,EAAMqsB,IAK5C,KAAK,EACDmE,EAAiB3lB,EAAGnN,OACpBmN,EAAGpN,MAAQ,EACf,KAAK,EAID,OAHAgzB,EAA2C,IAAzBr1B,KAAKme,gBACnBne,KAAKs1B,wBAAwBF,EAAgBnE,GAC7CjxB,KAAKu1B,wBAAwBH,EAAgBnE,GAC5CzxB,OAAO2E,KAAKkxB,EAAgB7D,OAAO7wB,QAChCnB,OAAO2E,KAAKkxB,EAAgB3D,SAAS/wB,QACrC00B,EAAgB1D,QAAQhxB,SACa,QAAnCyG,EAAKiuB,EAAgBlE,gBAA6B,IAAP/pB,OAAgB,EAASA,EAAGzG,QAG1E,CAAC,EAAGX,KAAKi0B,YACPhlB,KAAK,CACNpL,KAAMysB,GACN3gB,OAAQ,SACRslB,WAAYC,EAAYvE,UACxBM,MAAOoE,GACR,GAAI,CAAE3X,YAAY,IAChB5b,MAAK,SAAU0zB,GAChBptB,EAAMqtB,cAAcP,EAAaG,EAAiB,CAC9CK,UAAWF,EAAWplB,cAXvB,CAAC,EAAGjP,QAAQC,mBAkB3C8xB,EAAUhzB,UAAUiyB,IAAM,SAAUvtB,EAAM2P,GACtC,IAAInM,EAAQpI,KACRk1B,EAAcl1B,KAAKmzB,mBAAmBvuB,GAC1C,OAAKswB,GAAgBA,EAAYtE,YAG1B5wB,KAAKi0B,YACPhlB,KAAK,CACNpL,KAAMysB,GACN3gB,OAAQ,SACRslB,WAAYC,EAAYvE,UACxBM,MAAO,CAAEhY,MAAO1E,IACjB,GAAI,CAAEmJ,YAAY,IAChB5b,MAAK,SAAU0zB,GAChBptB,EAAMqtB,cAAcP,EAAa,CAAEjc,MAAO1E,EAAMid,MAAO,GAAIG,QAAS,GAAID,QAAS,IAAM,CAAEgE,UAAWF,EAAWplB,aAVxGpQ,KAAK80B,cAAclwB,EAAM2P,IAaxC2e,EAAUhzB,UAAUy1B,QAAU,SAAU/wB,EAAME,EAAMvD,GAChD,OAAKvB,KAAK41B,iBAGH51B,KAAK61B,SAASjxB,EAAM,CAAC,CAAEE,KAAMA,EAAMvD,MAAOA,KAFtCJ,QAAQE,OAAO,+EAI9B6xB,EAAUhzB,UAAU21B,SAAW,SAAUjxB,EAAMkxB,GAC3C,IAAI1tB,EAAQpI,KACZ,IAAKA,KAAK41B,iBACN,OAAOz0B,QAAQE,OAAO,+EAE1B,IAAI6zB,EAAcl1B,KAAKmzB,mBAAmBvuB,GAC1C,IAAKswB,IAAgBA,EAAYtE,YAAa,CAE1C,IADA,IAAIiB,EAAM,GACDnf,EAAK,EAAGqjB,EAAeD,EAAYpjB,EAAKqjB,EAAap1B,OAAQ+R,IAAM,CAExE4e,GAAeO,GADXmE,EAAYD,EAAarjB,IACCnR,MAAOy0B,EAAUlxB,MAEnD,OAAO9E,KAAK80B,cAAclwB,EAAMitB,GAGpC,IADA,IAAIV,EAAW,GACN/pB,EAAK,EAAG6uB,EAAeH,EAAY1uB,EAAK6uB,EAAat1B,OAAQyG,IAAM,CACxE,IAAI4uB,EACoB,QADpBA,EAAYC,EAAa7uB,IACf7F,MACV4vB,EAASjuB,KAAK,CAAEW,KAAM,SAAUiB,KAAMkxB,EAAUlxB,OAGhDqsB,EAASjuB,KAAK,CAAEW,KAAM,MAAOiB,KAAMkxB,EAAUlxB,KAAMvD,MAAOy0B,EAAUz0B,QAG5E,OAAOvB,KAAKi0B,YACPhlB,KAAK,CACNpL,KAAMysB,GACN3gB,OAAQ,SACRslB,WAAYC,EAAYvE,UACxBM,MAAO,CAAEE,SAAUA,IACpB,GAAI,CAAEzT,YAAY,IAChB5b,MAAK,SAAU0zB,GAChBptB,EAAMqtB,cAAcP,EAAa,CAAE1D,MAAO,GAAIG,QAAS,GAAID,QAAS,GAAIP,SAAUA,GAAY,CAAEuE,UAAWF,EAAWplB,cAG9H8iB,EAAUhzB,UAAUiH,IAAM,SAAUvC,GAChC,IACIwC,EADAgB,EAAQpI,KAERk1B,EAAcl1B,KAAKmzB,mBAAmBvuB,GAC1C,IAAKswB,IAAgBA,EAAYtE,YAC7B,OAAOzvB,QAAQC,QAAQ,IAE3B,GAAI8zB,KAAiBA,EAAYnE,iBAAmBmE,EAAYC,qBAC5D,OAAO,IAAIh0B,SAAQ,SAAUC,GACzBgH,EAAM8tB,UAAUtxB,GAAM,SAAU2P,EAAM4hB,EAAIC,EAAIC,GAC1CjuB,EAAMkuB,YAAYD,GAClBj1B,EAAQmT,SAIpB,IAAI5P,EAAmG,QAAxFyC,EAAK8tB,aAAiD,EAASA,EAAYvwB,eAA4B,IAAPyC,EAAgBA,EAAK,GACpI,OAAOjG,QAAQC,QAAQuD,IAE3BuuB,EAAUhzB,UAAUg2B,UAAY,SAAUtxB,EAAMkN,EAAUykB,GACtD,IAAInuB,EAAQpI,KACRw2B,OAA4D,IAApBD,EAAkCv2B,KAAKqzB,gCAAkCkD,OACtF,IAApBA,IACPv2B,KAAKqzB,iCAAmC,GAExCrzB,KAAK0zB,4BAA4BX,OAAM,SAAU0D,GAAgB,OAAOA,EAAaC,SAAWtuB,EAAMirB,oCACtGrzB,KAAK0zB,4BAA4BxwB,KAAK,CAAE2xB,YAAajwB,EAAM8xB,OAAQF,EAAgC1kB,SAAUA,IAEjH,IAAIojB,EAAcl1B,KAAKmzB,mBAAmBvuB,GAC1C,IAAKswB,IACAA,EAAYtE,YAIb,OAHAsE,EAAcA,GAAe,IAAIxE,QAAeplB,EAAW1G,GAAM,OAAO0G,GACxEtL,KAAKmzB,mBAAmBvuB,GAAQswB,EAChCA,EAAYpE,gBAAgB0F,GAAkC1kB,EACvD3Q,QAAQC,QAAQo1B,GAE3B,IAAIG,EAAezB,EAAYnE,eAE/B,GADAmE,EAAYpE,gBAAgB0F,GAAkC1kB,EACzD6kB,EAoBA,CACD,GAAIzB,EAAYC,oBAEZrjB,EADI8kB,EAAQ1F,GAAUgE,EAAYvwB,SAClBiyB,EAAO,GAAIJ,GAE/B,OAAOr1B,QAAQC,QAAQo1B,GAxBvB,GAAKtB,EAAY2B,eAWZ,CACD,GAAI3B,EAAYC,oBAEZrjB,EADI8kB,EAAQ1F,GAAUgE,EAAYvwB,SAClBiyB,EAAO,GAAIJ,GAE/B,OAAOr1B,QAAQC,QAAQo1B,GAfvB,GAAItB,EAAYvwB,SAAWuwB,EAAY4B,yBAA0B,CAEzD,IAAIF,EADR,GAAI1B,EAAYC,oBAEZrjB,EADI8kB,EAAQ1F,GAAUgE,EAAYvwB,SAClBiyB,EAAO,GAAIJ,GAE/B,OAAOr1B,QAAQC,QAAQo1B,GAE3B,OAAOx2B,KAAK+2B,cAAc7B,GACrBpzB,MAAK,WAAc,OAAO00B,MAkB3CtD,EAAUhzB,UAAUo2B,YAAc,SAAUC,GACxCv2B,KAAK0zB,4BAA8B1zB,KAAK0zB,4BAA4BhqB,QAAO,SAAU+sB,GAAgB,OAAOA,EAAaC,SAAWH,KACpI,IAAK,IAAI7jB,EAAK,EAAGtL,EAAK5H,OAAO2E,KAAKnE,KAAKmzB,oBAAqBzgB,EAAKtL,EAAGzG,OAAQ+R,IAAM,CAC9E,IAAIoQ,EAAS1b,EAAGsL,GACZwiB,EAAcl1B,KAAKmzB,mBAAmBrQ,GAC1C,IAAKoS,EACD,OAEJ,IAAIyB,EAAezB,EAAYnE,sBACxBmE,EAAYpE,gBAAgByF,GAC/BrB,EAAYtE,aACZ+F,IACCzB,EAAYnE,gBACbmE,EAAY4B,0BACZ92B,KAAKg3B,gBAAgB9B,GAEpBA,EAAYtE,aACZsE,EAAYnE,uBACN/wB,KAAKmzB,mBAAmBrQ,KAI3CoQ,EAAUhzB,UAAU+2B,QAAU,SAAUryB,GACpC,IAAIswB,EAAcl1B,KAAKmzB,mBAAmBvuB,GAC1C,OAAKswB,EAGEl1B,KAAKi0B,YACPhlB,KAAK,CACNpL,KAAMusB,GACNzgB,OAAQ,SACRslB,WAAYC,EAAYvE,YACzB7uB,MAAK,SAAUM,OAPPjB,QAAQE,OAAO,gBAAkBuD,EAAO,oBASvDsuB,EAAUhzB,UAAUu1B,cAAgB,SAAUP,EAAajE,EAAOiG,GAC9D,IAAIC,EAAajC,EAAYvwB,QAC7BuwB,EAAYvwB,QAAUqsB,GAAkBkE,EAAYvwB,QAASssB,EAAOjxB,KAAK4zB,SACzEsB,EAAYC,qBAAsB,EAC9Bn1B,KAAKmzB,mBAAmB+B,EAAYtwB,QAAUswB,GAC7CzC,GAAU0E,EAAYjC,EAAYvwB,UACnC3E,KAAKo3B,sBAAsBlC,EAAajE,EAAOiG,IAGvDhE,EAAUhzB,UAAUk0B,kCAAoC,WAMpD,IALA,IAKS1hB,EAAK,EAAG2kB,EALS,CACtBrH,GACAD,GACAF,IAE0Dnd,EAAK2kB,EAAsB12B,OAAQ+R,IAAM,CACnG,IAAI4kB,EAAqBD,EAAsB3kB,GAC3CwQ,EAAMljB,KAAK2zB,YAAY/W,GAAG0a,EAAoBt3B,KAAKu0B,4BAA4BrS,KAAKliB,OACxFA,KAAKozB,kBAAkBlwB,KAAKggB,KAGpCgQ,EAAUhzB,UAAUq0B,4BAA8B,SAAUgD,GACxD,IAAInvB,EAAQpI,KACRs3B,EAAqBC,EAAkB1zB,KACvCyzB,IAAuBzH,IACvB7vB,KAAKszB,iBAAiBiE,EAAkBC,aAAeD,EAAkBtC,WACzEj1B,KAAKuzB,iBAAiBgE,EAAkBtC,YAAcsC,EAAkBC,aAEnEF,IAAuBtH,KAC5BhwB,KAAKszB,iBAAiBiE,EAAkB3yB,MAAQ2yB,EAAkBtC,WAClEj1B,KAAKuzB,iBAAiBgE,EAAkBtC,YAAcsC,EAAkB3yB,MAG5E,IAAIA,EAAO5E,KAAKuzB,iBAAiBgE,EAAkBtC,YACnD,IAAKrwB,EACD,MAAM,IAAImC,MAAM,yDAA2DwwB,EAAkBtC,YAEjG,IAAKj1B,KAAKszB,iBAAiB1uB,GACvB,MAAM,IAAImC,MAAM,uDAAyDwwB,EAAkBtC,YAE/F,IAAIC,EAAcl1B,KAAKmzB,mBAAmBvuB,GAC1C,GAAIswB,EAAa,CACb,GAAIA,EAAYtE,YACZ,OAGA,IAAKsE,EAAYnE,eACb,MAAM,IAAIhqB,MAAM,iDAEpBmuB,EAAYtE,aAAc,EAC1BsE,EAAYvE,UAAY4G,EAAkBtC,WAC1CC,EAAYrE,WAAa0G,EAAkBC,YACtCtC,EAAY4B,0BACb92B,KAAK+2B,cAAc7B,QAK3Bl1B,KAAKmzB,mBAAmBvuB,GAAQswB,EAC5B,IAAIxE,GAAe6G,EAAkBtC,WAAYrwB,GAAM,EAAM2yB,EAAkBC,aAC/Ex3B,KAAK6zB,mBACL7zB,KAAKk2B,UAAUtxB,GAAM,eAAiB9C,MAAK,SAAU40B,GAAU,OAAOtuB,EAAMqvB,sBAAwBf,MAIhHxD,EAAUhzB,UAAUm0B,kCAAoC,WAMpD,IALA,IAKS3hB,EAAK,EAAGglB,EALS,CACtBnH,GACAL,GACAM,IAE0D9d,EAAKglB,EAAsB/2B,OAAQ+R,IAAM,CACnG,IAAIilB,EAAqBD,EAAsBhlB,GAC3CwQ,EAAMljB,KAAK2zB,YAAY/W,GAAG+a,EAAoB33B,KAAKw0B,4BAA4BtS,KAAKliB,OACxFA,KAAKozB,kBAAkBlwB,KAAKggB,KAGpCgQ,EAAUhzB,UAAUs0B,4BAA8B,SAAUoD,GACxD,IAAID,EAAqBC,EAAkB/zB,KACvC8sB,EAAYiH,EAAkB3C,WAC9BC,EAAcl1B,KAAKmzB,mBAAmBnzB,KAAKuzB,iBAAiB5C,IAC5DkH,GAAY3C,IAAgBA,EAAYtE,YAC5C,GAAI+G,IAAuBnH,GAClB0E,GAODA,EAAYvE,UAAYA,EACxBuE,EAAYtE,aAAc,EAC1BsE,EAAYrE,WAAa+G,EAAkBJ,cAR3CtC,EAAc,IAAIxE,GAAeC,EAAWiH,EAAkBJ,aAAa,EAAMI,EAAkBJ,aACnGx3B,KAAKmzB,mBAAmByE,EAAkBJ,aAAetC,EACzDl1B,KAAKuzB,iBAAiB5C,GAAaiH,EAAkBJ,YACrDx3B,KAAKszB,iBAAiBsE,EAAkBJ,aAAe7G,GAO3DuE,EAAY2B,gBAAiB,OAG7B,IAAK3B,IAAgBA,EAAYtE,YAW7B,YAVI+G,IAAuBzH,KACvBgF,EAAcA,GAAe,IAAIxE,GAAeC,EAAWiH,EAAkBhzB,MAAM,OAAM0G,IAC7EwrB,0BAA2B,EACvC92B,KAAKmzB,mBAAmByE,EAAkBhzB,MAAQswB,EAClDl1B,KAAKuzB,iBAAiB5C,GAAaiH,EAAkBhzB,KACrD5E,KAAKszB,iBAAiBsE,EAAkBhzB,MAAQ+rB,GAGhD3wB,KAAK4zB,QAAQhiB,MAAM,0CAA4C+e,IAK3E,IAAIwG,EAAajC,EAAYvwB,QAE7B,GADAuwB,EAAYC,qBAAsB,EAC9BwC,IAAuBzH,GACvBgF,EAAYvwB,QAAUizB,EAAkBrjB,MAAQ,QAE/C,GAAIojB,IAAuBnH,GAC5B0E,EAAYvwB,QAAUizB,EAAkBE,kBAAoB,OAE3D,IAAIH,IAAuBpH,GAI5B,MAAM,IAAIxpB,MAAM,uCAAyC4wB,GAHzDzC,EAAYvwB,QAAUqsB,GAAkBkE,EAAYvwB,QAASizB,EAAkB3G,MAAOjxB,KAAK4zB,UAK3FiE,GACCpF,GAAUyC,EAAYvwB,QAASwyB,IAChCQ,IAAuBzH,IACvBlwB,KAAKo3B,sBAAsBlC,EAAa0C,EAAkB3G,MAAO,CAAEyE,UAAWkC,EAAkBG,cAGxG7E,EAAUhzB,UAAUk3B,sBAAwB,SAAUlC,EAAajE,EAAOiG,GAEtE,IADAjG,EAAQA,GAAS,CAAEO,MAAO,GAAIE,QAAS,GAAIzY,MAAO,GAAI0Y,QAAS,KACrDR,SAAU,CAChBF,EAAMO,MAAQP,EAAMS,QAAUT,EAAMhY,MAAQ,GAC5CgY,EAAMU,QAAU,GAChB,IAAK,IAAIjf,EAAK,EAAGtL,EAAK6pB,EAAME,SAAUze,EAAKtL,EAAGzG,OAAQ+R,IAAM,CACxD,IAAI0e,EAAUhqB,EAAGsL,GACI,WAAjB0e,EAAQvtB,OAC2B,IAA/ButB,EAAQtsB,KAAKmW,QAAQ,MACrBgW,EAAMU,QAAQzuB,KAAKkuB,EAAQtsB,MAE/BwsB,GAAeL,EAAMS,QAAS,KAAMN,EAAQtsB,OAEtB,QAAjBssB,EAAQvtB,MACbytB,GAAeL,EAAMS,QAASN,EAAQ7vB,MAAO6vB,EAAQtsB,OAIjE,IAAK,IAAIkzB,KAAuB9C,EAAYpE,gBACxC,GAAIoE,EAAYpE,gBAAgBjxB,eAAem4B,GAC3C,KAEIC,EADqB/C,EAAYpE,gBAAgBkH,IAClC9G,GAAUgE,EAAYvwB,SAAUnF,OAAOa,OAAO,GAAI4wB,EAAMO,OAAS,GAAIP,EAAMS,SAAW,GAAIT,EAAMhY,OAAS,IAAKgY,EAAMU,QAASxS,SAAS6Y,EAAqB,IAAKd,GAEnL,MAAO/kB,GACHnS,KAAK4zB,QAAQlc,MAAM,mBAAqB5J,KAAKC,UAAUoE,MAKvE+gB,EAAUhzB,UAAUo0B,oCAAsC,WAKtD,IAJA,IAIS5hB,EAAK,EAAGwlB,EAJW,CACxB7H,GACAP,IAE8Dpd,EAAKwlB,EAAwBv3B,OAAQ+R,IAAM,CACzG,IAAIylB,EAAuBD,EAAwBxlB,GAC/CwQ,EAAMljB,KAAK2zB,YAAY/W,GAAGub,EAAsBn4B,KAAKy0B,8BAA8BvS,KAAKliB,OAC5FA,KAAKozB,kBAAkBlwB,KAAKggB,KAGpCgQ,EAAUhzB,UAAUu0B,8BAAgC,SAAU2D,GAC1D,IACIzH,EACA/rB,EACJ,GAH2BwzB,EAAav0B,OAGXisB,IAGzB,GAFAlrB,EAAOwzB,EAAaZ,cACpB7G,EAAY3wB,KAAKszB,iBAAiB1uB,IAG9B,YADA5E,KAAK4zB,QAAQhiB,MAAM,8CAAgDwmB,EAAaZ,kBAOpF,GAFA7G,EAAYyH,EAAanD,aACzBrwB,EAAO5E,KAAKuzB,iBAAiB5C,IAGzB,YADA3wB,KAAK4zB,QAAQhiB,MAAM,6CAA+CwmB,EAAanD,mBAIhFj1B,KAAKuzB,iBAAiB5C,UACtB3wB,KAAKszB,iBAAiB1uB,GAC7B,IAAIswB,EAAcl1B,KAAKmzB,mBAAmBvuB,UACnC5E,KAAKmzB,mBAAmBvuB,GAC1BswB,GAAgBA,EAAYtE,aAC7B5wB,KAAK4zB,QAAQhiB,MAAM,6CAA+C+e,IAI1EuC,EAAUhzB,UAAU62B,cAAgB,SAAU7B,GAE1C,OADAA,EAAY4B,0BAA2B,EAChC92B,KAAKi0B,YACPhlB,KAAK,CACNpL,KAAMosB,GACNtgB,OAAQ,SACRslB,WAAYC,EAAYvE,YACzB7uB,MAAK,SAAUM,QAEtB8wB,EAAUhzB,UAAU82B,gBAAkB,SAAU9B,GAE5C,OADAA,EAAY4B,0BAA2B,EAChC92B,KAAKi0B,YACPhlB,KAAK,CACNpL,KAAMssB,GACNxgB,OAAQ,SACRslB,WAAYC,EAAYvE,YACzB7uB,MAAK,SAAUM,QAEtB8wB,EAAUhzB,UAAUq1B,wBAA0B,SAAUnU,EAAMiX,GAC1D,IAAIpH,EAAQ,CAAEO,MAAO,GAAIE,QAAS,GAAIC,QAAS,GAAI1Y,WAAO3N,GAC1D,GAAI8V,EACA,IAAK,IAAI1O,EAAK,EAAGtL,EAAK5H,OAAO2E,KAAKid,GAAO1O,EAAKtL,EAAGzG,OAAQ+R,IAAM,CAC3D,IAAIggB,EAAItrB,EAAGsL,IACyB,IAAhClT,OAAO2E,KAAKk0B,GAAIpd,QAAQyX,IACX,OAAV2F,EAAG3F,IACFD,GAAUrR,EAAKsR,GAAI2F,EAAG3F,MAC1BzB,EAAMS,QAAQgB,GAAK2F,EAAG3F,IAIlC,IAAK,IAAIjjB,EAAK,EAAG0Q,EAAK3gB,OAAO2E,KAAKk0B,GAAK5oB,EAAK0Q,EAAGxf,OAAQ8O,IAAM,CACrDijB,EAAIvS,EAAG1Q,GACN2R,IAA2C,IAAlC5hB,OAAO2E,KAAKid,GAAMnG,QAAQyX,GAKrB,OAAV2F,EAAG3F,IACRzB,EAAMU,QAAQzuB,KAAKwvB,GALL,OAAV2F,EAAG3F,KACHzB,EAAMO,MAAMkB,GAAK2F,EAAG3F,IAOhC,OAAOzB,GAEXiC,EAAUhzB,UAAUo1B,wBAA0B,SAAUlU,EAAMiX,GAG1D,IAFA,IAAIjxB,EAAIqI,EACJwhB,EAAQ,CAAEO,MAAO,GAAIE,QAAS,GAAIC,QAAS,GAAI1Y,WAAO3N,EAAW6lB,SAAU,IACtEze,EAAK,EAAGyN,EAAK3gB,OAAO2E,KAAKk0B,GAAK3lB,EAAKyN,EAAGxf,OAAQ+R,IAAM,CACzD,IAAIggB,EAAIvS,EAAGzN,GACX,GAAc,OAAV2lB,EAAG3F,GAEED,GADOrR,EAAOA,EAAKsR,GAAK,KACP2F,EAAG3F,KACK,QAAzBtrB,EAAK6pB,EAAME,gBAA6B,IAAP/pB,GAAyBA,EAAGlE,KAAK,CAAEW,KAAM,MAAOiB,KAAM4tB,EAAGnxB,MAAO82B,EAAG3F,UAI/E,QAAzBjjB,EAAKwhB,EAAME,gBAA6B,IAAP1hB,GAAyBA,EAAGvM,KAAK,CAAEW,KAAM,SAAUiB,KAAM4tB,IAGnG,OAAOzB,GAEXiC,EAAUhzB,UAAUg0B,WAAa,WAE7B,IADA,IAAI9rB,EAAQpI,KACH0S,EAAK,EAAGtL,EAAKpH,KAAKozB,kBAAmB1gB,EAAKtL,EAAGzG,OAAQ+R,IAAM,CAChE,IAAIwQ,EAAM9b,EAAGsL,GACb1S,KAAK2zB,YAAYnQ,IAAIN,GAErBljB,KAAKy3B,wBACLz3B,KAAKs2B,YAAYt2B,KAAKy3B,8BACfz3B,KAAKy3B,uBAEhBz3B,KAAKozB,kBAAoB,GACzBpzB,KAAKszB,iBAAmB,GACxBtzB,KAAKuzB,iBAAmB,UACjBvzB,KAAKwzB,iBACZxzB,KAAKyzB,mBAAqBj0B,OAAO2E,KAAKnE,KAAKmzB,oBAAoB/uB,QAAO,SAAUk0B,EAAYC,GAExF,OADAD,EAAWC,GAAWnwB,EAAM+qB,mBAAmBoF,GAAS5zB,QACjD2zB,IACR,IACHt4B,KAAKmzB,mBAAqB,IAE9BD,EAAUhzB,UAAUi0B,gBAAkB,WAClC,IAAI/sB,EACJ,OAAOtG,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAIyP,EAAI0Q,EAAIzN,EAAI6lB,EAASC,EACrBpwB,EAAQpI,KACZ,OAAO+B,EAAY/B,MAAM,SAAUy4B,GAC/B,OAAQA,EAAGp2B,OACP,KAAK,EAwBD,OAvBArC,KAAKo0B,oCACLp0B,KAAKq0B,oCACLr0B,KAAKs0B,sCACgC,QAApCltB,EAAKpH,KAAK2zB,YAAYnG,gBAA6B,IAAPpmB,GAAyBA,EAAGmc,MAAMkN,GAAyB7rB,MAAM,SAAU4O,GACpH,IAAI3P,EAAO2P,EAAQ3P,KACdA,IAGDA,IAASksB,IACTlsB,IAASmsB,IACTnsB,IAASgsB,GACTznB,EAAMmsB,4BAA4B/gB,GAE7B3P,IAASqsB,IACdrsB,IAAS0sB,IACT1sB,IAAS2sB,GACTpoB,EAAMosB,4BAA4BhhB,GAE7B3P,IAASwsB,IACdxsB,IAASisB,IACT1nB,EAAMqsB,8BAA8BjhB,OAGrC,CAAC,EAAGrS,QAAQ4gB,IAAI/hB,KAAK0zB,4BAA4BrlB,KAAI,SAAUooB,GAAgB,OAAOruB,EAAM8tB,UAAUO,EAAa5B,YAAa4B,EAAa3kB,SAAU2kB,EAAaC,aAC/K,KAAK,EAED,OADA+B,EAAGn2B,OACI,CAAC,EAAGtC,KAAK04B,cACpB,KAAK,EAGD,IAAKvY,KAFLsY,EAAGn2B,OACHmN,EAAK,GACMzP,KAAKyzB,mBACZhkB,EAAGvM,KAAKid,GACZzN,EAAK,EACL+lB,EAAGp2B,MAAQ,EACf,KAAK,EACD,OAAMqQ,EAAKjD,EAAG9O,QACd43B,EAAU9oB,EAAGiD,GACmC,iBAArC1S,KAAKyzB,mBAAmB8E,IAAkF,IAAzD/4B,OAAO2E,KAAKnE,KAAKyzB,mBAAmB8E,IAAU53B,OAC/F,CAAC,EAAG,IAEf63B,EAAgBx4B,KAAKyzB,mBAAmB8E,GACxCv4B,KAAK4zB,QAAQ5c,KAAK,gCAAkCuhB,GAC7C,CAAC,EAAGv4B,KAAKwH,OAAO+wB,EAASC,MAPF,CAAC,EAAG,GAQtC,KAAK,EACDC,EAAGn2B,OACHm2B,EAAGp2B,MAAQ,EACf,KAAK,EAED,OADAqQ,IACO,CAAC,EAAG,GACf,KAAK,EAGD,OAFA1S,KAAKyzB,mBAAqB,GAC1BzzB,KAAK4zB,QAAQ5c,KAAK,6BACX,CAAC,WAK5Bkc,EAAUhzB,UAAUw4B,WAAa,WAC7B,OAAO,IAAIv3B,SAAQ,SAAUC,GAAW,OAAOmM,YAAW,WAAc,OAAOnM,MAAc,OAE1F8xB,CACX,IAEIyF,GAAkB,WAClB,SAASA,EAAenqB,GACpBxO,KAAK44B,QAAU,IAAI1F,GAAU1kB,GAuFjC,OArFAmqB,EAAez4B,UAAU6hB,IAAM,WAC3B,OAAO/hB,KAAK44B,QAAQ7W,OAExB4W,EAAez4B,UAAUsH,OAAS,SAAU5C,EAAM2P,GAG9C,OAFAvU,KAAK64B,UAAUj0B,GACf5E,KAAK84B,UAAUvkB,GACRvU,KAAK44B,QAAQpxB,OAAO5C,EAAM2P,IAErCokB,EAAez4B,UAAUiyB,IAAM,SAAUvtB,EAAM2P,GAG3C,OAFAvU,KAAK64B,UAAUj0B,GACf5E,KAAK84B,UAAUvkB,GACRvU,KAAK44B,QAAQzG,IAAIvtB,EAAM2P,IAElCokB,EAAez4B,UAAUy1B,QAAU,SAAU/wB,EAAME,EAAMyP,GAIrD,OAHAvU,KAAK64B,UAAUj0B,GACf5E,KAAK+4B,UAAUj0B,GACe,KAATA,GAEjB9E,KAAK84B,UAAUvkB,GACRvU,KAAKmyB,IAAIvtB,EAAM2P,IAEnBvU,KAAK44B,QAAQjD,QAAQ/wB,EAAME,EAAMyP,IAE5CokB,EAAez4B,UAAU21B,SAAW,SAAUjxB,EAAMo0B,GAEhD,GADAh5B,KAAK64B,UAAUj0B,IACVjF,MAAMgG,QAAQqzB,GACf,MAAM,IAAIjyB,MAAM,uDAEpB,IAAK,IAAI2L,EAAK,EAAGumB,EAAUD,EAAOtmB,EAAKumB,EAAQt4B,OAAQ+R,IAAM,CACzD,IAAItL,EAAK6xB,EAAQvmB,GAAK5N,EAAOsC,EAAGtC,KAAMvD,EAAQ6F,EAAG7F,MACjDvB,KAAK+4B,UAAUj0B,GACe,KAATA,GAEjB9E,KAAK84B,UAAUv3B,GAGvB,OAAOvB,KAAK44B,QAAQ/C,SAASjxB,EAAMo0B,IAEvCL,EAAez4B,UAAUg2B,UAAY,SAAUtxB,EAAMkN,GACjD,IAAI1J,EAAQpI,KAEZ,GADAA,KAAK64B,UAAUj0B,GACS,mBAAbkN,EACP,MAAM,IAAI/K,MAAM,8CAEpB,OAAO/G,KAAK44B,QACP1C,UAAUtxB,GAAM,SAAU2P,EAAM0c,EAAOU,EAASrtB,EAAK4yB,GAAa,OAAOplB,EAASyC,EAAM0c,EAAOU,GAAS,WAAc,OAAOvpB,EAAMwwB,QAAQtC,YAAYhyB,KAAS4yB,MAChKp1B,MAAK,SAAUwC,GAChB,OAAO,WACH8D,EAAMwwB,QAAQtC,YAAYhyB,QAItCq0B,EAAez4B,UAAUiH,IAAM,SAAUvC,GAErC,OADA5E,KAAK64B,UAAUj0B,GACR5E,KAAK44B,QAAQzxB,IAAIvC,IAE5B+zB,EAAez4B,UAAU0tB,MAAQ,WAC7B,OAAOzsB,QAAQC,QAAQpB,OAE3B24B,EAAez4B,UAAU+2B,QAAU,SAAUryB,GAEzC,OADA5E,KAAK64B,UAAUj0B,GACR5E,KAAK44B,QAAQ3B,QAAQryB,IAEhCpF,OAAO0H,eAAeyxB,EAAez4B,UAAW,mBAAoB,CAChEiH,IAAK,WACD,OAAOnH,KAAK44B,QAAQhD,kBAExBtuB,YAAY,EACZC,cAAc,IAElBoxB,EAAez4B,UAAU24B,UAAY,SAAUj0B,GAC3C,GAAoB,iBAATA,GAA8B,KAATA,EAC5B,MAAM,IAAImC,MAAM,mDAGxB4xB,EAAez4B,UAAU64B,UAAY,SAAUj0B,GAC3C,GAAoB,iBAATA,EACP,MAAM,IAAIiC,MAAM,uDAGxB4xB,EAAez4B,UAAU44B,UAAY,SAAUvkB,GAC3C,GAAoB,iBAATA,EACP,MAAM,IAAIxN,MAAM,0CAGjB4xB,CACX,IAEA,SAASO,GAAW3jB,EAAS4jB,EAAiBC,GAC1C,MAA+B,mBAApBD,GAA2D,mBAAlBC,EACzC7jB,GAEoB,mBAApB4jB,EACPA,EAAkB,aAEY,mBAAlBC,IACZA,EAAgB,cAEb7jB,EAAQzT,KAAKq3B,EAAiBC,GACzC,CAEA,SAASC,GAAYC,EAAI/jB,EAAS3D,GAE9B,IAAIiS,OADO,IAAPyV,IAAiBA,EAAK,GAE1B,IAAIC,EAAsB,WAClB1V,GACA/B,aAAa+B,IAUrB,OAPAtO,EACKzT,MAAK,WACNy3B,OAEC1vB,OAAM,WACP0vB,OAEG,IAAIp4B,SAAQ,SAAUC,EAASC,GAClCwiB,EAAUtW,YAAW,WAAc,OAAOlM,EAAOuQ,KAAW0nB,KAEpE,EAGA,SAAWrG,GACPA,EAAaA,EAAsB,QAAI,GAAK,UAC5CA,EAAaA,EAAoB,MAAI,GAAK,OAC7C,CAHD,CAGGA,KAAiBA,GAAe,KACnC,IAAIuG,GAAU,WACV,SAASA,EAAOjxB,EAAUlB,EAAM2I,EAAUypB,GACtCz5B,KAAKuI,SAAWA,EAChBvI,KAAKqH,KAAOA,EACZrH,KAAKgQ,SAAWA,EAChBhQ,KAAKy5B,cAAgBA,EAsbzB,OApbAD,EAAOt5B,UAAUg2B,UAAY,SAAUzV,EAAQvV,EAASiuB,EAAiBC,EAAe7K,GACpF,IAAInmB,EAAQpI,KACR05B,EAAwB,SAAUC,EAAeC,EAAQC,EAAcC,GACvE,IAAI1yB,EACJ8D,EAAQ6uB,sBAAiE,QAAxC3yB,EAAK8D,EAAQ6uB,6BAA0C,IAAP3yB,EAAgBA,EAAK8D,EAAQ8uB,cAC9G5xB,EAAMG,SAASmL,OAAOwiB,UAAU0D,EAAQ1uB,EAASyuB,EAAeE,EAAcC,EAAYvL,IA2E9F,OAAO2K,GAzEO,IAAI/3B,SAAQ,SAAUC,EAASC,GACzC,IAUI44B,EAVAJ,EAAe,SAAU3W,GACzB9hB,EAAQ8hB,IAER4W,EAAa,SAAU3nB,GACvB9Q,EAAO8Q,IAEX,GAAKsO,EAWL,IALIwZ,EADkB,iBAAXxZ,EACK,CAAE7b,KAAM6b,GAGRA,GAED7b,KAAf,MAIgB0G,IAAZJ,IACAA,EAAU,IAEd,IAAIY,EAASZ,EAAQY,OAIrB,QAHeR,IAAXQ,IACAA,EAAS,QAES,iBAAXA,GAAkC,QAAXA,GAA+B,SAAXA,EAAtD,MAIsCR,IAAlCJ,EAAQ6uB,wBACR7uB,EAAQ6uB,sBAAwB7uB,EAAQgvB,6BACF5uB,IAAlCJ,EAAQ6uB,wBACR7uB,EAAQ6uB,sBAAwB3xB,EAAMqxB,cAAcM,6BAG9BzuB,IAA1BJ,EAAQ8uB,gBACR9uB,EAAQ8uB,cAAgB9uB,EAAQivB,6BACF7uB,IAA1BJ,EAAQ8uB,gBACR9uB,EAAQ8uB,cAAgB5xB,EAAMqxB,cAAcO,gBAGpD,IACII,EAAe,EACfC,EAAiBjyB,EAAMkyB,kCAAkCL,EAAWnuB,GACxE,GAAIuuB,EAAe15B,OAAS,EACxB+4B,EAAsBW,EAAgBA,EAAe,GAAGnL,QAAQ,GAAI2K,EAAcC,OAEjF,CACD,IAAIS,EAAU,WACV,GAAKzuB,GAAYZ,EAAqB,cAKtC,GAFAkvB,GAXQ,KAYRC,EAAiBjyB,EAAMkyB,kCAAkCL,EAAWnuB,IACjDnL,OAAS,EAAG,CAC3B,IAAI65B,EAAaH,EAAe,GAAGnL,QAAQ,GAC3CwK,EAAsBW,EAAgBG,EAAYX,EAAcC,QAE/D,GAAIM,GAAgBlvB,EAAQ8uB,cAAe,CAE5CN,EAAsBW,EADM,iBAAX5Z,EAAsB,CAAE7b,KAAM6b,GAAWA,EACfoZ,EAAcC,QAGzDvsB,WAAWgtB,EAtBP,MAyBZhtB,WAAWgtB,EAzBC,WAfZl5B,EAAO,IAAI0F,MAAM,IAAO+E,EAAS,mFAXjCzK,EAAO,gKAXPA,EAAO,8JAiEW83B,EAAiBC,IAE/CI,EAAOt5B,UAAUu6B,QAAU,SAAUC,GACjC,IAAIC,OAA8BrvB,IAAjBovB,OACXpvB,EACAlL,EAAS,GAAIs6B,GACnB,OAAO16B,KAAK46B,WAAWD,GAAYtsB,KAAI,SAAUwsB,GAC7C,OAAOA,EAAgBC,OAAO9qB,aAGtCwpB,EAAOt5B,UAAUgvB,QAAU,SAAUwL,GAOjC,OALIA,EADwB,iBAAjBA,EACQ,CAAE91B,KAAM81B,GAGRt6B,EAAS,GAAIs6B,GAEzB16B,KAAK+6B,WAAWL,IAE3BlB,EAAOt5B,UAAU86B,mBAAqB,SAAUhrB,GAC5C,OAAOhQ,KAAKi7B,sBAAsBjrB,IAEtCwpB,EAAOt5B,UAAUg7B,YAAc,SAAUppB,GACrC,OAAO9R,KAAKqH,KAAK8zB,cAAcrpB,IAEnC0nB,EAAOt5B,UAAUk7B,cAAgB,SAAUtpB,GACvC,OAAO9R,KAAKqH,KAAKg0B,gBAAgBvpB,IAErC0nB,EAAOt5B,UAAUo7B,YAAc,SAAUxpB,GACrC,OAAO9R,KAAKqH,KAAKk0B,cAAczpB,IAEnC0nB,EAAOt5B,UAAUs7B,cAAgB,SAAU1pB,GACvC,OAAO9R,KAAKqH,KAAKo0B,iBAAgB,SAAUX,EAAQhjB,GAC/ChG,EAASgpB,EAAQhjB,OAGzB0hB,EAAOt5B,UAAUw7B,kBAAoB,SAAU5pB,GAC3C,OAAO9R,KAAKqH,KAAKs0B,qBAAoB,SAAUb,EAAQra,GACnD3O,EAAS,CAAEgpB,OAAQA,EAAQra,OAAQA,QAG3C+Y,EAAOt5B,UAAU07B,oBAAsB,SAAU9pB,GAC7C,OAAO9R,KAAKqH,KAAKw0B,uBAAsB,SAAUf,EAAQra,GACrD3O,EAAS,CAAEgpB,OAAQA,EAAQra,OAAQA,QAG3C+Y,EAAOt5B,UAAUkvB,OAAS,SAAUsL,EAAcoB,EAAahwB,EAAQiwB,EAAmBxe,EAAS3L,GAC/F,OAAO9Q,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAIg8B,EACA5zB,EAAQpI,KACZ,OAAO+B,EAAY/B,MAAM,SAAUoH,GAiG/B,OAhGA40B,EAAmB,WAAc,OAAOl7B,EAAUsH,OAAO,OAAQ,GAAQ,WAClE,IAAC6zB,EAAkBC,EAAyBzb,EAAQ0b,EAAUtY,EAASuY,EAAuBC,EAAgBC,EAAoB3pB,EAEjIvL,EAAIqI,EAAI0Q,EADR/X,EAAQpI,KAEZ,OAAO+B,EAAY/B,MAAM,SAAUm2B,GAC/B,OAAQA,EAAG9zB,OACP,KAAK,EAOD,KALI45B,EADwB,iBAAjBvB,EACY,CAAE91B,KAAM81B,GAGRt6B,EAAS,GAAIs6B,IAEd91B,KAClB,MAAO,CAAC,EAAGzD,QAAQE,OAAO,4JAQ9B,GANKy6B,IACDA,EAAc,IAEbhwB,IACDA,EAAS,QAES,iBAAXA,GAAkC,QAAXA,GAA+B,SAAXA,GAAgC,aAAXA,EACvE,MAAO,CAAC,EAAG3K,QAAQE,OAAO,IAAI0F,MAAM,IAAO+E,EAAS,kEAiBxD,GAfKiwB,IACDA,EAAoB,SAE0BzwB,IAA9CywB,EAAkBQ,0BAClBR,EAAkBQ,wBAA0BR,EAAkB7B,6BACZ5uB,IAA9CywB,EAAkBQ,0BAClBR,EAAkBQ,wBAA0Bv8B,KAAKy5B,cAAcM,6BAG/BzuB,IAApCywB,EAAkB/B,gBAClB+B,EAAkB/B,cAAgB+B,EAAkB5B,6BACZ7uB,IAApCywB,EAAkB/B,gBAClB+B,EAAkB/B,cAAgBh6B,KAAKy5B,cAAcO,qBAGrB1uB,IAApCywB,EAAkB/B,eAA0E,iBAApC+B,EAAkB/B,cAC1E,MAAO,CAAC,EAAG74B,QAAQE,OAAO,IAAI0F,MAAM,IAAOg1B,EAAkB/B,cAAgB,kDAEjF,GAA2B,iBAAhB8B,EACP,MAAO,CAAC,EAAG36B,QAAQE,OAAO,IAAI0F,MAAM,mDAAqDk1B,EAAiBr3B,QAG9G,GAAkC,KADlCs3B,EAAmBl8B,KAAKs6B,kCAAkC2B,EAAkBnwB,IACrDnL,OAAe,MAAO,CAAC,EAAG,GACjDw1B,EAAG9zB,MAAQ,EACf,KAAK,EAED,OADA8zB,EAAG5zB,KAAKW,KAAK,CAAC,EAAG,GAAK,IACf,CAAC,EAAGlD,KAAKw8B,qBAAqBP,EAAkBnwB,EAAQiwB,IACnE,KAAK,EAED,OADAG,EAAmB/F,EAAG7zB,OACf,CAAC,EAAG,GACf,KAAK,EAWD,OAVQ6zB,EAAG7zB,OACXme,EAASrgB,EAASA,EAAS,GAAI67B,GAAmB,CAAErB,WAAY,WAAc,MAAO,IAAO6B,mBAAmB,EAAOC,YAAqD,QAAvCt1B,EAAK60B,EAAiBS,mBAAgC,IAAPt1B,EAAgBA,EAAK,GAAI8qB,MAAiG,QAAzF/R,EAAuC,QAAjC1Q,EAAKwsB,EAAiB/J,aAA0B,IAAPziB,OAAgB,EAASA,EAAGktB,gBAA6B,IAAPxc,EAAgBA,EAAK,KAC1Ugc,EAAW,CACP1b,OAAQA,EACRmc,YAAad,EACbtoB,QAAS,kCAAoC1F,KAAKC,UAAU2sB,GAAgB,uBAAyB5sB,KAAKC,UAAUjC,GACpH+wB,iBAAavxB,EACbwxB,cAAUxxB,EACVkN,YAAQlN,GAEL,CAAC,EAAGnK,QAAQE,OAAO86B,IAC9B,KAAK,EAiBD,OAhBAtY,EAAUkY,EAAkBQ,wBAC5BH,EAAwBL,EACxBM,EAAiBH,EAAiB7tB,KAAI,SAAU0uB,GAC5C,IAAIC,EAAQ9gB,KACRuE,EAASsc,EAAkB7N,QAAQ,GACnC4L,EAASiC,EAAkBjC,OAC3BmC,EAAgB70B,EAAMG,SAASmL,OAAO0b,OAAO4N,EAAOvc,EAAQqb,EAAahB,EAAQsB,GACrF,OAAOj7B,QAAQ+7B,KAAK,CAChBD,EACA5D,GAAYxV,EAASoZ,EAAe,CAChCE,aAAcH,EACdxpB,QAAS,uBAAyBqQ,EAAU,kCAAoCpD,aAAuC,EAASA,EAAO7b,MAAQ,sBAAwBkJ,KAAKC,UAAU+sB,EAAO9qB,UAAY,cAAgBlC,KAAKC,UAAUquB,GACxO5jB,OAAQya,GAAalsB,aAI1B,CAAC,EAAG5F,QAAQ4gB,IAAIsa,IAC3B,KAAK,EAID,OAHAC,EAAqBnG,EAAG7zB,OACxBqQ,EAAU3S,KAAKo9B,uBAAuBd,EAAoBL,EAAkBH,GAC9DQ,EAAmBvJ,OAAM,SAAUnxB,GAAU,OAAOA,EAAO4W,SAAWya,GAAalsB,SAEtF,CAAC,EAAG5F,QAAQE,OAAOsR,IAEvB,CAAC,EAAGA,WAIpB,CAAC,EAAGumB,GAAU8C,IAAoBze,EAAS3L,WAI9D4nB,EAAOt5B,UAAUk9B,uBAAyB,SAAUC,EAAmB5c,EAAQ6c,GAC3E,IAAIC,EAAoBF,EACnB3zB,QAAO,SAAU8zB,GAAiB,OAAOA,EAAchlB,SAAWya,GAAawK,WAC/Er5B,QAAO,SAAUs5B,EAAWC,GAW7B,OAVAD,EAAYv6B,EAAeu6B,EAAW,CAClC,CACIb,YAAac,EAAa3tB,SAC1B8sB,SAAUa,EAAa/7B,OACvBg7B,YAAaU,EACb7c,OAAQA,EACRjN,QAASmqB,EAAanqB,QACtBgF,OAAQmlB,EAAanlB,YAI9B,IACColB,EAAaP,EACZ3zB,QAAO,SAAU8zB,GAAiB,OAAOA,EAAchlB,SAAWya,GAAalsB,SAC/E3C,QAAO,SAAUy5B,EAAWC,GAS7B,OARAD,EAAY16B,EAAe06B,EAAW,CAClC,CACIhB,YAAaiB,EAAU9tB,SACvB4sB,YAAaU,EACb14B,KAAM6b,EAAO7b,KACb4O,QAASsqB,EAAUtqB,aAI5B,IACCuqB,EAAYV,EAAkB,GAWlC,MAVa,CACT5c,OAAQA,EACRmc,YAAaU,EACbR,SAAUiB,EAAUn8B,OACpBi7B,YAAakB,EAAU/tB,SACvButB,kBAAmBA,EACnBK,WAAYA,EACZpqB,QAASuqB,EAAUvqB,QACnBgF,OAAQulB,EAAUvlB,SAI1BghB,EAAOt5B,UAAUs8B,qBAAuB,SAAUP,EAAkBnwB,EAAQiwB,GACxE,IAAI3zB,EAAQpI,KACZ,OAAO,IAAImB,SAAQ,SAAUC,EAASC,GAClC,GAAwC,IAApC06B,EAAkB/B,cAItB,IACII,EAAe,EAcf4D,EAAWvwB,aAbH,WACR2sB,GAHY,IAIZ,IAAI8B,EAAmB9zB,EAAMkyB,kCAAkC2B,EAAkBnwB,GACjF,GAAIowB,EAAiBv7B,OAAS,EAC1BynB,cAAc4V,GACd58B,EAAQ86B,QAEP,GAAI9B,IAAiB2B,EAAkB/B,eAAiB,KAGzD,OAFA5R,cAAc4V,QACd38B,MAXQ,UAHZA,QAqBZm4B,EAAOt5B,UAAU+9B,eAAiB,SAAUnyB,EAAQ+uB,GAChD,IAAIzyB,EAAQpI,KACZ,GAAsB,iBAAX8L,EAqBN,CAcD,OAZKnM,MAAMgG,QAAQmG,GAIDA,EAHA,CAACA,IAKkB1H,QAAO,SAAU85B,EAASx0B,GAC3D,IAAIy0B,EAAYtD,EAAgBnxB,QAAO,SAAU00B,GAC7C,OAAOh2B,EAAMi2B,cAAc30B,EAAQ00B,EAAiBtD,OAAO9qB,aAE/D,OAAOkuB,EAAQx4B,OAAOy4B,KACvB,IAjCH,GAAe,QAAXryB,EACA,OAAO3I,EAAe03B,GAErB,GAAe,SAAX/uB,EAAmB,CACxB,IAAIwyB,EAAezD,EACd5R,MAAK,SAAU1oB,GAAK,OAAOA,EAAEu6B,OAAO9qB,SAASuuB,WAClD,GAAID,EACA,MAAO,CAACA,GAEZ,QAA2BhzB,IAAvBuvB,EAAgB,GAChB,MAAO,CAACA,EAAgB,SAG3B,GAAe,aAAX/uB,EACL,OAAO+uB,EAAgBnxB,QAAO,SAAUtC,GAEpC,OADaA,EAAG0zB,OACF9qB,SAASK,SAAWjI,EAAM4H,SAASK,UAoB7D,MAAO,IAEXmpB,EAAOt5B,UAAUm+B,cAAgB,SAAUG,EAAgBC,GACvD,OAAOz+B,KAAK0+B,cAAcF,EAAgBC,IAE9CjF,EAAOt5B,UAAUy+B,YAAc,SAAUjE,EAAcuB,GACnD,OAAOj8B,KAAK0+B,cAAchE,EAAcuB,IAE5CzC,EAAOt5B,UAAUw+B,cAAgB,SAAUh1B,EAAQk1B,GAa/C,OAZkBp/B,OAAO2E,KAAKuF,GACzBA,QAAO,SAAUm1B,GAClB,YAAwBvzB,IAAjB5B,EAAOm1B,IACU,OAAjBn1B,EAAOm1B,IACiB,mBAAjBn1B,EAAOm1B,IACL,iBAATA,GACS,iBAATA,GACS,OAATA,GACS,cAATA,GACS,eAATA,GACY,MAAZA,EAAK,MAEG9L,OAAM,SAAU8L,GAC/B,IAAIC,EACAC,EAAcr1B,EAAOm1B,GACrBG,EAAkBJ,EAAWC,GACjC,OAAQA,GACJ,IAAK,cACDC,GAAWC,GAAe,IAAIhM,OAAM,SAAUkM,GAC1C,OAAQD,GAAmB,IAAI9sB,SAAS+sB,MAE5C,MACJ,IAAK,QACDH,EAAUlM,GAASoM,GAAmB,GAAID,GAAe,IACzD,MACJ,QACID,EAAUI,OAAOH,GAAa5yB,gBAAkB+yB,OAAOF,GAAiB7yB,cAEhF,OAAO2yB,MAGftF,EAAOt5B,UAAU66B,WAAa,SAAUL,GACpC,IAAItyB,EAAQpI,KACZ,YAAqBsL,IAAjBovB,EACO16B,KAAKqH,KAAK0zB,aAEP/6B,KAAKqH,KAAK0zB,aAAarxB,QAAO,SAAU+W,GAClD,OAAOrY,EAAMu2B,YAAYjE,EAAcja,OAI/C+Y,EAAOt5B,UAAU+6B,sBAAwB,SAAUuD,GAC/C,IAAIp2B,EAAQpI,KAERm/B,EADan/B,KAAKqH,KAAKuzB,aACMlxB,QAAO,SAAUoxB,GAC9C,OAAO1yB,EAAMi2B,cAAcG,EAAgB1D,EAAO9qB,aAEtD,GAA+B,IAA3BmvB,EAAgBx+B,OAChB,MAAO,GAEX,IAAIy+B,EAAsB,GAY1B,OAX+B,IAA3BD,EAAgBx+B,OAChBy+B,EAAsBD,EAAgB,GAAGjQ,QAGzCiQ,EAAgB74B,SAAQ,SAAUw0B,GAC9Bt7B,OAAO2E,KAAK22B,EAAO5L,SAAS5oB,SAAQ,SAAU+4B,GAC1C,IAAI5e,EAASqa,EAAO5L,QAAQmQ,GAC5BD,EAAoB3e,EAAO6e,YAAc7e,QAI9CjhB,OAAO2E,KAAKi7B,GACd/wB,KAAI,SAAU/J,GACf,OAAO86B,EAAoB96B,OAGnCk1B,EAAOt5B,UAAU06B,WAAa,SAAUF,GACpC,IAAItyB,EAAQpI,KACRy6B,EAAUz6B,KAAKqH,KAAKuzB,aACxB,YAAqBtvB,IAAjBovB,EACOD,EAAQpsB,KAAI,SAAUysB,GACzB,MAAO,CAAEA,OAAQA,EAAQ5L,QAAS,OAGnCuL,EAAQr2B,QAAO,SAAUm7B,EAAMC,GAClC,IACIC,EADmBjgC,OAAO0E,OAAOs7B,EAAQtQ,SACNxlB,QAAO,SAAU+W,GACpD,OAAOrY,EAAMu2B,YAAYjE,EAAcja,MAK3C,OAHIgf,EAAgB9+B,OAAS,GACzB4+B,EAAKr8B,KAAK,CAAE43B,OAAQ0E,EAAStQ,QAASuQ,IAEnCF,IACR,KAEP/F,EAAOt5B,UAAUo6B,kCAAoC,SAAUI,EAAc5uB,GACzE,IAAIowB,EAAmBl8B,KAAK46B,WAAWF,GACvC,OAAO16B,KAAKi+B,eAAenyB,EAAQowB,IAEhC1C,CACX,IAEIkG,GAAsB,WACtB,SAASA,EAAmBn3B,EAAUq2B,EAAYnI,GAC9Cz2B,KAAKuI,SAAWA,EAChBvI,KAAK4+B,WAAaA,EAClB5+B,KAAKy2B,aAAeA,EAsCxB,OApCAj3B,OAAO0H,eAAew4B,EAAmBx/B,UAAW,SAAU,CAC1DiH,IAAK,WACD,IAAKnH,KAAK4+B,WAAWhF,OACjB,MAAM,IAAI7yB,MAAM,aAEpB,OAAO/G,KAAK4+B,WAAWhF,QAE3BtyB,YAAY,EACZC,cAAc,IAElB/H,OAAO0H,eAAew4B,EAAmBx/B,UAAW,YAAa,CAC7DiH,IAAK,WAAc,OAAOnH,KAAKy2B,aAAa/1B,WAAa,IACzD4G,YAAY,EACZC,cAAc,IAElB/H,OAAO0H,eAAew4B,EAAmBx/B,UAAW,YAAa,CAC7DiH,IAAK,WAAc,OAAOnH,KAAKy2B,aAAakJ,WAC5Cr4B,YAAY,EACZC,cAAc,IAElB/H,OAAO0H,eAAew4B,EAAmBx/B,UAAW,WAAY,CAC5DiH,IAAK,WACD,IAAKnH,KAAKy2B,aAAazmB,SACnB,MAAM,IAAIjJ,MAAM,eAEpB,OAAO/G,KAAKy2B,aAAazmB,UAE7B1I,YAAY,EACZC,cAAc,IAElBm4B,EAAmBx/B,UAAU6T,MAAQ,WACjC/T,KAAKuI,SAASuyB,OAAO8E,wBAAwB5/B,KAAK4+B,WAAY5+B,KAAKy2B,eAEvEiJ,EAAmBx/B,UAAUgD,KAAO,SAAUqR,GAC1CvU,KAAKuI,SAASuyB,OAAO+E,iBAAiB7/B,KAAK4+B,WAAY5+B,KAAKy2B,aAAcliB,IAEvEmrB,CACX,IAEII,GAAW,WACX,SAASA,EAAQv3B,EAAUq2B,EAAYmB,GACnC//B,KAAKuI,SAAWA,EAChBvI,KAAK4+B,WAAaA,EAClB5+B,KAAK+/B,eAAiBA,EACtB//B,KAAKU,UAAYq/B,EAAer/B,UAChCV,KAAKgQ,SAAW+vB,EAAe/vB,SAWnC,OATA8vB,EAAQ5/B,UAAU8/B,OAAS,WACvBhgC,KAAKuI,SAASuyB,OAAOmF,sBAAsBjgC,KAAK+/B,eAAgB//B,KAAK4+B,WAAY,KAErFkB,EAAQ5/B,UAAUggC,eAAiB,SAAUC,GACzCngC,KAAKuI,SAASuyB,OAAOmF,sBAAsBjgC,KAAK+/B,eAAgB//B,KAAK4+B,WAAYuB,IAErFL,EAAQ5/B,UAAUmB,OAAS,SAAUyW,GACjC9X,KAAKuI,SAASuyB,OAAOsF,cAAcpgC,KAAK+/B,eAAgB//B,KAAK4+B,WAAY9mB,IAEtEgoB,CACX,IAEIO,GAAmB,WACnB,SAASA,EAAgB93B,EAAUuyB,GAC/B,IAAI1yB,EAAQpI,KACZA,KAAKuI,SAAWA,EAChBvI,KAAK86B,OAASA,EACdvyB,EAASuyB,OAAOwF,cAAa,SAAUC,EAAIC,GAAM,OAAOp4B,EAAMq4B,iBAAiBF,EAAIC,MACnFj4B,EAASuyB,OAAO4F,YAAW,SAAUxd,EAAKsd,GAAM,OAAOp4B,EAAMu4B,eAAezd,EAAKsd,MACjFj4B,EAASuyB,OAAO8F,cAAa,SAAU1d,EAAKsd,GAAM,OAAOp4B,EAAMy4B,iBAAiB3d,EAAKsd,MA6BzF,OA3BAH,EAAgBngC,UAAUugC,iBAAmB,SAAUV,EAAgBnB,GACnE,GAAMA,GACFA,EAAWkC,iBACsD,mBAA1DlC,EAAWkC,gBAAgBC,2BAFtC,CAKA,IAAIpZ,EAAU,IAAImY,GAAQ9/B,KAAKuI,SAAUq2B,EAAYmB,GACrDnB,EAAWkC,gBAAgBC,2BAA2BpZ,KAE1D0Y,EAAgBngC,UAAUygC,eAAiB,SAAUlK,EAAcmI,GAC/D,GAAMA,GACFA,EAAWkC,iBACoD,mBAAxDlC,EAAWkC,gBAAgBE,yBAFtC,CAKA,IAAI9d,EAAM,IAAIwc,GAAmB1/B,KAAKuI,SAAUq2B,EAAYnI,GAC5DmI,EAAWkC,gBAAgBE,yBAAyB9d,KAExDmd,EAAgBngC,UAAU2gC,iBAAmB,SAAUpK,EAAcmI,GACjE,GAAMA,GACFA,EAAWkC,iBACsD,mBAA1DlC,EAAWkC,gBAAgBG,2BAFtC,CAKA,IAAI/d,EAAM,IAAIwc,GAAmB1/B,KAAKuI,SAAUq2B,EAAYnI,GAC5DmI,EAAWkC,gBAAgBG,2BAA2B/d,KAEnDmd,CACX,IAEIa,GAAgB,WAChB,SAASA,EAAa58B,EAAKiE,EAAUq2B,GACjC5+B,KAAKsE,IAAMA,EACXtE,KAAKuI,SAAWA,EAChBvI,KAAK4+B,WAAaA,EAetB,OAbAsC,EAAahhC,UAAUihC,cAAgB,WACnC,IAAI/4B,EAAQpI,KAEZ,OADcA,KAAKuI,SAASuyB,OAAOsG,oBAAoBphC,KAAK4+B,WAAY5+B,KAAKsE,KAC9D+J,KAAI,SAAU6U,GACzB,OAAO,IAAIwc,GAAmBt3B,EAAMG,SAAUH,EAAMw2B,WAAY1b,OAGxEge,EAAahhC,UAAU6T,MAAQ,WAC3B/T,KAAKuI,SAASuyB,OAAOuG,sBAAsBrhC,KAAK4+B,WAAY5+B,KAAKsE,MAErE48B,EAAahhC,UAAUgD,KAAO,SAAUqR,GACpCvU,KAAKuI,SAASuyB,OAAOwG,SAASthC,KAAK4+B,WAAYrqB,EAAM,CAACvU,KAAKsE,OAExD48B,CACX,IAEIK,GAAgB,WAChB,SAASA,EAAaC,EAAWC,EAAaC,GAC1C1hC,KAAKwhC,UAAYA,EACjBxhC,KAAKyhC,YAAcA,EACnBzhC,KAAK0hC,QAAUA,EACf1hC,KAAK4E,KAAO5E,KAAKyhC,YAAY76B,WAAWhC,KA6D5C,OA3DA28B,EAAarhC,UAAUyhC,SAAW,SAAUr9B,GACxC,IAAI8D,EAAQpI,KACR4hC,EAAQ5hC,KAAKwhC,UAAU1G,OAAO+G,cAAc7hC,KAAKyhC,aACrD,OAAIn9B,EACIs9B,EAAM3mB,QAAQ3W,IAAQ,EACf,IAAI48B,GAAa58B,EAAKtE,KAAKwhC,UAAWxhC,KAAKyhC,kBAEtD,EAGOG,EAAMvzB,KAAI,SAAUsxB,GACvB,OAAO,IAAIuB,GAAavB,EAAWv3B,EAAMo5B,UAAWp5B,EAAMq5B,iBAItEF,EAAarhC,UAAUigC,OAAS,SAAU77B,GACtC,OAAOtE,KAAK2hC,SAASr9B,IAEzBi9B,EAAarhC,UAAUihC,cAAgB,WACnC,IAAI/4B,EAAQpI,KAEZ,OADcA,KAAKwhC,UAAU1G,OAAOsG,oBAAoBphC,KAAKyhC,aAC9CpzB,KAAI,SAAU6U,GACzB,OAAO,IAAIwc,GAAmBt3B,EAAMo5B,UAAWp5B,EAAMq5B,YAAave,OAG1E1jB,OAAO0H,eAAeq6B,EAAarhC,UAAW,aAAc,CACxDiH,IAAK,WACD,IAAIC,EACA06B,EAAO9hC,KAAKyhC,YAAY76B,WAC5B,MAAO,CACHm7B,QAASD,EAAKC,QACdr9B,YAAao9B,EAAKp9B,YAClBs9B,YAAaF,EAAKE,YAClBp9B,KAAMk9B,EAAKl9B,KACX83B,YAAaoF,EAAKpF,YAClBuF,QAASH,EAAKG,QACdxF,kBAAmBqF,EAAKrF,kBACxBvK,MAA6B,QAArB9qB,EAAK06B,EAAK5P,aAA0B,IAAP9qB,OAAgB,EAASA,EAAGu1B,WAGzEr1B,YAAY,EACZC,cAAc,IAElBg6B,EAAarhC,UAAU6T,MAAQ,WAC3B/T,KAAKwhC,UAAU1G,OAAOuG,sBAAsBrhC,KAAKyhC,aACjDzhC,KAAK0hC,QAAQQ,WAAWliC,KAAKyhC,YAAY76B,YAAY,IAEzD26B,EAAarhC,UAAUgD,KAAO,SAAUqR,EAAMotB,GAC1C,GAAwB,iBAAbA,IAA0BhiC,MAAMgG,QAAQg8B,SAA0Br2B,IAAbq2B,EAC5D,MAAM,IAAI56B,MAAM,qDAEpB,GAAoB,iBAATwN,EACP,MAAM,IAAIxN,MAAM,8CAEpB/G,KAAKwhC,UAAU1G,OAAOwG,SAASthC,KAAKyhC,YAAaltB,EAAMotB,IAE3DJ,EAAarhC,UAAUiiC,iBAAmB,SAAUvD,GAChD5+B,KAAKyhC,YAAc7C,GAEhB2C,CACX,IAEIa,GAAU,WACV,SAASA,EAAO75B,EAAU85B,GACtBriC,KAAKuI,SAAWA,EAChBvI,KAAKqiC,iBAAmBA,EACxBriC,KAAKsiC,YAAc,EACnBtiC,KAAKuiC,uBAAyB,GAC9BviC,KAAKwiC,UAAY,IAAInC,GAAgB93B,EAAUvI,MAC/CA,KAAKuI,SAASuyB,OAAO2H,UAAUziC,KAAK0iC,gBAAgBxgB,KAAKliB,OA+S7D,OA7SAoiC,EAAOliC,UAAUyiC,aAAe,SAAUC,EAAWtxB,EAAW6nB,EAAiBC,EAAeyJ,GAC5F,IAAIz6B,EAAQpI,KAuDZ,OAAOk5B,GAtDO,IAAI/3B,SAAQ,SAAUC,EAASC,GACzC,GAAKuhC,EAAL,CAIA,IAAIE,EAOJ,KALIA,EADqB,iBAAdF,EACkB,CAAEh+B,KAAM,GAAKg+B,GAGbxiC,EAAS,GAAIwiC,IAEdh+B,KACxB,OAAOvD,EAAO,4GAAkIyM,KAAKC,UAAU+0B,IAInK,GAFwB16B,EAAMi6B,iBAAiBU,UAC1CC,MAAK,SAAUC,GAAgB,OAAOA,EAAar8B,WAAWhC,OAASk+B,EAAuBl+B,QAE/F,OAAOvD,EAAO,2BAA8ByhC,EAAuBl+B,KAAO,mEAE9Ek+B,EAAuBrG,mBAAoB,EACtCnrB,IACDA,EAAY,IAEoC,mBAAzCA,EAAUyvB,6BACjBzvB,EAAUyvB,2BAA6B,SAAUpZ,GAC7CA,EAAQqY,WAGhB,IAAIpB,EAAax2B,EAAMi6B,iBAAiBxwB,IAAI,CACxCjL,WAAYk8B,EACZhC,gBAAiBxvB,EACjB4xB,cAAe,KAEnB96B,EAAMG,SAASuyB,OAAO6H,aAAa/D,GAC9B98B,MAAK,WACN,IAAIqhC,EACAN,GACAM,EAAmBN,EACnBA,EAAeV,iBAAiBvD,IAGhCuE,EAAmB,IAAI5B,GAAan5B,EAAMG,SAAUq2B,EAAYx2B,GAEpEw2B,EAAWhF,OAASuJ,EACpB/hC,EAAQ+hC,MAEPt5B,OAAM,SAAUsI,GACbysB,EAAWwE,QACXh7B,EAAMi6B,iBAAiBgB,OAAOzE,EAAWwE,QAE7C/hC,EAAO8Q,WAjDP9Q,EAAO,6MAoDW83B,EAAiBC,IAE/CgJ,EAAOliC,UAAUojC,SAAW,SAAUrH,EAAkBnqB,GACpD,IAAI1J,EAAQpI,KACZ,IAAKi8B,EACD,OAAO96B,QAAQE,OAAO,2JAE1B,GAAwB,mBAAbyQ,EACP,OAAO3Q,QAAQE,OAAO,8DAA4F,iBAArB46B,EAAgCA,EAAmBA,EAAiBr3B,OAErK,IAAI2+B,EAA0B,SAAU5+B,EAAS6+B,GAAkB,OAAO1iC,EAAUsH,OAAO,OAAQ,GAAQ,WACvG,IAAIxG,EAAQ6hC,EAAa5jB,EACzB,OAAO9d,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EAGD,OAFA+E,EAAG7E,KAAKW,KAAK,CAAC,EAAG,GAAK,KACtBtB,EAASkQ,EAASnN,EAAQ++B,KAAM/+B,EAAQqL,YACD,mBAAhBpO,EAAOE,KACvB,CAAC,EAAGF,GADgD,CAAC,EAAG,GAEnE,KAAK,EAGD,OAFA6hC,EAAcr8B,EAAG9E,OACjBkhC,OAAel4B,EAAWm4B,GACnB,CAAC,EAAG,GACf,KAAK,EACDD,OAAel4B,EAAW1J,GAC1BwF,EAAG/E,MAAQ,EACf,KAAK,EAAG,MAAO,CAAC,EAAG,GACnB,KAAK,EAMD,OALAwd,EAAMzY,EAAG9E,UAELud,EAAM,IAEV2jB,EAAe3jB,EAAKA,GACb,CAAC,EAAG,GACf,KAAK,EAAG,MAAO,CAAC,WAK5B,OADA0jB,EAAwBI,aAAe7xB,EAChC9R,KAAK4jC,aAAa3H,EAAkBsH,IAE/CnB,EAAOliC,UAAU2jC,cAAgB,SAAU5H,EAAkBnqB,GACzD,IAAKmqB,EACD,OAAO96B,QAAQE,OAAO,2JAE1B,GAAwB,mBAAbyQ,EACP,OAAO3Q,QAAQE,OAAO,8DAA4F,iBAArB46B,EAAgCA,EAAmBA,EAAiBr3B,OAErK,IAAIk/B,EAAkB,SAAUn/B,EAAS6+B,GACrC,IACI,IAAIO,GAAiB,EACjBxmB,EAAU,SAAU3b,GACfmiC,GACDP,OAAel4B,EAAW1J,GAE9BmiC,GAAiB,GAEjBnyB,EAAQ,SAAUlQ,GACbqiC,IACIriC,IACDA,EAAI,IAER8hC,EAAe9hC,EAAGA,IAEtBqiC,GAAiB,GAEjBC,EAAelyB,EAASnN,EAAQ++B,KAAM/+B,EAAQqL,SAAUuN,EAAS3L,GACjEoyB,GAA6C,mBAAtBA,EAAaliC,MACpCkiC,EACKliC,KAAKyb,GACL1T,MAAM+H,GAGnB,MAAOlQ,GACH8hC,EAAe9hC,OAAG4J,KAI1B,OADAw4B,EAAgBG,kBAAoBnyB,EAC7B9R,KAAK4jC,aAAa3H,EAAkB6H,IAE/C1B,EAAOliC,UAAUgiC,WAAa,SAAUxH,EAAcwJ,GAElD,YADkB,IAAdA,IAAwBA,GAAY,GACjCpjC,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAIi8B,EAAkBkI,EACtB,OAAOpiC,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EACD,YAAqBiJ,IAAjBovB,EACO,CAAC,EAAGv5B,QAAQE,OAAO,iGAEA,mBAAjBq5B,EAAqC,CAAC,EAAG,GAC/C,CAAC,EAAG16B,KAAKokC,wBAAwB1J,EAAcwJ,IAC1D,KAAK,EAqBL,KAAK,EAED,OADA98B,EAAG9E,OACI,CAAC,GApBZ,KAAK,EAOD,YAA8BgJ,KAL1B2wB,EADwB,iBAAjBvB,EACY,CAAE91B,KAAM81B,GAGRA,GAEF91B,KACV,CAAC,EAAGzD,QAAQE,OAAO,oFAE9B8iC,EAAoBnkC,KAAKqiC,iBAAiBU,UAAU9Z,MAAK,SAAUga,GAC/D,OAAOA,EAAar8B,WAAWhC,OAASq3B,EAAiBr3B,OACjDq+B,EAAar8B,WAAW61B,oBAAqB,KAAWyH,MAK7D,CAAC,EAAGlkC,KAAKqkC,uBAAuB,CAACF,KAF7B,CAAC,EAAGhjC,QAAQE,OAAO,uBAA0B46B,EAAiBr3B,KAAO,uEAUpGw9B,EAAOliC,UAAUkkC,wBAA0B,SAAUE,EAAiBJ,GAClE,OAAOpjC,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAIukC,EACJ,OAAOxiC,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EAMD,OALAkiC,EAA2BvkC,KAAKqiC,iBAAiBU,UAC5Cr5B,QAAO,SAAUqT,GAAM,OAAOunB,EAAgBvnB,EAAGnW,eACjD8C,QAAO,SAAUu5B,GAClB,OAAQA,EAAar8B,WAAW61B,oBAAqB,KAAWyH,OAEC,IAApCK,EAAyB5jC,OAGnD,CAAC,EAAGX,KAAKqkC,uBAAuBE,IAF5B,CAAC,EAAGpjC,QAAQE,OAAO,qBAAuB6iC,EAAY,SAAW,UAAY,uCAG5F,KAAK,EAED,OADA98B,EAAG9E,OACI,CAAC,WAK5B8/B,EAAOliC,UAAUmkC,uBAAyB,SAAUG,GAChD,IAAIp8B,EAAQpI,KACRykC,EAAsB,GAW1B,OAVAD,EAAgBl+B,SAAQ,SAAUma,GAC9B,IAAIlL,EAAUnN,EAAMG,SAASuyB,OAAOoH,WAAWzhB,GAC1C3e,MAAK,WACF2e,EAAO2iB,QACPh7B,EAAMi6B,iBAAiBgB,OAAO5iB,EAAO2iB,WAG7CqB,EAAoBvhC,KAAKqS,GACzBnN,EAAMs8B,4BAA4BjkB,EAAO7Z,WAAWhC,KAAM2Q,MAEvDpU,QAAQ4gB,IAAI0iB,IAEvBrC,EAAOliC,UAAUwkC,4BAA8B,SAAUC,EAAYpvB,GACjE,OAAOzU,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAI6jB,EACAzb,EAAQpI,KACZ,OAAO+B,EAAY/B,MAAM,SAAUoH,GAK/B,OAJAyc,EAAU,IAAI1iB,SAAQ,SAAUC,GAAW,OAAOmM,WAAWnM,EAAS,QACtEpB,KAAKuiC,uBAAuBoC,GAAcxjC,QAAQ+7B,KAAK,CAAC3nB,EAASsO,IAAU/hB,MAAK,kBACrEsG,EAAMm6B,uBAAuBoC,MAEjC,CAAC,UAIpBvC,EAAOliC,UAAU0jC,aAAe,SAAUnjB,EAAQmkB,GAC9C,OAAO9jC,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAIi8B,EAAkB4I,EAAyCjG,EAC3Dx2B,EAAQpI,KACZ,OAAO+B,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EAOD,OALI45B,EADkB,iBAAXxb,EACY,CAAE7b,KAAM,GAAK6b,GAGbrgB,EAAS,GAAIqgB,IAEd7b,MAGtBigC,EAAuB7kC,KAAKuiC,uBAAuBtG,EAAiBr3B,OAE7D,CAAC,EAAGigC,GADuB,CAAC,EAAG,GAH3B,CAAC,EAAG1jC,QAAQE,OAAO,qGAA2HyM,KAAKC,UAAU0S,KAK5K,KAAK,EACDrZ,EAAG9E,OACH8E,EAAG/E,MAAQ,EACf,KAAK,EAGD,OAFoBrC,KAAKqiC,iBAAiBU,UACrCC,MAAK,SAAUC,GAAgB,OAAOA,EAAar8B,WAAWhC,OAASq3B,EAAiBr3B,QAElF,CAAC,EAAGzD,QAAQE,OAAO,2BAA8B46B,EAAiBr3B,KAAO,oEAEhFq3B,EAAiBQ,kBACV,CAAC,EAAGt7B,QAAQE,OAAO,4JAA2M46B,EAAiBr3B,KAAO,4EAEjQg6B,EAAa5+B,KAAKqiC,iBAAiBxwB,IAAI,CACnCjL,WAAYq1B,EACZ2I,YAAaA,EACb1B,cAAe,KAEZ,CAAC,EAAGljC,KAAKuI,SAASuyB,OAAOwI,SAAS1E,GAChC/0B,OAAM,SAAUsI,GAIjB,MAHIysB,aAA+C,EAASA,EAAWwE,SACnEh7B,EAAMi6B,iBAAiBgB,OAAOzE,EAAWwE,QAEvCjxB,eAMlCiwB,EAAOliC,UAAUwiC,gBAAkB,SAAUoC,EAAiB3H,EAAc4H,GACxE,IAAI38B,EAAQpI,KACP8kC,GAAoBA,EAAgBF,aAGzCE,EAAgBF,YAAYG,GAAgB,SAAU5yB,EAAKvQ,GACvD,GAAIuQ,QACA,GAAIA,EAAIqB,SAAkC,iBAAhBrB,EAAIqB,QAC1BrB,EAAMA,EAAIqB,aAET,GAAmB,iBAARrB,EACZ,IACIA,EAAMrE,KAAKC,UAAUoE,GAEzB,MAAO6yB,GACH7yB,EAAM,oEAAsE3S,OAAO2E,KAAKgO,GAI/FvQ,GAGsB,iBAAXA,GAAuBjC,MAAMgG,QAAQ/D,MACjDA,EAAS,CAAEqjC,OAAQrjC,IAHnBA,EAAS,GAKbwG,EAAMG,SAASuyB,OAAOoK,uBAAuBJ,EAAiB3H,EAAchrB,EAAKvQ,OAGlFwgC,CACX,IAEI+C,GAAmB,WACnB,SAASA,EAAgBC,EAAKp1B,EAAUzB,GACpC,IAAInG,EAAQpI,KACZA,KAAKqlC,QAAU,GACfrlC,KAAKqlC,QAAQtK,WAAa,WACtB,OAAOqK,EAAIpK,mBAAmBh7B,OAElCA,KAAKqlC,QAAQC,WAAa,WACtB,OAAOF,EAAIpK,mBAAmBh7B,MAAM0J,QAAO,SAAUnD,GAAK,OAAOA,EAAEk2B,sBAEnEzsB,GACAhQ,KAAKulC,qBAAqBv1B,GAE1BzB,IACAA,EAAWoO,UAAS,WAChBvU,EAAMo9B,QAAQj3B,MAElBvO,KAAKwlC,QAAQj3B,IAkCrB,OA/BA42B,EAAgBjlC,UAAUulC,OAAS,WAC/B,OAAOzlC,KAAKqlC,SAEhBF,EAAgBjlC,UAAUslC,QAAU,SAAUj3B,GAC1C,GAAKA,EAAL,CAGA,IAAI8S,EAAmB9S,aAA+C,EAASA,EAAW8S,iBACtFrR,EAAWxQ,OAAOa,OAAO,GAAIghB,QAA2DA,EAAmB,GAAI,CAAEhR,OAAQ9B,aAA+C,EAASA,EAAW8B,SAChMrQ,KAAKulC,qBAAqBv1B,KAE9Bm1B,EAAgBjlC,UAAUqlC,qBAAuB,SAAUlkB,GACvD,IACIja,EAAIqI,EAAI0Q,EAAIgW,EADZ/tB,EAAQpI,KAEZR,OAAO2E,KAAKkd,GAAkB/a,SAAQ,SAAUhC,GAC5C8D,EAAMi9B,QAAQ/gC,GAAO+c,EAAiB/c,MAE1CtE,KAAKqlC,QAAQK,KAAOrkB,EAAiBqkB,KACrC1lC,KAAKqlC,QAAQr1B,SAAWqR,EAAiBrR,SACzChQ,KAAKqlC,QAAQ/sB,YAAsD,QAAvClR,EAAKia,EAAiB/I,mBAAgC,IAAPlR,EAAgBA,EAAK8U,KAChGlc,KAAKqlC,QAAQzc,gBAAkBvH,EAAiBuH,gBAChD5oB,KAAKqlC,QAAQM,IAAuG,QAAhGxlB,EAAqC,QAA/B1Q,EAAK4R,EAAiBskB,WAAwB,IAAPl2B,EAAgBA,EAAK4R,EAAiBjM,eAA4B,IAAP+K,EAAgBA,EAAKtG,KAAKC,MAAsB,KAAhBD,KAAKW,UACjKxa,KAAKqlC,QAAQO,QAAUvkB,EAAiBukB,QACxC5lC,KAAKqlC,QAAQQ,YAAcxkB,EAAiBwkB,YAC5C7lC,KAAKqlC,QAAQS,OAASzkB,EAAiBykB,OACvC9lC,KAAKqlC,QAAQne,SAAW7F,EAAiB6F,SACzClnB,KAAKqlC,QAAQ9G,QAA8C,QAAnCpI,EAAK9U,EAAiBkd,eAA4B,IAAPpI,GAAgBA,EACnFn2B,KAAKqlC,QAAQn4B,IAAMmU,EAAiBnU,IACpClN,KAAKqlC,QAAQt1B,QAAUsR,EAAiBtR,QACxC/P,KAAKqlC,QAAQh1B,OAASgR,EAAiBhR,QAEpC80B,CACX,IAEIY,GAAwB,SAAUtlB,GAClC,OAAOrgB,EAASA,EAAS,GAAIqgB,GAAS,CAAEyR,MAAOzR,EAAOyR,MAAMyK,UAAY,IAC5E,EACIqJ,GAAoB,WACpB,SAASA,EAAiB9yB,EAAQkyB,GAC9BplC,KAAKkT,OAASA,EACdlT,KAAKolC,IAAMA,EACXplC,KAAKy6B,QAAU,GACfz6B,KAAKimC,aAAe,GACpBjmC,KAAKsR,UAAYyB,IACjB,IAAI1C,EAASrQ,KAAKolC,IAAIp1B,SAASK,OAC/BrQ,KAAKkmC,SAAW,CACZh9B,GAAImH,EACJ6e,QAAS,GACTlf,SAAUhQ,KAAKolC,IAAIp1B,SACnBm2B,QAASnmC,KAAKolC,IAAIgB,mBAEtBpmC,KAAKy6B,QAAQpqB,GAAUrQ,KAAKkmC,SAmMhC,OAjMAF,EAAiB9lC,UAAUmmC,UAAY,SAAUrvB,EAAMsvB,GACnDtmC,KAAKkT,OAAOwE,MAAM,iBAAmB4uB,GACrC,IAAI9G,EAAUx/B,KAAKy6B,QAAQ6L,GAC3B,GAAI9G,EACA,OAAOA,EAAQt2B,GAEnB,IAAIi9B,EAAU,IAAIhB,GAAgBnlC,KAAKolC,IAAKpuB,GACxCuvB,EAAc,CACdr9B,GAAIo9B,EACJpX,QAAS,GACTlf,SAAUm2B,EAAQV,SAClBU,QAASA,GAIb,OAFAnmC,KAAKy6B,QAAQ6L,GAAYC,EACzBvmC,KAAKsR,UAAUkB,QAAQ,gBAAiB+zB,EAAYv2B,UAC7Cs2B,GAEXN,EAAiB9lC,UAAUsmC,iBAAmB,SAAUt9B,EAAI4O,GACxD,IAAI1P,EAAQpI,KACR86B,EAAS96B,KAAKy6B,QAAQvxB,GACrB4xB,GAKD96B,KAAKkT,OAAOwE,MAAM,mBAAqBxO,GAE3C1J,OAAO2E,KAAK22B,EAAO5L,SAAS5oB,SAAQ,SAAUmgC,GAC1Cr+B,EAAMs+B,mBAAmBx9B,EAAIu9B,aAE1BzmC,KAAKy6B,QAAQvxB,GACpBlJ,KAAKsR,UAAUkB,QAAQ,kBAAmBsoB,EAAO9qB,SAAU8H,IAVvD9X,KAAKkT,OAAO4K,KAAK,uBAAyB5U,EAAK,cAAgB4E,KAAKC,UAAUvO,OAAO2E,KAAKnE,KAAKy6B,YAYvGuL,EAAiB9lC,UAAUymC,gBAAkB,SAAUL,EAAU7lB,GAC7D,IAAIrZ,EACA0zB,EAAS96B,KAAKy6B,QAAQ6L,GAC1B,IAAKxL,EACD,MAAM,IAAI/zB,MAAM,0BAEpB,IAAI+zB,EAAO5L,QAAQzO,EAAOvX,IAA1B,CAGA,IAAIo2B,EAAat/B,KAAK4mC,uBAAuBnmB,GACzComB,EAAO7mC,KACPi8B,EAAmB,CACnBqD,WAAYA,EACZwH,UAAWrmB,EAAOvX,GAClBtE,KAAM6b,EAAO7b,KACbo9B,YAAavhB,EAAOsmB,aACpBriC,YAAa+b,EAAO/b,YACpBkQ,QAAS6L,EAAO7L,QAChB8nB,YAAajc,EAAOumB,cAAgB,GACpCjF,QAASthB,EAAOwmB,gBAChBhF,QAASxhB,EAAOymB,iBAChBzK,uBAA2C,IAAjBhc,EAAOyR,OAAwBzR,EAAOyR,MAAMsQ,UACtEtQ,MAA+B,QAAvB9qB,EAAKqZ,EAAOyR,aAA0B,IAAP9qB,EAAgBA,EAAK,GAC5DwzB,WAAY,WACR,OAAOiM,EAAKM,mBAAmB7H,KAGvCrD,EAAiB+K,aAAe/K,EAAiBS,YACjDT,EAAiB8K,aAAe9K,EAAiB+F,YACjD/F,EAAiBrnB,QAAUqnB,EAAiBrnB,QAC5CkmB,EAAO5L,QAAQzO,EAAOvX,IAAM+yB,EAC5B,IAAImL,EAAyBrB,GAAsB9J,GAOnD,OANKj8B,KAAKimC,aAAa3G,KACnBt/B,KAAKimC,aAAa3G,GAAc,EAChCt/B,KAAKsR,UAAUkB,QAAQ,gBAAiB40B,IAE5CpnC,KAAKimC,aAAa3G,GAAct/B,KAAKimC,aAAa3G,GAAc,EAChEt/B,KAAKsR,UAAUkB,QAAQ,sBAAuBsoB,EAAO9qB,SAAUo3B,GACxDnL,IAEX+J,EAAiB9lC,UAAUwmC,mBAAqB,SAAUJ,EAAUG,GAChE,IAAI3L,EAAS96B,KAAKy6B,QAAQ6L,GAC1B,IAAKxL,EACD,MAAM,IAAI/zB,MAAM,0BAEpB,IAAI0Z,EAASqa,EAAO5L,QAAQuX,UACrB3L,EAAO5L,QAAQuX,GACtB,IAAIW,EAAyBrB,GAAsBtlB,GACnDzgB,KAAKimC,aAAaxlB,EAAO6e,YAAct/B,KAAKimC,aAAaxlB,EAAO6e,YAAc,EACjC,IAAzCt/B,KAAKimC,aAAaxlB,EAAO6e,aACzBt/B,KAAKsR,UAAUkB,QAAQ,kBAAmB40B,GAE9CpnC,KAAKsR,UAAUkB,QAAQ,wBAAyBsoB,EAAO9qB,SAAUo3B,IAErEpB,EAAiB9lC,UAAU66B,WAAa,WACpC,OAAO/6B,KAAKqnC,0BAA0B7nC,OAAO0E,OAAOlE,KAAKy6B,UAAUpsB,IAAI03B,KAE3EC,EAAiB9lC,UAAU06B,WAAa,WACpC,OAAOp7B,OAAO0E,OAAOlE,KAAKy6B,SAASpsB,IAAIrO,KAAKsnC,8BAEhDtB,EAAiB9lC,UAAUq7B,cAAgB,SAAUzpB,GACjD,IAAIy1B,EAAkBvnC,KAAKsR,UAAUO,IAAI,gBAAiBC,GACtD01B,EAA6BxnC,KAAK46B,aAAavsB,KAAI,SAAU9N,GAAK,OAAOA,EAAEyP,YAC/E,OAAOhQ,KAAKynC,6BAA6BF,EAAiBC,EAA4B11B,IAE1Fk0B,EAAiB9lC,UAAUi7B,cAAgB,SAAUrpB,GACjD,IAAIy1B,EAAkBvnC,KAAKsR,UAAUO,IAAI,gBAAiBC,GACtD41B,EAAkB1nC,KAAK+6B,aAC3B,OAAO/6B,KAAKynC,6BAA6BF,EAAiBG,EAAiB51B,IAE/Ek0B,EAAiB9lC,UAAUy7B,oBAAsB,SAAU7pB,GACvD,IAAIy1B,EAAkBvnC,KAAKsR,UAAUO,IAAI,sBAAuBC,GAC5D61B,GAAc,EACdlN,EAAUz6B,KAAK46B,aAWnB,OAVArtB,YAAW,WACPktB,EAAQn0B,SAAQ,SAAUw0B,GACtB,IAAI5L,EAAU4L,EAAO5L,QACrB1vB,OAAO2E,KAAK+qB,GAAS5oB,SAAQ,SAAUmgC,GAC9BkB,GACD71B,EAASgpB,EAAO9qB,SAAUkf,EAAQuX,YAI/C,GACI,WACHkB,GAAc,EACdJ,MAGRvB,EAAiB9lC,UAAUm7B,gBAAkB,SAAUvpB,GAEnD,OADsB9R,KAAKsR,UAAUO,IAAI,kBAAmBC,IAGhEk0B,EAAiB9lC,UAAUu7B,gBAAkB,SAAU3pB,GAEnD,OADsB9R,KAAKsR,UAAUO,IAAI,kBAAmBC,IAGhEk0B,EAAiB9lC,UAAU27B,sBAAwB,SAAU/pB,GAEzD,OADsB9R,KAAKsR,UAAUO,IAAI,wBAAyBC,IAGtEk0B,EAAiB9lC,UAAU0nC,cAAgB,SAAU1+B,GACjD,OAAOlJ,KAAKsnC,4BAA4BtnC,KAAKy6B,QAAQvxB,KAEzD88B,EAAiB9lC,UAAU+Y,MAAQ,WAC/B,IAAI7R,EACAgB,EAAQpI,KACZR,OAAO2E,KAAKnE,KAAKy6B,SAASn0B,SAAQ,SAAUhC,GACxC8D,EAAMo+B,iBAAiBliC,EAAK,YAEhCtE,KAAKy6B,UAAWrzB,EAAK,IACdpH,KAAKkmC,SAASh9B,IAAMlJ,KAAKkmC,SAC5B9+B,GACJpH,KAAKimC,aAAe,IAExBD,EAAiB9lC,UAAU0mC,uBAAyB,SAAUiB,GAC1D,IAAIzgC,EAAIqI,EACJsyB,EAAgD,QAArC36B,EAAKygC,EAAWZ,uBAAoC,IAAP7/B,EAAgBA,EAAK,GAC7E66B,EAAiD,QAAtCxyB,EAAKo4B,EAAWX,wBAAqC,IAAPz3B,EAAgBA,EAAK,GAClF,OAAQo4B,EAAWjjC,KAAOm9B,EAAUE,GAAS91B,eAEjD65B,EAAiB9lC,UAAUinC,mBAAqB,SAAU7H,GACtD,IAAIwI,EAAa,GAQjB,OAPAtoC,OAAO0E,OAAOlE,KAAKy6B,SAASn0B,SAAQ,SAAUw0B,GAC1Ct7B,OAAO0E,OAAO42B,EAAO5L,SAAS5oB,SAAQ,SAAUma,GACxCA,EAAO6e,aAAeA,GACtBwI,EAAW5kC,KAAK43B,EAAO9qB,gBAI5B83B,GAEX9B,EAAiB9lC,UAAUunC,6BAA+B,SAAUF,EAAiBQ,EAAoBj2B,GACrG,IAAI61B,GAAc,EAQlB,OAPAp6B,YAAW,WACPw6B,EAAmBzhC,SAAQ,SAAUgT,GAC5BquB,GACD71B,EAASwH,QAGlB,GACI,WACHquB,GAAc,EACdJ,MAGRvB,EAAiB9lC,UAAUonC,4BAA8B,SAAUxM,GAC/D,IAAIkN,EAAgB,GAKpB,OAJAxoC,OAAOyoC,QAAQnN,EAAO5L,SAAS5oB,SAAQ,SAAUc,GAC7C,IAAIxC,EAAOwC,EAAG,GAAIqZ,EAASrZ,EAAG,GAC9B4gC,EAAcpjC,GAAQmhC,GAAsBtlB,MAEzCrgB,EAASA,EAAS,GAAI06B,GAAS,CAAE5L,QAAS8Y,KAErDhC,EAAiB9lC,UAAUmnC,0BAA4B,SAAU5M,GAI7D,OAHcj7B,OAAO0E,OAAOu2B,GAASr2B,QAAO,SAAU4jC,EAAelN,GACjE,OAAO33B,EAAe6kC,EAAexoC,OAAO0E,OAAO42B,EAAO5L,YAC3D,KAGA8W,CACX,IAEIkC,GAAoB,WACpB,SAASA,IACLloC,KAAKmoC,OAAS,EACdnoC,KAAKkvB,QAAU,GAiCnB,OA/BAgZ,EAAiBhoC,UAAU2R,IAAM,SAAU4O,GAIvC,OAHAA,EAAO2iB,OAASlE,OAAOl/B,KAAKmoC,QAC5BnoC,KAAKmoC,QAAU,EACfnoC,KAAKkvB,QAAQhsB,KAAKud,GACXA,GAEXynB,EAAiBhoC,UAAUmjC,OAAS,SAAUD,GAC1C,GAAsB,iBAAXA,EACP,OAAO,IAAIpgC,UAAU,sBAEzBhD,KAAKkvB,QAAUlvB,KAAKkvB,QAAQxlB,QAAO,SAAUnD,GACzC,OAAOA,EAAE68B,SAAWA,MAG5B8E,EAAiBhoC,UAAUkoC,QAAU,SAAUl/B,GAC3C,GAAkB,iBAAPA,EAGX,OAAOlJ,KAAKkvB,QAAQjG,MAAK,SAAU1iB,GAC/B,OAAOA,EAAE68B,SAAWl6B,MAG5Bg/B,EAAiBhoC,UAAU6iC,QAAU,WACjC,OAAO/iC,KAAKkvB,QAAQ7gB,KAAI,SAAU9H,GAAK,OAAOA,MAElD2hC,EAAiBhoC,UAAUS,OAAS,WAChC,OAAOX,KAAKkvB,QAAQvuB,QAExBunC,EAAiBhoC,UAAU+Y,MAAQ,WAC/BjZ,KAAKkvB,QAAU,IAEZgZ,CACX,IAEIG,GAAuB,wBACvBC,GAAqB,sBACrBC,GAAuB,wBACvBC,GAAqB,WACrB,SAASnI,EAAgB3xB,EAAS+5B,EAAYpG,GAC1C,IAAIj6B,EAAQpI,KACZA,KAAK0O,QAAUA,EACf1O,KAAKyoC,WAAaA,EAClBzoC,KAAKqiC,iBAAmBA,EACxBriC,KAAK0oC,4BAA8B,6CACnC1oC,KAAKsR,UAAYyB,IACjB/S,KAAK2oC,aAAe,EACpBj6B,EAAQkO,GAAG,gBAAgB,SAAUvW,GACjC+B,EAAMwgC,kBAAkBviC,MAE5BqI,EAAQkO,GAAG,mBAAmB,SAAUvW,GACpC+B,EAAMygC,qBAAqBxiC,MAsPnC,OAnPAg6B,EAAgBngC,UAAU+/B,sBAAwB,SAAUF,EAAgB+I,EAAiB3I,GAIzF,GAHsB,iBAAXA,IACPA,EAAS,IAEiD,iBAAnD2I,EAAgB5F,cAAc6F,iBACrC,MAAM,IAAI/lC,UAAU,sDAExB,IAAKrD,MAAMgG,QAAQmjC,EAAgB5F,cAAc8F,wBAC7C,MAAM,IAAIhmC,UAAU,iDAExB,IAAIimC,EAAWjpC,KAAKkpC,YAAYJ,EAAiB3I,GAC7C77B,EAAMy7B,EAAe15B,IAAI8iC,gBACzB1S,EAAe,CACfvtB,GAAI5E,EACJ5D,UAAWq/B,EAAer/B,UAC1BsP,SAAU+vB,EAAe/vB,SACzB2vB,UAAWQ,EACX8I,SAAUA,EACVG,aAAcrJ,EAAe15B,KAEjCyiC,EAAgB5F,cAAc6F,iBAAiBzkC,GAAOmyB,EACtDz2B,KAAK0O,QAAQa,kBAAkB,CAC3B1L,KAAM,WACNslC,gBAAiB7kC,EACjB+kC,UAAWJ,IAEfjpC,KAAKsR,UAAUkB,QAAQ81B,GAAoB7R,EAAcqS,IAE7DzI,EAAgBngC,UAAUkgC,cAAgB,SAAUL,EAAgB+I,EAAiBhxB,GAC3D,iBAAXA,IACPA,EAAS,IAEb9X,KAAKspC,uBAAuB,kCAAoCxxB,EAAQioB,EAAe15B,IAAI8iC,kBAE/F9I,EAAgBngC,UAAUohC,SAAW,SAAUwH,EAAiBv0B,EAAMotB,GAClE,IAAIv5B,EAAQpI,KACZ,GAA+B,iBAApB8oC,GAAiCnpC,MAAMgG,QAAQmjC,EAAgB5F,cAAc8F,wBAAxF,CAGA,GAAoB,iBAATz0B,EACP,MAAM,IAAIxN,MAAM,8CAEI,iBAAb46B,EACPA,EAAW,CAACA,KAENhiC,MAAMgG,QAAQg8B,IAAaA,EAAShhC,QAAU,KACpDghC,EAAW,IAEImH,EAAgB5F,cAAc8F,uBAC5Ct/B,QAAO,SAAU6/B,GAClB,OAAK5H,GAAgC,IAApBA,EAAShhC,QAGnBghC,EAAS1mB,QAAQsuB,EAAGjlC,MAAQ,KACpC+J,KAAI,SAAUk7B,GACb,OAAOA,EAAGN,YAED3iC,SAAQ,SAAU2iC,GAC3B,IAAIpa,EAAiB,CACjBhrB,KAAM,UACNwlC,UAAWJ,EACX10B,KAAMA,GAEVnM,EAAMsG,QAAQa,kBAAkBsf,QAGxCwR,EAAgBngC,UAAU2/B,iBAAmB,SAAUpf,EAAQgW,EAAcliB,GACzE,GAAoB,iBAATA,EACP,MAAM,IAAIxN,MAAM,8CAEpB,IAAIyN,EAAc,CACd3Q,KAAM,OACNslC,gBAAiB1S,EAAavtB,GAC9BqL,KAAMA,GAEVvU,KAAK0O,QAAQa,kBAAkBiF,IAEnC6rB,EAAgBngC,UAAU0/B,wBAA0B,SAAUkJ,EAAiBrS,GACvEqS,EAAgB5F,cAAc6F,yBACvBD,EAAgB5F,cAAc6F,iBAAiBtS,EAAavtB,IAEvE,IAAIsgC,EAA0B,CAC1B3lC,KAAM,oBACNslC,gBAAiB1S,EAAavtB,GAC9B4O,OAAQ,yCAEZ9X,KAAK0O,QAAQa,kBAAkBi6B,GACd/S,EAAazmB,SAC9BhQ,KAAKsR,UAAUkB,QAAQ+1B,GAAsB9R,EAAcqS,IAE/DzI,EAAgBngC,UAAUupC,2BAA6B,SAAUX,EAAiBnJ,GAC9E,IAAIv3B,EAAQpI,KACZ,GAA+B,iBAApB8oC,GAA0F,iBAAnDA,EAAgB5F,cAAc6F,kBAG3ED,EAAgB5F,cAAc6F,iBAAnC,CAGA,IAAIA,EAAmBD,EAAgB5F,cAAc6F,iBACjDW,EAAuBlqC,OAAO2E,KAAK4kC,GAClC16B,KAAI,SAAU/J,GACf,OAAOykC,EAAiBzkC,MAEH,iBAAdq7B,IACP+J,EAAuBA,EAAqBhgC,QAAO,SAAUwZ,GACzD,OAAOA,EAAIyc,YAAcA,MAGjC+J,EAAqBpjC,SAAQ,SAAUmwB,UAC5BsS,EAAiBtS,EAAavtB,IACrC,IAAIygC,EAAO,CACP9lC,KAAM,oBACNslC,gBAAiB1S,EAAavtB,GAC9B4O,OAAQ,mDAAqD2e,EAAawS,UAE9E7gC,EAAMsG,QAAQa,kBAAkBo6B,QAGxCtJ,EAAgBngC,UAAUkhC,oBAAsB,SAAU0H,EAAiBnJ,GACvE,GAA+B,iBAApBmJ,EACP,MAAO,GAGX,IAAKA,EAAgB5F,cAAc6F,iBAC/B,MAAO,GAEX,IAAIA,EAAmBD,EAAgB5F,cAAc6F,iBACjDa,EAAmBpqC,OAAO2E,KAAK4kC,GAC9B16B,KAAI,SAAU/J,GACf,OAAOykC,EAAiBzkC,MAU5B,MARyB,iBAAdq7B,EACSiK,EAGAA,EAAiBlgC,QAAO,SAAUwZ,GAC9C,OAAOA,EAAIyc,YAAcA,MAKrCU,EAAgBngC,UAAU2hC,cAAgB,SAAUiH,GAChD,GAA+B,iBAApBA,EACP,MAAO,GAEX,IAAKA,EAAgB5F,cAAc6F,iBAC/B,MAAO,GAEX,IAAIA,EAAmBD,EAAgB5F,cAAc6F,iBACjDa,EAAmBpqC,OAAO2E,KAAK4kC,GAC9B16B,KAAI,SAAU/J,GACf,OAAOykC,EAAiBzkC,MAExB1C,EAAS,GAUb,OATAgoC,EAAiBtjC,SAAQ,SAAU4c,GAC/B,IAAIid,EAAS,GACM,iBAARjd,GAA6C,iBAAlBA,EAAIyc,YACtCQ,EAASjd,EAAIyc,YAEe,IAA5B/9B,EAAOqZ,QAAQklB,IACfv+B,EAAOsB,KAAKi9B,MAGbv+B,GAEXy+B,EAAgBngC,UAAUwgC,WAAa,SAAU5uB,GAC7C9R,KAAK6pC,4BAA4BvB,GAAoBx2B,IAEzDuuB,EAAgBngC,UAAUogC,aAAe,SAAUxuB,GAC/C9R,KAAK6pC,4BAA4BxB,GAAsBv2B,IAE3DuuB,EAAgBngC,UAAU0gC,aAAe,SAAU9uB,GAC/C9R,KAAK6pC,4BAA4BtB,GAAsBz2B,IAE3DuuB,EAAgBngC,UAAU2oC,qBAAuB,SAAUxiC,GACvD,IAAIyiC,EAAkB9oC,KAAKqiC,iBAAiB+F,QAAQ/hC,EAAIyjC,WACxD,GAAmC,iBAAxBzjC,EAAI8iC,iBACgB,iBAApBL,GAGNA,EAAgB5F,cAAc6F,kBAGgD,iBAAxED,EAAgB5F,cAAc6F,iBAAiB1iC,EAAI8iC,iBAA9D,CAGA,IAAI1S,EAAeqS,EAAgB5F,cAAc6F,iBAAiB1iC,EAAI8iC,wBAC/DL,EAAgB5F,cAAc6F,iBAAiB1iC,EAAI8iC,iBAC1DnpC,KAAKsR,UAAUkB,QAAQ+1B,GAAsB9R,EAAcqS,KAE/DzI,EAAgBngC,UAAU2pC,4BAA8B,SAAUE,EAAWC,GACzEhqC,KAAKsR,UAAUO,IAAIk4B,EAAWC,IAElC3J,EAAgBngC,UAAU+pC,gBAAkB,WACxC,OAAOjqC,KAAK2oC,eAAiB,IAEjCtI,EAAgBngC,UAAU0oC,kBAAoB,SAAUviC,GACpD,IACI2J,EADShQ,KAAKyoC,WAAWb,cAAcvhC,EAAI6jC,WACzBl6B,SAClB+vB,EAAiB,CACjB15B,IAAKA,EACL3F,UAAW2F,EAAI8jC,cAAgB,GAC/Bn6B,SAAUA,GAEV84B,EAAkB9oC,KAAKqiC,iBAAiB+F,QAAQ/hC,EAAIyjC,WACxD,QAAwBx+B,IAApBw9B,EAKAA,EAAgB5F,cAAc6F,kBAC9BD,EAAgB5F,cAAc6F,iBAAiB1iC,EAAI8iC,iBACnDnpC,KAAKspC,uBAAuB,0BAA4BjjC,EAAI8iC,gBAAkB,mBAAoB9iC,EAAI8iC,iBAG1GnpC,KAAKsR,UAAUkB,QAAQ61B,GAAsBtI,EAAgB+I,OAV7D,CACI,IAAIjrB,EAAW,qBAAuBxX,EAAIyjC,UAAY,mBACtD9pC,KAAKspC,uBAAuBzrB,EAAUxX,EAAI8iC,mBAUlD9I,EAAgBngC,UAAUopC,uBAAyB,SAAUxxB,EAAQsyB,GACjE,IAAIC,EAAe,CACfxmC,KAAM,QACNymC,WAAYtqC,KAAK0oC,4BACjB5wB,OAAQA,EACRuF,WAAY+sB,GAEhBpqC,KAAK0O,QAAQa,kBAAkB86B,IAEnChK,EAAgBngC,UAAUgpC,YAAc,SAAUJ,EAAiBnJ,GAI/D,GAHyB,iBAAdA,IACPA,EAAY,KAEXmJ,EAAgB5F,cAAc8F,uBAC/B,MAAM,IAAIjiC,MAAM,aAAe+hC,EAAgBliC,WAAWhC,KAAO,kCAErE,IAAI2lC,EAAezB,EAAgB5F,cAAc8F,uBAAuBt/B,QAAO,SAAUy2B,GACrF,OAAOA,EAAO77B,MAAQq7B,KACvB,GACCsJ,EAAYsB,EAAeA,EAAatB,cAAW39B,EAKvD,MAJwB,iBAAb29B,GAAsC,KAAbA,IAChCA,EAAWjpC,KAAKiqC,kBAChBnB,EAAgB5F,cAAc8F,uBAAuB9lC,KAAK,CAAEoB,IAAKq7B,EAAWsJ,SAAUA,KAEnFA,GAEJ5I,CACX,IAEImK,GAAkB,WAClB,SAASA,EAAe97B,EAAS+7B,EAAkBpI,EAAkBnvB,GACjE,IAAI9K,EAAQpI,KACZA,KAAK0O,QAAUA,EACf1O,KAAKyqC,iBAAmBA,EACxBzqC,KAAKqiC,iBAAmBA,EACxBriC,KAAKkT,OAASA,EACdlT,KAAKsR,UAAYyB,IACjB/S,KAAKwiC,UAAY,IAAIgG,GAAkB95B,EAAS+7B,EAAkBpI,GAClEriC,KAAK0O,QAAQkO,GAAG,UAAU,SAAUvW,GAAO,OAAO+B,EAAMsiC,oBAAoBrkC,MAiIhF,OA/HAmkC,EAAetqC,UAAUyiC,aAAe,SAAU/D,GAG9C,OAFAA,EAAWsE,cAAc6F,iBAAmB,GAC5CnK,EAAWsE,cAAc8F,uBAAyB,GAC3ChpC,KAAKsjC,SAAS1E,GAAY,IAErC4L,EAAetqC,UAAUojC,SAAW,SAAU1E,EAAY+L,GACtD,IACIvjC,EADAgB,EAAQpI,KAERi6B,EAAY2E,EAAWh4B,WACvBsrB,EAAQ1yB,OAAOa,OAAO,GAAI,CAAEs8B,SAAqC,QAA1Bv1B,EAAK6yB,EAAU/H,aAA0B,IAAP9qB,EAAgBA,EAAK,IAAM,CAAEo7B,UAAWmI,IAAe,IAChIC,EAAc,CACd/mC,KAAM,WACNqrB,QAAS,CAAC,CACFhmB,GAAI01B,EAAWwE,OACfx+B,KAAMq1B,EAAUr1B,KAChBmiC,aAAc9M,EAAU+H,YACxBt9B,YAAau1B,EAAUv1B,YACvBkQ,QAASqlB,EAAUrlB,QACnBsd,MAAOA,EACP8U,aAAc/M,EAAUyC,aAAezC,EAAU+M,aACjDC,gBAAiBhN,EAAU8H,QAC3BmF,iBAAkBjN,EAAUgI,QAC5B4I,kBAAcv/B,KAG1B,OAAOtL,KAAK0O,QAAQO,KAAK27B,EAAa,CAAEnE,SAAU7H,EAAWwE,SACxDthC,MAAK,WACNsG,EAAM8K,OAAOwE,MAAM,qBAAuBknB,EAAWh4B,WAAWhC,KAAO,YAAcg6B,EAAWwE,WAE/Fv5B,OAAM,SAAUxD,GAEjB,MADA+B,EAAM8K,OAAO4K,KAAK,6BAA+B8gB,EAAWh4B,WAAWhC,KAAO,YAAcg6B,EAAWwE,OAAS,MAAQt1B,KAAKC,UAAU1H,IACjIA,MAGdmkC,EAAetqC,UAAUuiC,UAAY,SAAU3wB,GAC3C9R,KAAKsR,UAAUO,IAAI,YAAaC,IAEpC04B,EAAetqC,UAAUglC,uBAAyB,SAAUzkB,EAAQ0c,EAAchrB,EAAKvQ,GACnF,IAAIyE,EAEAA,EADA8L,GAAe,KAARA,EACD,CACFtO,KAAM,QACNwZ,WAAY8f,EACZmN,WAAY,0BACZxyB,OAAQ3F,EACRxN,QAAS/C,EACTwO,aAAS9E,GAIP,CACFzH,KAAM,QACNinC,cAAe3N,EACf/sB,QAASpQ,KAAK0O,QAAQ2B,OACtBzO,OAAQA,EACRyb,gBAAY/R,GAGpBtL,KAAK0O,QAAQa,kBAAkBlJ,IAEnCmkC,EAAetqC,UAAUgiC,WAAa,SAAUzhB,GAC5C,OAAO3f,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAIqG,EACJ,OAAOtE,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EAKD,OAJAgE,EAAM,CACFxC,KAAM,aACNqrB,QAAS,CAACzO,EAAO2iB,SAEd,CAAC,EAAGpjC,KAAK0O,QAAQO,KAAK5I,IACjC,KAAK,EAED,OADAe,EAAG9E,OACI,CAAC,WAK5BkoC,EAAetqC,UAAU2hC,cAAgB,SAAUphB,GAC/C,OAAOzgB,KAAKwiC,UAAUX,cAAcphB,IAExC+pB,EAAetqC,UAAUkhC,oBAAsB,SAAU3gB,EAAQkf,GAC7D,OAAO3/B,KAAKwiC,UAAUpB,oBAAoB3gB,EAAQkf,IAEtD6K,EAAetqC,UAAUmhC,sBAAwB,SAAU5gB,EAAQkf,GAC/D3/B,KAAKwiC,UAAUiH,2BAA2BhpB,EAAQkf,IAEtD6K,EAAetqC,UAAUohC,SAAW,SAAU7gB,EAAQlM,EAAMotB,GACxD3hC,KAAKwiC,UAAUlB,SAAS7gB,EAAQlM,EAAMotB,IAE1C6I,EAAetqC,UAAU2/B,iBAAmB,SAAUpf,EAAQgW,EAAcliB,GACxEvU,KAAKwiC,UAAU3C,iBAAiBpf,EAAQgW,EAAcliB,IAE1Di2B,EAAetqC,UAAU0/B,wBAA0B,SAAUnf,EAAQgW,GACjEz2B,KAAKwiC,UAAU5C,wBAAwBnf,EAAQgW,IAEnD+T,EAAetqC,UAAU+/B,sBAAwB,SAAUF,EAAgBtf,EAAQ0f,GAC/EngC,KAAKwiC,UAAUvC,sBAAsBF,EAAgBtf,EAAQ0f,IAEjEqK,EAAetqC,UAAUkgC,cAAgB,SAAUL,EAAgBtf,EAAQ3I,GACvE9X,KAAKwiC,UAAUpC,cAAcL,EAAgBtf,EAAQ3I,IAEzD0yB,EAAetqC,UAAUogC,aAAe,SAAUxuB,GAC9C9R,KAAKwiC,UAAUlC,aAAaxuB,IAEhC04B,EAAetqC,UAAUwgC,WAAa,SAAU5uB,GAC5C9R,KAAKwiC,UAAU9B,WAAW5uB,IAE9B04B,EAAetqC,UAAU0gC,aAAe,SAAU9uB,GAC9C9R,KAAKwiC,UAAU5B,aAAa9uB,IAEhC04B,EAAetqC,UAAUwqC,oBAAsB,SAAUrkC,GACrD,IAAI82B,EAAe92B,EAAIykC,cACnBC,EAAW1kC,EAAI6jC,UACfzD,EAAWpgC,EAAIyjC,UACfpG,EAAOr9B,EAAI8jC,aAEX1pB,EADazgB,KAAKqiC,iBAAiBU,UACfr5B,QAAO,SAAUnD,GACrC,OAAOA,EAAE68B,SAAWqD,KACrB,GACH,QAAen7B,IAAXmV,EAAJ,CAGA,IACIskB,EAAiB,CAAErB,KAAMA,EAAM1zB,SADtBhQ,KAAKyqC,iBAAiB7C,cAAcmD,GAAU/6B,UAE3DhQ,KAAKsR,UAAUkB,QAAQ,YAAaiO,EAAQ0c,EAAc4H,KAEvDyF,CACX,IAEIQ,GAAoB,WACpB,SAASA,EAAiBvC,EAAYwC,GAClCjrC,KAAKyoC,WAAaA,EAClBzoC,KAAKirC,iBAAmBA,EAgE5B,OA9DAzrC,OAAO0H,eAAe8jC,EAAiB9qC,UAAW,mBAAoB,CAClEiH,IAAK,WACD,OAAOnH,KAAKirC,iBAAiBC,OAAOxqC,WAAa,IAErD4G,YAAY,EACZC,cAAc,IAElB/H,OAAO0H,eAAe8jC,EAAiB9qC,UAAW,UAAW,CACzDiH,IAAK,WACD,IAAIiB,EAAQpI,KACZ,OAAOA,KAAKirC,iBAAiBE,eACxBzhC,QAAO,SAAU0hC,GAAQ,OAAOA,EAAKhB,kBACrC/7B,KAAI,SAAU+8B,GAAQ,OAAOhjC,EAAMqgC,WAAWb,cAAcwD,EAAK9E,UAAUt2B,aAEpF1I,YAAY,EACZC,cAAc,IAElB/H,OAAO0H,eAAe8jC,EAAiB9qC,UAAW,iBAAkB,CAChEiH,IAAK,WACD,OAAOnH,KAAKy6B,QAAQ,IAExBnzB,YAAY,EACZC,cAAc,IAElB/H,OAAO0H,eAAe8jC,EAAiB9qC,UAAW,SAAU,CACxDiH,IAAK,WACD,OAAOnH,KAAKirC,iBAAiBxqB,QAEjCnZ,YAAY,EACZC,cAAc,IAElByjC,EAAiB9qC,UAAUmrC,OAAS,SAAUC,GAC1C,GAA4B,mBAAjBA,EACP,MAAM,IAAItoC,UAAU,yCAExBhD,KAAKirC,iBAAiB/d,SAASme,OAAOnoC,KAAKooC,GACU,IAAjDtrC,KAAKirC,iBAAiB/d,SAASme,OAAO1qC,QAAgBX,KAAKirC,iBAAiBM,OAAOh3B,KAAK5T,OAAS,GACjGX,KAAKirC,iBAAiBM,OAAOh3B,KAAKjO,SAAQ,SAAUklC,GAChDF,EAAaE,OAIzBR,EAAiB9qC,UAAUurC,SAAW,SAAUC,GAC5C,GAA8B,mBAAnBA,EACP,MAAM,IAAI1oC,UAAU,oCAExBhD,KAAKirC,iBAAiB/d,SAASue,SAASvoC,KAAKwoC,IAEjDV,EAAiB9qC,UAAUyrC,SAAW,SAAU75B,KAEhDk5B,EAAiB9qC,UAAU0rC,YAAc,SAAU95B,GAC/C,GAAwB,mBAAbA,EACP,MAAM,IAAI9O,UAAU,oCAExBhD,KAAKirC,iBAAiB/d,SAAS0e,YAAY1oC,KAAK4O,IAEpDk5B,EAAiB9qC,UAAU6T,MAAQ,WAC/B/T,KAAKirC,iBAAiBl3B,SAE1Bi3B,EAAiB9qC,UAAU2rC,mBAAqB,SAAUC,GACtD9rC,KAAKirC,iBAAmBa,GAErBd,CACX,IAEIe,GAAc,WACd,SAASA,EAAWv9B,GAChBxO,KAAKwO,OAASA,EACdxO,KAAKgsC,MAAQ,GACbhsC,KAAKisC,WAAa,GAsBtB,OApBAF,EAAW7rC,UAAU2R,IAAM,SAAUS,GACjC,IAAIlK,EAAQpI,KACRkJ,EAAKgT,KACTlc,KAAKgsC,MAAM9oC,KAAK,CAAEgG,GAAIA,EAAIoJ,QAASA,IACnC,IAAI45B,EAAY3+B,YAAW,WACvB,IAAI4+B,EAAa/jC,EAAM4jC,MAAMI,WAAU,SAAU9uB,GAAS,OAAOA,EAAMpU,KAAOA,KAC1EijC,EAAa,GAGjB/jC,EAAM4jC,MAAMjyB,OAAOoyB,EAAY,KAChCnsC,KAAKwO,OAAO69B,gBACfrsC,KAAKisC,WAAW/oC,KAAKgpC,IAEzBH,EAAW7rC,UAAUosC,MAAQ,WACzB,IAAIC,EAAWvsC,KAAKgsC,MAAM39B,KAAI,SAAUiP,GAAS,OAAOA,EAAMhL,WAI9D,OAHAtS,KAAKisC,WAAW3lC,SAAQ,SAAU4C,GAAM,OAAOkf,cAAclf,MAC7DlJ,KAAKgsC,MAAQ,GACbhsC,KAAKisC,WAAa,GACXM,GAEJR,CACX,IAEIS,GAAyB,iBACzBC,GAAoB,aACpBC,GAAqB,uBAGrBC,GAA2B,kBAC3BC,GAAmB,WACnB,SAASA,EAAgBl+B,EAAS+5B,EAAYv1B,GAC1C,IAAI9K,EAAQpI,KACZA,KAAK0O,QAAUA,EACf1O,KAAKyoC,WAAaA,EAClBzoC,KAAKkT,OAASA,EACdlT,KAAK6sC,kBAAoB,GACzB7sC,KAAK8sC,WAAa,IAAIf,GAAW,CAAEM,eAAgB,MACnDrsC,KAAK+sC,4BAA8B,GACnC/sC,KAAKgtC,gBAAkB,EACvBhtC,KAAKitC,uBAAyB,SAAUC,GACpC,IAAIzvB,EAAMyvB,EAActvB,KACpBuvB,EAAc1vB,EAAI0vB,YAClBC,EAAahlC,EAAMykC,kBAAkBM,GACzC,GAA0B,iBAAfC,IAGXA,EAAWjC,eAAiBiC,EAAWjC,eAAezhC,QAAO,SAAUoxB,GACnE,OAAOA,EAAOwL,WAAa7oB,EAAI6oB,YAE/B8G,EAAWjC,eAAexqC,QAAU,GAAG,CAEvC,GADAmhB,aAAasrB,EAAWlB,WACpBkB,EAAW50B,SAAWg0B,GAAwB,CAC9C,IAAI10B,EAA0C,iBAAzBo1B,EAAcp1B,QAAgD,KAAzBo1B,EAAcp1B,OACpE,oBAAsBo1B,EAAcp1B,OAAS,KAC7C,oBACAu1B,EAAkD,iBAAhCD,EAAWlC,OAAOxqC,UACpCoN,KAAKC,UAAUq/B,EAAWlC,OAAOxqC,WACjC,KACJ0sC,EAAWx7B,MAAM,CACb4B,QAjCG,yBAiC6BsE,EAAS,gBAAkBu1B,EAC3DzQ,YAAawQ,EAAWlC,OAAOxqC,UAC/B+f,OAAQ2sB,EAAW3sB,cAGlB2sB,EAAW50B,SAAWi0B,IAC3BrkC,EAAMklC,qBAAqBF,UAExBhlC,EAAMykC,kBAAkBM,KAGvCntC,KAAKutC,iBAAmB,SAAUlnC,GAC9B,IAAI8mC,EAAc9mC,EAAIuX,KAAKuvB,YACvBC,EAAahlC,EAAMykC,kBAAkBM,GACzC,GAA0B,iBAAfC,EAAX,CAGA,IAAI9G,EAAWjgC,EAAIuX,KAAK0oB,SACpBkH,EAAkBJ,EAAWjC,eAC5BzhC,QAAO,SAAUoxB,GAClB,OAAOA,EAAOwL,WAAaA,KAC5B,GACH,GAA+B,iBAApBkH,EAAX,CAGAA,EAAgBpD,eAAiB/jC,EAAI8iC,gBACrC/gC,EAAM2kC,4BAA4B1mC,EAAI8iC,iBAAmBgE,EACzD,IAAIM,EAAmBL,EAAW50B,SAAWg0B,GAE7C,GADAY,EAAW50B,OAASi0B,GAChBgB,EAAiB,CACjB,IAAI59B,GAAY,EACZqT,EAAMkqB,EAAW3W,aACjBvT,GACAA,EAAI2oB,mBAAmBuB,GACvBA,EAAW7vB,QAAQ2F,GACnBrT,GAAY,IAGZqT,EAAM,IAAI8nB,GAAiB5iC,EAAMqgC,WAAY2E,GAC7CA,EAAW3W,aAAevT,EAC1BkqB,EAAW7vB,QAAQ2F,IAEvB,IAAK,IAAIxQ,EAAK,EAAGtL,EAAKgmC,EAAWlgB,SAAS0e,YAAal5B,EAAKtL,EAAGzG,OAAQ+R,IAAM,CACzE,IAAI0a,EAAUhmB,EAAGsL,GACjB,IACI0a,EAAQlK,EAAIwqB,eAAgB79B,GAEhC,MAAOnO,UAKnB1B,KAAK2tC,gBAAkB,SAAUtnC,GAC7B,IAAI8mC,EAAc/kC,EAAM2kC,4BAA4B1mC,EAAI8iC,iBACxD,QAA2B,IAAhBgE,EAAX,CAGA,IAAI1W,EAAeruB,EAAMykC,kBAAkBM,GAC3C,GAA4B,iBAAjB1W,EAAX,CAGA,IAAImX,EAAsBnX,EAAa0U,eAAezhC,QAAO,SAAUoxB,GACnE,OAAOA,EAAOsP,iBAAmB/jC,EAAI8iC,mBAEzC,GAAmC,IAA/ByE,EAAoBjtC,OAAxB,CAGA,IAAIktC,EAAgBxnC,EAAIynC,IACpBC,EAAkBH,EAAoB,GAAGtH,SACzC0H,EAAqB,WACrB,MAAO,CACHz5B,KAAMlO,EAAIkO,KACVumB,OAAQ1yB,EAAMqgC,WAAWb,cAAcmG,GAAiB/9B,SACxDi+B,iBAAkBxX,EAAayU,OAAOxqC,UACtC8S,aAASlI,EACT4iC,QAASL,IAGbM,EAAiB1X,EAAavJ,SAASme,OACvC+C,EAAa3X,EAAa8U,OAAOh3B,KACjC45B,EAAextC,OAAS,EACxBwtC,EAAe7nC,SAAQ,SAAUwL,GACL,mBAAbA,GACPA,EAASk8B,QAKjBI,EAAWlrC,KAAK8qC,SAGxBhuC,KAAKquC,4BAA8B,SAAUhoC,GACzC,IAAI8mC,EAAc/kC,EAAM2kC,4BAA4B1mC,EAAI8iC,iBACxD,QAA2B,IAAhBgE,EAAX,CAGA,IAAI1W,EAAeruB,EAAMykC,kBAAkBM,GAC3C,GAA4B,iBAAjB1W,EAAX,CAGA,IAAI6X,EAAoB7X,EAAa0U,eAAexqC,OAAS,EAC7D81B,EAAa0U,eAAiB1U,EAAa0U,eAAezhC,QAAO,SAAUoxB,GACvE,OAAIA,EAAOsP,iBAAmB/jC,EAAI8iC,kBAC9B1S,EAAa8U,OAAOgD,QAAQrrC,KAAK43B,EAAOwL,WACjC,MAMX7P,EAAa0U,eAAexqC,SAAW2tC,IAGvC7X,EAAa0U,eAAexqC,QAAU,IACtCyH,EAAM0kC,WAAWj7B,IAAI4kB,GACrB3U,aAAa2U,EAAayV,WAC1B9jC,EAAMklC,qBAAqB7W,UACpBruB,EAAMykC,kBAAkBM,WAE5B/kC,EAAM2kC,4BAA4B1mC,EAAI8iC,qBAEjDz6B,EAAQkO,GAAG,aAAc5c,KAAKutC,kBAC9B7+B,EAAQkO,GAAG,QAAS5c,KAAK2tC,iBACzBj/B,EAAQkO,GAAG,yBAA0B5c,KAAKquC,6BAiK9C,OA/JAzB,EAAgB1sC,UAAUg2B,UAAY,SAAU4S,EAAiBoC,EAAQvR,EAAepc,EAAS3L,EAAO2c,GACpG,IAAInmB,EAAQpI,KACZ,GAA6B,IAAzB25B,EAAch5B,OAAlB,CAQA,IAAIwsC,EAAcntC,KAAKwuC,8BACnBpB,EAAaptC,KAAKyuC,qBAAqBtB,EAAarE,EAAiBoC,EAAQ3tB,EAAS3L,EAAOs5B,EAAOnR,uBAAyB,IAAOxL,GAC9G,iBAAf6e,EAQXzT,EAAcrzB,SAAQ,SAAUwF,GAC5B,IAAIw6B,EAAWx6B,EAAOgvB,OAAO5xB,GACzBuX,EAAS3U,EAAOojB,QAAQjG,MAAK,SAAU1iB,GAAK,OAAOA,EAAE3B,OAASkkC,EAAgBlkC,QAClF,GAAK6b,EAAL,CAIA2sB,EAAWjC,eAAejoC,KAAK,CAC3BojC,SAAUA,EACV8D,oBAAgB9+B,IAEpB,IAAIjF,EAAM,CACNxC,KAAM,YACN6qC,UAAWpI,EACXwD,UAAWrpB,EAAOqmB,UAClBqD,aAAce,EAAOxqC,WAEzB0H,EAAMsG,QAAQO,KAAK5I,EAAK,CAAEigC,SAAUA,EAAU6G,YAAaA,IACtDrrC,MAAK,SAAUyE,GAAK,OAAO6B,EAAMmlC,iBAAiBhnC,MAClDsD,OAAM,SAAUsI,GAAO,OAAO/J,EAAM6kC,uBAAuB96B,WAf5D/J,EAAM8K,OAAOtB,MAAM,uBAAyBk3B,EAAgBlkC,KAAO,eAAiBkH,EAAOgvB,OAAO5xB,OAXtG0I,EAAM,CACF6O,OAAQqoB,EACRlM,YAAasO,EAAOxqC,UACpB8S,QAASk5B,GAAqB,iDAblC96B,EAAM,CACF6O,OAAQqoB,EACRlM,YAAasO,EAAOxqC,UACpB8S,QAASk5B,GAAqB,sDAoC1CE,EAAgB1sC,UAAUyuC,mBAAqB,WAC3C,IAAI/kC,EAAWpK,OAAO0E,OAAOlE,KAAK6sC,mBAGlC,OAFA7sC,KAAK6sC,kBAAoB,GACzB7sC,KAAK+sC,4BAA8B,GAC5BnjC,GAEXgjC,EAAgB1sC,UAAU0uC,wBAA0B,WAChD,OAAO5uC,KAAK8sC,WAAWR,SAE3BM,EAAgB1sC,UAAUsuC,4BAA8B,WACpD,IAAIhP,EAAUx/B,KAAKgtC,gBAEnB,OADAhtC,KAAKgtC,iBAAmB,EACjBxN,GAEXoN,EAAgB1sC,UAAUuuC,qBAAuB,SAAUtB,EAAa1sB,EAAQyqB,EAAQ3tB,EAAS3L,EAAOiS,EAAS0K,GAC7G,IAAInmB,EAAQpI,KACR6uC,EAAW,CACXC,SAAU3B,EACV30B,OAAQg0B,GACR/rB,OAAQA,EACRyqB,OAAQA,EACR3tB,QAASA,EACT3L,MAAOA,EACPu5B,eAAgB,GAChBje,SAAU,CACNme,QAAS9c,aAAiD,EAASA,EAAYrB,SAASme,SAAW,GACnGI,UAAWld,aAAiD,EAASA,EAAYrB,SAASue,WAAa,GACvGG,aAAcrd,aAAiD,EAASA,EAAYrB,SAAS0e,cAAgB,IAEjHL,OAAQ,CACJh3B,KAAM,GACNg6B,QAAS,IAEbrC,eAAW5gC,EACXyI,MAAO,WAAc,OAAO3L,EAAM2mC,kBAAkB5B,IACpD1W,aAAclI,aAAiD,EAASA,EAAYkI,cAsCxF,OApCKlI,IACG2c,EAAOG,QACPwD,EAAS3hB,SAASme,OAAOnoC,KAAKgoC,EAAOG,QAErCH,EAAOO,UACPoD,EAAS3hB,SAASue,SAASvoC,KAAKgoC,EAAOO,UAEvCP,EAAOU,aACPiD,EAAS3hB,SAAS0e,YAAY1oC,KAAKgoC,EAAOU,cAGlD5rC,KAAK6sC,kBAAkBM,GAAe0B,EACtCA,EAAS3C,UAAY3+B,YAAW,WAC5B,QAA6CjC,IAAzClD,EAAMykC,kBAAkBM,GAA5B,CAGA,IAAIC,EAAahlC,EAAMykC,kBAAkBM,GACrCC,EAAW50B,SAAWg0B,IACtB56B,EAAM,CACF6O,OAAQA,EACRmc,YAAasO,EAAOxqC,UACpB8S,QAASk5B,GAAqB,yCAA2C7oB,EAAU,gBAEhFzb,EAAMykC,kBAAkBM,IAE1BC,EAAW50B,SAAWi0B,IAAqBW,EAAWjC,eAAexqC,OAAS,IACnFysC,EAAWjC,eAAiBiC,EAAWjC,eAAezhC,QAAO,SAAUoxB,GACnE,YAAyC,IAA1BA,EAAOsP,yBAEnBgD,EAAWlB,UACdkB,EAAWjC,eAAexqC,QAAU,IACpCyH,EAAMklC,qBAAqBF,UACpBhlC,EAAMykC,kBAAkBM,QAGxCtpB,GACIgrB,GAEXjC,EAAgB1sC,UAAUotC,qBAAuB,SAAU7W,EAAc3e,GACrE,IAEIk3B,EAFAC,EAAexY,EAAa8U,OAAOgD,QAAQ5tC,OAC3CuuC,EAAmBD,EAAe,EAAKxY,EAAa8U,OAAOgD,QAAQU,EAAe,GAAK,UAEnE3jC,IAApB4jC,GAA4D,iBAApBA,IACxCF,EAAgBhvC,KAAKyoC,WAAWb,cAAcsH,GAAiBl/B,UAEnEymB,EAAavJ,SAASue,SAASnlC,SAAQ,SAAUwL,GACrB,mBAAbA,GAGXA,EAAS,CACL0B,QAASsE,GA9RM,kBA+Rfm2B,iBAAkBxX,EAAayU,OAAOxqC,WAAa,GACnDo6B,OAAQkU,EACRpV,OAAQnD,EAAahW,aAIjCmsB,EAAgB1sC,UAAU6uC,kBAAoB,SAAU5B,GACpD,IAAI/kC,EAAQpI,KACRy2B,EAAez2B,KAAK6sC,kBAAkBM,GACd,iBAAjB1W,IAGXA,EAAa0U,eAAe7kC,SAAQ,SAAUw0B,QACL,IAA1BA,EAAOsP,iBAGlB3T,EAAa8U,OAAOgD,QAAQrrC,KAAK43B,EAAOwL,UACxCl+B,EAAMsG,QAAQa,kBAAkB,CAC5B1L,KAAM,cACNslC,gBAAiBrO,EAAOsP,eACxBE,WAAY,GACZxyB,OAAQ60B,YAELvkC,EAAM2kC,4BAA4BjS,EAAOsP,oBAEpD3T,EAAa0U,eAAiB,GAC9BnrC,KAAKstC,qBAAqB7W,EAAckW,WACjC3sC,KAAK6sC,kBAAkBM,KAE3BP,CACX,IAEIuC,GAAkB,WAClB,SAASA,EAAezgC,EAAS+5B,EAAYv1B,GACzC,IAAI9K,EAAQpI,KACZA,KAAK0O,QAAUA,EACf1O,KAAKyoC,WAAaA,EAClBzoC,KAAKkT,OAASA,EACdxE,EAAQkO,GAAG,cAAc,SAAUvW,GAAO,OAAO+B,EAAMgnC,gBAAgB/oC,MACvEqI,EAAQkO,GAAG,gBAAgB,SAAUvW,GAAO,OAAO+B,EAAMinC,kBAAkBhpC,MAC3EqI,EAAQkO,GAAG,iBAAiB,SAAUvW,GAAO,OAAO+B,EAAMknC,0BAA0BjpC,MACpFqI,EAAQkO,GAAG,mBAAmB,SAAUvW,GAAO,OAAO+B,EAAMmnC,4BAA4BlpC,MACxFrG,KAAKwiC,UAAY,IAAIoK,GAAgBl+B,EAAS+5B,EAAYv1B,GA8G9D,OA5GAi8B,EAAejvC,UAAUg2B,UAAY,SAAU0D,EAAQ1uB,EAASyuB,EAAepc,EAAS3L,EAAO2c,GAC3FvuB,KAAKwiC,UAAUtM,UAAU0D,EAAQ1uB,EAASyuB,EAAepc,EAAS3L,EAAO2c,IAE7E4gB,EAAejvC,UAAUkvB,OAAS,SAAUlmB,EAAIuX,EAAQijB,EAAM53B,GAC1D,IAAI1D,EAAQpI,KACRsmC,EAAWx6B,EAAO5C,GAElB7C,EAAM,CACNxC,KAAM,OACN6qC,UAAWpI,EACXwD,UAJWrpB,EAAOqmB,UAKlBqD,aAAczG,GAElB,OAAO1jC,KAAK0O,QAAQO,KAAK5I,EAAK,CAAE82B,aAAcj0B,EAAIo9B,SAAUA,IACvDxkC,MAAK,SAAUyE,GAAK,OAAO6B,EAAMonC,oBAAoBjpC,MACrDsD,OAAM,SAAUsI,GAAO,OAAO/J,EAAMqnC,sBAAsBt9B,OAEnEg9B,EAAejvC,UAAUyuC,mBAAqB,WAC1C,OAAO3uC,KAAKwiC,UAAUmM,sBAE1BQ,EAAejvC,UAAU0uC,wBAA0B,WAC/C,OAAO5uC,KAAKwiC,UAAUoM,2BAE1BO,EAAejvC,UAAUkvC,gBAAkB,SAAU/oC,GACjD,IAAIqpC,EAAYrpC,EAAIspC,YAChBC,EAAWvpC,EAAIgS,SACfkmB,GAAUl4B,EAAIwpC,MAAOxpC,EAAIwpC,KAAKC,MAC9BnK,EAAM7wB,OAAO86B,EAASx6B,SACtB26B,EAAa,CACbnK,QAASgK,EAAShK,QAClBD,IAAK3wB,MAAM2wB,GAAOiK,EAASx6B,QAAUuwB,EACrC31B,SAAU4/B,EAAS5/B,SACnBsI,YAAas3B,EAASt3B,YACtBsQ,gBAAiBgnB,EAAShnB,gBAC1Bid,YAAa+J,EAAS/J,YACtBC,OAAQ8J,EAAS9J,OACjBJ,KAAMkK,EAASlK,KACfxe,SAAU0oB,EAAS1oB,SACnB7W,OAAQq/B,EACRxiC,IAAK0iC,EAAS1iC,IACdqxB,QAASA,GAEbv+B,KAAKyoC,WAAWpC,UAAU0J,EAAYL,IAE1CP,EAAejvC,UAAUmvC,kBAAoB,SAAUhpC,GACnD,IAAI2pC,EAAgB3pC,EAAI4pC,WACpBn4B,EAASzR,EAAIyR,OACjB9X,KAAKyoC,WAAWjC,iBAAiBwJ,EAAel4B,IAEpDq3B,EAAejvC,UAAUovC,0BAA4B,SAAUjpC,GAC3D,IAAI+B,EAAQpI,KACRsmC,EAAWjgC,EAAIqoC,UACLroC,EAAI6oB,QACV5oB,SAAQ,SAAUma,GACtBrY,EAAMqgC,WAAW9B,gBAAgBL,EAAU7lB,OAGnD0uB,EAAejvC,UAAUqvC,4BAA8B,SAAUlpC,GAC7D,IAAI+B,EAAQpI,KACRsmC,EAAWjgC,EAAIqoC,UACfwB,EAAe7pC,EAAI6oB,QACnB4L,EAAS96B,KAAKyoC,WAAWb,cAActB,GACpB9mC,OAAO2E,KAAK22B,EAAO5L,SACzB5oB,SAAQ,SAAU+4B,GAC/B,IAAI5e,EAASqa,EAAO5L,QAAQmQ,GACxB6Q,EAAaj1B,QAAQwF,EAAOqmB,YAAc,GAC1C1+B,EAAMqgC,WAAW/B,mBAAmBJ,EAAUjH,OAI1D8P,EAAejvC,UAAUsvC,oBAAsB,SAAUnpC,GACrD,IAAI82B,EAAe92B,EAAIuX,KAAKuf,aACxBv7B,EAASyE,EAAIzE,OACb0kC,EAAWjgC,EAAIuX,KAAK0oB,SAExB,MAAO,CACHnJ,aAAcA,EACdv7B,OAAQA,EACRoO,SAJShQ,KAAKyoC,WAAWb,cAActB,GAItBt2B,SACjBwI,OAAQya,GAAawK,QACrBjqB,QAAS,KAGjB27B,EAAejvC,UAAUuvC,sBAAwB,SAAUppC,GAEvD,GADArG,KAAKkT,OAAOwE,MAAM,2BAA6B5J,KAAKC,UAAU1H,IAC1D,SAAUA,EAAK,CACf,IAAI82B,EAAe92B,EAAIuX,KAAKuf,aACxBmJ,EAAWjgC,EAAIuX,KAAK0oB,SACpBxL,EAAS96B,KAAKyoC,WAAWb,cAActB,GACvC9yB,EAAUnN,EAAIyR,OAElB,MAAO,CACHqlB,aAAcA,EACdv7B,OAHYyE,EAAI1B,QAIhBqL,SAAU8qB,EAAO9qB,SACjBwI,OAAQya,GAAalsB,MACrByM,QAASA,GAIb,MAAO,CACH2pB,aAAc,GACd3pB,QAASnN,EAAImN,QACbgF,OAAQya,GAAalsB,MACrB6K,MAAOvL,IAIZ8oC,CACX,IAEA,SAASgB,GAAoBngC,EAAUzB,EAAYk8B,EAAkBpI,EAAkB+N,EAAWphB,GAC9F,IACItf,EADAwD,EAASk9B,EAAUl9B,OAAO+N,UAAU,gBAEpCovB,EAAe,IAAIlvC,SAAQ,SAAUC,GACrCsO,EAAsBtO,KAEtBsN,EAAUH,EAAWoB,OAAO,MAAO,CAAC,eACpCmrB,EAAS,IAAI0P,GAAe97B,EAAS+7B,EAAkBpI,EAAkBnvB,EAAO+N,UAAU,WAC1FvN,EAAS,IAAIy7B,GAAezgC,EAAS+7B,EAAkBv3B,EAAO+N,UAAU,WA6E5E,OAbAvS,EAAQkB,UAAS,SAAUC,GACvB46B,EAAiBpE,UAAUr2B,EAAUzB,EAAW8B,QAC5CR,EAjER,WACI,OAAO/O,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAIswC,EAAsBC,EAAuBxtB,EAASrQ,EAAI89B,EAAyBttB,EAAKutB,EAAmBC,EAAStpC,EAAIupC,EAAqBlwB,EACjJ,OAAO1e,EAAY/B,MAAM,SAAUyP,GAC/B,OAAQA,EAAGpN,OACP,KAAK,EAgBD,IAfA6Q,EAAO8D,KAAK,kEACZtD,EAAOk7B,0BAA0BtoC,SAAQ,SAAU4c,GAC/C,IAAI2kB,EAAa3kB,EAAIzC,OACjByqB,EAAS1rC,OAAOa,OAAO,GAAI6iB,EAAIgoB,QACnCh4B,EAAO8D,KAAK,yCAA2C6wB,EAAWjjC,KAAO,kBAAoBkJ,KAAKC,UAAUm9B,IAC5Glc,EAAQtb,OAAOwiB,UAAU2R,EAAYqD,OAAQ5/B,OAAWA,EAAW4X,GAAKphB,MAAK,WAAc,OAAOoR,EAAO8D,KAAK,8BAAgC6wB,EAAWjjC,KAAO,YAAaiF,OAAM,SAAU+H,GAAS,OAAOsB,EAAO4K,KAAK,yBAA2B+pB,EAAWjjC,KAAO,YAAckJ,KAAKC,UAAU6D,GAAS,WAEhT0+B,EAAuB,GACvBC,EAAwB78B,EAAOi7B,qBAC/B5rB,EAAU,SAAUG,GAChB,IAAI2kB,EAAa3kB,EAAIzC,OACjByqB,EAAS1rC,OAAOa,OAAO,GAAI6iB,EAAIgoB,QACnCh4B,EAAO8D,KAAK,oCAAsC6wB,EAAWjjC,KAAO,kBAAoBkJ,KAAKC,UAAUm9B,IACvGoF,EAAqBptC,KAAK8rB,EAAQtb,OAAOwiB,UAAU2R,EAAYqD,OAAQ5/B,OAAWA,EAAW4X,GAAKphB,MAAK,WAAc,OAAOoR,EAAO8D,KAAK,yBAA2B6wB,EAAWjjC,KAAO,cAEpL8N,EAAK,EAAG89B,EAA0BD,EAAuB79B,EAAK89B,EAAwB7vC,OAAQ+R,IAC/FwQ,EAAMstB,EAAwB99B,GAC9BqQ,EAAQG,GAkBZ,IAhBAutB,EAAoBpO,EAAiBU,UACrCV,EAAiBppB,QACjBy3B,EAAU,SAAUjwB,GAChB,IAAI/P,EAAM+P,EAAO7Z,WACjBsM,EAAO8D,KAAK,wBAA0BtG,EAAI9L,MACtC6b,EAAOmZ,OACP0W,EAAqBptC,KAAK8rB,EAAQ8L,OAAO6H,aAAajyB,EAAK+P,EAAOqgB,qBAAiBx1B,OAAWA,EAAWmV,EAAOmZ,QAAQ93B,MAAK,WAAc,OAAOoR,EAAO8D,KAAK,yBAA2BtG,EAAI9L,KAAO,aAE/L6b,EAAOmkB,aAAenkB,EAAOmkB,YAAYjB,aAC9C2M,EAAqBptC,KAAK8rB,EAAQsU,SAAS5yB,EAAK+P,EAAOmkB,YAAYjB,cAAc7hC,MAAK,WAAc,OAAOoR,EAAO8D,KAAK,yBAA2BtG,EAAI9L,KAAO,aAExJ6b,EAAOmkB,aAAenkB,EAAOmkB,YAAYX,mBAC9CqM,EAAqBptC,KAAK8rB,EAAQ6U,cAAcnzB,EAAK+P,EAAOmkB,YAAYX,mBAAmBniC,MAAK,WAAc,OAAOoR,EAAO8D,KAAK,yBAA2BtG,EAAI9L,KAAO,aAE3KsO,EAAO8D,KAAK,wBAA0BtG,EAAI9L,KAAO,UAEhDwC,EAAK,EAAGupC,EAAsBF,EAAmBrpC,EAAKupC,EAAoBhwC,OAAQyG,IACnFqZ,EAASkwB,EAAoBvpC,GAC7BspC,EAAQjwB,GAEZ,MAAO,CAAC,EAAGtf,QAAQ4gB,IAAIuuB,IAC3B,KAAK,EAGD,OAFA7gC,EAAGnN,OACH4Q,EAAO8D,KAAK,2BACL,CAAC,UAiBpB45B,GAAkB9uC,MAAK,WAAc,OAAOyM,EAAWge,kBAAkB,CAAE3nB,KAAM,eAAiBiF,OAAM,SAAU+H,GAAS,OAAOsB,EAAO4K,KAAK,sCAAwChQ,KAAKC,UAAU6D,OAXrMlC,IACAA,EAAoB,CAChBgE,OAAQA,EACRonB,OAAQA,IAEZprB,OAAsBpE,MAY9BoD,EAAQsP,QAAO,WACXysB,EAAiBxxB,WAErBvK,EAAQ3J,OACDsrC,CACX,CAEA,IAAIphB,GAAW,WACX,SAASA,EAAQwK,GACb,IAAIrxB,EAAQpI,KACZ,QAA6B,IAAlBy5B,EACP,MAAM,IAAI1yB,MAAM,6BAEpB,QAAwC,IAA7B0yB,EAAclrB,WACrB,MAAM,IAAIxH,MAAM,yCAEpB,IAWI8pC,EAXAtiC,EAAakrB,EAAclrB,WAY/B,GAXmD,iBAAxCkrB,EAAcM,wBACrBN,EAAcM,sBAAwB,KAEC,iBAAhCN,EAAcO,gBACrBP,EAAcO,cAAgB,KAElCh6B,KAAKomC,kBAAoB,IAAIjB,GAAgBnlC,UAAMsL,EAAWiD,GAC9DvO,KAAKgQ,SAAWhQ,KAAKomC,kBAAkBX,SACvCzlC,KAAKyqC,iBAAmB,IAAIzE,GAAiBvM,EAAcvmB,OAAO+N,UAAU,QAASjhB,MACrFA,KAAKqiC,iBAAmB,IAAI6F,GAEO,IAA/B35B,EAAW4P,gBAIX,MAAM,IAAIpX,MAAM,YAAcwH,EAAW4P,gBAAkB,kBAH3D0yB,EAAkBV,GAAmBnwC,KAAKgQ,SAAUzB,EAAYvO,KAAKyqC,iBAAkBzqC,KAAKqiC,iBAAkB5I,EAAez5B,MAKjIA,KAAKqwC,aAAeQ,EAAgB/uC,MAAK,SAAUyG,GAI/C,OAHAH,EAAMG,SAAWA,EACjBH,EAAMsL,OAAS,IAAI8lB,GAAOpxB,EAAMG,SAAUH,EAAMqiC,iBAAkBriC,EAAM4H,SAAUypB,GAClFrxB,EAAM0yB,OAAS,IAAIsH,GAAOh6B,EAAMG,SAAUH,EAAMi6B,kBACzCj6B,KA6Df,OA1DA6mB,EAAQ/uB,UAAU0tB,MAAQ,WACtB,OAAO5tB,KAAKqwC,cAEhBphB,EAAQ/uB,UAAUs7B,cAAgB,SAAU1pB,GACxC,OAAO9R,KAAK0T,OAAO8nB,cAAc1pB,IAErCmd,EAAQ/uB,UAAUo7B,YAAc,SAAUxpB,GACtC,OAAO9R,KAAK0T,OAAO4nB,YAAYxpB,IAEnCmd,EAAQ/uB,UAAU07B,oBAAsB,SAAU9pB,GAC9C,OAAO9R,KAAK0T,OAAOkoB,oBAAoB9pB,IAE3Cmd,EAAQ/uB,UAAUw7B,kBAAoB,SAAU5pB,GAC5C,OAAO9R,KAAK0T,OAAOgoB,kBAAkB5pB,IAEzCmd,EAAQ/uB,UAAUk7B,cAAgB,SAAUtpB,GACxC,OAAO9R,KAAK0T,OAAO0nB,cAActpB,IAErCmd,EAAQ/uB,UAAUg7B,YAAc,SAAUppB,GACtC,OAAO9R,KAAK0T,OAAOwnB,YAAYppB,IAEnCmd,EAAQ/uB,UAAU86B,mBAAqB,SAAUhrB,GAC7C,OAAOhQ,KAAK0T,OAAOsnB,mBAAmBhrB,IAE1Cif,EAAQ/uB,UAAUgvB,QAAU,SAAUwL,GAClC,OAAO16B,KAAK0T,OAAOwb,QAAQwL,IAE/BzL,EAAQ/uB,UAAUu6B,QAAU,SAAUC,GAClC,OAAO16B,KAAK0T,OAAO+mB,QAAQC,IAE/BzL,EAAQ/uB,UAAUg2B,UAAY,SAAUzV,EAAQvV,EAASiuB,EAAiBC,GACtE,OAAOp5B,KAAK0T,OAAOwiB,UAAUzV,EAAQvV,EAASiuB,EAAiBC,IAEnEnK,EAAQ/uB,UAAUyiC,aAAe,SAAUC,EAAWtxB,EAAW6nB,EAAiBC,GAC9E,OAAOp5B,KAAK86B,OAAO6H,aAAaC,EAAWtxB,EAAW6nB,EAAiBC,IAE3EnK,EAAQ/uB,UAAUgiC,WAAa,SAAUxH,GACrC,OAAO16B,KAAK86B,OAAOoH,WAAWxH,IAElCzL,EAAQ/uB,UAAU2jC,cAAgB,SAAU5H,EAAkBnqB,GAC1D,OAAO9R,KAAK86B,OAAO+I,cAAc5H,EAAkBnqB,IAEvDmd,EAAQ/uB,UAAUojC,SAAW,SAAUrH,EAAkBnqB,GACrD,OAAO9R,KAAK86B,OAAOwI,SAASrH,EAAkBnqB,IAElDmd,EAAQ/uB,UAAUkvB,OAAS,SAAUsL,EAAcoB,EAAahwB,EAAQiwB,EAAmBxe,EAAS3L,GAChG,OAAO5R,KAAK0T,OAAO0b,OAAOsL,EAAcoB,EAAahwB,EAAQiwB,EAAmBxe,EAAS3L,IAE7Fqd,EAAQ/uB,UAAU4wC,cAAgB,SAAUlsC,GACxC,IAAIqS,EAAK,IAAI5B,EACTihB,EAAct2B,KAAK0T,OAAOwnB,aAAY,SAAU30B,GAC5CA,EAAE3B,OAASA,IACX0xB,IACArf,EAAG7V,QAAQmF,OAGnB,OAAO0Q,EAAG1B,SAEP0Z,CACX,IAEI7S,GAAkB,CAAC,aAAc,WACjC20B,GAAc,WACd,SAASA,EAAWxiC,EAAY2E,GAC5B,IAAI9K,EAAQpI,KACZA,KAAKgxC,QAAU,SAAUC,EAAO18B,EAAMrJ,GAClC,IAAI9D,EAAK8D,GAAW,GAAIgmC,EAAa9pC,EAAG8pC,WAAYplC,EAAS1E,EAAG0E,OAC5D43B,EAAOt7B,EAAM+oC,kBAAkB,CAC/BttC,KAAM,UACNotC,MAAOA,EACP18B,KAAMA,EACNnE,QAAShI,EAAMiI,OACf+gC,YAAaF,EACbG,gBAAiBvlC,IAErB1D,EAAMsG,QAAQO,KAAKy0B,IAEvB1jC,KAAKk2B,UAAY,SAAU+a,EAAOn/B,EAAU5G,GACxC,OAAO,IAAI/J,SAAQ,SAAUC,EAASC,GAClC,IAAI+F,EAAK8D,GAAW,GAAIgmC,EAAa9pC,EAAG8pC,WAAYplC,EAAS1E,EAAG0E,OAC5D43B,EAAOt7B,EAAM+oC,kBAAkB,CAC/BttC,KAAM,YACNotC,MAAOA,EACP7gC,QAAShI,EAAMiI,OACf+gC,YAAaF,EACb9nB,OAAQtd,IAEZ1D,EAAMsG,QAAQO,KAAKy0B,GACd5hC,MAAK,SAAUwvC,GAChB,IAAInI,EAAkBmI,EAASnI,gBAC/B/gC,EAAM+4B,cAAcj+B,KAAK,CAAEimC,gBAAiBA,EAAiB8H,MAAOA,EAAOn/B,SAAUA,EAAUsX,OAAQtd,IACvG1K,EAAQ,CACJk1B,YAAa,WAGT,OAFAluB,EAAMsG,QAAQO,KAAK,CAAEpL,KAAM,cAAeslC,gBAAiBA,EAAiB/4B,QAAShI,EAAMiI,SAC3FjI,EAAM+4B,cAAgB/4B,EAAM+4B,cAAcz3B,QAAO,SAAUnJ,GAAK,OAAOA,EAAE4oC,kBAAoBA,KACtFhoC,QAAQC,gBAItByI,OAAM,SAAU+H,GAAS,OAAOvQ,EAAOuQ,UAGpD5R,KAAKuxC,aAAe,WAChBnpC,EAAMsG,QAAQkO,GAAG,SAAS,SAAU8mB,GAChC,IAAInvB,EAAOmvB,EAAKnvB,KAAM40B,EAAkBzF,EAAKyF,gBACzC/f,EAASsa,EAAK,sBACdjN,EAAeruB,EAAM+4B,cAAclY,MAAK,SAAU1oB,GAAK,OAAOA,EAAE4oC,kBAAoBA,KACpF1S,IACKA,EAAarN,OAIVhhB,EAAMopC,UAAU/a,EAAarN,OAAQA,IACrCqN,EAAa3kB,SAASyC,EAAMkiB,EAAawa,MAAO7nB,GAJpDqN,EAAa3kB,SAASyC,EAAMkiB,EAAawa,MAAO7nB,QAUhEppB,KAAKuO,WAAaA,EAClBvO,KAAKkT,OAASA,EACdlT,KAAKqQ,OAAS9B,EAAW8B,OACzBrQ,KAAKmhC,cAAgB,GACrBnhC,KAAK0O,QAAUH,EAAWoB,OAAO,MAAOyM,IACxCpc,KAAKqwC,aAAerwC,KAAK0O,QAAQ3J,OACjC/E,KAAKqwC,aAAavuC,MAAK,WACnBsG,EAAMmpC,kBAyBd,OAtBAR,EAAW7wC,UAAU0tB,MAAQ,WACzB,OAAO5tB,KAAKqwC,cAEhBU,EAAW7wC,UAAUixC,kBAAoB,SAAUtf,GAC/C,IAAI4f,EAAU,GAMd,OALAjyC,OAAO2E,KAAK0tB,GAAKvrB,SAAQ,SAAUhC,QACdgH,IAAbumB,EAAIvtB,IAAmC,OAAbutB,EAAIvtB,KAC9BmtC,EAAQntC,GAAOutB,EAAIvtB,OAGpBmtC,GAEXV,EAAW7wC,UAAUsxC,UAAY,SAAUE,EAAMC,GAC7C,IAAIC,EAAWpyC,OAAO2E,KAAKutC,GACvBG,GAAW,EAMf,OALAD,EAAStrC,SAAQ,SAAUhC,GACnBotC,EAAKptC,KAASqtC,EAAKrtC,KACnButC,GAAW,MAGZA,GAEJd,CACX,IAEIe,GAAW,SAAUC,EAAYC,GACjC,IACIllC,EADAmlC,EAAYx9B,EAAMC,oBAElBw9B,EAAiB/wC,QAAQC,UAC7B,GAAI6wC,EAAW,CACX,GAAIA,EAAY,EACZ,MAAM,IAAIlrC,MAAM,qEAEXkrC,GAAa,IAClBnlC,EAAWP,OAAOO,SAClBolC,EAAiB3lC,OAAO4lC,kBAAoBD,GAGpD,IAIIve,EACAye,EACAxe,EACAxqB,EACAipC,EACAC,EACAC,EAVAC,EAAgB78B,EAAM,QAGtB88B,EA3mHR,SAAwBhZ,EAAeuY,EAAKllC,GACxC,IAAI1F,EAAIqI,EAAI0Q,EAAIgW,EACZuc,EACJ,GAAIj+B,EAAMQ,SAAU,CAChB,IAAI09B,EAAwBv9B,QAAQw9B,IAAIC,sBACxC,GAAIF,EACA,IACID,EAAsB5kC,KAAKkR,MAAM2zB,GAErC,MAAOla,KAiGf,SAASqa,IACL,GAAIrZ,EAAcnhB,YACd,OAAOmhB,EAAcnhB,YAEzB,GAAIxL,EACA,OAAOA,EAAS8b,gBAEpB,GAAsB,oBAAXrc,aAA2D,IAA1BA,OAAOwmC,eAC/C,OAAOxmC,OAAOwmC,eAAez6B,YAEjC,IAAI06B,EAAM92B,KACV,OAAIzH,EAAMQ,SACFy9B,EACOA,EAAoBO,kBAAkBruC,KAE1C,SAAWouC,EAEA,oBAAXzmC,QAA8C,oBAAbZ,SACjCA,SAASU,MAAS,KAAO2mC,EAAM,IAEnCA,EA0CX,IAAIzkC,EA3JJ,WACI,IAAInH,EAAIqI,EAAI0Q,EAAIgW,EAAIsC,EAAIya,EAmBpBC,EACAjsB,EACAye,EACAE,EACAC,EAtBAsN,EAAW3Z,EAAc4Z,QACzBl1B,EAA0G,QAAvF/W,EAAKgsC,aAA2C,EAASA,EAASj1B,uBAAoC,IAAP/W,EAAgBA,EAAK,EACvImQ,EAAoB67B,aAA2C,EAASA,EAAS77B,kBACjFC,EAAoB47B,aAA2C,EAASA,EAAS57B,kBAEjFV,EAAKs8B,aAA2C,EAASA,EAASt8B,GAClEqU,EAAeioB,aAA2C,EAASA,EAASjoB,aAC5ED,EAASkoB,aAA2C,EAASA,EAASloB,OACtEE,EAAkG,QAAnF3b,EAAK2jC,aAA2C,EAASA,EAAShoB,mBAAgC,IAAP3b,EAAgBA,OAAKnE,EAC/HwB,IACAgK,EAAKhK,EAASwmC,OAEd7+B,EAAMQ,UAAYy9B,GAAuBA,EAAoBY,QAC7Dx8B,EAAK47B,EAAoBY,OAExBx8B,GAAOqU,GAAiBD,IACzBpU,EAZY,uBAmBhB,IAAI/J,EAAU+lC,IACVS,EAAgBxmC,OACI,IAAbD,GACPoa,EAAWpa,EAASoa,SACpBye,EAAM74B,EAAS64B,IACX74B,EAAS8lC,MACT/M,EAAc/4B,EAAS8lC,IAAIA,IAC3B9M,EAASh5B,EAAS8lC,IAAI9M,QAE1ByN,EAAgD,QAA/BpzB,EAAKrT,EAASwL,mBAAgC,IAAP6H,EAAgBA,EAAK,WAC7EgzB,EAAarmC,EAAS0mC,eAEjB/+B,EAAMQ,UACX0wB,EAAMvwB,QAAQuwB,IACV+M,IACA7M,EAAc6M,EAAoBE,IAClC9M,EAAS4M,EAAoB5M,OAC7BqN,EAAaT,EAAoBS,kBAGmD,KAAhE,OAAX5mC,aAA8B,IAAXA,YAAoB,EAASA,OAAOwmC,kBACpE7rB,EAAsB,OAAX3a,aAA8B,IAAXA,YAAoB,EAASA,OAAOwmC,eAAeI,WACjFxN,EAAiB,OAAXp5B,aAA8B,IAAXA,YAAoB,EAASA,OAAOwmC,eAAepN,IAC5EE,EAAyB,OAAXt5B,aAA8B,IAAXA,YAAoB,EAASA,OAAOwmC,eAAeH,IACpF9M,EAAoB,OAAXv5B,aAA8B,IAAXA,YAAoB,EAASA,OAAOwmC,eAAejN,OAC/EyN,EAA6G,QAA5Fpd,EAAgB,OAAX5pB,aAA8B,IAAXA,YAAoB,EAASA,OAAOwmC,eAAez6B,mBAAgC,IAAP6d,EAAgBA,EAAK,WAC1Igd,EAAwB,OAAX5mC,aAA8B,IAAXA,YAAoB,EAASA,OAAOwmC,eAAeI,YAGvF,IAAI5lB,EAA0G,QAA3F2lB,EAAsC,QAAhCza,EAAKgB,EAAc4Z,eAA4B,IAAP5a,OAAgB,EAASA,EAAGlL,mBAAgC,IAAP2lB,EAAgBA,EAAK,GAC3I3lB,EAAYrqB,KAAKutB,IACjB,IAAIpY,EAAW,CACXC,YAAai7B,EACb3qB,gBAAiB7b,EACjBma,SAAUA,EACVlX,SAAUmjC,EACV/9B,QAASuwB,EACTG,OAAQA,EACRD,YAAaA,EACb34B,IAAK8kC,EAAIp9B,SAAWA,IAKxB,OAHI6kB,EAAcphB,WACdA,EAAW7Y,OAAOa,OAAOgY,EAAUohB,EAAcphB,WAE9C,CACHA,SAAUA,EACVd,kBAAmBA,EACnBT,GAAIA,EACJqU,aAAcA,EACdC,YAAaA,EACbF,OAAQA,EACR/M,gBAAiBA,EACjB3G,kBAAmBA,EACnB+V,YAAaA,GA6EJkmB,GACbn7B,EAAcw6B,IAClB,GAAsB,oBAAXvmC,OAAwB,CAC/B,IAAImnC,EAAcnnC,OACdonC,EAAuBD,EAAYE,cACnCF,EAAYE,cAAcC,cAAgB,IAAMH,EAAYE,cAAct7B,YAAwG,QAAzFlR,EAAKssC,aAAiD,EAASA,EAAY5mC,gBAA6B,IAAP1F,OAAgB,EAASA,EAAGkR,YACtNq7B,IACAr7B,EAAcq7B,GAGtB,MAAO,CACHG,IAAkC,QAA5BrkC,EAAKgqB,EAAcqa,WAAwB,IAAPrkC,GAAgBA,EAC1D6I,YAAaA,EACbyV,KArDJ,WACI,IAAI3mB,EAAIqI,EAAI0Q,EACZ,MAAkC,iBAAvBsZ,EAAc1L,KACd,CACH9N,MAAOwZ,EAAc1L,MAGzB0L,EAAc1L,KACP0L,EAAc1L,KAErBtZ,EAAMQ,UAAYy9B,GAAuBA,EAAoBqB,QACtD,CACHxzB,aAAcmyB,EAAoBqB,UAGJ,QAAhC3sC,EAAKqyB,EAAc4Z,eAA4B,IAAPjsC,OAAgB,EAASA,EAAGgkB,eAAkD,QAAhC3b,EAAKgqB,EAAc4Z,eAA4B,IAAP5jC,OAAgB,EAASA,EAAGyb,UAA6C,QAAhC/K,EAAKsZ,EAAc4Z,eAA4B,IAAPlzB,OAAgB,EAASA,EAAGgL,cACtO,CACH9K,SAAU,SAAUC,SAAU,eAFtC,EAsCM0zB,GACN9gC,OAjCJ,WACI,IAAI9L,EAAIqI,EAMJwkC,EALAzlC,EAASirB,EAAcvmB,OACvBghC,EAAe,OAQnB,OAPK1lC,IACDA,EAAS0lC,GAGTpnC,IACAmnC,EAAiBnnC,EAASqnC,iBAER,iBAAX3lC,EACA,CAAEmD,QAASsiC,QAAuDA,EAAiBzlC,EAAQwiC,QAASkD,GAExG,CACHviC,QAA2G,QAAjGvK,EAAK6sC,QAAuDA,EAAiBzlC,EAAOmD,eAA4B,IAAPvK,EAAgBA,EAAK8sC,EACxIlD,QAAmC,QAAzBvhC,EAAKjB,EAAOwiC,eAA4B,IAAPvhC,EAAgBA,EAAKykC,GAiB5DE,GACR7lC,WAAYA,EACZvE,QAA0C,QAAhCmW,EAAKsZ,EAAczvB,eAA4B,IAAPmW,GAAgBA,EAClEk0B,cA1FsC,IAA3B5a,EAAc4a,UAGa,kBAA3B5a,EAAc4a,UAA0B5a,EAAc4a,SAFtD,CAAErgB,yBAAyB,GAKA,iBAA3ByF,EAAc4a,UACd70C,OAAOa,OAAO,GAAI,CAAE2zB,yBAAyB,GAAQyF,EAAc4a,UAoF9Ez/B,QAASo9B,EAAIp9B,SAAWA,GACxB0/B,KAA0B,QAAnBne,EAAK6b,EAAIsC,YAAyB,IAAPne,EAAgBA,EAAK,GACvDoe,aAAc9a,EAAc8a,aAEpC,CA66GyBC,CAFrBzC,EAAaA,GAAc,GAC3BC,EAAMA,GAAO,GACuCllC,GAQhDwnC,EAAO,GACX,SAASG,EAAY7vC,EAAM8vC,EAAOp0C,IAC9BiyC,EAAc3e,EAAQvI,WAAW,WAE7BuI,EAAQ7H,MAAM,eAAiBnnB,EAAO,WAE1C,IAAI/C,EAAO,WACP6yC,EAAMC,SAAWr0C,EAAE+V,OACnBq+B,EAAME,YAAct0C,EAAEwV,QACtB4+B,EAAM7+B,MAAQvV,EAAEuV,MACZ08B,GACA3e,EAAQ7H,MAAMnnB,EAAO,gBAAkBtE,EAAEwV,QAAUxV,EAAE0V,aAG7D0+B,EAAMG,cAAgBv0C,EAAE0V,UACpB0+B,EAAM9mB,MACN8mB,EAAM9mB,QAAQ9rB,MAAK,WACfD,OAIJA,IAEClC,MAAMgG,QAAQf,KACfA,EAAO,CAACA,IAEZA,EAAK0B,SAAQ,SAAU7F,GACnB6zC,EAAK7zC,GAAKi0C,EACV5C,GAASrxC,GAAKi0C,KAmFtB,SAASI,IACL,IAAIC,EAAYp/B,EAAM,WAClBq/B,EAAY,CACZzmC,WAAYolB,EACZzgB,OAAQ0gB,EAAQ3S,UAAU,YAK9B,OAHAmxB,EAAW,IAAInjB,GAAQ+lB,GACvB/mB,GAAOgB,QAAUmjB,EACjBqC,EAAY,CAAC,UAAW,OAAQrC,EAAU2C,GACnC5zC,QAAQC,UAEnB,SAAS6zC,IACL,IAAIC,EAAiBzC,EAAe0C,YAA8C,IAAhCxhB,EAAYxV,gBAE9D,GADoBs0B,EAAe4B,UAAYa,EAC5B,CACf,IAAIH,EAAYp/B,EAAM,YAQtB,OADA8+B,EAAY,WANZpC,EAAY,IAAI1Z,GAAe,CAC3BpqB,WAAYolB,EACZzgB,OAAQ0gB,EAAQ3S,UAAU,YAC1B6S,iBAAqD,iBAA5B2e,EAAe4B,UAAwB5B,EAAe4B,SAASvgB,iBACxFE,wBAA4D,iBAA5Bye,EAAe4B,UAAwB5B,EAAe4B,SAASrgB,0BAEhE+gB,GAC5B1C,EAGP,IAAI7kB,EAAWmG,EAAYnG,SACvBA,GACAA,EAASjK,MAAMkN,GAAyB7rB,MAIpD,SAASwwC,IACL,OAAOt0C,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAI+0C,EACJ,OAAOhzC,EAAY/B,MAAM,SAAUoH,GAC/B,OAAKqrC,EAAeqB,KAGpBiB,EAAYp/B,EAAM,OAElB8+B,EAAY,MADZnC,EAAO,IAAIvB,GAAWpd,EAAaC,EAAQ3S,UAAU,QAC5B8zB,GAClB,CAAC,EAAG5zC,QAAQC,YALR,CAAC,EAAGD,QAAQC,iBASnC,SAASi0C,EAAkBC,GACvB,IAII,OAHAA,EAAahvC,SAAQ,SAAUyM,IASvC,SAA0BnO,EAAM2wC,GAC5B,IAAIR,EAAYp/B,EAAM/Q,GAClBmO,EAAMwiC,EAAejB,GACrBvhC,GACA0hC,EAAY7vC,EAAMmO,EAAKgiC,GAZnBS,CAAiBziC,EAAInO,KAAMmO,EAAI5S,WAE5BgB,QAAQC,UAEnB,MAAOM,GACH,OAAOP,QAAQE,OAAOK,IAwI9B,OAAOwwC,EACFpwC,MAhOL,WACI,IAAIsF,EACA2tC,EAAYp/B,EAAM,UAQtB,OAPAie,EAAU,IAAI3F,GAAO,IAAoD,QAA7C7mB,EAAKqrC,EAAelkC,WAAW8J,gBAA6B,IAAPjR,OAAgB,EAASA,EAAGkR,kBAAchN,EAAWmnC,EAAe8B,eAC7I5lB,aAAa8jB,EAAev/B,OAAOvB,SAC3CiiB,EAAQpF,aAAaikB,EAAev/B,OAAO89B,SACvCpd,EAAQvI,WAAW,UACnBuI,EAAQlc,MAAM,wBAElB+8B,EAAY,SAAU7gB,EAASmhB,GACxB5zC,QAAQC,aAAQkK,MAuNtBxJ,MAhRL,WACI,IAAIizC,EAAYp/B,EAAM,cACtBge,EAAc,IAAIlJ,GAAWgoB,EAAelkC,WAAYqlB,EAAQ3S,UAAU,eAC1E,IAAIw0B,EAAct0C,QAAQC,QAAQqxC,EAAe1kB,MAqBjD,OApBI0kB,EAAelkC,aAAekkC,EAAe1kB,OACzCjhB,EACA2oC,EAAc3oC,EAASuV,aAClBvgB,MAAK,SAAUme,GAChB,MAAO,CACHM,aAAcN,MAIC,oBAAX1T,SAAsC,OAAXA,aAA8B,IAAXA,YAAoB,EAASA,OAAOwmC,gBACjD,iBAAlCxmC,OAAOwmC,eAAegB,UAC7B0B,EAAct0C,QAAQC,QAAQ,CAC1Bmf,aAAchU,OAAOwmC,eAAegB,WAK5C0B,EAAct0C,QAAQE,OAAO,yCAG9Bo0C,EACF3zC,MAAK,SAAU4zC,GAEhB,IAAI9oB,EACJ,GAFAmoB,EAAU9+B,KAAK,yBAEoC,oBAA/CzW,OAAOU,UAAUmF,SAASzE,KAAK80C,GAI/B,MAAM,IAAI3uC,MAAM,yBAA2B+G,KAAKC,UAAU2nC,IAE9D,OALI9oB,EAAc8oB,EAKX/hB,EAAYhU,MAAMiN,MAExB9qB,MAAK,WAEN,OADA2yC,EAAY,aAAc9gB,EAAaohB,GAChCtC,KAEN5oC,OAAM,SAAUnI,GAIjB,MAHIiyB,GACAA,EAAYhS,SAEVjgB,QAqOTI,MAAK,WAAc,OAAOX,QAAQ4gB,IAAI,EApNnCgzB,EAAYp/B,EAAM,WAClBnH,EAASikC,EAAezoC,QACxB2rC,EAA+B7oC,aAA2C,EAASA,EAAS8oC,4BAC5Fv9B,EAAWo6B,EAAelkC,WAAW8J,SACrC7I,EAAkBmmC,GAA8D,WAAc,OAAO,GACrGplC,EAA+F,QAAvEnJ,EAAwB,kBAAXoH,GAAwBA,EAAO+B,4BAA0C,IAAPnJ,GAAgBA,EAW3HqtC,EAAY,UAVZrrC,EAAWY,EAAQ,CACfuE,WAAYC,EAASmlB,OAAcroB,EACnC4H,OAAQ0gB,EAAQ3S,UAAU,WAC1BzR,gBAAiBA,EACjB3J,OAAQ,SACRkK,QAA8M,QAApMoQ,EAAqF,QAA/E1Q,EAAK4I,aAA2C,EAASA,EAAStI,eAA4B,IAAPN,EAAgBA,EAAK3C,aAA2C,EAASA,EAAS8b,uBAAoC,IAAPzI,EAAgBA,EAAKsyB,EAAen6B,YAC1PtI,SAAyM,QAA9LyoB,EAAsF,QAAhFtC,EAAK9d,aAA2C,EAASA,EAASrI,gBAA6B,IAAPmmB,EAAgBA,EAAK9d,aAA2C,EAASA,EAAS6O,gBAA6B,IAAPuR,EAAgBA,EAAKvc,KACtO3L,qBAAsBA,EACtBS,uBAA0C,kBAAXxC,EAAuBA,aAAuC,EAASA,EAAOwC,4BAAyB1F,IAEzGypC,GAC1B5zC,QAAQC,WAmMyC0zC,IAAgBG,IAAiBG,MAtN7F,IACQhuC,EAAIqI,EAAI0Q,EAAIgW,EAAIsC,EAChBsc,EACAvmC,EACAmnC,EACAt9B,EACA7I,EACAe,KAgNHzO,MAAK,WAAc,OAAOswC,EAAS/B,gBACnCvuC,MAAK,WAAc,OAhCxB,WACI,OAAOhB,EAAUd,UAAM,OAAQ,GAAQ,WACnC,IAAI61C,EAA+CvrB,EAASwrB,EAC5D,OAAO/zC,EAAY/B,MAAM,SAAUoH,GAC/B,OAAQA,EAAG/E,OACP,KAAK,EAED,GADAwzC,EAA6B,4BACvBphC,EAAMQ,eAAyD,IAAtCG,QAAQw9B,IAAIC,4BAAqI,KAApFd,aAA+C,EAASA,EAAWz5B,aAA+B,MAAO,CAAC,EAAG,GAEzM,KADoB85B,EAASljB,QAAQ,CAAEtqB,KAAMixC,IAA8Bl1C,OAAS,GAC5D,MAAO,CAAC,EAAG,GACnCyG,EAAG/E,MAAQ,EACf,KAAK,EAED,OADA+E,EAAG7E,KAAKW,KAAK,CAAC,EAAG,GAAK,IACf,CAAC,EAAGkvC,EAAShjB,OAAOymB,EAA4B,CAAE9oC,QAASglC,aAA+C,EAASA,EAAWz5B,YAAaqtB,IAAKvwB,QAAQuwB,OACnK,KAAK,EAED,OADAv+B,EAAG9E,OACI,CAAC,EAAG,GACf,KAAK,EAID,OAHAgoB,EAAUljB,EAAG9E,OACbwzC,EAAaxrB,EACbsJ,EAAQhiB,MAAM,mCAAqC9D,KAAKC,UAAU+nC,EAAWtiC,UACtE,CAAC,EAAG,GACf,KAAK,EAAG,MAAO,CAAC,UAUDuiC,MAC1Bj0C,MAAK,WACN,OAAOuzC,EAAkB5C,EAAe6B,MAAQ,OAE/CxyC,MAvIL,WACI,IAAIk0C,EAAoBx2C,OAAO2E,KAAKmwC,GAAMjmC,KAAI,SAAU/J,GACpD,IAAIyO,EAAMuhC,EAAKhwC,GACf,OAAOyO,EAAI6a,MACP7a,EAAI6a,QAAUzsB,QAAQC,aAE9B,OAAOD,QAAQ4gB,IAAIi0B,MAkIlBl0C,MAhIL,WACI,IAMIkV,EAAO,CACPi/B,YAAarhC,GACbA,QAAS69B,EAAe79B,SAE5B49B,EAAcn8B,OACd,IAAI6/B,EAAO,CACPC,SAZe,SAAUC,GACpBhE,GAGLA,EAAShjB,OAAO,mBAAoBgnB,EAAc,SASlDp/B,KAAMA,EACN9D,OAAQ0gB,EACR5E,QAASojB,EACTiE,IAAKjE,EACL7jC,WAAYolB,EACZ3pB,QAASZ,EACTirC,SAAUhC,EACVyB,IAAKxB,EACL19B,QAAS69B,EAAe79B,QACxBm9B,WAAYA,EACZlwC,KAAM,WAEF,OADA+xB,SAAkDA,EAAQ5c,KAAK,0BACxD2c,EAAYhS,WAiD3B,GA9CAu0B,EAAKroC,YAAc,CACXyoC,cACA,OAAO7D,EAAe79B,SAEtB2hC,iBACA,OAAOzoC,KAAKC,UAAUgkC,IAEtByE,cACA,OAAOjqC,OAAOsB,YAAY4oC,OAAOnoC,UAEjCV,aACA,OAAOrB,OAAOsB,YAAYD,QAE1B8oC,gBACA,IAAI30B,EApoMTrM,EAqoMK,OAAOlW,OAAO2E,KAAK4d,GAAK1T,KAAI,SAAU/J,GAClC,IAAIhE,EAAIyhB,EAAIzd,GACZ,MAAO,CACHM,KAAMN,EACNqyC,SAAUr2C,EAAEwV,QAAUxV,EAAE0V,UACxBH,MAAOvV,EAAEuV,MACTG,UAAW1V,EAAE0V,UACbF,QAASxV,EAAEwV,cAK3BtW,OAAO2E,KAAKmwC,GAAMhuC,SAAQ,SAAUhC,GAChC,IAAIyO,EAAMuhC,EAAKhwC,GACf4xC,EAAK5xC,GAAOyO,KAEhBmjC,EAAK1nC,OAAS,GACdhP,OAAO2E,KAAKsuC,GAAgBnsC,SAAQ,SAAUhD,GAC1C4yC,EAAK1nC,OAAOlL,GAAKmvC,EAAenvC,MAEhC0uC,GAAOA,EAAI4E,YACXp3C,OAAO2E,KAAK6tC,EAAI4E,YAAYtwC,SAAQ,SAAUhD,GAC1C4yC,EAAK1nC,OAAOlL,GAAK0uC,aAAiC,EAASA,EAAI4E,WAAWtzC,OAG9E0uC,aAAiC,EAASA,EAAI6E,aAC9C7E,EAAI6E,WAAWX,GAEfppC,GAAYA,EAASgqC,gBACrBhqC,EAASgqC,eAAeZ,EAAKroC,aAE7BqoC,EAAKG,IAAK,CACV,IAAIU,EAAsB,SAAU17B,EAAI27B,EAAOC,GAC3C,OAAO,WAEH,OADAf,EAAKhjC,OAAO4K,KAAK,uBAAyBk5B,EAAQ,6CAA+CC,EAAS,cACnG57B,EAAGxa,MAAMq1C,EAAKG,IAAK31C,aAG9Bw2C,EAAShB,EAAKG,IAClBa,EAAOC,aAAeJ,EAAoBb,EAAKG,IAAInb,YAAa,eAAgB,eAChFgc,EAAOE,eAAiBL,EAAoBb,EAAKG,IAAIjb,cAAe,iBAAkB,iBACtF8b,EAAOG,aAAeN,EAAoBb,EAAKG,IAAI/a,YAAa,eAAgB,eAChF4b,EAAOI,mBAAqBP,EAAoBb,EAAKG,IAAI3a,kBAAmB,qBAAsB,qBAClGwb,EAAOK,sBAAwBR,EAAoBb,EAAKG,IAAIza,oBAAqB,wBAAyB,uBAE9G,OAAOsa,KAwCNrsC,OAAM,SAAUsI,GACjB,OAAOhR,QAAQE,OAAO,CAClB8Q,IAAKA,EACLmiC,KAAMA,MAGlB,EACsB,oBAAX/nC,SACPA,OAAOulC,SAAWA,IAEtBA,GAASl9B,QAAUA,GACnBk9B,GAASh/B,QAAUg/B,SCp4OE0F,GAKnBv3C,YAAYiJ,GACVlJ,KAAKy3C,IAAMvuC,EAGFA,SACT,OAAOlJ,KAAKy3C,IAOPC,QAAQC,GACb,GAAIA,EAAMF,MAAQz3C,KAAKy3C,IACrB,MAAM1wC,MAAM,iDAEd/G,KAAK43C,YAAYD,GAGZC,YAAYD,IAIZE,cAAcF,cChCPG,GAASC,GACvB,MAAsB,iBAARA,CAChB,UAEgBC,GAASD,GACvB,MAAsB,iBAARA,CAChB,UAEgBE,GAASF,GACvB,MAAsB,iBAARA,GAA4B,OAARA,CACpC,UAEgBpyC,GAAQoyC,GAEtB,OAAIp4C,MAAMgG,QACDhG,MAAMgG,QAAQoyC,GAEO,mBAAvB1yC,SAASzE,KAAKm3C,EACvB,UACgBG,GAAYH,GAC1B,YAAsB,IAARA,CAChB,UAEgBI,GAAkBJ,GAChC,OAAOA,OACT,UAEgBK,GAAmBt9B,GACjC,MAAuB,iBAARA,IAAqBA,GAAsB,IAAfA,EAAIna,QAAgB,QAAQ03C,KAAKv9B,EAC9E,UAEgBw9B,GAAUzmB,GACxB,OAAe,IAARA,IAAwB,IAARA,GAAwC,qBAAvBxsB,SAASzE,KAAKixB,EACxD,UAegB0mB,GAAWR,GACzB,SAAUA,GAAOA,EAAI93C,aAAe83C,EAAIn3C,MAAQm3C,EAAIl3C,MACtD,UAoBgB23C,GAAkBlmB,EAASmmB,QACrB,IAATnmB,GACTmmB,EAASnmB,EAEb,OC5DqBomB,WAAqBlB,GAOxCv3C,YAAY2E,EAAc+zC,EAAyBC,EAA8Bl0C,GAC/Em0C,MAAMj0C,GACN5E,KAAK0I,MAAQ9D,EACb5E,KAAK2I,aAAejE,EACpB1E,KAAK84C,aAAeH,EACpB34C,KAAK+4C,eAAiBH,GAAiB,GAM9Bh0C,WACT,OAAO5E,KAAK0I,MAMHhE,kBACT,OAAO1E,KAAK2I,aAOHiwC,oBACT,OAAO54C,KAAK+4C,eAAe1qC,KAAK2qC,GAAOh5C,KAAKi5C,kBAAkBD,KAMrDL,kBACT,OAAO34C,KAAKi5C,kBAAkBj5C,KAAK84C,cAY9BI,SAASv0C,EAAiBmN,EAAyC2nB,GACxE,OAAOz5B,KAAKm5C,SAASD,SAASl5C,KAAK0I,MAAO/D,EAASmN,EAAU2nB,GAGxDme,YAAYD,GACjBkB,MAAMjB,YAAYD,GAClBa,GAAeb,EAAMhvC,cAAe+pB,GAAM1yB,KAAK2I,aAAe+pB,IAC9D8lB,GAAeb,EAAMmB,cAAepmB,GAAM1yB,KAAK84C,aAAepmB,IAC9D8lB,GAAeb,EAAMoB,gBAAiBrmB,GAAM1yB,KAAK+4C,eAAiBrmB,IAG5DumB,kBAAkBG,WAExB,MAAO,CACLv1C,eAAMu1C,eAAAA,EAAYlwC,yBAAIrF,KACtBe,eAAMw0C,eAAAA,EAAYlwC,yBAAItE,aCzEPy0C,WAAmB7B,GAKtCv3C,YAAY2E,EAAc00C,GACxBT,MAAMj0C,GACN5E,KAAK0I,MAAQ9D,EACb5E,KAAKu5C,uBAAyBD,EAOrB10C,WACT,OAAO5E,KAAK0I,MAOH8F,aACT,OAAOxO,KAAKu5C,uBAAuBv5C,KAAK0I,OAM/B8wC,cACT,OAAOx5C,KAAKm5C,SAASM,WAAW,CAAE51C,KAAM7D,KAAK0I,QAGxCvI,OAAOu5C,EAAoBjgB,GAChC,MAAM7yB,EAAgCpH,OAAea,OAAO,CAAEwD,KAAM7D,KAAK4E,KAAMA,KAAM5E,KAAK4E,KAAM+0C,eAAe,GAASlgB,GACxH,OAAOz5B,KAAKm5C,SAASS,aAAaF,EAAU9yC,UC7CnCizC,GAIT55C,YAAY65C,EAAYn1C,GACpB3E,KAAK+5C,OAASD,EACd95C,KAAK2E,QAAUA,SAIVq1C,GAGT/5C,YAAYg6C,GACRj6C,KAAK6D,KAAOo2C,SAIPC,WAAyCF,GAIlD/5C,YAAYk6C,EAA2BC,GACnCvB,MAAMwB,GAAgBC,cACtBt6C,KAAKm6C,UAAYA,EACjBn6C,KAAKo6C,UAAYA,SAIZG,WAA2CP,GAKpD/5C,YAAY0E,EAA0B+sB,EAAiBC,GACnDknB,MAAMwB,GAAgBG,uBACtBx6C,KAAK2E,QAA6B,iBAAZA,EAAuBmJ,KAAKkR,MAAMra,GAAWA,EACnE3E,KAAK0xB,QAAUA,EACf1xB,KAAK2xB,QAAUA,SAIV0oB,IACKA,SAAgB,QAChBA,WAAkB,UAClBA,WAAkB,UAClBA,UAAiB,SACjBA,gBAAuB,eACvBA,yBAAgC,wBAChCA,uBAA8B,sBAE9BA,gCAAuC,SACvCA,8BAAqC,aAG1CI,IACKA,WAAkB,UAClBA,WAAkB,UAClBA,aAAoB,kBCnDzBC,GAKTz6C,YAAYy5C,GACR15C,KAAK26C,UAAYjB,EAGdpW,SAAS18B,EAAsDwmB,GAClEptB,KAAK46C,gBACLF,GAAYG,IAAIvX,SAAS18B,EAAYwmB,GAGlCqN,UAGH,OAFAz6B,KAAK46C,gBAEDE,GAAuB96C,KAAK26C,WAErB,GAGJ36C,KAAK26C,UAAUnB,QAAQnrC,KACzB0sC,GACUA,EAAE/qC,WAIdkf,UAGH,GAFAlvB,KAAK46C,gBAEDE,GAAuB96C,KAAK26C,WAE5B,MAAO,GAGX,MAAMnB,EAAUx5C,KAAK26C,UAAUnB,QACzBwB,EAAwB,GACxB9rB,EAA6C,GAanD,OAVAsqB,EAAQlzC,SAASiG,IACSvM,KAAKi7C,iBAAiB1uC,GAC9BjG,SAAS40C,KACoC,IAAnDF,EAAY//B,QAAQigC,EAAoBt2C,QACxCo2C,EAAY93C,KAAKg4C,EAAoBt2C,MACrCsqB,EAAQhsB,KAAKg4C,MAEnB,IAGChsB,EAGJ+rB,iBAAiB1uC,GAGpB,OAFAvM,KAAK46C,gBAEAruC,EAAOyD,SAIL0qC,GAAYG,IAAI7f,mBAAmBzuB,EAAOyD,UAHtC,GAoBRof,OACHuV,EACAoT,EACAjsC,EACAZ,EACAqS,EACA3L,GAEA5R,KAAK46C,gBACL,MAAMO,EAAkBn7C,KAAKy6B,UAO7B,GAJIqgB,GAAuBhvC,KACvBA,EAAS,gBAGTsvC,GAActvC,GACd,GAAe,iBAAXA,OAEG,IAAe,kBAAXA,EAUJ,IAAe,QAAXA,GAA+B,SAAXA,EAC3B,gBJvCUyJ,EAAuB4jB,EAA6BC,GAE5E,GAA+B,mBAApBD,GAA2D,mBAAlBC,EAClD,OAAO7jB,EAGsB,mBAApB4jB,EACTA,EAAkB,OACgB,mBAAlBC,IAChBA,EAAgB,QAGlB7jB,EAAQzT,KAAKq3B,EAAiBC,EAChC,CI0BuBF,CAAUwhB,GAAYG,IAAIzrB,OAAOuV,EAAYoT,EAAKjsC,EAAQZ,GAAUqS,EAAS3L,GAEpF,MAAM,IAAI7K,MAAM,yBAA2B+E,GAbR,CACnC,MAAMuvC,EAAmBF,EAAgBzxC,QAAQoxB,GAC7B4f,GAAYG,IAAI7f,mBAAmBF,GACpCpxB,QAAQnD,GACZA,EAAE3B,OAAS+/B,IACnBhkC,OAAS,IAEZ06C,EAAiB16C,OAAS,GACA06C,EAAiB,SAOhD,GAAIC,GAAaxvC,IAEpB,GAAKA,EAAenL,QAAU,EAAG,CAC7B,MAAM46C,EAAazvC,EAAe,GAElC,GAAI9L,KAAKw7C,YAAYD,GACSzvC,EAAqCuC,KAAK2B,GAAsCA,QACvG,KAAIhQ,KAAKy7C,kBAAkBF,GAG9B,MAAM,IAAIx0C,MAAM,yBAFU+E,EAA4BuC,KAAKqtC,GAAwBA,EAAI1rC,kBAM/F,GAAIhQ,KAAKw7C,YAAY1vC,QAEd,KAAI9L,KAAKy7C,kBAAkB3vC,GAG9B,MAAM,IAAI/E,MAAM,yBAFW+E,EAA0BkE,SAM7D,MAAM,IAAIjJ,MAAM,mBAIbm7B,WAAWt7B,GAEd,OADA5G,KAAK46C,gBACEF,GAAYG,IAAI3Y,WAAWt7B,GAG/B+7B,aAAa1G,EACA+E,EACAC,GAChBjhC,KAAK46C,gBAELF,GAAYG,IAAIlY,aAAa1G,EAAkB,CAC3C+E,2BACAC,6BACAF,gCAA4Bz1B,IAI7B4qB,UAAU+F,EAA4D0f,EAAoB7vC,GAK7F,OAJA9L,KAAK46C,gBAIEF,GAAYG,IAAI3kB,UAAU+F,EAAkB0f,GAGhDf,gBACH,GAAIE,GAAuBJ,GAAYG,KACnC,MAAM,IAAI9zC,MAAM,mDAIjBy0C,YAAY3pB,GAEf,YAA2BvmB,IAApBumB,EAAIvZ,YAGRmjC,kBAAkB5pB,GACrB,YAAwBvmB,IAAjBumB,EAAI7hB,gBCrLN4rC,GAKX37C,YACE47C,EACAC,EACA31C,GACAnG,KAAKm5C,SAAW0C,EAChB77C,KAAK+7C,iBAAmBD,EACxB97C,KAAKiJ,OAAS9C,EAGL61C,cACT,OAAOh8C,KAAKiJ,OAAO+yC,QAGVC,gBACT,OAAOj8C,KAAKiJ,OAAOgzC,UAGVC,iBACT,OAAOl8C,KAAKiJ,OAAOizC,WAGVv3C,cACT,OAAO3E,KAAKiJ,OAAOtE,QAGV8Y,UACT,OAAOzd,KAAKiJ,OAAOwU,IAGd0+B,OAAOC,GAEZA,EAAaA,GAAc,GAE3B,MAAMt2C,EAA6B,GASnC,OAPAtG,OAAO2E,KAAKnE,KAAKiJ,QAAQ3C,SAASu4B,IAChC/4B,EAAO+4B,GAAQ7+B,KAAKiJ,OAAO41B,EAAK,IAGlC/4B,EAAOnB,QAAUy3C,EAAWz3C,SAAWmB,EAAOnB,QAC9CmB,EAAOo2C,WAAaE,EAAWF,YAAcp2C,EAAOo2C,WAE7Cl8C,KAAKm5C,SAASkD,iBAAiBr8C,KAAK+7C,iBAAkBj2C,ICjDjE,MAAMw2C,GAAYC,IAChBhvC,WAAWgvC,EAAI,EAAE,WAOHC,GAAWjnC,EAAqBzD,GAC9C,IAAK2qC,GAAgB3qC,GACnB,OAAOyD,EAGTA,EAAQzT,MACL46C,IACCJ,IAAU,KACRxqC,EAAS,KAAM4qC,EAAK,GACpB,IAEHvqC,IACCmqC,IAAS,KACPxqC,EAASK,EAAK,KAAK,GACnB,GAER,OCJqBwqC,WAAiBnF,GAUpCv3C,YACEiJ,EACA0zC,EACApkC,EACA7T,EACAq3C,GACAnD,MAAM3vC,GACNlJ,KAAKy3C,IAAMvuC,EACXlJ,KAAK68C,SAAWD,EAChB58C,KAAK88C,QAAUtkC,EACfxY,KAAK+8C,SAAWp4C,EAChB3E,KAAKg9C,SAAWhB,EAChBh8C,KAAKi9C,KAAO,IAAIvC,GAAY16C,MAOnB6D,WACT,GAAI7D,KAAKm5C,SACP,OAAOn5C,KAAKm5C,SAAS+D,gBAAgBl9C,KAAK68C,UASnCl4C,cACT,OAAO3E,KAAK+8C,SAOHvkC,aACT,OAAOxY,KAAK88C,QAOHK,YACT,OAAKn9C,KAAKg9C,SAGHh9C,KAAKm5C,SAASM,WAAW,CAAEvwC,GAAIlJ,KAAKg9C,WAAY,GAF9C,KASAxD,cACT,OAAOx5C,KAAKm5C,SAASM,WAAW,CAAE5oB,WAAY7wB,KAAKy3C,MAM1CpB,UACT,OAAOr2C,KAAKi9C,KAYPG,UAAU7wC,EAAwBuF,GACvC,OAAO9R,KAAKm5C,SAASkE,oBAAoBr9C,KAAMuM,EAAQuF,GAWlD8nC,aAAaR,EAAuCtnC,GACzD,OAAO9R,KAAKm5C,SAASS,aAAa55C,KAAMo5C,EAAYtnC,GAY/CwrC,qBAAqBC,EAA+C15B,EAAkB/R,GAC3F,OAAO9R,KAAKm5C,SAASmE,qBAAqBt9C,KAAMu9C,EAAa15B,EAAS/R,GAWjEiM,MAAMxR,EAAwBuF,GACnC,OAAO9R,KAAKm5C,SAASqE,wBAAwBx9C,KAAMuM,EAAQuF,GAStD2rC,iBAAiBrE,GACtB,MAAM1vC,EAAS,CAAEmnB,WAAY7wB,KAAKy3C,IAAK5zC,KAAMu1C,GAC7C,OAAOp5C,KAAKm5C,SAASM,WAAW/vC,GAW3Bg0C,WAAW/4C,EAAiBmN,GACjC,OAAO9R,KAAKm5C,SAASwE,mBAAmB39C,KAAM2E,EAASmN,GAalD8rC,cAAcj5C,EAAiBmN,GACpC,OAAO9R,KAAKm5C,SAAS0E,sBAAsB79C,KAAM2E,EAASmN,GAUrDgsC,eAAe1wB,GACpB,OAAOptB,KAAKm5C,SAAS4E,yBAAwB,CAACx6C,EAAGy6C,EAAIC,KAC/C16C,EAAE2F,KAAOlJ,KAAKkJ,IAChBkkB,EAAQ7pB,EAAGy6C,EAAIC,MAWdC,cAAc9wB,GACnB,OAAOptB,KAAKm5C,SAASgF,uBAAsB,CAAC56C,EAAGw3C,EAAGr5C,KAC5C6B,EAAE2F,KAAOlJ,KAAKkJ,IAChBkkB,EAAQ7pB,EAAGw3C,EAAGr5C,MAWb08C,iBAAiBhxB,GACtBptB,KAAKm5C,SAASkF,iCAAgC,CAACC,EAAK35C,EAAS+sB,EAASC,KAChE2sB,EAAIp1C,KAAOlJ,KAAKkJ,IAClBkkB,EAAQzoB,EAAS+sB,EAASC,EAAS2sB,MAIvC,IAEElxB,EAAQptB,KAAK2E,QAAS3E,KAAK2E,QAAS,GAAI3E,MACxC,MAAO0B,GACP,QAQG2U,OACLrW,KAAKm5C,SAASoF,aAAav+C,MAQtB42B,MAAM1rB,GACX,OAAOlL,KAAKm5C,SAASviB,MAAM52B,KAAMkL,GAG5BszC,OAAO9E,EAA6Bj8B,GACzC,IAAIoT,EAMJ,OAJEA,EADsB,iBAAb6oB,EACIA,EAEAA,EAASxwC,GAEjBlJ,KAAKm5C,SAASsF,iBAAiB5tB,EAAY7wB,KAAKkJ,GAAIuU,GAGtDihC,mBAAmB5sC,GACxB9R,KAAKm5C,SAASwF,6BAA4B,CAACC,EAAkBC,EAAkBzC,KACzEwC,IAAa5+C,KAAKy3C,KAItB3lC,EAASsqC,EAAW,IAIjB0C,WAAWhtC,GAChB9R,KAAKm5C,SAAS4F,6BAA4B,CAACC,EAAkBC,EAA4B94C,KACnF84C,EAAiB/1C,KAAOlJ,KAAKy3C,KAIjC3lC,EAASktC,EAAQ74C,EAAM,IAIpByxC,YAAYD,GACjBkB,MAAMjB,YAAYD,GAClBa,GAAeb,EAAMkF,UAAWnqB,GAAM1yB,KAAK68C,SAAWnqB,IACtD8lB,GAAeb,EAAMoF,UAAWrqB,GAAM1yB,KAAK+8C,SAAWrqB,IACtD8lB,GAAeb,EAAMqF,UAAWtqB,GAAM1yB,KAAKg9C,SAAWtqB,KAClDilB,EAAMmF,SAAa98C,KAAK88C,SAAY98C,KAAK88C,QAAQ32C,QAAUwxC,EAAMmF,QAAQ32C,QAC3EnG,KAAK88C,QAAUnF,EAAMmF,SAIlBoC,mBAAmBC,GACxBn/C,KAAKo/C,UAAYD,EAAU9wC,KAAK9N,GACvB,IAAIq7C,GAA2B57C,KAAKm5C,SAAUn5C,KAAKy3C,IAAKl3C,KAIxD8+C,eACT,OAAOr/C,KAAKo/C,UAGPE,cAAcC,EAAeztC,GA2BlC,OAAO0qC,GA1BS,IAAIr7C,SAAkB,CAACC,EAASC,KAE9C,IAAIm+C,EAAkBx/C,KAAKw5C,QAAQ74C,OACX,IAApB6+C,GACFp+C,EAAQpB,MAGVA,KAAKw5C,QAAQlzC,SAASy0C,IACpBA,EAAE0E,iBAAiBH,cAAcC,GAAO,KACtCC,IACIA,GAAmB,GACrBp+C,EAAQpB,QAEV,IAGJuN,YAAW,KAELiyC,EAAkB,GACpBn+C,EAAOrB,KAAKkJ,GAAK,8CAAgDq2C,KAGlE,IAAK,IAIcztC,GAGnB4tC,gBAEL,OAAK1/C,KAAKw5C,SAAmC,IAAxBx5C,KAAKw5C,QAAQ74C,OAI3BX,KAAKw5C,QAAQ,GAAGiG,iBAAiBvD,WAH/B,UC5UAyD,IACGA,SAAgB,QAChBA,SAAgB,QAChBA,QAAe,OACfA,QAAe,OACfA,SAAgB,cAGnB1xB,GAiBXhuB,YAAY2E,GACV5E,KAAK0I,MAAQ9D,EAERk2C,GAAuB7sB,GAAO2xB,cACjC5/C,KAAK6/C,YAAc5xB,GAAO2xB,WAAW3+B,UAAUrc,IAd5Ck7C,gBAAgBl7C,GACrB,OAAO,IAAIqpB,GAAOrpB,GAGbk7C,WAAW3C,GAChB,OAAO,IAAIlvB,GAAOA,GAAO8xB,YAAY5C,IAahCpxB,MAAMvY,GACNsnC,GAAuB96C,KAAK6/C,aAG3B5xB,GAAO+xB,QAAUL,GAASM,OAC5BtuC,QAAQqF,KAAKhX,KAAKkgD,YAAY1sC,EAASmsC,GAASM,QAHlDjgD,KAAK6/C,YAAY9zB,MAAMvY,GAQpBkE,MAAMlE,GACNsnC,GAAuB96C,KAAK6/C,aAG3B5xB,GAAO+xB,QAAUL,GAASQ,OAC5BlyB,GAAO+xB,QAAUL,GAASM,OAC1BtuC,QAAQqF,KAAKhX,KAAKkgD,YAAY1sC,EAASmsC,GAASQ,QAJlDngD,KAAK6/C,YAAYnoC,MAAMlE,GASpBwD,KAAKxD,GACLsnC,GAAuB96C,KAAK6/C,aAG3B5xB,GAAO+xB,QAAUL,GAASQ,OAC5BlyB,GAAO+xB,QAAUL,GAASM,OAC1BhyB,GAAO+xB,QAAUL,GAASS,MAC1BzuC,QAAQqF,KAAKhX,KAAKkgD,YAAY1sC,EAASmsC,GAASS,OALlDpgD,KAAK6/C,YAAY7oC,KAAKxD,GAUnBsK,KAAKtK,GACLsnC,GAAuB96C,KAAK6/C,aAG3B5xB,GAAO+xB,QAAUL,GAASQ,OAC5BlyB,GAAO+xB,QAAUL,GAASM,OAC1BhyB,GAAO+xB,QAAUL,GAASS,MAC1BnyB,GAAO+xB,QAAUL,GAASU,MAC1B1uC,QAAQqF,KAAKhX,KAAKkgD,YAAY1sC,EAASmsC,GAASS,OANlDpgD,KAAK6/C,YAAY/hC,KAAKtK,GAWnB5B,MAAM4B,GACNsnC,GAAuB96C,KAAK6/C,cAG/BluC,QAAQC,MAAM5R,KAAKkgD,YAAY1sC,EAASmsC,GAAS54C,QACjD4K,QAAQoa,SAHR/rB,KAAK6/C,YAAYjuC,MAAM4B,GAOpB0sC,YAAY1sC,EAAiBib,GAClC,MAAO,IAAMA,EAAQ,KAAOzuB,KAAK0I,MAAQ,MAAQ8K,EAM5CssC,mBAAmBQ,GACxB,MACM3tC,EADgB,qBACU4tC,KAAKD,EAAOrgD,YAAYoF,YACxD,OAAQsN,GAAWA,EAAQhS,OAAS,EAAKgS,EAAQ,GAAK,IAxF1Csb,SAAgB0xB,GAASS,WCIpBI,WAAuBhJ,GAYxCv3C,YAAYiJ,EAAYtE,EAAcf,EAAcgtB,EAAoB7gB,EAAmC2pC,EAAwB8G,EACvHC,GACR7H,MAAM3vC,GAZFlJ,aAAkBiuB,GAAO0yB,IAAI,UAajC3gD,KAAK4gD,MAAQ/8C,EACb7D,KAAK6gD,YAAchwB,EACnB7wB,KAAK0I,MAAQ9D,EACb5E,KAAK8gD,UAAY9wC,EACjBhQ,KAAK+gD,eAAiBpH,EACtB35C,KAAKghD,cAAgBP,EACrBzgD,KAAKihD,YAAcP,EAQhBQ,YACH,OAAOlhD,KAAKm5C,SAASgI,gBAAgBnhD,KAAKkJ,IAMnCtE,WACP,OAAO5E,KAAK0I,MAMLixC,oBACP,OAAO35C,KAAK+gD,eAMLl9C,WACP,GAAI7D,KAAKm5C,SACL,OAAOn5C,KAAKm5C,SAASiI,cAAcphD,KAAK4gD,OAQrClH,eACP,IAAI2H,GAAiBrhD,KAAK6gD,aAG1B,OAAO7gD,KAAKm5C,SAASmI,gBAAgBthD,KAAK6gD,aAMnCU,cACP,MAAMjD,EAAMt+C,KAAK05C,SACjB,OAAI2H,GAAiB/C,IAIdA,EAAInB,MAAMj0C,KAAOlJ,KAAKkJ,GAU1Bs4C,WAAWC,EAAoB3vC,GAClC,OAAO9R,KAAKm5C,SAASuI,oBAAoB1hD,KAAKkJ,GAAIu4C,GAQ/CE,SAASC,GACZ,OAAO5hD,KAAKm5C,SAAS0I,eAAe7hD,KAAKkJ,GAAI04C,GAU1CE,UAAUC,EAAsBjwC,GACnC,OAAO9R,KAAKm5C,SAAS6I,gBAAgBhiD,KAAKkJ,GAAI64C,EAAQjwC,GASnDiC,QACH,OAAO/T,KAAKm5C,SAAS8I,YAAYjiD,KAAKkJ,IAM/B8G,eACP,OAAOhQ,KAAK8gD,UAQLrB,uBACP,MAAMlzC,EAASvM,KAAKghD,gBACpB,OAAKz0C,GAEM,CACHrD,GAAIlJ,KAAKihD,aAMdiB,iBAAiBpwC,GACpB9R,KAAKmiD,iCAAiC9H,GAAgB+H,6BAA8BtwC,GAGjFuwC,kBAAkBvwC,GACrB9R,KAAKmiD,iCAAiC9H,GAAgBiI,2BAA4BxwC,GAG/E8lC,YAAYD,GACfa,GAAeb,EAAMkJ,aAAcnuB,GAAM1yB,KAAK6gD,YAAcnuB,IAC5D8lB,GAAeb,EAAMoJ,gBAAiBruB,GAAM1yB,KAAK+gD,eAAiBruB,IAClE8lB,GAAeb,EAAMsJ,aAAcvuB,GAAM1yB,KAAKihD,YAAcvuB,IAC5D8lB,GAAeb,EAAMiJ,OAAQluB,GAAM1yB,KAAK4gD,MAAQluB,IAChD8lB,GAAeb,EAAMjvC,OAAQgqB,GAAM1yB,KAAK0I,MAAQgqB,IAE3CooB,GAAuBnD,EAAMmJ,aAC9B9gD,KAAK8gD,UAAYnJ,EAAMmJ,WAIxBqB,iCAAiCpY,EAAmBj4B,GACvD9R,KAAKm5C,SAASgF,uBAAsB,CAACzE,EAAUntC,EAAQgb,KAE/Chb,EAAOrD,KAAOlJ,KAAKkJ,IAInBqe,IAAUwiB,GACVj4B,EAAS4nC,MAKd7B,cAAcF,GACjB33C,KAAKihD,YAActJ,EAAMsJ,mBC9LpBsB,GAKXtiD,YAAYkG,EAAeqN,EAAiBiC,GAC1CzV,KAAKmG,MAAQA,EACbnG,KAAKwT,QAAUA,EACfxT,KAAKyV,KAAOA,EAGPnL,WACL,OAAOtK,KAAKmG,MAGPq8C,aACL,OAAOxiD,KAAKwT,QAGPrO,UACL,OAAOnF,KAAKyV,MCchB,MAAMgtC,GAAkB,QAElBC,GAA4B,YAK5BC,GAA2B,UAC3BC,GAA6B,YAC7BC,GAA6B,YAE7BC,GAA0B,SAC1BC,GAA0B,kBAE1BC,GAAwB,OAIxBC,GAAwB,gBAExBC,GAA4B,qBAC5BC,GAA8B,uBAE9BC,GAAgC,yBAMhCC,GAAuB,qBASRnwB,GAkEjBjzB,YAAYuO,GAuBR,GAzCIxO,8BAA+E,GAC/EA,wCAA6F,GAC7FA,oCAA2F,GAC3FA,sCAAyF,GAGzFA,mCAAqC,GACrCA,kCAAmE,GACnEA,uBAA2B,GAC3BA,2BAA6B,GAC7BA,mCAAqC,GASzCA,KAAKsjD,QAAU90C,EACfxO,KAAK2zB,YAAcnlB,EAAOD,WAC1BvO,KAAK4zB,QAAUplB,EAAO0E,OACtBlT,KAAKqyC,UAAY7jC,EAAO6lC,SACxBr0C,KAAKujD,SAAW/0C,EAAOgrC,QAEvBx5C,KAAKwjD,sBAAwB,IAAIriD,SAAoBC,IACjDpB,KAAKyjD,6BAA+BriD,CAAO,IAG/CpB,KAAK0jD,uBAAyB,IAAIviD,SAAiBC,IAC/CpB,KAAK2jD,8BAAgCviD,CAAO,IAG3CpB,KAAKsjD,QAAQzyB,YACd7wB,KAAK2jD,8BAA8B,IAGvC3jD,KAAKi0B,YAAcj0B,KAAK2zB,YAAYhkB,OAChC,WACA,CAAC,SAAU,YAAa,eAAgB,UAEtB,oBAAXpD,OAAwB,CAE/B,MAAMO,EAAYP,OAAeO,SAG7BA,GAAYA,EAAS82C,eAEqB,mBAA/B92C,EAAS+2C,mBAEhB/2C,EAAS+2C,mBAAkB,CAACtmC,EAAc3L,KACtC5R,KAAKi0B,YACAhlB,KACG,CACIpL,KAAM,WAEb/B,MACIuE,IACG,GAAKA,EAAI4Z,MAAT,CAIA,IACInT,EAASg3C,WAAWz9C,EAAI4Z,OAC1B,MAAOve,GAEL,YADAkQ,EAAMlQ,EAAE8R,SAAW9R,GAGvB6b,SATI3L,EAAM,yCASD,GAEbA,EAAM,IAKlB9E,GAAuD,mBAApCA,EAASi3C,wBAE5Bj3C,EAASi3C,wBAAuB,CAACxmC,EAAc3L,KAC3C5R,KAAKi0B,YACAhlB,KACG,CACIpL,KAAM,WAEb/B,MACIuE,IACG,GAAKA,EAAI4Z,MAAT,CAIA,IACInT,EAASg3C,WAAWz9C,EAAI4Z,OAC1B,MAAOve,GAEL,YADAkQ,EAAMlQ,EAAE8R,SAAW9R,GAGvB6b,SATI3L,EAAM,yCASD,GAEbA,EAAM,MA/I1BkuC,iDACJ/F,EACAr1C,GAEA,MAAMs/C,EACDC,GACG,IAAI5K,GACA4K,OACA34C,GAEZ,OAAO,IAAIotC,GACPqB,EAAOn1C,KACPm1C,EAAOmK,YAAcF,EAAiBjK,EAAOmK,YAC7CnK,EAAOoK,cAAgBpK,EAAOoK,aAAa91C,IAAI21C,GAC/Ct/C,GAGAo7C,8CAA8C/F,GAClD,OAAO,IAAIV,GACPU,EAAOqK,WAC4ChiD,IAAe,IAGlE09C,mCAAmCz5C,EAAwBmS,GAC/D,MAAMwjC,OAAwB1wC,IAAdjF,EAAI82C,MAAsB92C,EAAI82C,MAAM/sC,QAAU/J,EAAIg+C,SAClE,OAAO,IAAI1H,GACPt2C,EAAImxB,YACJnxB,EAAIi+C,cACJ9rC,EACAnS,EAAIyxB,iBACJkkB,GAGA8D,2CAA2CxB,GAC/C,OAAO,IAAIzE,GAAsByE,EAAK,IAAIpE,GAAiCoE,EAAI9lC,YAAQlN,IAoHhFi5C,iBACP,MAAO,MAGJp5C,OAEHnL,KAAKwkD,mDAGLxkD,KAAKk2B,UACDysB,GACA3iD,KAAKykD,8BAETzkD,KAAKk2B,UACD0sB,GACA5iD,KAAK0kD,gCAET1kD,KAAK2kD,+CAEL3kD,KAAK4kD,uEAML5kD,KAAK6kD,kDAEL7kD,KAAK8kD,kDAEL9kD,KAAKk2B,UACDitB,GACAnjD,KAAK+kD,0BAET/kD,KAAKk2B,UACDktB,GACApjD,KAAKglD,4BAIThlD,KAAKilD,+CAGLjlD,KAAKk2B,UAxMgB,gBA0Md,KACC,GAA4C,YAAxCl2B,KAAKsjD,QAAQ4B,wBAIjB,GAA4C,SAAxCllD,KAAKsjD,QAAQ4B,uBAAmC,CAChD,GAAIllD,KAAKujD,eAA0C,IAAvBvjD,KAAKujD,SAAS4B,KAEtC,YADAnlD,KAAKujD,SAAS4B,KAAKpxC,QAGvB,GAAsB,oBAAXxH,QAA2D,mBAAzBA,OAAewH,MAExD,YADAxH,OAAOwH,QAGX,GAAuB,oBAAZqB,SAA4D,mBAAzBA,QAAgBgwC,KAE1D,YADAhwC,QAAQgwC,aAbZplD,KAAK40B,aAoBjB50B,KAAKi0B,YAAYrkB,UAAS,KAEI,gBAAtB5P,KAAKsjD,QAAQ+B,MACS,kCAAtBrlD,KAAKsjD,QAAQ+B,KACbrlD,KAAKyjD,6BAA6BzjD,MAElCA,KAAKi0B,YACAhlB,KACG,CACIpL,KAAM,YACNyhD,eAC2B,aAAtBtlD,KAAKsjD,QAAQ+B,KAAsB,GACV,eAAtBrlD,KAAKsjD,QAAQ+B,KAAwBrlD,KAAKsjD,QAAQiC,aAAe,KAEhFzjD,MAAK,KACF9B,KAAKyjD,6BAA6BzjD,KAAK,OAIvDA,KAAKi0B,YAAYlvB,OAGd6vB,UACH50B,KAAKozB,kBAAkB9sB,SAAS4c,GAAQA,GAAOljB,KAAK2zB,YAAYnQ,IAAIN,KACpEljB,KAAKozB,kBAAkBzyB,OAAS,EAK7BitB,QACH,OAAOzsB,QAAQ4gB,IAAI,CAAC/hB,KAAKwjD,sBAAuBxjD,KAAK0jD,yBAGlD8B,YACH,OAAOxlD,KAAKwjD,sBAGTiC,2BAA2B3zC,GAC9B9R,KAAK0lD,mCAAmCxiD,KAAK4O,GAG1C6zC,qBACHC,EACAjN,EACAC,EACApqC,EACA9J,GAEA,MAAMq1C,EAAsC,GAC5CA,EAAOn1C,KAAOghD,EACd,MAAMC,EAAwBC,KAA0CjiD,KAAMiiD,EAAiBjiD,KAAMe,KAAMkhD,EAAiBlhD,KAAM60B,cAAeqsB,IAKjJ,OAHA/L,EAAOmK,WAAa2B,EAAqBlN,GACzCoB,EAAOoK,aAAevL,EAAcvqC,IAAIw3C,GAEjC7lD,KAAKi0B,YACPhlB,KACG,CACIpL,KAAM6+C,GACNt/B,MAAO,CAAC22B,KAEfj4C,MAAK,KACF,MAAMikD,EAAe7yB,GAAU8yB,0CAA0CjM,EAAQr1C,GAOjF,OANA1E,KAAKimD,gBACDjmD,KAAK0lD,mCACL,IAAI7L,GACAkM,EACA,IAAI/L,GAAmBK,GAAgB6L,QAC3CxD,IACGqD,CAAY,IAIxBI,uBAAuBP,GAC1B,OAAO5lD,KAAKi0B,YACPhlB,KACG,CACIpL,KAzUiB,eA0UjBuf,MAAO,CAACwiC,KAEf9jD,MAAK,KACF,MAAMikD,EAAe,IAAIrN,GAAakN,OAAkBt6C,OAAWA,OAAWA,GAC9EtL,KAAKimD,gBACDjmD,KAAK0lD,mCACL,IAAI7L,GACAkM,EACA,IAAI/L,GAAmBK,GAAgB+L,UAC3C1D,GAA0B,IAInC2D,yBAAyBv0C,GAC5B9R,KAAKsmD,iCAAiCpjD,KAAK4O,GAOxCy0C,sBACHnN,EACAoN,EACA7K,GACA,GAAI37C,KAAKymD,6BAA6BrN,GAClC,OAAOj4C,QAAQE,OAAO,IAAI0F,MAAM,0BAA0BqyC,0BAG9Dp5C,KAAKymD,6BAA6BrN,GAAcoN,EAIhD,MAAMzM,EAAS,CACX7wC,GAAIkwC,EACJgL,UAAWhL,EACX3f,cAAekiB,GAEnB,OAAO37C,KAAKi0B,YAAYhlB,KAAK,CACzBpL,KAAMq/C,GACNwD,UAAW,CAAC3M,KAEXj4C,MAAK,KACF9B,KAAKimD,gBACDjmD,KAAKsmD,iCACL,IAAIzM,GACA3mB,GAAUyzB,uCAAuC5M,GACjD,IAAIC,GAAmBK,GAAgB6L,QAC3ChD,GAA0B,IAEjCr5C,OAAM,YACI7J,KAAKymD,6BAA6BrN,EAAW,IAIzDwN,wBAAwBxN,GAE3B,OADgBp5C,KAAKymD,6BAA6BrN,WAK3Cp5C,KAAKymD,6BAA6BrN,GAElCp5C,KAAKi0B,YAAYhlB,KAAK,CACzBpL,KAxXyB,wBAyXzBgjD,YAAa,CAACzN,KACft3C,MAAK,KACJ9B,KAAKimD,gBACDjmD,KAAKsmD,iCACL,IAAIzM,GACA,IAAIR,GAAWD,OAAY9tC,GAC3B,IAAI0uC,GAAmBK,GAAgB+L,UAC3ClD,GAA0B,KAdvB/hD,QAAQE,OAAO,IAAI0F,MAAM,0BAA0BqyC,sBAkB3D0N,uBAAuBh1C,GAC1B9R,KAAK+mD,yBAAyB7jD,KAAK4O,GAGhCk1C,iBAAiBjB,EAAsBphD,EAAkB80B,GAC5D,MAAMwtB,EAAmB,CACrBpjD,KAvYoB,SAwYpBygD,cAAeyB,EACfmB,gBAAiBviD,GAYrB,OATI3E,KAAKmnD,yBAAyB1tB,GAC9BwtB,EAAYG,eAAiB,CACzBlD,WAAY,CAAErgD,KAAM41B,EAAc0jB,MAAMt5C,KAAMe,KAAM60B,EAAc0jB,MAAMv4C,KAAM60B,cAAeA,EAAc0jB,OAC3GgH,aAAc1qB,EAAc4tB,SAAW5tB,EAAc4tB,QAAQh5C,KAAKi5C,KAAUzjD,KAAMyjD,EAAGzjD,KAAMe,KAAM0iD,EAAG1iD,KAAM60B,cAAe6tB,OAG7HL,EAAYxtB,cAAgBA,GAAiBA,EAAcprB,KAAKi5C,KAAUzjD,KAAMyjD,EAAGzjD,KAAMe,KAAM0iD,EAAG1iD,KAAM60B,cAAe6tB,MAGpHtnD,KAAKunD,2CACRN,EACApE,IACA,CAACx8C,EAAK+W,IAAc/W,EAAIgX,aAAeD,GACvCulC,IACA,CAACt8C,EAAK+W,EAAWoqC,IAAYnhD,EAAImxB,cAAgBgwB,EAAQhwB,aACzDorB,IACA,CAACv8C,EAAK+W,EAAWoqC,IAAYnhD,EAAImxB,cAAgBgwB,EAAQhwB,cACxDnxB,GAAQA,EAAImxB,aACb,MAAM11B,MAAMoH,GACkB,kCAAtBlJ,KAAKsjD,QAAQ+B,MACRrlD,KAAKynD,8BAA8B1B,GAcrC78C,GAbClJ,KAAKynD,8BAA8B1B,IAAgB,EAE5C/lD,KAAKi0B,YACPhlB,KACG,CACIpL,KAAM,YACNyhD,eAAgB,CAACS,KAExBjkD,MAAK,IACKoH,OAQ5Bq1C,aAAa7E,GAChB,OAAO15C,KAAKi0B,YAAYhlB,KAAK,CACzBpL,KA9aqB,UA+arB2zB,YAAakiB,EAASxwC,GACtBohC,WAAY,2DACZxyB,OAAQ,wBACThW,MAAMM,IAAM,IAGZy7C,sBAAsBnE,EAAoB/0C,EAAc+iD,EAAsBC,GACjF,GAAID,EAEA,OAAO1nD,KAAKqyC,UAAUlgB,IAAIunB,EAASxwC,GAAIvE,GAEvCgjD,EAAcA,GAAe,GAC7B,IAAK,MAAMj1B,KAAKi1B,EACZhjD,EAAQ+tB,GAAK,KAEjB,OAAO1yB,KAAKqyC,UAAU7qC,OAAOkyC,EAASxwC,GAAIvE,GAI3CijD,eAAexO,EAAqByO,GAIvC,MAAM,IAAI9gD,MAAM,uDAGb+gD,eAAejkD,EAAce,EAAcmjD,GAE9C,IAAIC,OAA2D,IAAlChoD,KAAK2zB,YAAYpT,aAC9C,MAAMlQ,EAASrQ,KAAK2zB,YAAYtjB,OAGhC,GAAsB,oBAAX9D,OAAwB,CAC/B,MAAMO,EAAWP,OAAOO,SACpBA,IACAk7C,OAAmD,IAA1Bl7C,EAAS82C,cAiB1C,OAbIoE,GACAhoD,KAAKi0B,YAAYhlB,KAAK,CAClBpL,KA3dO,UA+df7D,KAAKimD,gBACDjmD,KAAKioD,+BACL,IAAIpO,GACA,IAAI2G,GAAenwC,EAAQzL,EAAMf,OAAMyH,EAAWtL,KAAKkoD,eAAe73C,GAAS03C,EAAa/nD,KAAKmoD,qBAAqB93C,QAAS/E,GAC/H,IAAI0uC,GAAmBK,GAAgB6L,QAC3C,mBAEG/kD,QAAQC,QAAQiP,GAGpB+3C,uBAAuBt2C,GAC1B9R,KAAKioD,+BAA+B/kD,KAAK4O,GAGtC8nC,aAAa/oB,EAAoBi1B,GAI/BA,EAAiBuC,SACdvC,EAAiBn4B,MAAQm4B,EAAiBwC,OAASxC,EAAiByC,QAAUzC,EAAiBt/B,OAC/Fs/B,EAAiBuC,OAAS,CACtBhD,KAAM,SACNmD,SAAU,IAKtB,MAAMC,EAAYv/C,IACd,GAAK2nB,EAGL,OAAO7wB,KAAK0oD,aAAa73B,EAAY3nB,EAAI48C,EAAiBlhD,MACrD9C,MAAK,IACKoH,GACT,EAGV,OAAOlJ,KAAKunD,2CACR,CACI1jD,KAxgBY,cAygBZugD,UAAW0B,EAAiBjiD,KAC5B8kD,UAAW7C,EAAiBlhD,MAAQkhD,EAAiBjiD,KACrD41B,cAAeqsB,EACftuB,YAAa3G,QAEjBvlB,OACAA,EACA+3C,IACA,CAACh9C,EAAK+W,IAAc/W,EAAIgX,aAAeD,QACvC9R,OACAA,GACCjF,GAAQA,EAAIuiD,YACbH,GACC3mD,KAAK2mD,GAGPxG,YAAY/4C,GACf,OAAOlJ,KAAKi0B,YAAYhlB,KAAK,CACzBpL,KAphBiB,eAqhBjBglD,gBAAiB3/C,IAClBpH,MAAMM,IAAe,IAGrB0mD,sBACH,IAAIj4B,EAAa7wB,KAAKsjD,QAAQzyB,YAAe7wB,KAAKsjD,QAAQyF,kBAAoB/oD,KAAKsjD,QAAQyF,iBAAiBl4B,WACxGm4B,EAAsBhpD,KAAKsjD,QAAQyF,kBAAoB/oD,KAAKsjD,QAAQyF,iBAAiBC,mBACrFC,EAA6BjpD,KAAKsjD,QAAQyF,kBAAoB/oD,KAAKsjD,QAAQyF,iBAAiBE,0BAC5FC,EAAsBlpD,KAAKsjD,QAAQyF,kBAAoB/oD,KAAKsjD,QAAQyF,iBAAiBG,mBAEzF,GAAsB,oBAAX38C,aACoB,IAApBA,OAAOC,UACdD,OAAOC,SAAS28C,QACW,mBAApBC,gBAAgC,CACvC,MAAMC,EAAe,IAAID,gBAAgB58C,SAAS28C,OAAO1iD,MAAM,IAC/DuiD,EAAqBA,GAAsBK,EAAaliD,IAAI,eAC5D6hD,EAAqBA,GAAsBK,EAAaliD,IAAI,8BACnB,IAA9B8hD,IACPA,EAA4BI,EAAaliD,IAAI,iCAEjD+hD,EAAqBA,GAAsBG,EAAaliD,IAAI,yBAC5D0pB,EAAaA,GAAcw4B,EAAaliD,IAAI,iBAOhD,OAJA6hD,EAAqBA,GAAsB,UAC3CC,EAA4BA,IAA6B,EACzDC,EAAqBA,GAAsBlpD,KAAK2zB,YAAYtjB,OAErD,CACHw3C,sBAAkBv8C,EAClBulB,aACAm4B,qBACAC,4BACAC,sBAIDR,aAAa73B,EAAoB3J,EAAkBtiB,GACtD,MAAM0kD,EAAa1kD,GAAQ,CAAEA,SAAW,GACxC,OAAO5E,KAAKi0B,YAAYhlB,KAAK,CACzBpL,KAplBmB,gBAqlBnB0lD,UAAWriC,EACXsQ,YAAa3G,KACVy4B,IACJxnD,MAAK,KACJ9B,KAAKimD,gBACDjmD,KAAKioD,+BACL,IAAIpO,GACA,IAAI2G,GAAet5B,OAAU5b,OAAWA,EAAWulB,EAAY7wB,KAAKkoD,eAAehhC,QAAW5b,EAAWtL,KAAKmoD,qBAAqBjhC,QAAW5b,GAC9I,IAAI0uC,GAAmBK,GAAgB+H,+BAC3C,oCAEJpiD,KAAKimD,gBACDjmD,KAAK+mD,yBACL,IAAIlN,GACA,IAAI8C,GAAS9rB,OAAYvlB,EAAW,IAAIi3C,GAAe,eAAWj3C,OAAWA,QAAYA,OAAWA,GACpG,IAAI0uC,GAAmBK,GAAgBmP,UAC3C,6BAA6B,IAIlCC,cAAc54B,EAAoB3J,GACrC,OAAOlnB,KAAKi0B,YAAYhlB,KAAK,CACzBpL,KAxmBmB,iBAymBnB0lD,UAAWriC,EACXsQ,YAAa3G,IACd/uB,MAAK,KACJ9B,KAAKimD,gBACDjmD,KAAKioD,+BACL,IAAIpO,GACA,IAAI2G,GAAet5B,OAAU5b,OAAWA,EAAW,KAAMtL,KAAKkoD,eAAehhC,QAAW5b,EAAWtL,KAAKmoD,qBAAqBjhC,QAAW5b,GACxI,IAAI0uC,GAAmBK,GAAgBiI,6BAC3C,kCAEJtiD,KAAKimD,gBACDjmD,KAAK+mD,yBACL,IAAIlN,GACA,IAAI8C,GAAS9rB,OAAYvlB,EAAW,IAAIi3C,GAAe,eAAWj3C,OAAWA,QAAYA,OAAWA,GACpG,IAAI0uC,GAAmBK,GAAgBmP,UAC3C,2BAA2B,IAKhCE,mBACH,OAAOvoD,QAAQC,QAAQ,IAGpBuoD,iBACH,OAAOxoD,QAAQC,QAAQ,IAGpBwoD,gBACH,OAAOzoD,QAAQC,QAAQ,IAGpByoD,qBACH,OAAO1oD,QAAQC,QAAQ,IAQpBk8C,qBAAqBp0C,EAAY4gD,EAAuCjmC,IAKxEs9B,gBAAgBj4C,IAKhB84C,gBAAgB94C,EAAY64C,IAK5BF,eAAe34C,EAAY04C,IAK3BF,oBAAoBx4C,EAAY6gD,IAKhCC,cAAc9gD,EAAY+gD,IAK1BxL,iBAAiBr9B,EAAciX,EAAY5a,GAC9C,OAAOzd,KAAKi0B,YAAYhlB,KAAK,CACzBpL,KAhrBsB,QAirBtBqmD,KAAM7xB,EACN8xB,MAAO/oC,IAKRi7B,iBAAiBxrB,EAAoBu5B,GACxC,OAAOpqD,KAAKi0B,YAAYhlB,KAAK,CACzBpL,KAxrBqB,QAyrBrBud,KAAMyP,IAEP/uB,MAAK,IAAM,KAIXuoD,qBAAqBv4C,IAKrBw4C,qBAAqBx4C,IAIrBy4C,uCAAuCz4C,IAKvC04C,yBACH,OAAOrpD,QAAQC,QAAQ,IAOnBqpD,qBACJ,OAAOzqD,KAAK2zB,YAAYtjB,OAAS,IAAMwJ,KAAKC,MAAsB,IAAhBD,KAAKW,UAGnDkwC,6CACJC,EACAC,EACAC,EACA39B,GAEA,MAAM49B,EAAqBC,GAAsBhR,GAAgB,IAAIF,GACjEE,EACA,IAAIC,GACA+Q,EACI1Q,GAAgB6L,MAChB7L,GAAgB+L,UAE5B,IAAI4E,EACAC,EAcJ,OAZAD,EAAOL,GAAoB3qD,KAAKkrD,6BAC5BP,GACCtkD,GAAQwkD,EAAOxkD,GAAK,IACrBykD,GAAkB,GAClB59B,GAEJ+9B,EAAOL,GAAsB5qD,KAAKkrD,6BAC9BN,GACCvkD,GAAQwkD,EAAOxkD,GAAK,IACrBykD,GAAkB,GAClB59B,GAEG,CAAC89B,EAAMC,GAAMvhD,QAAQgpB,GAAMA,IAG9Bw4B,6BACJ5iC,EACAuiC,EACAM,EACA/9B,GACA,OAAOptB,KAAKk2B,UACR5N,GACCjiB,IACGwkD,EAAOxkD,GACFC,SAAS8kD,GACNh+B,EAAQ9mB,SAAS+kD,GAAMA,EAAEF,EAAeC,EAAK/kD,OAAO,IAIhEkhD,2CACJlhD,EACAilD,EACAC,EACAj0B,EACAk0B,EACAC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAQ7rD,KAAKyqD,qBAEnB,IAAIqB,EACAC,EACJ,MAAMC,EAAiB,IAAI7qD,SAAsB,CAACC,EAASC,KACvDyqD,EAAwB1qD,EACxB2qD,EAAuB1qD,CAAM,IAGjC,IAEI4qD,EACAC,EACAC,EACAC,EALAC,EAA2B,KAO/B,MAAMC,EAAoB,KACtBtsD,KAAKusD,iBAAiBN,GACjBL,GACD5rD,KAAKusD,iBAAiBL,GAE1BlsD,KAAKusD,iBAAiBJ,GACtBnsD,KAAKusD,iBAAiBH,EAAkB,EAG5CH,EAAwBX,GACpBtrD,KAAKk2B,UACDo1B,GACCkB,IACQjB,EAAuBiB,EAAMX,KAGlCQ,EAAsBG,EACtBxsD,KAAKusD,iBAAiBN,GAAsB,IAGxD,IAAIQ,GAAY,EAChBP,EACIlsD,KAAKk2B,UACDoB,GACCo1B,IACQlB,EAAqBkB,EAAMb,EAAOQ,KAGnCI,EACIb,GACAA,EAAmBD,EAAkCe,KAGzDD,GAAY,EACZX,EAAsBH,EAAkCe,SAGxEP,EAAwBV,GACpBzrD,KAAKk2B,UACDu1B,GACCkB,IACQjB,EAAuBiB,EAAMd,EAAOQ,IAGzCN,EAAqBY,EAAK,IAEtCP,EAAoBX,GAChBzrD,KAAKk2B,UACDusB,IACCmK,IACOA,EAAKvvC,aAAewuC,GAGxBE,EAAqBa,EAAK,IAGtCvmD,EAAIgX,WAAawuC,EAEjB,MAAMgB,EAAW7sD,KAAKi0B,YACjBhlB,KAAK5I,GACLvE,MAAK,IACKkqD,IAGf,OADAa,EAAS/qD,KAAKwqD,EAAmBA,GAC1BO,EAKHC,oCAAoCC,EAAmB/Q,GAC3D,MAAMgR,EAAWhtD,KAAKitD,8BAA8BjR,EAAU,IAAM+Q,GACpE,OAAKC,EAGM,IAAI3T,GAAW2T,OAAU1hD,GAFzB,KAMP4qB,UAAoB5N,EAAqB8E,GAC7C,MAAMlK,EAAMljB,KAAK2zB,YAAY/W,GACzB0L,GACCjiB,GAAkB+mB,EAAQlL,KAAKliB,KAAbotB,CAAmB/mB,KAI1C,OAFArG,KAAKozB,kBAAkBlwB,KAAKggB,GAErBA,EAGHqpC,iBAAiB91B,GACjBA,IACAz2B,KAAK2zB,YAAYnQ,IAAIiT,UACdz2B,KAAKozB,kBAAkBpzB,KAAKozB,kBAAkBnY,QAAQwb,KAI7DwvB,gBACJ30C,EACAiW,EACA7iB,GACA4M,EAAUhL,SAASi2C,IACf,IACIA,EAAGh1B,GACL,MAAOpV,GACLnS,KAAK4zB,QAAQhiB,MAAM,YAAYlN,GAAe6iB,EAAM5iB,QAAQd,kBAAoBiK,KAAKC,UAAUoE,QAKnGsyC,6BAA6Bp+C,GAC5BA,EAAI4uB,WAGAj1B,KAAKktD,sBAAsB7mD,EAAImxB,cAChCx3B,KAAKmtD,mBAAmB9mD,GAH5BrG,KAAK4zB,QAAQhiB,MAAM,6CAA+CvL,EAAImxB,aAQtE41B,yBAAyB/mD,GAC7B,MAAMwqB,EAAaxqB,EAAImxB,YACvBx3B,KAAKktD,sBAAsBr8B,SACjB7wB,KAAKqyC,UAAUnc,UAAUrF,GAC3B,CAACtc,EAAWmd,EAAcC,KACtB,MAAMpK,EAAQ,IAAIsyB,GACd,IAAI8C,GAAS9rB,OAAYvlB,OAAWA,EAAWiJ,OAAMjJ,GACrD,IAAIivC,GAAmChmC,EAAMmd,EAASC,IAE1D3xB,KAAKimD,gBACDjmD,KAAK+mD,yBACLx/B,EACA,kBAAkB,IAI9Bm9B,+BAA+Br+C,GACnC,MAAMgnD,EAAqBrtD,KAAKktD,sBAAsB7mD,EAAImxB,aACxB,mBAAvB61B,GACPA,WAEGrtD,KAAKktD,sBAAsB7mD,EAAImxB,aAGlCutB,yBAAyB1+C,GAC7BA,EAAIqgD,UAAUpgD,SAASyzC,IACnB/5C,KAAKitD,8BAA8B5mD,EAAIg+C,SAAW,IAAMtK,EAAO7wC,IAAM6wC,EAAOqK,SAAS,IAIrFY,2BAA2B3+C,GAC/BA,EAAIwgD,YAAYvgD,SAASymD,WACd/sD,KAAKitD,8BAA8B5mD,EAAIg+C,SAAW,IAAM0I,EAAU,IAIzEvI,mDACJxkD,KAAK0qD,6CAz8BwB,cAEC,iBA08B1B,CAACrkD,EAA4B0kD,IAAYA,EACnC1kD,EAAI+c,MAAM/U,KAAK/N,GAAM4yB,GAAU8yB,0CAA0C1lD,OAAGgL,KAC5EjF,EAAI+c,MAAM/U,KAAK/N,GAAM,IAAIo4C,GAAap4C,EAAEsE,UAAM0G,OAAWA,OAAWA,MAC1EtL,KAAK0lD,oCAILd,uEAIJ,IAAK,MAAM0I,IAA0B,CAAC3K,GAA0BG,GAAyBG,IACrFjjD,KAAKkrD,6BACDoC,GACCjnD,GACG,CAAEA,EAAI82C,OAAS,IAAK92C,EAAKxC,KAAMwC,EAAI+9C,UAAWx/C,KAAMyB,EAAIsiD,UAAWv4C,QAAS/J,EAAIg+C,WAC3E3+C,OAAOW,EAAIknD,cAAgB,IAC3Bl/C,KAAK2I,GAAc,IAAIwpC,GAAexpC,EAAK5G,QAAS4G,EAAKpS,KAAMoS,EAAKnT,KAAMwC,EAAImxB,YAAax3B,KAAKkoD,eAAelxC,EAAK5G,cAAU9E,EAAWtL,KAAKmoD,qBAAqBnxC,EAAK5G,cAAU9E,OAC3L,CAAC8/C,EAAK/kD,IAAQ,IAAIwzC,GAA4BuR,EAAK,IAAIpR,GAAmBK,GAAgB+H,gCAC1FpiD,KAAKioD,gCAITtD,+CAIJ,IAAK,MAAM6I,IAAkB,CAAC7K,GAA0BG,IACpD9iD,KAAKkrD,6BACDsC,GACCnnD,GAAQ,CAAC6sB,GAAUu6B,4BAA4BpnD,EAAK,IAAIk8C,GAAe,UAAW,GAAI,IAAIx+C,UAC3F,CAACqnD,EAAK/kD,IAAQ6sB,GAAUw6B,oCAAoCtC,IAC5DprD,KAAK+mD,0BAGb/mD,KAAKkrD,6BACDtI,IACCv8C,GAAQ,CAAC6sB,GAAUu6B,4BAA4BpnD,EAAK,IAAIk8C,GAAe,YAAal8C,EAAIyR,OAAQ,IAAI/T,UACrG,CAACqnD,EAAK/kD,IAAQ6sB,GAAUw6B,oCAAoCtC,IAC5DprD,KAAK+mD,0BAET/mD,KAAKkrD,6BACDrI,IACCx8C,GAAQ,CAAC6sB,GAAUu6B,4BAA4BpnD,EAAK,IAAIk8C,GAAe,UAAW,GAAI,IAAIx+C,UAC3F,CAACqnD,EAAK/kD,IAAQ6sB,GAAUw6B,oCAAoCtC,IAC5DprD,KAAK+mD,0BAET/mD,KAAKkrD,6BACDjI,IACC58C,GAAQ,CAAC6sB,GAAUu6B,4BAA4BpnD,EAAK,IAAIk8C,GAAe,UAAW,GAAI,IAAIx+C,UAC3F,CAACqnD,EAAK/kD,IAAQ6sB,GAAUw6B,oCAAoCtC,IAC5DprD,KAAK+mD,0BAGLlC,kDACJ7kD,KAAK0qD,6CACDvH,GACAC,IACA,CAAC/8C,EAA2B0kD,IAAqBA,EAC3C1kD,EAAIqgD,UAAUr4C,IAAI6kB,GAAUyzB,wCAC5BtgD,EAAIwgD,YAAYx4C,KAAKnF,GAAOlJ,KAAK8sD,oCAAoC5jD,EAAI7C,EAAIg+C,YAAW36C,QAAQgpB,GAAW,MAALA,KAC5G1yB,KAAKsmD,kCAGLxB,kDACJ9kD,KAAKk2B,UAr/BkB,kBAu/BlB7vB,IACG,MAAMmgD,EAAUxmD,KAAKymD,6BAA6BpgD,EAAIsnD,cACtD,GAAKnH,EAUL,IACI,MAAM/sB,EAAgBpzB,EAAIozB,eAAiB,GAS3CA,EAAcm0B,cAAgBn0B,EAAcm0B,eAAiBvnD,EAAIunD,cACjEn0B,EAAck0B,aAAel0B,EAAck0B,cAAgBtnD,EAAIsnD,aAC/D,MAAMp4C,EAAUixC,EAAQ,CACpB31B,WAAYxqB,EAAIqzC,UAAYrzC,EAAIqzC,SAASxwC,GACzC68C,aAAc1/C,EAAIqzC,UAAYrzC,EAAIqzC,SAAS71C,KAC3CA,KAAMwC,EAAIozB,eAAiBpzB,EAAIozB,cAAc51B,KAC7CkwC,QAASta,EAAcm0B,cACvBn0B,kBAEAlkB,GAAWA,EAAQzT,MAAQyT,EAAQ1L,OACnC0L,EAAQ1L,OAAOsI,GAAQnS,KAAKi0B,YAAYhlB,KACpC,CACIpL,KAAM4+C,GACNplC,WAAYhX,EAAIgX,WAChBvF,OAAQ3F,IAAQA,EAAIqB,SAAW1F,KAAKC,UAAUoE,QAG5D,MAAOA,GACLnS,KAAKi0B,YAAYhlB,KACb,CACIpL,KAAM4+C,GACNplC,WAAYhX,EAAIgX,WAChBvF,OAAQ3F,IAAQA,EAAIqB,SAAW1F,KAAKC,UAAUoE,WAzCtDnS,KAAKi0B,YAAYhlB,KACb,CACIpL,KAAM4+C,GACNplC,WAAYhX,EAAIgX,WAChBvF,OAAQ,wBAAwBzR,EAAIsnD,oBA2CpD1I,+CACJ,IAAK,MAAM4I,IAAiB,CAAC9K,GAAyBD,IAClD9iD,KAAKk2B,UAAU23B,GACVxnD,IACG,MAAMynD,EAAYD,IAAkB9K,GAA2B18C,EAAI0nD,UAAY1nD,EAAI+J,QAC7E49C,EAAcH,IAAkB9K,GAA2B18C,EAAI4nD,YAAc5nD,EAAI+9C,UACjF8J,EAAcL,IAAkB9K,GAA2B18C,EAAI8nD,YAAc9nD,EAAIsiD,UAEjF5O,EAAS,IAAIyG,GACfsN,EACAI,EACAF,EACA3nD,EAAImxB,YACJx3B,KAAKkoD,eAAe4F,QACpBxiD,EACAtL,KAAKmoD,qBAAqB2F,QAC1BxiD,GAICtL,KAAKktD,sBAAsB7mD,EAAImxB,aAMzBq2B,IAAkB/K,IACzB9iD,KAAK2jD,8BAA8B,IANnC3jD,KAAKmtD,mBAAmB9mD,GAAKvE,MAAK,KAC1B+rD,IAAkB/K,IAClB9iD,KAAK2jD,8BAA8B,OAS/C3jD,KAAKimD,gBACDjmD,KAAKioD,+BACL,IAAIpO,GACAE,EACA,IAAIC,GAAmBK,GAAgB+H,+BAC3CyL,EAAc,IAK9B7tD,KAAKk2B,UACD8sB,IACC38C,IACG,MAAM0zC,EAAS,IAAIyG,GACfn6C,EAAI+nD,aACJ9iD,OACAA,EACA,KACAtL,KAAKkoD,eAAe7hD,EAAI+nD,cACxB9iD,EACAtL,KAAKmoD,qBAAqB9hD,EAAI+nD,cAC9B9iD,GAEJtL,KAAKimD,gBACDjmD,KAAKioD,+BACL,IAAIpO,GACAE,EACA,IAAIC,GAAmBK,GAAgBiI,6BAC3CU,GAAsB,IAGlChjD,KAAK0qD,6CACDrH,QACA/3C,GACCjF,GAAQ,CACL,IAAIm6C,GACAn6C,EAAIuiD,gBACJt9C,OACAA,OACAA,OACAA,OACAA,EACAtL,KAAKmoD,qBAAqB9hD,EAAIuiD,iBAC9Bt9C,KACRtL,KAAKioD,gCAGLC,eAAeh/C,GACnB,OAAOlJ,KAAKsjD,QAAQjN,IAAI5b,UAAUxR,MAAM1oB,GAAMA,EAAE8P,SAAWnH,GAAM3I,EAAE2mB,WAAahe,IAG5Ei/C,qBAAqB93C,GACzB,MAAO,KACH,MAAMyqB,EAAS96B,KAAKkoD,eAAe73C,GACnC,IAAKyqB,EACD,OAEJ,MAAM5T,EAAW4T,EAAO5T,SACxB,OAAOlnB,KAAKsjD,QAAQ9J,QAAQ6U,OAAO3kD,QAAQqxC,GAAMA,EAAE7xC,KAAOge,IAAU,EAAE,EAItEigC,yBAAyB5lD,GAC7B,YAAqB,IAAVA,KAGNA,EAAiC47C,aC5pCzBmR,GAcnBruD,YAAY47C,EAA0BrC,GAZ/Bx5C,iBAAkE,GAClEA,iBAAkE,GAClEA,mBAAwF,GACxFA,qBAA8G,GAC9GA,kCAAoE,GACpEA,gCAA8E,GAC9EA,iCAA+E,GAC/EA,+BAAoH,GAGpHA,aAAkBiuB,GAAO0yB,IAAI3gD,MAGlCA,KAAKuuD,GAAK1S,EACVA,EAAQjuB,QACL9rB,MAAM0sD,IAELA,EAAGnQ,gCAAgCr+C,KAAKyuD,2BAA2BvsC,KAAKliB,OACxEwuD,EAAGrQ,sBAAsBn+C,KAAK0uD,wBAAwBxsC,KAAKliB,OAC3DwuD,EAAG7P,4BAA4B3+C,KAAK2uD,6BAA6BzsC,KAAKliB,OACtEwuD,EAAGzP,4BAA4B/+C,KAAK4uD,6BAA6B1sC,KAAKliB,OAClEw5C,GACFA,EAAQqV,0BAA0B7uD,KAAK8uD,kCAAkC5sC,KAAKliB,UAU3EuM,aACT,GAAIuuC,GAAuB96C,KAAK+uD,IAAK,CACnC,MAAMC,EAAmBhvD,KAAKuuD,GAAGS,iBAC7BA,EAAiBruD,OAAS,IAC5BX,KAAK+uD,GAAKC,EAAiB,IAG/B,OAAOhvD,KAAK+uD,GASHrV,eACT,MAAMuV,EAAQjvD,KAAKuM,OACnB,IAAIuuC,GAAuBmU,GAG3B,OAAOA,EAAMvV,SAURE,aAAaR,GAClB,OAAOp5C,KAAKuuD,GAAG3U,aAAa55C,KAAK05C,SAAUN,GAWtCkE,qBAAqBC,EAA+C15B,GACzE,OAAO7jB,KAAKuuD,GAAGjR,qBAAqBt9C,KAAK05C,SAAU6D,EAAa15B,GAQvDlf,cACT,MAAM+0C,EAAW15C,KAAK05C,SACtB,OAAI2H,GAAiB3H,GACZ,GAGFA,EAAS/0C,QAYXi5C,cAAcj5C,EAAiBmN,GACpC,MAAM4nC,EAAW15C,KAAK05C,SACtB,OAAI2H,GAAiB3H,GACZ,IAAIv4C,SAAgB,CAACC,EAASC,KACnCA,EAAO,kBAAkB,IAItBq4C,EAASkE,cAAcj5C,EAASmN,GAUlC4rC,WAAW/4C,EAAiBmN,GACjC,MAAM4nC,EAAW15C,KAAK05C,SACtB,OAAI2H,GAAiB3H,GACZ,IAAIv4C,SAAQ,CAACC,EAASC,KAC3BA,EAAO,kBAAkB,IAItBq4C,EAASgE,WAAW/4C,EAASmN,GAG/BowC,iBAAiBpwC,GACtB9R,KAAKkvD,2BAA2BhsD,KAAK4O,GAGrC,MAAMm9C,EAAQjvD,KAAKuM,OACduuC,GAAuBmU,IAAWnU,GAAuBmU,EAAMvV,WAClE5nC,EAASm9C,EAAMvV,UAIZyV,eAAer9C,GACpB9R,KAAKovD,4BAA4BlsD,KAAK4O,GASjCssC,iBAAiBtsC,GACtB9R,KAAKqvD,0BAA0BnsD,KAAK4O,GAGpC,MAAMm9C,EAAQjvD,KAAKuM,OACnB,GAAIuuC,GAAuBmU,GACzB,OAGF,MAAMvV,EAAWuV,EAAMvV,SACnBoB,GAAuBpB,IAY3B5nC,EAAS4nC,EAAS/0C,QAAS+0C,EAAS/0C,QAAS,GAAI+0C,GAG5C9iB,MAAM1rB,EAAuB4G,GAClC,MAAMwsC,EAAMt+C,KAAK05C,SACjB,OAAO15C,KAAKuuD,GAAG33B,MAAM0nB,EAAKpzC,EAAS4G,GAG9B0sC,OAAO9E,EAA6Bj8B,GACzC,IAAIoT,EAMJ,OAJEA,EADsB,iBAAb6oB,EACIA,EAEAA,EAASxwC,GAEjBlJ,KAAKuuD,GAAG9P,iBAAiB5tB,EAAY7wB,KAAK05C,SAASxwC,GAAIuU,GAGzDihC,mBAAmB5sC,GACxB9R,KAAKsvD,YAAYpsD,KAAK4O,GAGjBy9C,mBAAmBz9C,GACxB9R,KAAKwvD,YAAYtsD,KAAK4O,GAGjB29C,qBAAqB39C,GAC1B9R,KAAK0vD,cAAcxsD,KAAK4O,GAGnB69C,uBAAuB79C,GAC5B9R,KAAK4vD,gBAAgB1sD,KAAK4O,GAGjButC,eACT,OAAKr/C,KAAK05C,SAIH15C,KAAK05C,SAAS2F,SAHZ,GAMJC,cAAcC,EAAeztC,GAElC,OAAI9R,KAAK05C,SACA15C,KAAK05C,SAAS4F,cAAcC,EAAOztC,GAEnC3Q,QAAQC,QAAQ,MAIpBs+C,gBAEL,OAAI1/C,KAAK05C,SACA15C,KAAK05C,SAASgG,gBAGhB,GAGFmQ,oBAAoB/9C,GACzB9R,KAAK8vD,6BAA6B5sD,KAAK4O,GAGjC28C,2BAA2B/U,EAAoB/0C,EAAiBssB,EAAeU,GACrF,MAAMs9B,EAAQjvD,KAAKuM,OACnB,GAAIuuC,GAAuBmU,GACzB,OAGF,MAAMc,EAAad,EAAMvV,SACrBoB,GAAuBiV,IAKvBrW,EAASxwC,KAAO6mD,EAAW7mD,IAI/BlJ,KAAKgwD,wBAAwBtW,EAAU/0C,EAASssB,EAAOU,GAGjD+8B,wBAAwBhV,EAAoBntC,EAAwBgb,GAEtEuzB,GAAuB96C,KAAKuM,SAK5BvM,KAAKuM,OAAOrD,KAAOqD,EAAOrD,KAI1Bqe,IAAU8yB,GAAgB+H,8BAC5BpiD,KAAKiwD,qBAAqBvW,EAAU15C,KAAKkvD,4BAqCzClvD,KAAKgwD,wBAAwBtW,EAAUA,EAAS/0C,QAAS,KAAM,OAItD4iB,IAAU8yB,GAAgBiI,4BACnCtiD,KAAKiwD,qBAAqBvW,EAAU15C,KAAKovD,8BAKrCa,qBAAqBvW,EAAoBwW,GAC/CA,EAAc5pD,SAASgM,IACrB,IACEA,EAAQonC,EAAUnyB,OAClB,MAAO7lB,GACP1B,KAAK4zB,QAAQ9V,KAAK,0BAA4Bpc,OAK5CsuD,wBAAwBtW,EAAoB/0C,EAAiBssB,EAAgBU,GACnFV,EAAQA,GAAS,GACjBU,EAAUA,GAAW,GAErB3xB,KAAKqvD,0BAA0B/oD,SAAUgM,IACvC,IACEA,EAAQ3N,EAASssB,EAAOU,EAAS+nB,GACjC,MAAOh4C,GACP1B,KAAK4zB,QAAQ9V,KAAK,0BAA4Bpc,OAK5CyuD,gBAAgBhqD,GAEtBnG,KAAKsvD,YAAYhpD,SAASi2C,IACxB,IACEA,EAAGp2C,GACH,MAAOzE,GACP1B,KAAK4zB,QAAQ9V,KAAK,0BAA4Bpc,OAK5C0uD,gBAAgBjqD,GAEtBnG,KAAKwvD,YAAYlpD,SAASi2C,IACxB,IACEA,EAAGp2C,GACH,MAAOzE,GACP1B,KAAK4zB,QAAQ9V,KAAK,0BAA4Bpc,OAK5C2uD,kBAAkBlqD,GAExBnG,KAAK0vD,cAAcppD,SAASi2C,IAC1B,IACEA,EAAGv8C,KAAK05C,SAAUvzC,GAClB,MAAOzE,GACP1B,KAAK4zB,QAAQ9V,KAAK,0BAA4Bpc,OAK5C4uD,oBAAoBC,EAAoB3mD,EAAoBzD,GAElEnG,KAAK4vD,gBAAgBtpD,SAASi2C,IAC5B,IACEA,EAAGgU,EAAU3mD,EAAUzD,GACvB,MAAOzE,GACP1B,KAAK4zB,QAAQ9V,KAAK,0BAA4Bpc,OAK5CitD,6BAA6B3P,EAAkB74C,GACrD,MAAM8oD,EAAQjvD,KAAKuM,OACnB,GAAIuuC,GAAuBmU,GACzB,OAGF,MAAMc,EAAad,EAAMvV,SACrBoB,GAAuBiV,IAKvB/Q,EAAO91C,KAAO6mD,EAAW7mD,KAIzB/C,EAAM81C,UAAUhhC,QAAQg0C,EAAM/lD,KAAO,EACvClJ,KAAKqwD,kBAAkBlqD,GAIzBnG,KAAKmwD,gBAAgBhqD,IAGfyoD,6BAA6B5P,EAAkBwR,EAAkBrqD,GACvE,MAAM8oD,EAAQjvD,KAAKuM,OACnB,GAAIuuC,GAAuBmU,GACzB,OAGF,MAAMc,EAAad,EAAMvV,SACrBoB,GAAuBiV,KAKvBS,EAAOtnD,KAAO6mD,EAAW7mD,IAC3BlJ,KAAKowD,gBAAgBjqD,GAGnB64C,EAAO91C,KAAO6mD,EAAW7mD,IAC3BlJ,KAAKswD,oBAAoBtR,EAAQwR,EAAQrqD,IAIrC2oD,kCAAkCviD,GACxC,MAAM+xC,EAAMt+C,KAAK05C,SACZ4E,GAIAA,EAAInB,OAILmB,EAAInB,MAAMsC,iBAAiBv2C,KAAOqD,EAAOrD,IAC3ClJ,KAAK8vD,6BAA6BxpD,SAASwL,IACzCA,EAASvF,EAAO2vC,WAAW,WCpetBuU,GAYXxwD,YAAY2E,EAAc8rD,GAGxB,GAFA1wD,KAAK4zB,QAAU3F,GAAO0yB,IAAI,gBAAkB/7C,EAAO,KACnD5E,KAAK4zB,QAAQlc,MAAM,kCAAoC9S,EAAO,UAAY8rD,EAAgB,oBACtFA,GAAiB,EACnB,MAAM,IAAI3pD,MAAM,wCAElB/G,KAAK2wD,SAAWD,EAChB1wD,KAAK4wD,WAAa,GAClB5wD,KAAK0I,MAAQ9D,EAMRisD,YAAY/+C,GACb9R,KAAK8wD,QACPh/C,OAASxG,GAEAtL,KAAK+wD,UACdj/C,EAAS9R,KAAKgxD,QAGhBhxD,KAAK4wD,WAAW1tD,KAAK4O,GAMhBm/C,OAAOz9C,GAGZ,GAFAxT,KAAK4zB,QAAQlc,MAAM,cAAgBlE,EAAU,oBAAsBxT,KAAK2wD,SAAW,IACnF3wD,KAAK2wD,WACD3wD,KAAK2wD,SAAW,EAClB,MAAM,IAAI5pD,MAAM,0BAA4B/G,KAAK0I,MAAQ,kBAAoB1I,KAAK2wD,UAGhF3wD,KAAK8wD,SACP9wD,KAAK4wD,WAAWtqD,SAASwL,IACvBA,OAASxG,EAAU,IAQlBsG,MAAMA,GACX5R,KAAKgxD,OAASp/C,EACd5R,KAAK4wD,WAAWtqD,SAAS8yB,IACvBA,EAAcxnB,EAAM,IAOjBk/C,QACL,OAAI9wD,KAAK+wD,WAGgB,IAAlB/wD,KAAK2wD,SAMPI,UACL,OAAQ1P,GAAiBrhD,KAAKgxD,QAMzBE,WACL,OAAOlxD,KAAKgxD,cC1EHG,GAMXlxD,YAAYmxD,GAJJpxD,YAA+B,GAC/BA,gBAAmE,GAIzEA,KAAKqxD,YAAcD,EAMdE,OAAOh4C,GACZtZ,KAAK6R,IAAI,CAACyH,IAMLzH,IAAI0/C,GACTA,EAAMjrD,SAASgM,IACbtS,KAAKoV,QAAQ,IAAIykC,GAAevnC,EAAS,IAAI0nC,GAAmBK,GAAgB6L,QAAQ,IAOrF9wC,QAAQmS,GAEb,MAAM5iB,EAAU4iB,EAAM5iB,QAChBd,EAAOc,EAAQd,KACfk2C,EAASxyB,EAAMwyB,OASrB,GAAIl2C,IAASw2C,GAAgBC,eACzB31C,EAA6Cy1C,UAAW,CAC1D,MAAMkE,EAAMt+C,KAAKwxD,OAAOzX,EAAO7wC,IAC3Bo1C,IACD35C,EAA6Cy1C,UAAYkE,EAAI9lC,QAQ9D3U,IAASw2C,GAAgBC,cAC1B31C,EAA6Cy1C,WAC7Cz1C,EAA6Cw1C,WAC7Cx1C,EAA6Cy1C,UAAUj0C,QACvDxB,EAA6Cw1C,UAAUh0C,QACxDxB,EAAQd,KAAOw2C,GAAgBmP,SAKJ,oBAAlB5V,gBACL/vC,IAASw2C,GAAgB+H,8BAC3BpiD,KAAKwxD,OAAOzX,EAAO7wC,KAClBlJ,KAAKwxD,OAAOzX,EAAO7wC,IAA8BwwC,WAClD/0C,EAAQd,KAAOw2C,GAAgBmP,SAE7B3lD,IAASw2C,GAAgBiI,4BAC3BtiD,KAAKwxD,OAAOzX,EAAO7wC,MACjBlJ,KAAKwxD,OAAOzX,EAAO7wC,IAA8BwwC,WACnD/0C,EAAQd,KAAOw2C,GAAgBmP,UAOnC,MAAMiI,EAAiBzxD,KAAK0xD,2BAA2B3X,EAAQl2C,EAAMc,GAErE,OADA3E,KAAK2xD,iBAAiBF,EAAgB9sD,GAC/B8sD,EAMFtqD,MACL,MAAMvF,EAAS,GACf,IAAK,MAAM0C,KAAOtE,KAAKwxD,OACrB,GAAIxxD,KAAKwxD,OAAO3xD,eAAeyE,GAAM,CACnC,MAAMgO,EAAUtS,KAAKwxD,OAAOltD,GAC5B1C,EAAOsB,KAAKoP,GAGhB,OAAO1Q,EAQFgwD,UAAUhtD,GAGf,IAAK,MAAMN,KAAOtE,KAAKwxD,OACrB,GAAIltD,IAAQM,EACV,OAAO5E,KAAKwxD,OAAOltD,GAWlButD,UAAUjtD,GACf,OAAO,IAAIzD,SAAYC,IACrB,MAAM0wD,EAAsB/X,IACtBA,EAAO7wC,KAAOtE,IAGlBxD,EAAQ24C,GACR/5C,KAAKs2B,YAAYw7B,GAAmB,EAEtC9xD,KAAKk2B,UAAU47B,GAGf,MAAMvlD,EAASvM,KAAK4xD,UAAUhtD,GAC9B,GAAI2H,EAGF,OAFAvM,KAAKs2B,YAAYw7B,QACjB1wD,EAAQmL,MAUP2pB,UAAU9I,GAQf,OAPAptB,KAAK+xD,WAAW7uD,KAAKkqB,GAErB5tB,OAAO2E,KAAKnE,KAAKwxD,QAAQlrD,SAAShC,IAChC,MAAMgO,EAAUtS,KAAKwxD,OAAOltD,GAC5B8oB,EAAQ9a,EAAS,IAAI0nC,GAAmBK,GAAgB6L,MAAM7gD,YAAY,IAGrE,KACLrF,KAAKs2B,YAAYlJ,EAAQ,EAOtBkJ,YAAYlJ,GACjB,MAAM7a,EAAQvS,KAAK+xD,WAAW92C,QAAQmS,IACvB,IAAX7a,GACFvS,KAAK+xD,WAAWh4C,OAAOxH,EAAO,GAO1Bo/C,iBAAiB5X,EAAWp1C,GAClC3E,KAAK+xD,WAAWzrD,SAAS0rD,IACvB,IACEA,EAASjY,EAAQp1C,GACjB,MAAOjD,GACP,WAQEgwD,2BAA2B3X,EAAWl2C,EAAuBc,GACnE,MAAMstD,EAAelY,EAGfmY,EACHruD,IAASw2C,GAAgBC,cACxB2X,EAAYz5C,QACZy5C,EAAYz5C,OAAOrS,QAAUs0C,GAAc0X,WAC5CtuD,IAASw2C,GAAgBC,cACxB31C,GACAA,EAAQw1C,WACRx1C,EAAQw1C,UAAUh0C,QAAUs0C,GAAc0X,UAIxCC,EAAgBvuD,IAASw2C,GAAgBgY,OAG/C,GAFqBxuD,IAASw2C,GAAgB+L,cAAgD,IAA9B6L,EAAYtY,eAExDyY,GAAiBF,EAAmB,CAEtD,MAAMI,EAAYtyD,KAAKwxD,OAAOzX,EAAO7wC,IAOrC,cANOlJ,KAAKwxD,OAAOzX,EAAO7wC,IAE1BlJ,KAAKqxD,YAAYtX,GACbuY,GACFvY,EAAOlC,cAAcya,GAEhBvY,EACF,CACL,MAAMz1C,EAAMy1C,EAAO7wC,GAEdlJ,KAAKwxD,OAAO3xD,eAAeyE,GAI9BtE,KAAKwxD,OAAOzX,EAAO7wC,IAAIwuC,QAAQqC,IAH/B/5C,KAAKqxD,YAAYtX,GACjB/5C,KAAKwxD,OAAOzX,EAAO7wC,IAAM6wC,GAM7B,OAAO/5C,KAAKwxD,OAAOzX,EAAO7wC,WC1MTqpD,GA6BnBtyD,YAAYuyD,EAAwBC,EAAuBjZ,GAnBnDx5C,aAAkBiuB,GAAO0yB,IAAI,mBAC7B3gD,uBAAsC,GACtCA,wBAAoE,GACpEA,wBAAsF,GACtFA,iCAAkF,GAClFA,qBAA2B,GAejCA,KAAK44B,QAAU45B,EACfxyD,KAAK0yD,eAAiB,IAAIvB,IAA0CzvD,GAAM1B,KAAK2yD,YAAYjxD,KAC3F1B,KAAK4yD,aAAe,IAAIzB,IAAwCzvD,GAAM1B,KAAK2yD,YAAYjxD,KACvF1B,KAAK6yD,YAAc,IAAI1B,IAAsCzvD,GAAM1B,KAAK2yD,YAAYjxD,KACpF1B,KAAKujD,SAAW,IAAI4N,IAA4CzvD,GAAM1B,KAAK2yD,YAAYjxD,KAGvF1B,KAAK8yD,iBAAmB,IAAIrC,GAAY,wBAAyB,CAAC,mBAAoB,iBAAkB,gBAAiB,cAAc9vD,QACvIX,KAAK+yD,mBAAqB,IAAItC,GAAY,kCAAmC,CAAC,kBAAkB9vD,QAU5F8xD,GAMFzyD,KAAKgzD,aAAe,IAAIvC,GAAY,4BAA6B,CAAC,gBAAgB9vD,QAClFX,KAAK8yD,iBAAiBjC,aAAaoC,IAC7BA,GACFjzD,KAAKgzD,aAAaphD,MAAMqhD,GAG1BjzD,KAAK+yD,mBAAmBlC,aAAa1+C,IAE/BA,GACFnS,KAAKgzD,aAAaphD,MAAMO,GAG1BnS,KAAK4zB,QAAQlc,MAAM,0BAEnB1X,KAAK4nD,iBACF9lD,MAAMi5C,IAEL/6C,KAAKkzD,kBAAkBhwD,KAAK63C,GAC5B/6C,KAAKgzD,aAAa/B,OAAO,0CAA4ClW,EAAE7xC,GAAK,IAAI,IAEjFW,OAAOspD,IACNnzD,KAAK4zB,QAAQlc,MAAM,8BAAgCy7C,GACnDnzD,KAAKgzD,aAAa/B,QAAQ,GAC1B,IAGNjxD,KAAKozD,oBAAoB,KAI3BpzD,KAAKgzD,aAAehzD,KAAK8yD,iBAG3B9yD,KAAK44B,QAAQyxB,sBAAsB3oD,IACjC1B,KAAKqzD,0BAA0B3xD,EAAE,IAEnC1B,KAAK44B,QAAQ0xB,sBAAsB5oD,IACjC1B,KAAKszD,0BAA0B5xD,EAAE,IAEnC1B,KAAK44B,QAAQ2xB,wCAAwC7oD,IACnD1B,KAAKuzD,oCAAoC7xD,EAAE,IAEzC83C,GACFA,EAAQqV,0BAA0B7uD,KAAKwzD,+BAA+BtxC,KAAKliB,OAI7EA,KAAK44B,QAAQztB,OAKbnL,KAAKyzD,oBAULzzD,KAAK44B,QACF4sB,YACA1jD,MAAM4xD,IACL1zD,KAAK2zD,iBAAiB,IAEvB9pD,OAAO+H,IAEND,QAAQ2b,IAAI1b,EAAM,IA1GbgiD,cACT,MAAmC,OAA5B5zD,KAAK44B,QAAQ2rB,WAGXyK,uBACT,OAAOhvD,KAAKkzD,kBAGHlE,qBAAiBlsD,GAC1B,MAAM,IAAIiE,MAAM,eAqGX6mB,MAAM9b,GACX,MAAMyD,EAAU,IAAIpU,SAAyB,CAACC,EAASC,KACrDrB,KAAKgzD,aAAanC,aACf1+C,IACMA,EAGH9Q,EAAOrB,KAAKgzD,aAAa9B,YAFzB9vD,EAAQpB,QAIV,IAGN,OAAOw8C,GAAQr7C,QAAQ4gB,IAAI,CAAC/hB,KAAK44B,QAAQhL,QAASrY,IAAUzT,MAAK,IAAM9B,OAAO8R,GAMzE43C,mBACL,OAAO1pD,KAAK0yD,eAAevrD,MAQtB+1C,gBAAgBt4C,GACrB,OAAO5E,KAAK0yD,eAAed,UAAUhtD,GAYhC+gD,qBACLC,EACAiO,EACAC,EACAtlD,EACA9J,EACAoN,GAuEA,OAAO0qC,GAtES,IAAIr7C,SAAsB,CAACC,EAASC,KAGlD,GAAIy5C,GAAuB8K,GAEzB,YADAvkD,EAAO,kDAGT,IAAK+5C,GAAcwK,GAEjB,YADAvkD,EAAO,qCAKT,IAAKy5C,GADW96C,KAAKk9C,gBAAgB0I,IAGnC,YADAvkD,EAAO,kBAAoBukD,EAAmB,oBAKhD,IAAImO,EACJ,GAAI1S,GAAiBwS,GAEnB,YADAxyD,EAAO,0CAIP0yD,EADE3Y,GAAcyY,GACE,CAAEhwD,KAAOgwD,EAA4BjvD,KAAM,GAAI+0C,eAAe,EAAOj5C,UAAW,IAE/EmzD,EAIrB,MAAMG,EAAwC,GAC9C,IAAK3S,GAAiByS,IAAsBxY,GAAawY,GAEvD,IAAK,MAAMvhD,KAASuhD,EAAmB,CACrC,MAAMx6C,EAAOw6C,EAAkBvhD,GAC/B,GAAI6oC,GAAc9hC,GAAO,CACvB,MAAM1S,EAAa,CACjB/C,KAAOyV,EACP1U,KAAM,GACN+0C,eAAe,EACfj5C,UAAW,GACXuzD,WAAY,GACZC,kBAAmB,GACnBC,sBAAuB,IAEzBH,EAAkB9wD,KAAK0D,QAEvBotD,EAAkB9wD,KAAKoW,GAM7BtZ,KAAK44B,QACF+sB,qBAAqBC,EACpBmO,EACAC,EACAxlD,EACA9J,GACD5C,MAAMikD,IAEL/lD,KAAK2yD,YAAY5M,GACjB3kD,EAAQ2kD,EAAa,IAEtBl8C,OAAO+H,IACNvQ,EAAOuQ,EAAM,GACb,IAGkBE,GAOnBq0C,uBAAuBtiD,EAAciO,GAU1C,OAAO0qC,GATS,IAAIr7C,SAAsB,CAACC,EAASC,KAElD,MAAMu7C,EAAU58C,KAAKk9C,gBAAgBr5C,GACjCw9C,GAAiBzE,GACnBv7C,EAAO,kBAAoBwC,EAAO,qBAGpC7D,KAAK44B,QAAQutB,uBAAuBtiD,GAAM/B,MAAK,IAAMV,EAAQw7C,IAAUv7C,EAAO,IAExDyQ,GAWnBonC,SAAS6M,EAAsBphD,EAAkBmN,EAA+B2nB,GAwBrF,OAAO+iB,GAvBS,IAAIr7C,SAAkB,CAACC,EAASC,KAG1CggD,GADYrhD,KAAKk9C,gBAAgB6I,IAEnC1kD,EAAO,kBAAoB0kD,EAAe,qBAI5C/lD,KAAK44B,QACFouB,iBAAiBjB,EAAcphD,EAAS80B,GACxC33B,MAAMsyD,IAELp0D,KAAK6yD,YACFhB,UAAUuC,GACVtyD,MAAMw8C,IACLl9C,EAAQk9C,EAAI,IAEbz0C,OAAOsI,GAAQ9Q,EAAO8Q,IAAK,IAE/BtI,OAAOsI,IACN9Q,EAAO8Q,EAAI,GACX,IAEkBL,GAGnBuiD,4BAA4BjnC,GACjCptB,KAAK0yD,eAAex8B,WAAU,CAACo+B,EAAI3vD,KACjCyoB,EAAQknC,EAAI3vD,EAAQd,KAAK,IAOtB8lD,iBACL,OAAO3pD,KAAK4yD,aAAazrD,MAQpBi6C,cAAcx8C,GACnB,OAAO5E,KAAK4yD,aAAahB,UAAUhtD,GAa9B2hD,sBACLnN,EACAmb,EACAziD,GAuBA,OAAO0qC,GAtBS,IAAIr7C,SAAa,CAACC,EAASC,KACzC,GAAIy5C,GAAuB1B,GACzB/3C,EAAO,+BADT,CAKA,GAAImzD,GAAcpb,GAChBA,EAAaA,EAAWqb,eACnB,IAAKrZ,GAAchC,GAExB,YADA/3C,EAAO,iEAITrB,KAAK44B,QACF2tB,sBAAsBnN,EAAYmb,GAClCzyD,MAAMgB,IACL1B,EAAQ0B,EAAE,IAEX+G,OAAOsI,IACN9Q,EAAO8Q,EAAI,IACX,IAEkBL,GASnB80C,wBAAwBxN,EAAoBtnC,GAqBjD,OAAO0qC,GApBS,IAAIr7C,SAAa,CAACC,EAASC,KACrCy5C,GAAuB1B,GACzB/3C,EAAO,2BAIJ+5C,GAAchC,GAKnBp5C,KAAK44B,QACFguB,wBAAwBxN,GACxBt3C,MAAMgB,IACL1B,EAAQ0B,EAAE,IAEX+G,OAAOsI,IACN9Q,EAAO8Q,EAAI,IAVb9Q,EAAO,gCAWL,IAEkByQ,GAQnB83C,cAAc7D,GACnB,IAAIzH,EAAMt+C,KAAK6yD,YAAY1rD,MAE3B,GADAm3C,EAAMA,EAAI50C,QAAQnG,GAAMA,EAAEy5C,YACrB+I,EACH,OAAOzH,EAET,IAAIl7B,EAAa2iC,EACjB,GAAI3K,GAAc2K,GAChB3iC,EAAQ,CAAC2iC,QACJ,GAAIA,aAAwBrN,GACjCt1B,EAAQ,CAAC2iC,EAAanhD,WACjB,KAAImhD,aAAwBpmD,OAGjC,MAAM,IAAIoH,MAAM,2CAA6Cg/C,GAG/D,OAAOzH,EAAI50C,QAAQ4qD,IACjB,MAAMzwD,EAAOywD,EAAGzwD,KAChB,gBf/YkB6wD,EAAYC,GAClC,IAAK,IAAIpiD,EAAQ,EAAGA,EAAQmiD,EAAM/zD,OAAQ4R,IACxC,GAAIoiD,EAAUD,EAAMniD,GAAQA,GAC1B,OAAO,EAGX,OAAO,CACT,CewYaqiD,CAAUxxC,GAAQ9iB,GAChBuD,EAAKqF,KAAO5I,EAAE4I,IACrB,IAOCo4C,gBAAgBp4C,GACrB,OAAOlJ,KAAK6yD,YAAYjB,UAAU1oD,GAS7B0+C,eAAeC,EAA2BzO,GA0E/C,OAzEgB,IAAIj4C,SAAwB,CAACC,EAASC,KAGpD,MAAM0nD,EAAmB/oD,KAAK44B,QAAQkwB,sBAOtC,GANIzH,GAAiBwG,KACnBA,EAAmBkB,EAAiBlB,kBAElCxG,GAAiBjI,KACnBA,EAAa2P,EAAiBC,oBAE5BlO,GAAuB1B,GACzB,MAAM,IAAIryC,MAAM,yCAGlB,MAAM8pB,EAAak4B,GAAoBA,EAAiBl4B,WAQxD,GAAIiqB,GAAuB+M,GACzB7nD,KAAK4zB,QAAQlc,MAAM,iCAAmC0hC,EAAa,YAAc2P,EAAiBG,mBAAqB,YAAcH,EAAiBE,0BAA4B,KAElLjpD,KAAK44B,QAAQkvB,eAAe1O,EAAY2P,EAAiBG,mBAAoBH,EAAiBE,2BAC3FnnD,KAAK9B,KAAKujD,SAASsO,UAAU3vC,KAAKliB,KAAKujD,WACvCzhD,MAAMi5C,GACDlqB,EACK7wB,KAAK6yD,YAAYhB,UAAUhhC,GAAY/uB,MAAMM,GAAW24C,IAExDA,IAGVj5C,MAAMi5C,IACL35C,EAAQ25C,EAAE,IAEXlxC,OAAOsI,IACNnS,KAAK4zB,QAAQhiB,MAAMO,EAAI,QAGtB,CAELnS,KAAK4zB,QAAQlc,MAAM,8BAAgCmwC,EAAmB,eAAiBzO,EAAa,KAGpG,MAAMyb,EAAgB70D,KAAKujD,SAASqO,UAAU/J,GAC9C,IAAK/M,GAAuB+Z,GAG1B,OAFA70D,KAAK4zB,QAAQlc,MAAM,mBAAqBmwC,EAAmB,iDAC3DzmD,EAAQyzD,GAKV,MAAMC,EAAqB,CAACvxD,EAAaw3C,EAAmBr5C,KAC1D,GAAImmD,IAAqB9M,EAAE7xC,IACrBxH,IAAM24C,GAAgB+H,6BAA8B,CAElDf,GADatG,EAAErB,WAEjBr4C,EAAO,sBAETrB,KAAK4zB,QAAQ7H,MAAM,4BAA8B87B,EAAmB,KACpEzmD,EAAQ25C,GACR/6C,KAAK+0D,wBAAwBD,KAKnC90D,KAAKm+C,sBAAsB2W,GAC3B90D,KAAK4zB,QAAQ7H,MAAM,oCAAsC87B,EAAmB,KAC5E7nD,KAAK44B,QAAQgvB,eAAexO,EAAYyO,OAWvCmN,0BAA0B5nC,GAC/BptB,KAAK4yD,aAAa18B,WAAU,CAAC++B,EAAItwD,KAC/ByoB,EAAQ6nC,EAAItwD,EAAQd,KAAK,IAStBk6C,wBAAwB3wB,GAC7B,OAAOptB,KAAK6yD,YAAY38B,WAAU,CAACooB,EAAK35C,KACtC,GAAIA,EAAQd,OAASw2C,GAAgBC,aAAc,CACjD,MAAM16C,EAAK+E,EACXyoB,EAAQkxB,EAAK1+C,EAAEu6C,UAAWv6C,EAAEw6C,WAI9B,GAAIz1C,EAAQd,OAASw2C,GAAgB+L,SAClCzhD,EAAQd,OAASw2C,GAAgBC,cAC/B31C,EAA6Cw1C,UAAU7vC,aAAemwC,GAAc0X,UACvF,IAAK,MAAM5lD,KAAUvM,KAAKujD,SAASp8C,MAC7BoF,EAAOmtC,UAAYntC,EAAOmtC,SAASxwC,KAAOo1C,EAAIp1C,IAChDlJ,KAAKujD,SAASnuC,QAAQ,IAAIykC,GAA4BttC,EAAQ,IAAIytC,GAAmBK,GAAgBiI,iCAYxGnE,sBAAsB/wB,GAC3B,MAAM8nC,EAAkB,CAAC3oD,EAAwB5H,KAC/C,IAAIs1C,EAAYt1C,EAAQd,KACpBo2C,IAAcI,GAAgB6L,QAEhCjM,EAAY,UAEd7sB,EAAQ7gB,EAAOmtC,SAAUntC,EAAQ0tC,EAAU,EAG7C,OADAj6C,KAAKm1D,gBAAgBjyD,KAAK,CAACkqB,EAAS8nC,IAC7Bl1D,KAAKujD,SAASrtB,UAAUg/B,GAG1BH,wBAAwB3nC,GAC7B,MAAMgoC,EAAQp1D,KAAKm1D,gBAAgBlsC,MAAMmiB,GAASA,EAAK,KAAOhe,IAC1DgoC,IACFp1D,KAAKm1D,gBAAgBp7C,OAAO/Z,KAAKm1D,gBAAgBl6C,QAAQm6C,GAAQ,GACjEp1D,KAAKujD,SAASjtB,YAAY8+B,EAAM,KAY7Bxb,aAAaF,EAAoB2b,EAA4DvjD,GAoElG,OAAO0qC,GAnES,IAAIr7C,SAAwB,CAACC,EAASC,KAKpD,IAAIykD,EAuBAwP,EAtBJ,GALIxa,GAAuBua,IACzBh0D,EAAO,2BAIL+5C,GAAcia,GAChBvP,EAAmB,CAAEjiD,KAAOwxD,EAAsCzwD,KAAM,GAAI+0C,eAAe,EAAOj5C,UAAW,SACxG,GAAI20D,aAAqChc,GAC9CyM,EAAmB,CACjBjiD,KAAOwxD,EAAkCxxD,MAAQwxD,EAA0BnsD,GAC3EtE,KAAMywD,EAA0BzwD,MAASywD,EAAkCxxD,MAAQwxD,EAA0BnsD,GAC7GywC,eAAe,OAEZ,CAEL,MAAM4b,EAAwB,CAAC,OAEzBC,EAAyC,GAE/Ch2D,OAAO2E,KAAKkxD,GAA2B/uD,SAAShC,KACZ,IAA9BixD,EAAYt6C,QAAQ3W,KACtBkxD,EAAkClxD,GAAO+wD,EAA0B/wD,OAGvEwhD,EAAmB0P,EAIrB,IAAK1a,GAAuBgL,EAAiBmO,YAE3C,GADAqB,EAAmBxP,EAAiBmO,WACJ,iBAArBqB,EAA+B,CACxC,MAAM9b,EAAUx5C,KAAKy5C,WAAW,CAAE51C,KAAMyxD,KACnCxa,GAAuBtB,IAAYA,EAAQ74C,OAAS,IACvDmlD,EAAiBmO,WAAaza,EAAQ,GAAGtwC,SAEtC,GAAK4xC,GAAuBwa,EAAiBzxD,MAKxCi3C,GAAuBwa,EAAiBpuC,YAClD4+B,EAAiBmO,WAAaqB,EAAiBpuC,cANU,CACzD,MAAMsyB,EAAUx5C,KAAKy5C,WAAW,CAAE51C,KAAMyxD,EAAiBzxD,QACpDi3C,GAAuBtB,IAAYA,EAAQ74C,OAAS,IACvDmlD,EAAiBmO,WAAaza,EAAQ,GAAGtwC,IAO/ClJ,KAAK44B,QAAQghB,aAAaF,GAAYA,EAASxwC,GAAI48C,GAChDhkD,MAAM2zD,IAELz1D,KAAK4zB,QAAQlc,MAAM,qDAAuD+9C,GAC1E,MAAMroC,EAAU,CAAC7gB,EAAwB5H,KAEnC4H,EAAOrD,KAAOusD,GAAS/b,IAAYntC,EAAOmtC,WAC5C15C,KAAK4zB,QAAQlc,MAAM,6BAA+B+9C,GAClDr0D,EAAQmL,GACRvM,KAAKujD,SAASjtB,YAAYlJ,KAK9BptB,KAAKujD,SAASrtB,UAAU9I,EAAQ,IAEjCvjB,OAAOsI,IACN9Q,EAAO8Q,EAAI,GACX,IAGkBL,GAWnBwrC,qBAAqB5D,EAAoBgc,EAAuD7xC,EAAkB/R,GAkDvH,OAAO0qC,GAjDS,IAAIr7C,SAA0B,CAACC,EAASC,KAClDy5C,GAAuBpB,IACzBr4C,EAAO,yBAELy5C,GAAuB4a,IACzBr0D,EAAO,oCAGJ1B,MAAMgG,QAAQ+vD,IACjBr0D,EAAO,0CAELy5C,GAAuBj3B,KACzBA,EAAU,KAGZ,MAAMimC,EAAwC,GAC9C4L,EAAoBpvD,SAASgM,IAC3B,IAAIwzC,EAWAwP,EACJ,GAVExP,EADE1K,GAAc9oC,GACG,CAAEzO,KAAOyO,EAAoB1N,KAAM,GAAI+0C,eAAe,EAAOj5C,UAAW,IAEvE4R,EAItBwzC,EAAiB6P,eAAgB,EACjC7P,EAAiBjiC,QAAUA,GAGtBi3B,GAAuBgL,EAAiBmO,YAG3C,GADAqB,EAAmBxP,EAAiBmO,WAC/BnZ,GAAuBwa,EAAiBzxD,OAEtC,IAAKi3C,GAAuBwa,EAAiBpuC,UAAW,CAC7D,MAAMsyB,EAAUx5C,KAAKy5C,WAAW,CAAEvwC,GAAIosD,EAAiBpuC,YAClD4zB,GAAuBtB,IAAYA,EAAQ74C,OAAS,IACvDmlD,EAAiBmO,WAAaza,EAAQ,GAAG31C,KAAKe,YAJhDkhD,EAAiBmO,WAAaqB,EAAiBzxD,KAQnDimD,EAAkB5mD,KAAK4iD,EAAiB,IAG1C,MAAM8P,EAAwC,GAC9C9L,EAAkBxjD,SAASghD,GAAOsO,EAAM1yD,KAAKlD,KAAK45C,aAAaF,EAAU4N,MAEzEnmD,QAAQ4gB,IAAI6zC,GAAO9zD,KAAKV,GAASyI,MAAMxI,EAAO,IAExByQ,GAWnBurC,oBAAoB3D,EAAoBntC,EAAwBuF,GACrE,MAAM+6C,EAAW7sD,KAAK44B,QAAQ8vB,aAAahP,EAASxwC,GAAIqD,EAAOrD,IAC5DpH,MAAK,IAAMyK,IAEd,OADAiwC,GAAQqQ,EAAU/6C,GACX+6C,EAWFrP,wBAAwB9D,EAAoBntC,EAAwBuF,GACzE,MAAM+6C,EAAW7sD,KAAK44B,QAAQ6wB,cAAc/P,EAASxwC,GAAIqD,EAAOrD,IAC7DpH,MAAK,IAAMyK,IAEd,OADAiwC,GAAQqQ,EAAU/6C,GACX+6C,EAUFlP,mBAAmBjE,EAAoB/0C,EAAiBmN,GAmB7D,OAAO0qC,GAlBS,IAAIr7C,SAAkB,CAACC,EAASC,KAC1Cy5C,GAAuBpB,IACzBr4C,EAAO,4BAMTrB,KAAK44B,QACFilB,sBAAsBnE,EAAU/0C,GAAS,GACzC7C,MAAMM,IACLhB,EAAQs4C,EAAS,IAElB7vC,OAAOsI,IACN9Q,EAAO8Q,EAAI,GACX,IAGkBL,GAYnB+rC,sBAAsBnE,EAAoB/0C,EAAcmN,GA2B7D,OAAO0qC,GA1BS,IAAIr7C,SAAkB,CAACC,EAASC,KAC1Cy5C,GAAuBpB,IACzBr4C,EAAO,4BAGT,MAAMsmD,EAAc,GACpB,IAAK,MAAMrjD,KAAOK,EACZA,EAAQ9E,eAAeyE,IAAyB,OAAjBK,EAAQL,IACzCqjD,EAAYzkD,KAAKoB,GAGrB,IAAK,MAAMuxD,KAAclO,SAChBhjD,EAAQkxD,GAGjB71D,KAAK44B,QACFilB,sBAAsBnE,EAAU/0C,GAAS,EAAOgjD,GAChD7lD,MAAMM,IAELhB,EAAQs4C,EAAS,IAElB7vC,OAAOsI,IACN9Q,EAAO8Q,EAAI,GACX,IAGkBL,GAUnBusC,gCAAgCjxB,GACrCptB,KAAK6yD,YAAY38B,WAAU,CAACooB,EAAK35C,KAC/B,GAAIA,EAAQd,OAASw2C,GAAgBG,sBAAuB,CAC1D,MAAMoD,EAAgBj5C,EACtByoB,EAAQkxB,EAAKV,EAAcj5C,QAASi5C,EAAclsB,QAASksB,EAAcjsB,aASxE4sB,aAAa7E,EAAoB5nC,GAEtC,OAAO0qC,GADSx8C,KAAK44B,QAAQ2lB,aAAa7E,GAClB5nC,GAQnB2nC,WAAW/vC,GAChB,GAAI23C,GAAiB33C,GACnB,OAAO1J,KAAKujD,SAASp8C,MAGvB,IAAKk6C,GAAiB33C,EAAOR,IAC3B,MAAO,CAAClJ,KAAKujD,SAASqO,UAAUloD,EAAOR,KAKzC,OAFmBlJ,KAAKujD,SAASp8C,MAEfuC,QAAQqxC,IAExB,IAAKsG,GAAiB33C,EAAO7F,OAASk3C,EAAEl3C,KAAKqF,KAAOQ,EAAO7F,KACzD,OAAO,EAGT,IAAKw9C,GAAiB33C,EAAO9E,OAASm2C,EAAEn2C,OAAS8E,EAAO9E,KACtD,OAAO,EAGT,IAAKy8C,GAAiB33C,EAAOmnB,YAAa,CACxC,GAAIiqB,GAAuBC,EAAErB,UAC3B,OAAO,EAGT,GAAIqB,EAAErB,SAASxwC,KAAOQ,EAAOmnB,WAC3B,OAAO,EAIX,OAAO,CAAI,IAIRswB,gBAAgBj4C,GACrB,OAAOlJ,KAAK44B,QAAQuoB,gBAAgBj4C,GAG/B84C,gBAAgB94C,EAAY64C,EAAsBjwC,GAOvD,OAAO0qC,GANS,IAAIr7C,SAAa,CAACC,EAASC,KACzCrB,KAAK44B,QAAQopB,gBAAgB94C,EAAI64C,GAC9BjgD,MAAK,IAAMV,MACXyI,OAAOsI,GAAQ9Q,EAAO8Q,IAAK,IAGRL,GAGnBmwC,YAAY/4C,GACjB,OAAOlJ,KAAK44B,QAAQqpB,YAAY/4C,GAG3B24C,eAAe34C,EAAY04C,GAChC,OAAO5hD,KAAK44B,QAAQipB,eAAe34C,EAAI04C,GAGlCF,oBAAoBx4C,EAAY6gD,GACrC,OAAO/pD,KAAK44B,QAAQ8oB,oBAAoBx4C,EAAI6gD,GAGvCnzB,MAAM8iB,EAAoBuQ,EAA4Bn4C,GAkB3D,OAAO0qC,GAjBS,IAAIr7C,SAAa,CAACC,EAASC,KACpCq4C,GACHr4C,EAAO,4BAGTrB,KAAK44B,QAAQoxB,cAActQ,EAASxwC,GAAI+gD,GACrCnoD,MAAM+uB,IACL7wB,KAAK6yD,YACFhB,UAAUhhC,GACV/uB,MAAMw8C,IACLl9C,EAAQk9C,EAAI,IAEbz0C,OAAOsI,GAAQ9Q,EAAO8Q,IAAK,IAE/BtI,OAAOsI,GAAQ9Q,EAAO8Q,IAAK,IAGRL,GAGnB2sC,iBAAiBr9B,EAAciX,EAAY5a,EAAc3L,GAE9D2L,EAAMA,GAAO,GAkCb,OAAO++B,GAhCS,IAAIr7C,SAAoC,CAACC,EAASC,KAGhE,IADqBrB,KAAK6yD,YAAYjB,UAAUxwC,GAG9C,YADA/f,EAAO,iCAAmC+f,GAK5C,GADmBphB,KAAK6yD,YAAYjB,UAAUv5B,GAM9C,OAAOr4B,KAAK44B,QAAQ6lB,iBAAiBr9B,EAAMiX,EAAI5a,GAC5C3b,MAAMyS,IACL,MAAMqqC,EAAWrqC,EAAK8jB,GAChBlyB,EAAQoO,EAAK6nC,WACb+C,EAAY5qC,EAAKuhD,YAEvB91D,KAAK6yD,YAAYhB,UAAUjT,GAAU98C,MAAMw8C,IACzCA,EAAIY,mBAAmBC,GACvB,MAAM4W,EAAezX,EAAIe,SAAS31C,QAAQssD,GAAMA,EAAEha,UAAY71C,EAAM61C,UAAS,GAE7E56C,EAAQ20D,EAAa,GACrB,IAEHlsD,OAAOsI,IACN9Q,EAAO8Q,EAAI,IAlBb9Q,EAAO,iCAAmCg3B,EAmBxC,IAGkBvmB,GAGnBuqC,iBACLxrB,EACAurB,EACAtqC,GA2BA,OAAO0qC,GA1BS,IAAIr7C,SAAkB,CAACC,EAASC,IACvCrB,KAAK44B,QAAQyjB,iBAAiBxrB,EAAYurB,GAC9Ct6C,MAAiB,KAMhB9B,KAAK6yD,YACFhB,UALsBvmD,WAMtBxJ,MAAM0uD,IACLA,EAAOtR,mBALc5zC,WAOrBtL,KAAK6yD,YACFhB,UATkBvmD,WAUlBxJ,MAAMk9C,IACL59C,EAAQ49C,EAAO,GACf,IAELn1C,OAAOsI,GAAQ9Q,EAAO8Q,IAAK,IAE/BtI,OAAOsI,IACN9Q,EAAO8Q,EAAI,MAIOL,GAGnB6sC,4BAA4B7sC,GACjC9R,KAAKi2D,mBAAmB/yD,KAAK4O,GAGxBitC,4BAA4BjtC,GACjC9R,KAAKk2D,mBAAmBhzD,KAAK4O,GAGxBqkD,mCAAmCrkD,GACxC9R,KAAKo2D,4BAA4BlzD,KAAK4O,GAIhC6gD,YAAY5Y,GAClBA,EAAOZ,SAAWn5C,KAGZ2zD,kBACN3zD,KAAK4zB,QAAQlc,MAAM,2BAMnB1X,KAAK44B,QAAQ8wB,mBACV5nD,MAAMwyD,IACLt0D,KAAK0yD,eAAe7gD,IAAIyiD,GACxBt0D,KAAK8yD,iBAAiB7B,OAAO,gBAAgB,IAE9CpnD,OAAO+H,IACN5R,KAAK4zB,QAAQhiB,MAAMA,GACnB5R,KAAK8yD,iBAAiBlhD,MAAM,sEAAwEA,EAAM,IAG9G5R,KAAK44B,QAAQ+wB,iBACV7nD,MAAMmzD,IACLj1D,KAAK4yD,aAAa/gD,IAAIojD,GACtBj1D,KAAK8yD,iBAAiB7B,OAAO,mBAAmB,IAEjDpnD,OAAO+H,IACN5R,KAAK4zB,QAAQhiB,MAAMA,GACnB5R,KAAK8yD,iBAAiBlhD,MAAM,oEAAsEA,EAAM,IAG5G5R,KAAK44B,QAAQgxB,gBACV9nD,MAAMu0D,IACLr2D,KAAK6yD,YAAYhhD,IAAIwkD,GACrBr2D,KAAK8yD,iBAAiB7B,OAAO,iBAAiB,IAE/CpnD,OAAO+H,IACN5R,KAAK4zB,QAAQhiB,MAAMA,GACnB5R,KAAK8yD,iBAAiBlhD,MAAM,0EAA4EA,EAAM,IAGlH5R,KAAK44B,QAAQixB,qBACV/nD,MAAM4xD,IACL1zD,KAAKujD,SAAS1xC,IAAI6hD,GAClB1zD,KAAK8yD,iBAAiB7B,OAAO,cAAc,IAE5CpnD,OAAO+H,IACN5R,KAAK4zB,QAAQhiB,MAAMA,GACnB5R,KAAK8yD,iBAAiBlhD,MAAM,wEAA0EA,EAAM,IAI1G6hD,oBACNzzD,KAAK4zB,QAAQlc,MAAM,yBAMnB1X,KAAK44B,QAAQ6sB,4BAA4Bl+B,IACvCvnB,KAAK0yD,eAAet9C,QAAQmS,EAAM,IAGpCvnB,KAAK44B,QAAQytB,0BAA0B9+B,IACrCvnB,KAAK4yD,aAAax9C,QAAQmS,EAAM,IAGlCvnB,KAAK44B,QAAQwvB,wBAAwB7gC,IACnCvnB,KAAKujD,SAASnuC,QAAQmS,EAAM,IAG9BvnB,KAAK44B,QAAQkuB,wBAAwBv/B,IACnCvnB,KAAK6yD,YAAYz9C,QAAQmS,EAAM,IAI3B8rC,0BAA0B9+C,GAEhC,MAAMqqC,EAAWrqC,EAAK8jB,GAChB+jB,EAAa7nC,EAAK6nC,WAClB0Z,EAAcvhD,EAAKuhD,YAEzB91D,KAAK6yD,YAAYhB,UAAUjT,GAAU98C,MAAMw8C,IACzCA,EAAIY,mBAAmB4W,GACvB,MAAMQ,EAA4BhY,EAAIe,SAAS31C,QAAQssD,GAAMA,EAAEha,UAAYI,EAAWJ,UAAS,GAE/Fh8C,KAAKi2D,mBAAmB3vD,SAASwL,IAC/B,IACEA,EAASwsC,EAAKgY,GACd,MAAOnkD,GACP,UAEF,IAKEmhD,0BAA0B/+C,GAChC,MAAMsqC,EAAWtqC,EAAKgiD,cAChB3X,EAAWrqC,EAAKiiD,cAChBV,EAAcvhD,EAAKuhD,YACnB1Z,EAAa7nC,EAAK6nC,WAExBp8C,KAAK6yD,YAAYhB,UAAUhT,GAAU/8C,MAAM0uD,IAEzCA,EAAOtR,mBAAmB4W,GAE1B91D,KAAK6yD,YAAYhB,UAAUjT,GAAU98C,MAAMk9C,IAEzCh/C,KAAKk2D,mBAAmB5vD,SAASwL,IAC/B,IACEA,EAASktC,EAAQwR,EAAQpU,GACzB,MAAOjqC,GACP,UAEF,GACF,IAIEohD,oCAAoCh/C,GAC1C,MAAMrL,EAAKqL,EAAKrL,GACV4sD,EAAcvhD,EAAKuhD,YAEnBxX,EAAMt+C,KAAK6yD,YAAYjB,UAAU1oD,GACnCo1C,GACFA,EAAIY,mBAAmB4W,GAInB1C,qBACNpzD,KAAK44B,QAAQ4xB,yBACV1oD,MAAMuM,IAGDA,GACF7O,OAAO2E,KAAKkK,GAAK/H,SAAShC,IACxB,MAAM8vD,EAAQ9vD,EACRwxD,EAAcznD,EAAI/J,GAElBg6C,EAAMt+C,KAAK6yD,YAAYjB,UAAUwC,GACnC9V,GACFA,EAAIY,mBAAmB4W,MAK7B91D,KAAK+yD,mBAAmB9B,OAAO,+BAA+B,IAE/DpnD,OAAOsI,IACNnS,KAAK+yD,mBAAmBnhD,MAAM,+BAAiCO,EAAI,IAIjEqhD,+BAA+B9X,GACrC,IAAKA,EAAI7qB,WACP,OAGF,MAAMytB,EAAMt+C,KAAK6yD,YAAYjB,UAAUlW,EAAI7qB,YACtCytB,GAKAA,EAAInB,OAILmB,EAAInB,MAAMsC,iBAAiBv2C,KAAOwyC,EAAIxyC,IAI1ClJ,KAAKo2D,4BAA4B9vD,SAASwL,IACxC,IACEA,EAASwsC,EAAK5C,EAAIQ,YAClB,MAAOx6C,GACP,kBC/qCK+0D,GAcXx2D,YAAY47C,EAA0BsJ,GACpCnlD,KAAKuuD,GAAK1S,EACV77C,KAAK02D,IAAMvR,EAEXnlD,KAAK22D,cAAgB,CACnBxvD,IAAKnH,KAAK42D,yBAAyB10C,KAAKliB,MACxCsjC,SAAUtjC,KAAKuuD,GAAG5I,qBAAqBzjC,KAAKliB,KAAKuuD,IACjDrsB,WAAYliC,KAAKuuD,GAAGpI,uBAAuBjkC,KAAKliB,KAAKuuD,IACrDr4B,UAAWl2B,KAAKuuD,GAAG8F,4BAA4BnyC,KAAKliB,KAAKuuD,IACzDj4B,iBAAahrB,EACb4tC,SAAUl5C,KAAKuuD,GAAGrV,SAASh3B,KAAKliB,KAAKuuD,KAGvCvuD,KAAKu9C,YAAc,CACjBp2C,IAAKnH,KAAK62D,uBAAuB30C,KAAKliB,MACtC82D,gBAAiB92D,KAAKuuD,GAAGhI,sBAAsBrkC,KAAKliB,KAAKuuD,IACzDwI,kBAAmB/2D,KAAKuuD,GAAG3H,wBAAwB1kC,KAAKliB,KAAKuuD,IAC7Dr4B,UAAWl2B,KAAKuuD,GAAGyG,0BAA0B9yC,KAAKliB,KAAKuuD,IACvDj4B,iBAAahrB,GAGftL,KAAKw5C,QAAU,CACbryC,IAAKnH,KAAKuuD,GAAG9U,WAAWv3B,KAAKliB,KAAKuuD,IAClCr4B,UAAWl2B,KAAKuuD,GAAGpQ,sBAAsBj8B,KAAKliB,KAAKuuD,IACnDyI,SAAUh3D,KAAKuuD,GAAG3G,eAAe1lC,KAAKliB,KAAKuuD,IAC3Cj4B,iBAAahrB,EACbnL,OAAQH,KAAKuuD,GAAG3U,aAAa13B,KAAKliB,KAAKuuD,KAGzCvuD,KAAKi3D,UAAY,CACf9vD,IAAKnH,KAAKuuD,GAAG3E,cAAc1nC,KAAKliB,KAAKuuD,IACrCr4B,UAAWl2B,KAAKuuD,GAAGxQ,wBAAwB77B,KAAKliB,KAAKuuD,IACrDj4B,iBAAahrB,GAIV4rD,WAAWplD,GAChB9R,KAAKuuD,GAAG5P,4BAA4B7sC,GAG/BgtC,WAAWhtC,GAChB9R,KAAKuuD,GAAGxP,4BAA4BjtC,GAG/BqlD,4BAA4BrlD,GACjC9R,KAAKuuD,GAAG4H,mCAAmCrkD,GAGrC8kD,yBAAyBhyD,GAC/B,OAAIy8C,GAAiBz8C,GACZ5E,KAAKuuD,GAAG7E,mBAEV1pD,KAAKuuD,GAAGrR,gBAAgBt4C,GAGzBiyD,uBAAuBjyD,GAC7B,OAAIy8C,GAAiBz8C,GACZ5E,KAAKuuD,GAAG5E,iBAEV3pD,KAAKuuD,GAAGnN,cAAcx8C,UCrEpBwyD,GAYXn3D,YAAY47C,EAA0BsJ,GACpCnlD,KAAKq3D,KAAOxb,EACZ77C,KAAK02D,IAAMvR,EACXnlD,KAAK+hB,IAAM,IAAI00C,GAAsB5a,EAASsJ,GASzCv3B,MAAM9b,GAUX,OAAO0qC,GATS,IAAIr7C,SAAa,CAACC,EAASC,KACzCrB,KAAKq3D,KAAKzpC,QACP9rB,MAAK,KACJV,EAAQpB,KAAK,IAEd6J,OAAOsI,IACN9Q,EAAO8Q,EAAI,GACX,IAEkBL,GAQfqzC,SACT,OAAOnlD,KAAK02D,IAUHY,YACT,YAA2BhsD,IAApBtL,KAAK02D,IAAInqD,OAQPgrD,iBACT,OAAOv3D,KAAKs3D,YAA+BhsD,IAAtBtL,KAAK02D,IAAIhd,SAYrBrD,UACT,GAAKr2C,KAAKs3D,MAIV,OAAKt3D,KAAKu3D,WAKHv3D,KAAK02D,IAAIhd,SAASrD,IAHhB,IAAIqE,GAAY,MAWpB8c,0BAEL,MAAO,UCpDEC,GAkBTx3D,YAAYuO,GACR,IAAKA,EACD,MAAM,IAAIzH,MAAM,0BAapB,IAAIyrD,EAIJ,GAbKnR,GAAiB7yC,EAAOkpD,YACzBzpC,GAAO+xB,MAAQxxC,EAAOkpD,UAGrB5c,GAAuBtsC,EAAO0E,UAC/B+a,GAAO2xB,WAAapxC,EAAO0E,QAK/BlT,KAAK23D,yBAAqD,IAA1BnpD,EAAOopD,eACvC53D,KAAK63D,0BAA4BJ,GAAeK,8BAA8BtpD,EAAOD,YAEjFvO,KAAK23D,yBACL,MAAM,IAAI5wD,MAAM,qBACb,IAAI/G,KAAK63D,0BAGZ,MAAM,IAAI9wD,MAAM,wDAGpB,GALIyrD,EAAS,IAAIt/B,GAAU1kB,IAKtBgkD,EACD,MAAM,IAAIzrD,MAAM,iEAGpB2zC,GAAYG,IAAMrsC,EAAO6nC,IACzB,MAAM0hB,EAAkB,IAAIxF,GAAgBC,GAAShkD,EAAOwpD,oBAAqBxpD,EAAOgrC,SAClF2L,EAAK,IAAI8S,GAAGF,EAAiBvpD,EAAOgrC,SAC1Cx5C,KAAKk4D,KAAO,IAAId,GAAYW,EAAiB5S,GAC7CnlD,KAAKm4D,cAAgBJ,EAAgBnqC,QAAQ9rB,MAAMM,GAAMpC,OApDtD8/C,qCAAqCvxC,GACxC,OAAsC,IAA/BA,EAAW4P,gBAQlBjR,UACA,OAAOlN,KAAKk4D,KAGZhrD,QAAI3L,GACJvB,KAAKk4D,KAAO32D,EAyCL62D,8BACP,OAAOp4D,KAAK23D,yBAGLU,+BACP,OAAOr4D,KAAK63D,0BAGTjqC,MAAM9b,GACT,OAAO0qC,GAAQx8C,KAAKm4D,cAAermD,ICxIpC,MAcMwmD,GAAqC,mCACrCC,GAAiB,eAOjBC,GAAoB,kBCrBjC,SAASrnD,GAAejG,GACpB,GAAIA,GAAWA,EAAQkG,eACiB,mBAA1BlG,EAAQkG,eACW,QAA1BlG,EAAQkG,eACkB,WAA1BlG,EAAQkG,eACkB,UAA1BlG,EAAQkG,cACX,MAAM,IAAIrK,MAAM,mIAA2ImE,EAAQkG,cAAgB,eAEvL,IAAIC,EAAoBnG,GAA4C,mBAA1BA,EAAQkG,eAAgClG,EAAQkG,cACtFE,EAAY,GAqEhB,SAASC,EAAaC,EAAmBlN,GACrC,IAAImN,EAAWD,aAA6BzK,MAAQyK,EAAoB,IAAIzK,MAAMyK,GAClF,GAAIH,EACAA,EAAkBI,OADtB,CAIA,IAAIpL,EAAM,qDAAwD/B,EAAM,aAAgBmN,EAASC,MACjG,GAAIxG,EACA,OAAQA,EAAQkG,eACZ,IAAK,MACD,OAAOO,QAAQC,MAAMvL,GACzB,IAAK,SACD,OACJ,IAAK,QACD,MAAM,IAAIU,MAAMV,GAG5BsL,QAAQC,MAAMvL,IAYlB,MAAO,CACHwL,IAlGJ,SAAavN,EAAKwN,EAAUC,GACxB,IAAIC,EAAkBV,EAAUhN,GA0BhC,OAzBK0N,IACDA,EAAkB,GAClBV,EAAUhN,GAAO0N,GAErBA,EAAgB9O,KAAK4O,GACjBC,GACAxE,YAAW,WACPwE,EAAmBzL,SAAQ,SAAU2L,GACjC,IAAI7K,EACJ,GAA8B,QAAzBA,EAAKkK,EAAUhN,UAAyB,IAAP8C,OAAgB,EAASA,EAAG8K,SAASJ,GACvE,IACQnS,MAAMgG,QAAQsM,GACdH,EAASjR,WAAMyK,EAAW2G,GAG1BH,EAASjR,WAAMyK,EAAW,CAAC2G,IAGnC,MAAOE,GACHZ,EAAaY,EAAK7N,SAI/B,GAEA,WACH,IAAI8N,EAAYd,EAAUhN,GACrB8N,IASoB,KANzBA,EAAYA,EAAUhO,QAAO,SAAUiO,EAAKC,EAASC,GAIjD,OAHMD,IAAYR,GAAYO,EAAI1R,SAAW4R,GACzCF,EAAInP,KAAKoP,GAEND,IACR,KACW1R,cACH2Q,EAAUhN,GAGjBgN,EAAUhN,GAAO8N,KAyDzBI,QArDJ,SAAiBlO,GAEb,IADA,IAAImO,EAAe,GACVC,EAAK,EAAGA,EAAKhS,UAAUC,OAAQ+R,IACpCD,EAAaC,EAAK,GAAKhS,UAAUgS,GAErC,IAAIV,EAAkBV,EAAUhN,GAChC,IAAK0N,GAA8C,IAA3BA,EAAgBrR,OACpC,MAAO,GAEX,IAAIgS,EAAU,GAWd,OAVAX,EAAgB1L,SAAQ,SAAUwL,GAC9B,IACI,IAAIlQ,EAASkQ,EAASjR,WAAMyK,EAAWmH,GACvCE,EAAQzP,KAAKtB,GAEjB,MAAOuQ,GACHQ,EAAQzP,UAAKoI,GACbiG,EAAaY,EAAK7N,OAGnBqO,GAkCPC,MAbJ,WACItB,EAAY,IAaZuB,SAXJ,SAAkBvO,GACQgN,EAAUhN,WAIzBgN,EAAUhN,IAQzB,CAEA6M,GAAe2B,QAAU3B,GACzB,OAAiBA,YCrHDsnD,GAAarvC,GACzB,OAAKA,EAGE5pB,OAAO2E,KAAKilB,GAAQ/a,KAAK/J,GAAQ8kB,EAAO9kB,KAFpC,EAGf,UAEgBo0D,GAAY7mC,GACxB,IAAIjwB,EACJ,IACIA,EAASkM,KAAKkR,MAAMlR,KAAKC,UAAU8jB,GAAO,KAC5C,MAAOjgB,GACLhQ,EAAS,GAGb,OAAOA,CACX,OCPqB+2D,GAOjB14D,YAAoB24D,EAAqClwD,EAAuBu0C,GAA5Dj9C,iBAAA44D,EAAqC54D,WAAA0I,EAAuB1I,UAAAi9C,EALxEj9C,eAA8B64D,KAUlCD,EAAYE,mBAAmB9oD,IACvBA,EAASsI,aAAetI,EAASsI,YAAY1T,OAAS5E,KAAK0I,OAI/D1I,KAAK4W,UAAUpE,QAAQ,kBAAmBxC,EAAS,IAGvD4oD,EAAYG,mBAAmB/oD,IACvBA,EAASsI,aAAetI,EAASsI,YAAY1T,OAAS5E,KAAK0I,OAI/D1I,KAAK4W,UAAUpE,QAAQ,kBAAmBxC,EAAS,IAGvD4oD,EAAYI,cAAcC,IAClBA,EAAIr0D,OAAS5E,KAAK0I,OAItB1I,KAAK4W,UAAUpE,QAAQ,aAAcymD,EAAI,IAG7CL,EAAYM,cAAcD,IAClBA,EAAIr0D,OAAS5E,KAAK0I,OAItB1I,KAAK4W,UAAUpE,QAAQ,aAAcymD,EAAI,IAG7CL,EAAYO,gBAAgBF,IACpBA,EAAIr0D,OAAS5E,KAAK0I,QAGtB1I,KAAKo5D,OAAOC,SAAU,EACtBr5D,KAAK4W,UAAUpE,QAAQ,eAAgBymD,GAAI,IAG/CL,EAAYU,kBAAkBL,IACtBA,EAAIr0D,OAAS5E,KAAK0I,QAGtB1I,KAAKo5D,OAAOC,SAAU,EACtBr5D,KAAK4W,UAAUpE,QAAQ,iBAAkBymD,GAAI,IAIjDr0D,WAAiB,OAAO5E,KAAK0I,MAC7B2D,YAAkB,OAAOrM,KAAKo5D,OAAOG,MACrC3kD,cAAoB,OAAO5U,KAAKo5D,OAAOI,QACvCC,gBAAuB,OAAOz5D,KAAKo5D,OAAOM,UAC1CC,cAAqB,OAAO35D,KAAKo5D,OAAOQ,QACxCC,cAAoB,OAAO75D,KAAKo5D,OAAOU,QACvCC,aAAoB,OAAO/5D,KAAKo5D,OAAOY,SACvCC,gBAAsB,OAAOj6D,KAAKo5D,OAAOc,gBACzCnU,mBAAyB,OAAO/lD,KAAKo5D,OAAO1gB,aAC5CsQ,yBAA+B,OAAOhpD,KAAKo5D,OAAOe,mBAClDC,qBACA,OAAKp6D,KAAKo5D,OAAOiB,UAGV3B,GAAY14D,KAAKo5D,OAAOiB,WAFpB,GAIXC,oBAA2B,OAAOt6D,KAAKo5D,OAAOmB,cAC9CC,gBAAuB,OAAOx6D,KAAKo5D,OAAOC,UAAW,EACrDoB,WAAiB,OAAOz6D,KAAKo5D,OAAOsB,KACpCC,cAAoB,OAAO36D,KAAKo5D,OAAOwB,QACvCC,gBAAsB,OAAO76D,KAAKo5D,OAAO0B,UACzCC,qBACA,OAAK/6D,KAAKo5D,OAAO4B,eAGVtC,GAAY14D,KAAKo5D,OAAO4B,gBAFpB,GAIXC,iBACA,YAAoC3vD,IAA7BtL,KAAKo5D,OAAO1gB,cAA2D,KAA7B14C,KAAKo5D,OAAO1gB,aAG7Djf,oBACA,MAAO,CACHggC,UAAWz5D,KAAKo5D,OAAOM,UACvBG,QAAS75D,KAAKo5D,OAAOU,QACrBC,OAAQ/5D,KAAKo5D,OAAOY,SACpBC,UAAWj6D,KAAKo5D,OAAOc,gBACvBnU,aAAc/lD,KAAKo5D,OAAO1gB,aAC1B4hB,cAAet6D,KAAKo5D,OAAOmB,eAI/BtD,gBACA,OAAOj3D,KAAK44D,YAAY3B,YAAYvtD,QAAQsG,GAAyCA,EAASsI,YAAY1T,OAAS5E,KAAK0I,QAGxH7E,WACA,OAAO7D,KAAKo5D,OAAO8B,KAGnB7V,WACA,IAAKrlD,KAAKo5D,OAEN,MAAO,UAIX,GAAIp5D,KAAKo5D,OAAO+B,MAAoC,iBAArBn7D,KAAKo5D,OAAO+B,KACvC,OAAOn7D,KAAKo5D,OAAO+B,KAAKhvD,cAK5B,GAAInM,KAAKi7D,WACL,MAAO,UAIX,GAAIj7D,KAAKo5D,OAAOiB,WAAar6D,KAAKo5D,OAAOiB,UAAUhV,MAA8C,iBAA/BrlD,KAAKo5D,OAAOiB,UAAUhV,KACpF,OAAOrlD,KAAKo5D,OAAOiB,UAAUhV,KAAKl5C,cAItC,IAAIivD,EAAkBp7D,KAAKo5D,OAAOiC,sBAClC,GAAID,EAAiB,CAEjBA,EAAkBA,EAAgB/hD,MAAM,KAAKtU,KAAK,IAClD,MAAMu2D,EAAY,SACZC,EAAYH,EAAgBngD,QAAQqgD,GAC1C,IAAmB,IAAfC,EAAkB,CAClB,MAAMC,EAAiBD,EAAYD,EAAU36D,OACvC86D,EAAgBL,EAAgBngD,QAAQ,IAAMugD,GAC9CE,EAAQN,EAAgBrmD,OAAOymD,EAAgBC,EAAgBD,GACrE,GAAIE,GAA0B,iBAAVA,EAChB,OAAOA,EAAMvvD,eAMzB,MAAO,OAGJwvD,gBAAgBC,GACd57D,KAAKo5D,SACNp5D,KAAKo5D,OAAS,CAAEyC,KAAMD,EAAMC,OAGhCr8D,OAAO2E,KAAKy3D,GAAOt1D,SAAShC,IACvBtE,KAAKo5D,OAAe90D,GAAQs3D,EAAct3D,EAAI,IAIhDw3D,MAAMn3D,EAAmBuG,GAC5B,OAAO,IAAI/J,SAAoCisD,MAAOhsD,EAASC,WAC3D,MAAMuD,EAAO5E,KAAK0I,MAClB,IAAIqzD,EAAuB,IAC3B,GAAI5jB,GAAkBxzC,GAClBA,EAAU,QACP,GAAuB,iBAAZA,EACd,OAAOtD,EAAO,IAAI0F,MAAM,qDAG5B,GAAIoxC,GAAkBjtC,GAClBA,EAAU,QACP,GAAuB,iBAAZA,EACd,OAAO7J,EAAO,IAAI0F,MAAM,qDAG5B,IAAIi1D,YAAqB9wD,EAAQ+wD,gCAEjC,MAAMC,EAA8BhzD,IAChC,IAAIwkB,EAEJ,MAAM7J,EAAUtW,YAAW,KACnBmgB,GACAA,IAEJrsB,EAAO,2CAA2C6H,aAAclJ,KAAK4E,OAAO,GAC7Em3D,GAEGI,EAAY37D,IACVA,EAAE0I,KAAOA,IAGTwkB,IACAA,IACAA,OAAQpiB,GAEZwW,aAAa+B,GACbziB,EAAQZ,GAAE,EAIVktB,EADAsuC,EACQh8D,KAAK44D,YAAYwD,yBAAyBD,GAG1Cn8D,KAAK44D,YAAYE,kBAAkBqD,IAe7CE,SAXer8D,KAAKi9C,KAAK7tB,OH5MD,2BG6M1B,CACIysC,KAAMj3D,EACN03D,QAAS33D,EACT43D,QAASrxD,GAEb,OACA,CACIqxB,wBAAyBw/B,KAGQj/B,SAQzC,QAPiC,IAAtBu/B,EAAUx4C,UACjBk4C,EAAmC,IAApBM,EAAUx4C,cAEW,IAA7Bw4C,EAAUG,qBAAqE,IAA5BtxD,EAAQ+wD,kBAClED,EAAqBK,EAAUG,gBAG/BH,GAAaA,EAAUI,GACvB,GAA8B,cAA1Bz8D,KAAK44D,YAAYvT,KAAsB,CAGvC,MAAMr1C,EAAWhQ,KAAK44D,YAAY8D,sBAAsB,CACpDC,gBAAYrxD,EACZsxD,qBAAiBtxD,EACjBgxD,aAAShxD,EACTiuD,WAAOjuD,EACPuxD,gBAAYvxD,EACZmxD,GAAIJ,EAAUI,GACdZ,KAAMQ,EAAUR,OAEpBz6D,EAAQ4O,QAGRksD,EAA2BG,EAAUI,SAKzCr7D,OAAQkK,MAKbwtD,kBAAkBhnD,GACrB,OAAO9R,KAAK4W,UAAU/E,IAAI,kBAAmBC,GAG1CinD,kBAAkBjnD,GACrB,OAAO9R,KAAK4W,UAAU/E,IAAI,kBAAmBC,GAG1CgrD,YAAYhrD,GAMf,OALI9R,KAAKo5D,OAAOC,SACZ9rD,YAAW,KACPvN,KAAK4W,UAAUpE,QAAQ,eAAgBxS,KAAK,GAC7C,GAEAA,KAAK4W,UAAU/E,IAAI,eAAgBC,GAGvCirD,cAAcjrD,GAMjB,OAL4B,IAAxB9R,KAAKo5D,OAAOC,SACZ9rD,YAAW,KACPvN,KAAK4W,UAAUpE,QAAQ,iBAAkBxS,KAAK,GAC/C,GAEAA,KAAK4W,UAAU/E,IAAI,iBAAkBC,GAGzCkrD,UAAUlrD,GACb9R,KAAK4W,UAAU/E,IAAI,aAAcC,GAG9BmrD,UAAUnrD,GACb9R,KAAK4W,UAAU/E,IAAI,aAAcC,UCjSpBorD,GAajBj9D,YACYw3C,EACA0lB,EACAvE,EACA3b,EACA4V,EACAtP,EACR6Z,GANQp9D,SAAAy3C,EACAz3C,cAAAm9D,EACAn9D,iBAAA44D,EACA54D,UAAAi9C,EACAj9C,iBAAA6yD,EACA7yD,cAAAujD,EAlBJvjD,eAA8B64D,KAqB9BuE,IAIJp9D,KAAKq9D,4BAA8Br9D,KAAK44D,YAAYG,mBAAmB/oD,IAC/DA,EAAS9G,KAAOlJ,KAAKy3C,KAIzBz3C,KAAK4W,UAAUpE,QAAQ,UAAWxC,EAAS,IAG/ChQ,KAAKs9D,mCAAqCt9D,KAAK44D,YAAYwD,0BAA0BpsD,IAC7EA,EAAS9G,KAAOlJ,KAAKy3C,KAIzBz3C,KAAK4W,UAAUpE,QAAQ,WAAYxC,EAAS,KAIhD9G,SAAe,OAAOlJ,KAAKy3C,IAE3Bn/B,kBAA+C,OAAOtY,KAAK44D,YAAYtgD,YAAYtY,KAAKm9D,UAExFzjB,eACA,IAAK15C,KAAK6yD,YACN,MAAM,IAAI9rD,MAAM,+DAEpB,OAAO/G,KAAK6yD,YAAY9wC,IAAIk1C,UAAU9vD,MACjCuC,QAAQ6zD,GAAiDA,EAAiBr0D,KAAOlJ,KAAK6gD,cAAa,GAGxG2c,sBAA6B,OAAOx9D,KAAKy9D,iBAGzCC,wBACA,OAAO19D,KAAK44D,YAAY3B,YAAYvtD,QAAQlJ,GACjB,aAAvBA,EAAE8X,YAAYzU,MACdrD,EAAEqwB,YACFrwB,EAAEqwB,aAAe7wB,KAAK6gD,cAG1B8c,4BACA,GAAK39D,KAAK6gD,YAGV,OAAO7gD,KAAK09D,kBAAkBh0D,QAAQk0D,2BAAUA,wBAAuBJ,eAAe,IAAE,GAGxFjxD,aACA,IAAKvM,KAAKujD,SACN,MAAM,IAAIx8C,MAAM,4DAGpB,IAAI20C,EAAM17C,KAAKujD,SAAS8K,OAAO3kD,QAAQqxC,GAAMA,EAAE7xC,KAAOlJ,KAAKy3C,MAAK,GAMhE,OALKiE,GAAO17C,KAAK6yD,aAAe7yD,KAAK05C,UAAY15C,KAAK29D,wBAElDjiB,EAAM17C,KAAK29D,sBAAsBpxD,QAG9BmvC,EAGP/2C,wBACA,2BAAO3E,KAAK69D,yCAAmB79D,KAAKuM,6BAAQ5H,uBAAW,GAGvD0H,YAAkB,OAAOrM,KAAK89D,OAE9BC,yBAAgC,OAAO/9D,KAAKg+D,oBAE5CntC,iBAAuB,OAAO7wB,KAAK6gD,YAEnC0W,iBAAwB,OAAOv3D,KAAKi+D,YAEpCC,wBAA+B,OAAQl+D,KAAKi+D,YAE5C5nB,UACA,OAAOr2C,KAAKm+D,aAGTC,WAAWtsD,GAMd,OALI9R,KAAKm+D,cACL5wD,YAAW,KACPvN,KAAK4W,UAAUpE,QAAQ,WAAYxS,KAAK,GACzC,GAEAA,KAAK4W,UAAU/E,IAAI,WAAYC,GAGnCusD,UAAUvsD,GACb,OAAO9R,KAAK4W,UAAU/E,IAAI,UAAWC,GAKlCwsD,YACH,OAAO,IAAIn9D,SAAQ,CAACC,EAASC,KAEzB,MAAMO,EAAS5B,KAAKuM,OACpB,GAAI3K,EAEA,YADAR,EAAQQ,GAKZ,MAAMC,EAAO,CAAC+P,EAAerF,KACrBqF,GACAvQ,EAAOuQ,GAGPrF,GACAnL,EAAQmL,GAGZgB,YAAW,KACPuU,aAAa+B,GACb6J,GAAO,GACR,EAAE,EAIH7J,EAAUtW,YAAW,KACvB1L,EAAK,IAAIkF,MAAM,iCAAiC/G,KAAKy3C,OAAO,GAC7D,KAEG/pB,EAAQ1tB,KAAKujD,SAASgb,eAAexjB,IACnCA,EAAE7xC,KAAOlJ,KAAKy3C,KACd51C,OAAKyJ,EAAWyvC,KAEtB,IAIH4gB,gBAAgBC,GACnB57D,KAAK69D,gBAAkBjC,EAAMU,QAC7Bt8D,KAAK89D,OAASlC,EAAMrC,MACpBv5D,KAAKg+D,qBAAsB,EACvBpC,EAAMe,YAAmC,KAArBf,EAAMe,aAC1B38D,KAAK6gD,YAAc+a,EAAMe,WACzB38D,KAAKg+D,qBAAsB,GAE/Bh+D,KAAKy9D,iBAAmB7B,EAAMgB,iBACzB58D,KAAK6gD,aAAe7gD,KAAK69D,iBAAmB79D,KAAK69D,gBAAgBhtC,aAClE7wB,KAAK6gD,YAAc7gD,KAAK69D,gBAAgBhtC,YAE5C7wB,KAAKi+D,YAAc74D,QAAQpF,KAAK6gD,aAEhC7gD,KAAKw+D,2BAA2B5C,GAG7B4C,2BAA2B5C,GAC9B,IAAKA,EAAMiB,WACP,OAGJ,MAAM4B,EAA0C7C,EAAMiB,WAClD4B,GAAgBA,EAAa99D,OAAS,IAAMw3C,GAAkBsmB,EAAa,MAC3Ez+D,KAAKm+D,aAAeM,EAAa,IAIlCpoD,OACH,OAAO,IAAIlV,SAAQ,CAACC,EAASC,KACzB,MAAMi1B,EAAct2B,KAAK44D,YAAYG,mBAAmB/oD,IAChDA,EAAS9G,KAAOlJ,KAAKy3C,MACrBnhB,IACAl1B,QAIRpB,KAAKi9C,KAAK7tB,OJxLmB,0BI0LzB,CACIysC,KAAM77D,KAAKm9D,SACXV,GAAIz8D,KAAKy3C,MAEZ31C,MAAK,KAC4B,cAA1B9B,KAAK44D,YAAYvT,OACjBrlD,KAAK44D,YAAY8F,sBAAsB,CACnC7C,KAAM77D,KAAKm9D,SACXV,GAAIz8D,KAAKkJ,GACTozD,aAAShxD,EACTiuD,WAAOjuD,EACPqxD,gBAAYrxD,EACZsxD,qBAAiBtxD,EACjBuxD,gBAAYvxD,IAGhBlK,QAGPyI,OAAOsI,GAAa9Q,EAAO8Q,IAAK,IAItCwvC,WACH,OAAO3hD,KAAKi9C,KAAK7tB,OJjNoB,8BIiN2B,CAAEysC,KAAM77D,KAAKm9D,SAAUV,GAAIz8D,KAAKy3C,MAG7F51C,OAGH7B,KAAK4W,UAAUhE,QAEf5S,KAAKs9D,qCACLt9D,KAAKq9D,8BAGFsB,aACH,OAAOx9D,QAAQC,QAAQpB,KAAK2E,gBC1Ofi6D,GAMjB3+D,YACWolD,EACCpI,EACA4V,EACAtP,EACA3vB,EACAirC,GALD7+D,UAAAqlD,EACCrlD,UAAAi9C,EACAj9C,iBAAA6yD,EACA7yD,cAAAujD,EACAvjD,aAAA4zB,EACA5zB,qBAAA6+D,EAVJ7+D,WAA4C,GAC5CA,gBAA6B,GAC7BA,eAA8B64D,KAa/B74D,iBAAe4E,IAClB,GAAoB,iBAATA,EACP,MAAM,IAAImC,MAAM,yBAEpB,OAAO/G,KAAK8+D,MAAMl6D,EAAK,EAGpB5E,kBAAe,IACXR,OAAO2E,KAAKnE,KAAK8+D,OAAOzwD,KAAK/K,GAActD,KAAK8+D,MAAMx7D,KAG1DtD,eAAY,IACRA,KAAK++D,WAGT/+D,mBAAgB,KACnB,GAAIA,KAAK6+D,iBAAmB,EAAG,CAE3B,MAAM1rB,EAAa5mC,OAAOO,SAAS0mC,cACnC,OAAOxzC,KAAK++D,WAAWr1D,QAAQlJ,GAAMA,EAAE0I,KAAOiqC,IAAY,GAG9C,EAGbnzC,oBAAkB47D,IACrB,MAAM1yD,EAAKlJ,KAAKg/D,UAAUpD,GAC1B57D,KAAK4zB,QAAQ7H,MAAM,cAAc7iB,KACjClJ,KAAK8+D,MAAM51D,GAAM,IAAIyvD,GAAgB34D,KAAMkJ,EAAIlJ,KAAKi9C,MACpD,MAAMgc,EAAMj5D,KAAKi/D,oBAAoBrD,GAErC57D,KAAK4W,UAAUpE,QAAQ,WAAYymD,GAEnCj5D,KAAK4W,UAAUpE,QAAQ,eAAgBymD,EAAI,EAGxCj5D,sBAAoB47D,IAGvB,MAAM3C,EAAMj5D,KAAKi/D,oBAAoBrD,GAErC57D,KAAK4W,UAAUpE,QAAQ,aAAcymD,EAAI,EAGtCj5D,sBAAoB47D,IACvB,MAAM1yD,EAAKlJ,KAAKg/D,UAAUpD,GAC1B57D,KAAK4zB,QAAQ7H,MAAM,gBAAgB7iB,KACnC,MAAM+vD,EAAMj5D,KAAKsY,YAAYpP,GAG7BlJ,KAAK++D,WAAa/+D,KAAK++D,WAAWr1D,QAAQlJ,GAAMA,EAAE8X,YAAY1T,OAASq0D,EAAIr0D,cAEpE5E,KAAK8+D,MAAM51D,GAElBlJ,KAAK4W,UAAUpE,QAAQ,aAAcymD,EAAI,EAItCj5D,oBAAkB47D,IACrB,MAAM1yD,EAAKlJ,KAAKg/D,UAAUpD,GACpB3C,EAAMj5D,KAAKk/D,eAAeh2D,GAChC+vD,EAAI0C,gBAAgBC,GAEhB3C,EAAIuB,UACJx6D,KAAK4W,UAAUpE,QAAQ,eAAgBymD,GAEvCj5D,KAAK4W,UAAUpE,QAAQ,iBAAkBymD,IAI1Cj5D,2BAAyB47D,IAC5B57D,KAAK4zB,QAAQ7H,MAAM,eAAe6vC,EAAMC,QAAQD,EAAMa,MACtD,MAAMvzD,EAAKlJ,KAAKm/D,eAAevD,GACzB7uD,EAAU/M,KAAKo/D,oBAAoBxD,GAEnC5rD,EAAW,IAAIktD,GAAah0D,EAAI6D,EAAS/M,KAAMA,KAAKi9C,KAAMj9C,KAAK6yD,YAAa7yD,KAAKujD,UAOvF,OALAvjD,KAAKq/D,yBAAyBrvD,EAAU4rD,GAExC57D,KAAK++D,WAAW77D,KAAK8M,GAErBhQ,KAAK4W,UAAUpE,QAAQ,kBAAmBxC,GACnCA,CAAQ,EAGZhQ,2BAAyB47D,IAC5B57D,KAAK4zB,QAAQ7H,MAAM,uBAAuB6vC,EAAMC,QAAQD,EAAMa,MAE9D,MAAMvzD,EAAKlJ,KAAKm/D,eAAevD,GACzB7uD,EAAU/M,KAAKo/D,oBAAoBxD,GACnC5rD,EAAWhQ,KAAKs/D,oBAAoBp2D,EAAI6D,GAE9C/M,KAAK++D,WAAa/+D,KAAK++D,WAAWr1D,QAAQlJ,IAAOR,KAAKu/D,eAAe/+D,EAAG0I,EAAI6D,KAE5E/M,KAAK4W,UAAUpE,QAAQ,kBAAmBxC,GAC1CA,EAASnO,MAAM,EAGZ7B,kCAAgC47D,IAEnC,MAAM1yD,EAAKlJ,KAAKm/D,eAAevD,GACzB7uD,EAAU/M,KAAKo/D,oBAAoBxD,GACnC5rD,EAAWhQ,KAAKs/D,oBAAoBp2D,EAAI6D,GAE9CiD,EAASwuD,2BAA2B5C,GAEpC57D,KAAK4W,UAAUpE,QAAQ,yBAA0BxC,EAAS,EAGvDhQ,+BAA6B47D,IAEhC,MAAM1yD,EAAKlJ,KAAKm/D,eAAevD,GACzB7uD,EAAU/M,KAAKo/D,oBAAoBxD,GAEnC5rD,EAAW,IAAIktD,GAAah0D,EAAI6D,OAASzB,OAAWA,OAAWA,OAAWA,GAD5D,GAGpBtL,KAAKq/D,yBAAyBrvD,EAAU4rD,GAExC57D,KAAK4W,UAAUpE,QAAQ,sBAAuBxC,EAAS,EAGpDhQ,2BAAyB47D,IAE5B,MAAM1yD,EAAKlJ,KAAKm/D,eAAevD,GACzB3C,EAAMj5D,KAAKo/D,oBAAoBxD,GAC/B5rD,EAAWhQ,KAAKs/D,oBAAoBp2D,EAAI+vD,GAE9Cj5D,KAAKq/D,yBAAyBrvD,EAAU4rD,EAAM,EAI3C57D,uBAAqB8R,GACjB9R,KAAK4W,UAAU/E,IAAI,kBAAmBC,EAAU9R,KAAK++D,YAGzD/+D,2BAAyB8R,GACrB9R,KAAK4W,UAAU/E,IAAI,sBAAuBC,GAG9C9R,uBAAqB8R,GACjB9R,KAAK4W,UAAU/E,IAAI,kBAAmBC,GAG1C9R,uBAAqB8R,GACjB9R,KAAK4W,UAAU/E,IAAI,kBAAmBC,GAG1C9R,8BAA4B8R,GACxB9R,KAAK4W,UAAU/E,IAAI,yBAA0BC,GAGjD9R,gBAAc8R,GACV9R,KAAK4W,UAAU/E,IAAI,WAAYC,EAAUtS,OAAO0E,OAAOlE,KAAK8+D,QAGhE9+D,kBAAgB8R,GACZ9R,KAAK4W,UAAU/E,IAAI,aAAcC,GAGrC9R,oBAAkB8R,GACd9R,KAAK4W,UAAU/E,IAAI,eAAgBC,GAGvC9R,sBAAoB8R,GAChB9R,KAAK4W,UAAU/E,IAAI,iBAAkBC,GAGzC9R,kBAAgB8R,GACZ9R,KAAK4W,UAAU/E,IAAI,aAAcC,GAGpCotD,eAAeh2D,GACnB,MAAMtH,EAAS5B,KAAKsY,YAAYpP,GAChC,IAAKtH,EACD,MAAMmF,MAAM,eAAemC,eAE/B,OAAOtH,EAGHo9D,UAAUpD,GACd,OAAOA,EAAMC,KAGT0D,eAAevvD,EAAsC9G,EAAY6D,GACrE,OAAOiD,EAAS9G,KAAOA,GAAM8G,EAASsI,YAAY1T,OAASmI,EAGvDyyD,wBAAwBt2D,EAAY6D,GACxC,OAAO/M,KAAK++D,WAAWr1D,QAAQlJ,GAAMR,KAAKu/D,eAAe/+D,EAAG0I,EAAI6D,KAAU,GAGtEuyD,oBAAoBp2D,EAAY6D,GACpC,MAAMnL,EAAS5B,KAAKw/D,wBAAwBt2D,EAAI6D,GAChD,IAAKnL,EACD,MAAMmF,MAAM,oBAAoBmC,eAEpC,OAAOtH,EAGHu9D,eAAevD,GACnB,OAAOA,EAAMa,GAGT2C,oBAAoBxD,GACxB,OAAOA,EAAMC,KAGToD,oBAAoBrD,GACxB,MAAM1yD,EAAKlJ,KAAKg/D,UAAUpD,GAC1B57D,KAAK4zB,QAAQ7H,MAAM,wBAAwB7iB,MAAO0yD,KAClD,MAAM3C,EAAMj5D,KAAKk/D,eAAeh2D,GAIhC,OAFA+vD,EAAI0C,gBAAgBC,GAEb3C,EAGHoG,yBAAyBrvD,EAAwB4rD,GACrD57D,KAAK4zB,QAAQ7H,MAAM,0BAA4B/rB,KAAKm/D,eAAevD,GAAS,YAAc57D,KAAKo/D,oBAAoBxD,IACnH5rD,EAAS2rD,gBAAgBC,IC7OjC,SAAS1iC,GAAU3jB,EAAuB4jB,EAAsCC,GAC5E,MAAMmf,EAAcR,MACNA,GAAOA,EAAI93C,aAAe83C,EAAIn3C,MAAQm3C,EAAIl3C,OAGxD,OAAK03C,EAAWpf,IAAqBof,EAAWnf,IAI3Cmf,EAAWpf,GAIJof,EAAWnf,KACnBA,EAAgB,QAJhBD,EAAkB,OASf5jB,EAAQzT,KAAKq3B,EAAiBC,IAb1B7jB,CAcf,OAEqBkqD,GAKjBx/D,YACYg9C,GAAAj9C,UAAAi9C,EAJJj9C,eAA8B64D,KAC9B74D,0BAAsB,EAQvBA,0BAAwBmgC,IAC3BngC,KAAK4W,UAAUpE,QAAQ,gBAAiB2tB,EAAO,EAG5CngC,4BAA0B2hC,IAC7B3hC,KAAK4W,UAAUpE,QAAQ,kBAAmBmvB,EAAS,EAGhD3hC,eAAY,CAACud,EAAmC3L,IAC5CsnB,GACHl5B,KAAK0/D,WN3C+B,kCM6C/Bh+D,GAA2DA,EAAEo7B,SAAS6iC,SAE3EpiD,EACA3L,GAID5R,iBAAc,CAACud,EAAyD3L,IASpEsnB,GARSl5B,KAAK0/D,WNjDQ,uBMmDxBh+D,IACG,MAAMmwB,EAAMnwB,EAAEo7B,SAAS8iC,SACvB,OAAOpgE,OAAO2E,KAAK0tB,GAAKxjB,KAAK/J,GAAQutB,EAAIvtB,IAAK,IAI5BiZ,EAAS3L,GAGhC5R,sBAAmB,CAACud,EAAqD3L,IAOrEsnB,GANSl5B,KAAK0/D,WN5Da,4BM8D7Bh+D,GAAMA,EAAEo7B,SAAS+iC,aAClBv0D,GAGsBiS,EAAS3L,GAGhC5R,eAAY,CAAC8lC,EAAgBvoB,EAAmC3L,IAO5DsnB,GANSl5B,KAAK0/D,WN1EmB,kCM4EnCh+D,GAAMA,EAAEo7B,SAASgjC,eAClB,CAAEH,OAAQ75B,IAGYvoB,EAAS3L,GAGhC5R,sBAAmB,CAACmgC,EAAgB5iB,EAAmC3L,IAOnEsnB,GANSl5B,KAAK0/D,WN/Ea,4BMiF7Bh+D,GAAMA,EAAEo7B,SAASgjC,eAClB,CAAED,OAAQ1/B,IAGY5iB,EAAS3L,GAGhC5R,iBAAc,CAACud,EAAqD3L,IAEhEsnB,GADSl5B,KAAK0/D,WN5FI,mBM6FCniD,EAAS3L,GAGhC5R,8BAA2B,CAAC+/D,EAAexiD,EAAwC3L,IAO/EsnB,GANSl5B,KAAK0/D,WACjBM,IACCt+D,GAAMA,EAAEo7B,SAASmjC,aAClB,CAAEC,SAAUH,IAGUxiD,EAAS3L,GAGhC5R,oCAAiC,CAAC+/D,EAAe5/B,EAAgB5iB,EAAwC3L,IAMrGsnB,GALSl5B,KAAK0/D,WACjBM,IACCt+D,GAAMA,EAAEo7B,SAASmjC,aAClB,CAAEC,SAAUH,EAAOF,OAAQ1/B,IAEL5iB,EAAS3L,GAGhC5R,UAAO,CAACmgE,EAAc5iD,EAAqC3L,IAOvDsnB,GANSl5B,KAAK0/D,WACjBU,IACC1+D,GAAMA,EAAEo7B,SAASujC,QAClB,CAAEH,SAAUC,IAGU5iD,EAAS3L,GAGhC5R,gBAAa,CAACmgE,EAAchgC,EAAgB5iB,EAAqC3L,IAO7EsnB,GANSl5B,KAAK0/D,WACjBU,IACC1+D,GAAMA,EAAEo7B,SAASujC,QAClB,CAAEH,SAAUC,EAAMN,OAAQ1/B,IAGJ5iB,EAAS3L,GAGhC5R,uBAAqB8R,GACjB9R,KAAK4W,UAAU/E,IAAI,kBAAmBC,GAG1C9R,qBAAmB8R,GACf9R,KAAK4W,UAAU/E,IAAI,gBAAiBC,GAGxC9R,UAAQkL,GACJlL,KAAK0/D,WNzJc,mBM2JtB,KACAx0D,GAIDlL,oBAAkB8R,IACrB9R,KAAKsgE,iBACEtgE,KAAK4W,UAAU/E,IAAI,iBAAkBC,IAGzC9R,aAAWkL,GACPlL,KAAK0/D,WNpKa,kBMsKrB,KACAx0D,GAmBAlL,gBAAa,CACjBygB,EACA8/C,EACA78B,KAEAA,EAAOA,GAAQ,GACR,IAAIviC,SAAQ,CAACC,EAASC,KAEzBrB,KAAKi9C,KAAK7tB,OAAO3O,EAAQijB,GACpB5hC,MAAMF,IACE2+D,IACDA,EAAqBjhE,GAA4CA,EAAEw9B,UAEvE17B,EAAQm/D,EAAkB3+D,GAAQ,IAErCiI,OARkD+H,GAAUvQ,EAAOuQ,IAQlD,KA9BtB0uD,iBACCtgE,KAAKwgE,sBACNxgE,KAAKi9C,KAAK3Z,SN9KgB,wBM8KiB8pB,MAAO1pB,IAC9C,IACI,MAAM/wB,QAAgBxR,QAAQ4gB,IAAI/hB,KAAK4W,UAAUpE,QAAQ,iBAAkBkxB,IAE3E,MAAO,CAAE+8B,QADO9tD,EAAQqwB,MAAM3/B,GAAMA,EAAEo9D,WAExC,MAAO7uD,QAIb5R,KAAKwgE,qBAAsB,ICrLhC,MAAME,GAAiC,qCA2BjCC,GAET1gE,YAAoB+uB,GAAAhvB,aAAAgvB,EAGb4xC,OAAOC,EAAsCxb,GAChD,IAAKwb,IAASlhE,MAAMgG,QAAQk7D,GACxB,OAAO1/D,QAAQE,OAAO,yEAE1B,GAAIgkD,GAAiB,YAATA,GAA+B,UAATA,EAC9B,OAAOlkD,QAAQE,OAAO,0DAI1B,MAAM+vB,EAAiC,CACnCA,QAAS,SACTsS,KAAM,CACFm9B,OACAxb,KALRA,EAAOA,QAAAA,EAAQ,YAQf,OAAOrlD,KAAKgvB,QAAQI,OAAuCsxC,GAAgCtvC,GACtFtvB,MAAMuB,GAAMA,EAAEy5B,WAGhBgkC,SACH,OAAO9gE,KAAKgvB,QAAQI,OAA6BsxC,GAAgC,CAAEtvC,QAAS,WACvFtvB,MAAMuB,GAAMA,EAAEy5B,SAAS+jC,OAGzBx9B,OAAO41B,GACV,IAAKA,GAAsB,iBAARA,EACf,OAAO93D,QAAQE,OAAO,8CAE1B,MAAM+vB,EAAiC,CACnCA,QAAS,SACTsS,KAAM,CACFm9B,KAAM,CAAC5H,KAGf,OAAOj5D,KAAKgvB,QAAQI,OAAasxC,GAAgCtvC,GAAStvB,MAAMuB,GAAMA,EAAEy5B,WAGrFlqB,QAIH,OAAO5S,KAAKgvB,QAAQI,OAAasxC,GAHK,CAClCtvC,QAAS,UAE6DtvB,MAAMuB,GAAMA,EAAEy5B,WAGrFikC,aAAan8D,EAAckpB,GAI9B,OAHKA,IACDA,EAAM,sBAEH,CACHlpB,OACAf,KAAM,SACNwI,MAAOzH,EACPo8D,QAAS,CACLlzC,gBClFAtf,IAEZ,IAAKA,EACD,MAAMzH,MAAM,kBAGhB,IAAKyH,EAAO6nC,IACR,MAAMtvC,MAAM,yBAGhB,MAAMk6D,EAAqC,YACrCC,EAAqC,YAGrC7b,EAA+B72C,EAAO62C,MAAQ4b,EACpD,GAAI5b,IAAS4b,GAAc5b,IAAS6b,GAHC,SAGa7b,EAC9C,MAAM,IAAIt+C,MAAM,qCAAqCs+C,sBAGzD,MAAMlQ,EAAa3mC,EAAO2mC,WACpBkB,EAAM7nC,EAAO6nC,IACbnjC,EAAS1E,EAAO0E,OAChBsmC,EAAUhrC,EAAOgrC,QACjB2nB,EAAa,IAAIvC,GAAevZ,EAAMhP,EAAKlB,EAAYqE,EAAStmC,EAAO+N,UAAU,gBAAiBzS,EAAOopD,gBACzGwJ,EAAe,IAAI3B,GAAiBppB,GAE1C,IAAIhG,EACJ,GAAIgV,IAAS4b,EACT5wB,WC7ByBgG,EAAyB8qB,GACtD,OAAO,IAAIhgE,SAAc,CAACC,EAASC,KAC/Bg1C,EAAIjnB,OTgB6B,0BShBc,CAAEiyC,UAAU,IACtDv/D,MAAMwvC,IACH,MAAM/8B,EAAO+8B,EAASxU,SACjBvoB,GACDnT,IAGJ,MAAMkgE,EAAe/sD,EAAK+sD,aACrBA,GACDlgE,IAGJq3D,GAAa6I,GAAcjzD,KAAKiL,GAAS6nD,EAAWI,eAAejoD,KAEnElY,GAAS,IAEZyI,OAAOsI,GAAQ9Q,EAAO,uCAAuC8Q,EAAIqB,YAAW,GAEzF,CDSuBguD,CAASnrB,EAAK8qB,OAC1B,CACH,MAAM1qC,WE3BiC4f,EAAyBirB,EAA8BF,EAAgCK,GAClI,IAAIhrC,EACAirC,GAAY,EAoFhB,MAAO,CACH5F,MApFU,KACV,IAAI6F,EACAC,EAEJ,MAAMC,EAAgB,IAAI1gE,SAAc,CAACC,EAASC,KAC9CsgE,EAAcvgE,EACdwgE,EAAavgE,CAAM,IAoEvB,OAjEAg1C,EAAIngB,UAAU4rC,GAA4B,CAAEphE,UAAW,CAAE2gE,SAAUI,GAAaznC,cAAe,MAC1Fl4B,MAAMvB,IACHk2B,EAAel2B,EACfk2B,EAAa4U,QAAQ02B,IACjB,MAAMC,EAAcD,EAAWxtD,KAEzB0tD,EAA0CxJ,GAAauJ,EAAyC,oBACtGC,EAA4B5zD,KAAKiL,GAAmBgoD,EAAaC,eAAejoD,KAEhFm/C,GAAauJ,EAA2C,sBACnD3zD,KAAKiL,GAAmBgoD,EAAaY,iBAAiB5oD,KAE3Dm/C,GAAauJ,EAA2C,sBACnD3zD,KAAKiL,GAAmBgoD,EAAaa,iBAAiB7oD,KAE3Dm/C,GAAauJ,EAAyC,oBACjD3zD,KAAKiL,GAAmBgoD,EAAac,eAAe9oD,KAEzD,MAAM+oD,EAAiD5J,GAAauJ,EAA2C,sBAqB/G,GApBAK,EAA8Bh0D,KAAKiL,GAAwBgoD,EAAa5E,sBAAsBpjD,KAE9Fm/C,GAAauJ,EAA+C,0BACvD3zD,KAAKiL,GAAwBgoD,EAAagB,0BAA0BhpD,KAEzEm/C,GAAauJ,EAA2C,sBACnD3zD,KAAKiL,GAAwBgoD,EAAa5C,sBAAsBplD,KAErEm/C,GAAauJ,EAA2C,sBACnD3zD,KAAKiL,GAAwBgoD,EAAaiB,sBAAsBjpD,KAErEm/C,GAAauJ,EAAkD,6BAC1D3zD,KAAKiL,GAAwBgoD,EAAakB,6BAA6BlpD,KAE5Em/C,GAAauJ,EAAsC,iBAC9C3zD,KAAKiL,GAAmC8nD,EAAaqB,qBAAqBnpD,KAE/Em/C,GAAauJ,EAAyC,oBACjD3zD,KAAKiL,GAAqC8nD,EAAasB,uBAAuBppD,MAE9EooD,EAAW,CACZA,GAAY,EACZ,MAAMiB,EAAqBV,EAA4Bj/B,MAAMz/B,GAAMA,EAAEs4D,OAASxlB,EAAIrmC,SAASsI,cACrFsqD,EAA0BP,EAA8Br/B,MAAMxiC,GAAMA,EAAEi8D,KAAOpmB,EAAIrmC,SAASA,WAChG,GAAI2yD,EACA,GAAIC,EACAjB,QACG,CACH,MAAMtrC,EAAKirC,EAAaxI,mBAAmBt4D,IACnCA,EAAE0I,KAAOmtC,EAAIrmC,SAASA,WACtBqmB,IACAsrC,aAKZA,QAKZlrC,EAAakV,UAAUx5B,GAAayvD,EAAWzvD,IAAK,IAGvDtI,OAAOsI,UAAQ,OAAAyvD,EAAW,gEAAoEzvD,EAAIqB,uBAAWrB,IAAM,IAEjH0vD,CAAa,EAWpBxrD,KARS,KACLogB,GACAA,EAAa1iB,SAQzB,CF/D6B8uD,CAAoBxsB,EAAK8qB,EAAYC,EAAc/b,IAAS6b,GACjF7wB,EAAe5Z,EAAaqlC,QAiDhC,MA9CmC,CAC/BluC,MAAO,IAAMyiB,EAEbixB,aAAcH,EAAWG,aACzBhpD,YAAa6oD,EAAW7oD,YAExBwqD,WAAY3B,EAAW2B,WACvB9J,aAAcmI,EAAWnI,aACzBE,aAAciI,EAAWjI,aACzBC,eAAgBgI,EAAWhI,eAC3BG,iBAAkB6H,EAAW7H,iBAE7BrC,UAAWkK,EAAWlK,UAClB8L,iBACA,OAAO5B,EAAW6B,iBAGtBlK,kBAAmBqI,EAAWrI,kBAC9BC,kBAAmBoI,EAAWpI,kBAC9BkK,kBAAmB9B,EAAW8B,kBAC9BC,sBAAuB/B,EAAW+B,sBAElCC,UAAW/B,EAAa+B,UACxBC,YAAahC,EAAagC,YAC1BC,iBAAkBjC,EAAaiC,iBAC/BC,yBAA0BlC,EAAakC,yBACvCC,+BAAgCnC,EAAamC,+BAE7CC,iBAAkBpC,EAAaoC,iBAC/BC,UAAWrC,EAAaqC,UAExBC,YAAatC,EAAasC,YAE1BC,KAAMvC,EAAauC,KACnBC,WAAYxC,EAAawC,WAEzBC,kBAAmBzC,EAAayC,kBAEhCze,KAAMgc,EAAahc,KACnB0e,QAAS1C,EAAa0C,QAEtBC,eAAgB3C,EAAa2C,eAE7BC,SAAU,IAAIrD,GAActqB,GAGtB,EGlFd,IAAI59B,GAAO,EAgBX,IChBIC,GACAC,GAEAC,MDaa,CACbE,UAVJ,WAEI,OADAL,IAAe,KAAPA,GAAc,OAAS,cAEnC,EAQIA,KANJ,SAAiBM,GACbN,GAAOM,CACX,GCfIC,GAAW,mEAMf,SAASC,KACLL,IAAW,CACf,CAEA,SAASM,GAAcC,GACnB,GAAKA,GAQL,GAAIA,IAAeT,GAAnB,CAIA,GAAIS,EAAWxY,SAAWqY,GAASrY,OAC/B,MAAM,IAAIoG,MAAM,uCAAyCiS,GAASrY,OAAS,qCAAuCwY,EAAWxY,OAAS,gBAAkBwY,GAG5J,IAAIC,EAASD,EAAWE,MAAM,IAAI3P,QAAO,SAAS4P,EAAMC,EAAKhU,GAC1D,OAAOgU,IAAQhU,EAAIiU,YAAYF,MAGlC,GAAIF,EAAOzY,OACP,MAAM,IAAIoG,MAAM,uCAAyCiS,GAASrY,OAAS,yDAA2DyY,EAAOrU,KAAK,OAGtJ2T,GAAWS,EACXF,WAxBQP,KAAaM,KACbN,GAAWM,GACXC,KAuBZ,CAiCA,SAASQ,KACL,OAAIb,KAGJA,GAtBJ,WACSF,IACDQ,GAAcF,IAQlB,IALA,IAGIU,EAHAC,EAAcjB,GAASW,MAAM,IAC7BO,EAAc,GACdvW,EAAIwV,GAAeC,YAGhBa,EAAYhZ,OAAS,GACxB0C,EAAIwV,GAAeC,YACnBY,EAAiBG,KAAKC,MAAMzW,EAAIsW,EAAYhZ,QAC5CiZ,EAAY1W,KAAKyW,EAAYI,OAAOL,EAAgB,GAAG,IAE3D,OAAOE,EAAY7U,KAAK,GAC5B,CAMeiV,GAEf,CAYA,OAAiB,CACbE,WAlDJ,SAAoBf,GAEhB,OADAD,GAAcC,GACPT,EACX,EAgDID,KA9CJ,SAAiBA,GACbI,GAAeJ,KAAKA,GAChBE,KAAiBF,IACjBQ,KACAN,GAAeF,EAEvB,EAyCI0B,OARJ,SAAgB5H,GAEZ,OADuBkH,KACClH,EAC5B,EAMIqG,SAAUa,IC9FVW,GAA2B,iBAAX7N,SAAwBA,OAAO6N,QAAU7N,OAAO8N,UAWpE,OATA,WACI,IAAKD,KAAWA,GAAOG,gBACnB,OAAyC,GAAlCV,KAAKC,MAAsB,IAAhBD,KAAKW,UAE3B,IAAIC,EAAO,IAAIC,WAAW,GAE1B,OADAN,GAAOG,gBAAgBE,GACN,GAAVA,EAAK,EAChB,ECOA,OAdA,SAAgBN,EAAQS,GAMpB,IALA,IACI/Y,EADAgZ,EAAc,EAGdC,EAAM,IAEFjZ,GACJiZ,GAAYX,EAAWS,GAAW,EAAIC,EAAgB,GAASopD,MAC/DpiE,EAAO+Y,EAAUf,KAAKkB,IAAI,GAAIF,EAAc,GAC5CA,IAEJ,OAAOC,CACX,ECAA,ICDIW,GAGAC,MDVJ,SAAgBxS,GACZ,IAAIgR,EAAaxB,GAASE,WAC1B,MAAO,CACHhE,QAA+C,GAAtCsF,EAAWe,QAAQ/R,EAAG6L,OAAO,EAAG,IACzCZ,OAA8C,GAAtC+F,EAAWe,QAAQ/R,EAAG6L,OAAO,EAAG,IAEhD,ECiCA,OAvBA,SAAe4G,GAEX,IAAIb,EAAM,GAENe,EAAUhC,KAAKC,MAAmC,MAA5B/V,KAAKkB,MApBjB,gBAoCd,OAdI4W,IAAYH,GACZD,MAEAA,GAAU,EACVC,GAAkBG,GAGtBf,GAAYopD,GAAOxrD,GAASyB,OAzBlB,GA0BVW,GAAYopD,GAAOxrD,GAASyB,OAAQwB,GAChCF,GAAU,IACVX,GAAYopD,GAAOxrD,GAASyB,OAAQsB,KAExCX,GAAYopD,GAAOxrD,GAASyB,OAAQ0B,EAGxC,EC3BA,OAfA,SAAmB3S,GACf,IAAKA,GAAoB,iBAAPA,GAAmBA,EAAGvI,OAAS,EAC7C,OAAO,EAKX,IAFA,IAAIuZ,EAAaxB,GAASwB,aACtBiB,EAAMjS,EAAGvI,OACLH,EAAI,EAAGA,EAAI2a,EAAI3a,IACnB,IAAmC,IAA/B0Z,EAAWe,QAAQ/R,EAAG1I,IACtB,OAAO,EAGf,OAAO,CACX,8ECJA,IAAImb,EAAyD,EAyC7D,SAASC,IACP,OAAOuoD,GAAMxoD,EACf,CAGAL,UAAiBM,EACjBN,mBAA0BM,EAC1BN,eAxCA,SAAcQ,GAEV,OADApD,GAASD,KAAKqD,GACPR,EAAOC,OAClB,EAsCAD,iBA9BA,SAAgBS,GAEZ,OADAJ,EAAkBI,EACXT,EAAOC,OAClB,EA4BAD,qBArBA,SAAoBU,GAKhB,YAJsB1Q,IAAlB0Q,GACAtD,GAASwB,WAAW8B,GAGjBtD,GAASE,UACpB,EAgBA0C,iBAAwBW,GACxBX,kBAAyBJ,uEC/DzB,OAAiBkpD,GCGjB,MAAMC,GAAoB,6BAyLX,UAlLfpkE,cAKYD,2BAAuD,IAAIoyB,IAC3DpyB,kBAAuB,EAExBmL,KAAKuY,EAAoB2yB,EAAqBnjC,GACjDlT,KAAKskE,UAAY5gD,EACjB1jB,KAAKi9C,KAAO5G,EACZr2C,KAAK4zB,QAAU1gB,EAEflT,KAAKukE,yBAGFC,WAAWt9C,EAAkBjW,GAChC,MAAMgC,EAAmC,CACrChC,WAGJ,OAAOjR,KAAKskE,UAAUG,eAAev9C,EAAUjU,GAG5CyxD,eAAex9C,EAAkB7a,EAAes4D,GACnD,MAAM1xD,EAAmC,CACrC2xD,SAAU,CACNv4D,QACA+d,UAAW,SACXu6C,QAAS3kE,KAAK6kE,gBAAgB,SAAUx4D,EAAOs4D,KAIvD,OAAO3kE,KAAKskE,UAAUG,eAAev9C,EAAUjU,GAG5C6xD,eAAe59C,EAAkB7a,GACpC,MAAM4G,EAAmC,CACrC2xD,SAAU,CACNv4D,QACA+d,UAAW,SACXu6C,QAAS,KAMjB,OAFA3kE,KAAK+kE,qBAAqB9xD,EAAS2xD,SAASx6C,UAAW/d,GAEhDrM,KAAKskE,UAAUG,eAAev9C,EAAUjU,GAG5C+xD,cAAc99C,EAAkB+9C,EAAuBN,GAC1D,MAAM1xD,EAAmC,CACrC2xD,SAAU,CACNv4D,MAAO44D,EACP76C,UAAW,SACXu6C,QAAS3kE,KAAK6kE,gBAAgB,SAAUI,EAAeN,KAI/D,OAAO3kE,KAAKskE,UAAUG,eAAev9C,EAAUjU,GAG5CiyD,cAAch+C,EAAkB+9C,EAAuBN,GAC1D,MAAM1xD,EAAmC,CACrC2xD,SAAU,CACNv4D,MAAO44D,EACP76C,UAAW,SACXu6C,QAAS3kE,KAAK6kE,gBAAgB,SAAUI,EAAeN,KAI/D,OAAO3kE,KAAKskE,UAAUG,eAAev9C,EAAUjU,GAG5Cm6C,iBAAiBlmC,EAAkBi+C,GACtC,MAAMR,EAAmD,GAEnDS,SADsBplE,KAAKqlE,oBAAoBn+C,IACfo+C,WAAWr8C,MAAM27C,GAAaA,EAASv4D,QAAU84D,IAevF,OAdIC,GACAA,EAAgBT,QAAQr+D,SAASsK,IAC7B,MAAM20D,EAAiBvlE,KAAKwlE,kBAAkB50D,EAAO60D,YACjDF,IACA30D,EAAOkB,SAAWyzD,EAAezzD,UAErC6yD,EAAQzhE,KAAK,CACTu3D,KAAM7pD,EAAO6pD,KACb3oD,SAAUlB,EAAOkB,SACjB4zD,oBAAqB90D,EAAO80D,oBAC5BC,mBAAoB/0D,EAAO+0D,oBACW,IAG3CxkE,QAAQC,QAAQujE,GAGpBU,oBAAoBn+C,GACvB,OAAOlnB,KAAKskE,UAAUsB,YAAY1+C,GAG9B29C,gBAAgBz6C,EAAmB66C,EAAuBN,GAC9D,OAAOA,EAAQt2D,KAAKuC,IAChB,MAAMi1D,EAAe,CACjBpL,KAAM7pD,EAAO6pD,KACb3oD,SAAUlB,EAAOkB,SACjB2zD,WAAYvpD,GAAQN,WACpB8pD,oBAAqB90D,EAAO80D,oBAC5BC,mBAAoB/0D,EAAO+0D,mBAC3Bv7C,aAKJ,OAFApqB,KAAK+kE,qBAAqB36C,EAAW66C,EAAeY,GAE7CA,CAAY,IAInBd,qBAAqB36C,EAAmB66C,EAAuBY,GACnE,GAAkB,WAAdz7C,EAAwB,CACnBpqB,KAAK8lE,sBAAsB7tD,IAAIgtD,IAChCjlE,KAAK8lE,sBAAsB3zC,IAAI8yC,EAAe,IAGlBjlE,KAAK8lE,sBAAsB3+D,IAAI89D,GACvC/hE,KAAM,CAC1BuiE,WAAYI,EAAaJ,WACzB3zD,SAAU+zD,EAAa/zD,gBAGxB,GAAkB,WAAdsY,EACP,GAAIy7C,EAAc,CACd,IAAIE,EAA0B/lE,KAAK8lE,sBAAsB3+D,IAAI89D,GAC7Dc,EAA0BA,EAAwBr8D,QAAQs8D,GAAWA,EAAOP,aAAeI,EAAaJ,aACjE,IAAnCM,EAAwBplE,OACxBX,KAAK8lE,sBAAsBG,OAAOhB,GAElCjlE,KAAK8lE,sBAAsB3zC,IAAI8yC,EAAec,QAGlD/lE,KAAK8lE,sBAAsBG,OAAOhB,GAKtCV,yBACJ,IAAIvkE,KAAKkmE,YAAT,CAGAlmE,KAAKkmE,aAAc,EAEnB,IACIlmE,KAAKi9C,KAAK3Z,SAAS+gC,IAAmB,CAAC3gC,EAAWyiC,KAC9C,MAAMZ,EAAiBvlE,KAAKwlE,kBAAkB9hC,EAAK+hC,YACnD,GAAIF,EACA,IACIA,EAAezzD,WACjB,MAAOpQ,GACL1B,KAAK4zB,QAAQhiB,MAAM,wDAAyDlQ,OAI1F,MAAOA,GAEL,OADA1B,KAAK4zB,QAAQhiB,MAAM,yFAA2FlQ,GACvGP,QAAQE,OAAOK,KAItB8jE,kBAAkBC,GACtB,IAAIW,EAOJ,MANA,IAAIpmE,KAAK8lE,sBAAsB5hE,UAAUoC,SAASgL,IAC9C,MAAMQ,EAAWR,EAAU2X,MAAMo9C,GAAQA,EAAIZ,aAAeA,IACxD3zD,IACAs0D,EAAiBt0D,MAGlBs0D,WCjDA,UA5HXnmE,cAPiBD,kCAAuC,IAChDA,cAA6C,GAC7CA,qBAAoD,GACpDA,2BAA+D,GAKnEA,KAAK4W,UAAY0vD,KAGdn7D,KAAK+H,GACRlT,KAAK4zB,QAAU1gB,EAIZ/L,IAAI+B,GACP,OAAOlJ,KAAKujD,SAASr6C,IAAOlJ,KAAKumE,gBAAgBr9D,GAI9Cs9D,WAAWt9D,GACd,OAAOlJ,KAAKujD,SAASr6C,GAGdmlD,WACP,OAAOruD,KAAKujD,SAGT1xC,IAAItF,GAEP,KADgBvM,KAAKumE,gBAAgBh6D,EAAO64B,IAAIl8B,IAG5C,YADAlJ,KAAK4zB,QAAQhiB,MAAM,gCAAgCrF,EAAO64B,IAAIl8B,6CAGlE,MAAMu9D,EAAmC,WAA1Bl6D,EAAO64B,IAAIgU,WAC1Bp5C,KAAKumE,gBAAgBh6D,EAAO64B,IAAIl8B,IAAMqD,EACtCvM,KAAK0mE,sBAAsBn6D,EAAO64B,IAAIl8B,IAAM,CACxC0kB,OAAO,EACP+4C,WAAYF,GAGhBzmE,KAAK4W,UAAUpE,QAAQ,WAAYjG,GAGhC82B,OAAO92B,UACHvM,KAAKujD,SAASh3C,EAAO64B,IAAIl8B,WACzBlJ,KAAKumE,gBAAgBh6D,EAAO64B,IAAIl8B,WAChClJ,KAAK0mE,sBAAsBn6D,EAAO64B,IAAIl8B,IAC7ClJ,KAAK4W,UAAUpE,QAAQ,aAAcjG,GAGlCq6D,cAAc1/C,GACjB,MAAM2/C,EAAoB7mE,KAAK0mE,sBAAsBx/C,QAEpB,IAAtB2/C,IAIXA,EAAkBj5C,OAAQ,EAEtBi5C,EAAkBF,YAClB3mE,KAAK8mE,gBAAgB5/C,IAItB6/C,mBAAmB7/C,GACtB,MAAM2/C,EAAoB7mE,KAAK0mE,sBAAsBx/C,QAEpB,IAAtB2/C,IAIXA,EAAkBF,YAAa,EAE3BE,EAAkBj5C,OAClB5tB,KAAK8mE,gBAAgB5/C,IAItB8/C,QAAQ99D,GACX,OAAO,IAAI/H,SAAQ,CAACC,EAASC,KAEzB,IAAIg1B,EAEJ,MAAMxS,EAAUtW,YAAW,KACvB8oB,IACAh1B,EAAO,qBAAqB,GAC7BrB,KAAKinE,8BAEFvrB,EAAM17C,KAAKujD,SAASr6C,GACtBwyC,GACA55B,aAAa+B,GACbziB,EAAQs6C,IAERrlB,EAAKr2B,KAAKknE,eAAensB,IACjBA,EAAE3V,IAAIl8B,KAAOA,IAGjB4Y,aAAa+B,GACbwS,IACAj1B,EAAQ25C,GAAE,OAMnBmsB,cAAcp1D,GACjB,OAAO9R,KAAK4W,UAAU/E,IAAI,WAAYC,GAGnCq1D,QAAQr1D,GACX,OAAO9R,KAAK4W,UAAU/E,IAAI,WAAYC,GAGnCmrD,UAAUnrD,GACb,OAAO9R,KAAK4W,UAAU/E,IAAI,aAAcC,GAIrCg1D,gBAAgB5/C,GACflnB,KAAKumE,gBAAgBr/C,KACrBlnB,KAAKujD,SAASr8B,GAAYlnB,KAAKumE,gBAAgBr/C,UACxClnB,KAAKumE,gBAAgBr/C,UACrBlnB,KAAK0mE,sBAAsBx/C,IAGtClnB,KAAK4W,UAAUpE,QAAQ,WAAYxS,KAAKujD,SAASr8B,YClIpCzS,GACVqrC,2BACH,GAAsB,oBAAXvzC,OACP,OAAQ,EAEZ,IAAKA,OAAOoI,YACR,OAAQ,EAEZ,IAAKpI,OAAOoI,YAAYC,QACpB,OAAQ,EAEZ,MAAMC,EAAMC,OAAOvI,OAAOoI,YAAYC,QAAQG,OAAO,EAAG,IACxD,OAAOC,MAAMH,IAAQ,EAAIA,EAGtBirC,0BACHlvC,EACAuoB,EACAC,GAEA,MAAMguC,EAAQx1D,IACV,IAAIvL,EAAMuL,EAIV,GAHIA,aAAiB7K,QACjBV,EAAMuL,EAAM4B,SAEa,mBAAlB4lB,EAKX,OAAOj4B,QAAQE,OAAOgF,GAJlB+yB,EAAc/yB,EAIQ,EAG9B,IACI,OAAOuK,IACF9O,MAAMF,IAC4B,mBAApBu3B,GACPA,EAAgBv3B,GAEbA,KAEViI,OAAO+H,GACGw1D,EAAKx1D,KAEtB,MAAOO,GACL,OAAOi1D,EAAKj1D,IAIb2tC,kBAAkBiC,EAA+BslB,GAUpD,OATgCA,EAASh5D,KAAK9H,IAC1C,MAAMonB,KAAEA,EAAInH,IAAEA,EAAK8gD,iBAAkBhf,EAAOif,kBAAmBhf,GAAWhiD,EAE1E,MAAO,CACHihE,QAASjhE,EACTkhE,aAHYznE,KAAK0nE,sBAAsB,CAAE/5C,OAAMnH,MAAK8hC,QAAOC,UAAUxG,GAIxE,IACF77C,MAAK,CAAC3C,EAAGhE,IAAMA,EAAEkoE,aAAelkE,EAAEkkE,eAEN,GAAGD,QAG/B1nB,gCAAgCv8C,EAAmCokE,GACtE,MAAMh6C,EAAO9T,KAAKC,MAAMD,KAAK+tD,IAAID,EAAQh6C,KAAOg6C,EAAQh6C,MAAQg6C,EAAQL,iBAAmB/jE,EAAE+kD,OAAS,IAEtG,MAAO,CACH9hC,IAFQ3M,KAAKC,MAAMD,KAAK+tD,IAAID,EAAQnhD,IAAMmhD,EAAQnhD,KAAOmhD,EAAQJ,kBAAoBhkE,EAAEglD,QAAU,IAGjG56B,QAIAmyB,6BAA6B+nB,EAA2BC,GAC5D,MAAMC,EAAMF,EAAGl6C,KACTq6C,EAAMH,EAAGrhD,IACTyhD,EAASF,EAAMF,EAAGvf,MAClB4f,EAASF,EAAMH,EAAGtf,OAElB4f,EAAML,EAAGn6C,KACTy6C,EAAMN,EAAGthD,IACT6hD,EAASF,EAAML,EAAGxf,MAClBggB,EAASF,EAAMN,EAAGvf,OAKxB,OAHiB1uC,KAAK+tD,IAAI,EAAG/tD,KAAK0uD,IAAIN,EAAQI,GAAUxuD,KAAK+tD,IAAIG,EAAKI,IACrDtuD,KAAK+tD,IAAI,EAAG/tD,KAAK0uD,IAAIL,EAAQI,GAAUzuD,KAAK+tD,IAAII,EAAKI,WClFzDI,GAIjBvoE,YAAoBinB,EAAkBuS,GAAlBz5B,cAAAknB,EAChBlnB,KAAKyoE,eAAiBhvC,EAAcptB,MAGjCgiD,OACH,OAAOqa,GAAgBC,WAAW3oE,KAAKknB,SAAUlnB,KAAKyoE,gBAGnDtoE,OAAOwkE,GACV,OAAO+D,GAAgB1D,cAAchlE,KAAKknB,SAAUlnB,KAAKyoE,eAAgB9D,GAGtEthC,OAAOshC,GACV,OAAO+D,GAAgBxD,cAAcllE,KAAKknB,SAAUlnB,KAAKyoE,eAAgB9D,UChB5DiE,GAEjB3oE,YAAoBinB,GAAAlnB,cAAAknB,EAGbmnC,OACH,OAAOruD,KAAK6oE,gBAGT1oE,OAAOkM,EAAes4D,GACzB,OAAO+D,GAAgBhE,eAAe1kE,KAAKknB,SAAU7a,EAAOs4D,GAGzDthC,OAAOh3B,GACV,OAAOq8D,GAAgB5D,eAAe9kE,KAAKknB,SAAU7a,GAGlD+gD,WAAW/gD,GAEd,aADyBrM,KAAK6oE,iBACZ5/C,MAAM6/C,GAAQA,EAAIz8D,QAAUA,IAG1C+gD,sBACJ,MAAMxrD,EAA4C,GASlD,aAP4B8mE,GAAgBrD,oBAAoBrlE,KAAKknB,WACvDo+C,WAAWh/D,SAASs+D,IAC9BhjE,EAAOsB,KAAK,CACRmJ,MAAOu4D,EAASv4D,MAChBs4D,QAAS,IAAI6D,GAAgBxoE,KAAKknB,SAAU09C,IAC9C,IAEChjE,SChCMmnE,GAIjB9oE,YAAoBinB,GAAAlnB,cAAAknB,EAChBlnB,KAAKgpE,YAAc,IAAIJ,GAAmB1hD,GAG1Co+C,iBACA,OAAOtlE,KAAKgpE,YAGT5b,kBAEH,aAD4Bsb,GAAgBrD,oBAAoBrlE,KAAKknB,WAChDjW,QAGlBuzD,WAAWvzD,GACd,OAAOy3D,GAAgBlE,WAAWxkE,KAAKknB,SAAUjW,WCD1C,CAAC/H,EAAYgC,EAAmCwY,EAAoBxQ,EAA+B+1D,EAA+CC,EAA6CC,EAA0C9yB,iBACpP,MAAMz/B,EAA8B0vD,KAC9B1yC,EAAU1gB,EAAO+N,UAAU,UAAU/X,KACrCkgE,EAAc,KAChB,MAAMC,EAAWF,IACjB,IAAKE,EACD,MAAM,IAAItiE,MAAM,+HAEpB,OAAOsiE,CAAQ,EAGnB,IAAIC,EAEJ,MAAM7xB,EAAMvuC,EACNR,EAAgBwC,EAAQtG,KACxB2kE,EAAmCr+D,EAAQm6C,KACjD,IAiCImkB,EAjCAC,EAAiCv+D,EAAQ62C,OACzC2nB,EAAex+D,EAAQ4iB,IACvBgwC,EAAiB5yD,EAAQmB,MACzB0wC,YAAgB7xC,EAAQvG,uBAAW,GACnCglE,EAAsBz+D,EAAQgxC,WAC9B0tB,EAAkB1+D,EAAQ02C,MAC1BioB,YAA0B3+D,EAAQ4+D,0BAAc,GAChDC,EAAmB7+D,EAAQ8+D,QAC3BC,EAAiC/+D,EAAQg/D,qBACzCC,EAA+Bj/D,EAAQk/D,mBACvCC,YAA0Bn/D,EAAQo/D,8BAClCC,EAA2Cr/D,EAAQ+H,SAGnDu3D,EAAsBt/D,EAAQu2C,UAG9BgpB,EAAqBv/D,EAAQw/D,SAG7BC,EAAwBz/D,EAAQ0/D,YAGhCC,EAA2C3/D,EAAQ/E,MAGnD2kE,EAAsB5/D,EAAQ6/D,WAC9BC,EAAoB9/D,EAAQ+/D,SAE5BC,EAAmBhgE,EAAQigE,QAE3BC,EAAqBlgE,EAAQmgE,SAK7BC,YAA6CpgE,EAAQqgE,4BAAgB,GAGrEC,EAActgE,EAAQugE,WAEtBC,EAAuDxgE,EAAQygE,kBAEnE,MAAMC,EAAsB,IAAI7C,GAAS7/D,GAqGzC,SAAS2iE,EAAW9pB,EAAwCxkC,EAAqD3L,GAC7G,OAAOk6D,GAAMC,oBAAmB,KAC5B,GAAIjxB,GAAuBiH,GACvB,MAAM,IAAIh7C,MAAM,2DAEpB,OAAO2c,EAASmoD,WAAWvC,EAAcvnB,EAAO,GACjDxkC,EAAS3L,GAwLhB,SAAS4vC,EAAWwqB,EAAuBzuD,EAAqD3L,GAC5F,OAAOk6D,GAAMC,oBAAmB,IACrBroD,EAAS89B,WAAW8nB,EAAc0C,IAC1CzuD,EAAS3L,GA2ShB,SAASq6D,EAAen6D,GACpB,OAAOo6D,EAAY,gBAAiBp6D,GAqDxC,SAASo6D,EAAY5nE,EAAawN,EAAeq6D,GAC7C,IAAK1vB,GAAgB3qC,GACjB,MAAM,IAAI/K,MAAM,+BAGpB,OAAO6P,EAAU/E,IAAIvN,EAAKwN,EAAUq6D,GA0UxC,SAASC,EAAyBC,GAC9B,MAAMpwB,EAAY4tB,EAAYwC,GAC9B,QAAyB,IAAdpwB,EACP,OAAmCA,EAZpB73C,QAAO,CAACC,EAAMioE,KAC7B,MAAM//D,EAASggE,GAAYplE,IAAImlE,GAI/B,OAHI//D,GACAlI,EAAKnB,KAAKqJ,EAAO64B,KAEd/gC,CAAI,GACZ,IAUP,SAASmoE,UACL,GAAIzvB,EAAS0vB,kBACT,OAAO1vB,EAAS0vB,kBAEpB,GAAI1vB,GAAYA,EAAS2vB,MAAQ3vB,EAAS2vB,KAAKp0D,YAC3C,OAAOykC,EAAS2vB,KAAKp0D,YAEzB,MAAMtB,EAAO21D,IACb,GAAI31D,EACA,OAAOA,EAAK4R,gBAIhB,MAAMu4C,EAAa8H,IACnB,GAAI9H,EAAY,CACZ,MAAMnxD,EAAWmxD,EAAWlK,YAAYhuC,MAAMzoB,GAAM0I,IAAO1I,EAAE0I,KAC7D,GAAI8G,EACA,iBAAOA,EAASsI,kCAAa1T,MAOzC,SAAS+nE,IACL,GAAsB,oBAAXpgE,QAA0BA,OAAOO,UAAYP,OAAOO,SAAS6/D,cAAe,CACnF,MAAM31D,EAAOzK,OAAOO,SAAS6/D,cAAczjE,GAC3C,OAAK8N,QACD,GAWZsyD,EAAe,CACPpgE,SACA,OAAOuuC,GAEP7yC,WACA,OAAO8D,GAEP4P,kBACA,MAAM6oD,EAAa8H,IACnB,OAAO9H,EAAaA,EAAW7oD,YAAYk0D,UAAwBlhE,GAEnEshE,mBACA,OAAOlpD,EAASkpD,cAEhBC,kBACA,GAAsB,oBAAXtgE,QAA0BA,OAAOO,SACxC,OAAOupC,EAAI5b,UAAUxR,MAAM1oB,GAAMA,EAAE2mB,WAAalnB,KAAKkJ,KAEzD,MAAM6D,EAAUy/D,IAChB,OAAOz/D,EAAU,CAAEuL,YAAavL,QAAYzB,GAE5CwiB,UACA,OAAO47C,GAEPr9D,YACA,OAAOyxD,GAEP3J,4BACA,OAAOoW,GAEPt3D,eACA,OAAOs3D,GAEPQ,iBACA,MAA+B,QAAxBxB,EAAMp9D,cAA0B2+D,OAAcx/D,GAErD2/D,eACA,MAA+B,QAAxB1B,EAAMp9D,cAA0B6+D,OAAY1/D,GAEnD6/D,cACA,OAAOD,GAEPK,mBACA,OAAOD,GAEPjmB,WACA,OAAOkkB,GAEPpjE,YACA,OAAO0kE,GAEPD,kBACA,OAAOD,GAEPlpB,gBACA,OAAO+oB,GAEPa,eACA,OAAOD,GAEPzmE,cACA,OAAOo4C,GAEPgF,aACA,OAAO0nB,GAEPqD,gBACA,OAAOvC,EAAUuC,WAEjBC,gBACA,OAAOxC,EAAUwC,WAEjBC,eACA,OAAOzC,EAAUyC,UAEjBC,eACA,OAAO1C,EAAU0C,UAEjBC,gBACA,OAAOtD,GAEP1tB,iBACA,OAAOytB,GAEPwD,aACA,YAA2B7hE,IAApBg+D,EAAapgE,IAEpBkkE,YACA,OAAO5D,GAEPQ,cACA,OAAOD,GAEPW,eACA,OAAOD,GAEP4C,oBACA,OAAOjB,EAAyB,QAEhCkB,qBACA,OAAOlB,EAAyB,SAEhCmB,sBACA,OAAOnB,EAAyB,UAEhCoB,uBACA,OAAOpB,EAAyB,WAEhClC,2BACA,OAAOD,GAEPp5C,iBACA,GAAIksB,EAAS2vB,KACT,OAAO3vB,EAAS2vB,KAAK77C,WAEzB,MAAM7Z,EAAO21D,IACb,OAAK31D,EAGEA,EAAK6Z,gBAHZ,GAKAg3B,uBACA,GAAI9K,EAAS2vB,KACT,OAAO3vB,EAAS2vB,KAAK7kB,iBAEzB,MAAM7wC,EAAO21D,IACb,OAAK31D,EAGEA,EAAK6wC,sBAHZ,GAKAzO,iBACA,OAAOluC,EAAQkuC,YAAc,YAE7BqyB,iBACA,OAAOD,GAEPiC,aACA,GAAsB,oBAAXlhE,QAA0BA,OAAOO,SACxC,OAAOg/D,GAAM4B,WAAWpE,EAAavnB,OAASx1C,OAAOO,SAAiB6gE,WAI1EhC,wBACA,OAAOnsE,OAAOa,OAAO,GAAIqrE,IAEzBkC,eACA,OAAOhC,GAEXiC,SA3/BJ,SAAkBtwD,EAAqD3L,GACnE,OAAOk6D,GAAMC,oBAAmB,IACP,cAAjBlB,EACO1pE,QAAQC,QAAQkoE,GAEpB5lD,EAASmqD,SAASvE,IAC1B/rD,EAAS3L,IAs/BZk8D,QAn/BJ,SAAiBvwD,EAAqD3L,GAClE,OAAOk6D,GAAMC,oBAAmB,IACP,WAAjBlB,EACO1pE,QAAQC,QAAQkoE,GAEpB5lD,EAASoqD,QAAQxE,IACzB/rD,EAAS3L,IA8+BZm8D,SA3+BJ,SAAkBxwD,EAAqD3L,GACnE,OAAOk6D,GAAMC,oBAAmB,IACP,cAAjBlB,EACO1pE,QAAQC,QAAQkoE,GAEpB5lD,EAASqqD,SAASzE,IAC1B/rD,EAAS3L,IAs+BZo8D,gBApgCJ,SAAyBzwD,EAAqD3L,GAC1E,OAAOk6D,GAAMC,oBAAmB,IACrBroD,EAASsqD,gBAAgB1E,IACjC/rD,EAAS3L,IAkgCZq8D,SAp+BJ,SAAkB1wD,EAAqD3L,GACnE,OAAOk6D,GAAMC,oBAAmB,IACxBpB,EACOxpE,QAAQC,QAAQkoE,GAEpB5lD,EAASuqD,SAAS3E,IAC1B/rD,EAAS3L,IA+9BZs8D,OA59BJ,SAAgB3wD,EAAqD3L,GACjE,OAAOk6D,GAAMC,oBAAmB,IACvBpB,EAGEjnD,EAASwqD,OAAO5E,GAFZnoE,QAAQC,QAAQkoE,IAG5B/rD,EAAS3L,IAu9BZu8D,eAp9BJ,SAAwB5wD,EAAqD3L,GACzE,OAAOk6D,GAAMC,oBAAmB,IACrBroD,EAASyqD,eAAe7E,IAChC/rD,EAAS3L,IAk9BZgwC,MAjhCJ,SAAerkC,EAAqD3L,GAChE,OAAOk6D,GAAMC,oBAAmB,IACxBnC,EACOzoE,QAAQC,QAAQkoE,GAEpB5lD,EAASk+B,MAAM0nB,IACvB/rD,EAAS3L,IA4gCZ+vC,SA3hCJ,SAAkBpkC,EAAqD3L,GACnE,OAAOk6D,GAAMC,oBAAmB,IACxBnC,EACOzoE,QAAQC,QAAQkoE,GAEpB5lD,EAASi+B,SAAS2nB,IAC1B/rD,EAAS3L,IAshCZi6D,aACAuC,SAnlCJ,SAAkBC,EAAkB9wD,EAAqD3L,GACrF,OAAOk6D,GAAMC,oBAAmB,KAC5B,GAAIjxB,GAAuBuzB,GACvB,MAAM,IAAItnE,MAAM,6CAEpB,OAAIsnE,IAAavQ,EACN38D,QAAQC,QAAQkoE,GAEpB5lD,EAAS0qD,SAAS9E,EAAc+E,EAAS,GACjD9wD,EAAS3L,IA2kCZ08D,SA9oCJ,SAAkB5S,EAAmCn+C,EAAqD3L,GACtG,OAAOk6D,GAAMC,oBAAmB,KAC5B,IAAKrQ,GAAuC,IAA9Bl8D,OAAO2E,KAAKu3D,GAAO/6D,QAAgBnB,OAAO2E,KAAKu3D,GAAO3oC,OAAOzuB,IAASA,IAChF,MAAM,IAAIyC,MAAM,4BAA8B+G,KAAKC,UAAU2tD,IAEjE,GAAIA,QAAyBpwD,IAAhBowD,EAAM9Z,MAAqB,CACpC,GAA2B,kBAAhB8Z,EAAM9Z,MACb,MAAM,IAAI76C,MAAM,+EACO,IAAhB20D,EAAM9Z,OACbhuB,EAAQ9V,KAAK,oCAGrB,GAAI49C,QAA0BpwD,IAAjBowD,EAAM3B,QAAgD,kBAAjB2B,EAAM3B,OACpD,MAAM,IAAIhzD,MAAM,oDAEpB,IAAK,MAAM83B,IAAQ,CAAC,YAAa,YAAa,WAAY,YAAa,CACnE,MAAM0vC,EAAa7S,EACbn6D,EAAQgtE,EAAW1vC,GACzB,GAAIA,KAAQ68B,EAAO,CACf,GAAI5gB,GAAuBv5C,GAAQ,QACxBgtE,EAAW1vC,GAClB,SAEJ,IAAK2vC,GAAcD,EAAW1vC,IAC1B,MAAM,IAAI93B,MAAM,IAAI83B,wBAIhC,OAAOnb,EAAS4qD,SAAShF,EAAc5N,EAAM,GAC9Cn+C,EAAS3L,IAknCZ68D,SAvmCJ,SAAkBC,EAAgBnxD,EAAqD3L,GACnF,OAAOk6D,GAAMC,oBAAmB,KAC5B,GAAqB,kBAAV2C,EACP,MAAM,IAAI3nE,MAAM,sCAEpB,OAAO2c,EAAS+qD,SAASnF,EAAcoF,EAAM,GAC9CnxD,EAAS3L,IAkmCZ+8D,aAhnCJ,SAAsBC,EAAuCrxD,EAAqD3L,GAC9G,OAAOk6D,GAAMC,oBACT,IAAMroD,EAASirD,aAAarF,EAAcsF,IAC1CrxD,EACA3L,IA6mCJi9D,mBAhmCJ,SAA4BC,EAA6CvxD,EAAqD3L,GAC1H,OAAOk6D,GAAMC,oBAAmB,KAC5B,IAAK+C,GAAetvE,OAAO2E,KAAK2qE,GAAa/7C,OAAOxxB,QAAoB+J,IAAV/J,IAC1D,MAAM,IAAIwF,MAAM,gEAEpB,OAAO2c,EAASmrD,mBAAmBvF,EAAcwF,EAAY,GAC9DvxD,EAAS3L,IA2lCZm9D,SA3pCJ,SAAkBC,EAAgBzxD,EAAqD3L,GACnF,OAAOk6D,GAAMC,oBAAmB,KAC5B,GAAIkD,GAAwBD,GACxB,MAAM,IAAIjoE,MAAM,2CAEpB,OAAO2c,EAASqrD,SAASzF,EAAc0F,EAAO,GAC/CzxD,EAAS3L,IAspCZs9D,eA3jCJ,SAAwBC,EAAuC5xD,EAAqD3L,GAChH,OAAOk6D,GAAMC,oBAAmB,KAC5B,QAA0B,IAAfoD,GAAiE,IAAnC3vE,OAAO2E,KAAKgrE,GAAYxuE,OAC7D,MAAM,IAAIoG,MAAM,iCAEpB,GAAIkoE,GAAwBE,EAAWC,UACnC,MAAM,IAAIroE,MAAM,6CAEpB,GAAIkoE,GAAwBE,EAAWE,aACnC,MAAM,IAAItoE,MAAM,gDAEpB,OAAO2c,EAASwrD,eAAe5F,EAAc6F,EAAW,GACzD5xD,EAAS3L,IAgjCZ09D,kBA7iCJ,SAA2BF,EAAkB7xD,EAAqD3L,GAC9F,OAAOk6D,GAAMC,oBAAmB,KAC5B,GAAIkD,GAAwBG,GACxB,MAAM,IAAIroE,MAAM,6CAEpB,OAAO2c,EAAS4rD,kBAAkBhG,EAAc8F,EAAS,GAC1D7xD,EAAS3L,IAwiCZ4vC,aACA+tB,KAAM,IAAM/tB,GAAW,GACvBguB,KAAM,IAAMhuB,GAAW,GACvBiuB,OAAShC,GAAW5B,EAAWC,GAAM4D,yBAAyBpG,EAAavnB,OAAQ0rB,GAAUnE,EAAamE,SAC1G15D,MA3qCJ,SAAewJ,EAAqD3L,GAChE,OAAOk6D,GAAMC,oBAAmB,KAC5B,IAAK7iE,EACD,MAAM,IAAInC,MAAM,iCAEpB,OAAO2c,EAAS3P,MAAMu1D,EAAa,GACpC/rD,EAAS3L,IAsqCZ+9D,KA/9BJ,SAAc7jE,EAA0CugE,EAA6C9uD,EAAqD3L,GACtJ,OAAOk6D,GAAMC,oBAAmB,KAC5B,GAAIjxB,GAAuBhvC,GACvB,MAAM,IAAI/E,MAAM,sCAAsC+E,KAG1D,GAAsB,iBAAXA,EAAqB,CAC5B,MAAM4vC,EAAM6wB,GAAYplE,IAAI2E,GAC5B,IAAK4vC,EACD,MAAM,IAAI30C,MAAM,+DAA+D+E,KAEnFA,EAAS4vC,EAAItW,IAEjB,OAAO1hB,EAASisD,KAAKrG,EAAcx9D,EAAQugE,EAAU,GACtD9uD,EAAS3L,IAk9BZg+D,WAx4BJ,SAAoBC,GAChB,OAAOnsD,EAASksD,WAAWtG,EAAcuG,IAw4BzCC,WAr4BJ,WACI,OAAOpsD,EAASosD,WAAWxG,IAq4B3B1rB,cAl4BJ,SAAuBj5C,EAAc4Y,EAAqD3L,GACtF,OAAOk6D,GAAMC,oBAAmB,KAC5B,GAAIjxB,GAAuBn2C,GACvB,MAAM,IAAIoC,MAAM,4CAGpB,OAAO2c,EAASk6B,cAAc0rB,EAAc3kE,GAAS,EAAM,GAC5D4Y,EAAS3L,IA43BZm+D,KAz3BJ,SAAcxyD,EAAqD3L,GAC/D,OAAOk6D,GAAMC,oBAAmB,IACrBroD,EAASqsD,KAAKzG,IACtB/rD,EAAS3L,IAu3BZo+D,OAp3BJ,SAAgBzyD,EAAqD3L,GACjE,OAAOk6D,GAAMC,oBAAmB,IACrBroD,EAASssD,OAAO1G,IACxB/rD,EAAS3L,IAk3BZq+D,QA/2BJ,SAAiB1yD,EAAkC3L,GAC/C,OAAOk6D,GAAMC,oBAAmB,IACrBroD,EAASusD,QAAQ3G,IACzB/rD,EAAS3L,IA62BZs+D,QA12BJ,SAAiBC,EAAqB5yD,EAAqD3L,GACvF,OAAOk6D,GAAMC,oBAAmB,KAC5B,GAAIkD,GAAwBkB,GACxB,MAAM,IAAIppE,MAAM,6CAEpB,OAAO2c,EAASwsD,QAAQ5G,EAAc6G,EAAY,GACnD5yD,EAAS3L,IAq2BZ0tC,cAl2BJ,SAAuBpD,EAAoB3+B,EAAqD3L,GAC5F,OAAOk6D,GAAMC,oBAAmB,KAC5B,GAAIkD,GAAwB/yB,GACxB,MAAM,IAAIn1C,MAAM,2CAEpB,OAAO2c,EAAS47B,cAAcgqB,EAAcptB,EAAW,GACxD3+B,EAAS3L,IA61BZw+D,cAj1BJhjB,eAA6BijB,GACzB,GAAIpB,GAAwBoB,GACxB,MAAM,IAAItpE,MAAM,IAAIspE,oCAExB,OAAO3sD,EAAS0sD,cAAc9G,EAAc+G,IA80B5CC,UAx9BJ,SAAmBC,EAAuCC,EAA4CjzD,EAAqD3L,GACvJ,OAAOk6D,GAAMC,oBAAmB,WAC5B,MAAM1hC,EAAe,oHACrB,GAAIyQ,GAAuBy1B,GACvB,MAAM,IAAIxpE,MAAMsjC,EAAekmC,GAGnC,IAAIE,EACJ,GAAmB,iBAARF,GAEP,GADAE,YAAelE,GAAYplE,IAAIopE,yBAAMnrC,IACjC0V,GAAuB21B,GACvB,MAAM,IAAI1pE,MAAMsjC,EAAeomC,OAEhC,IAAK31B,GAAuBy1B,EAAIrnE,IAGnC,MAAM,IAAInC,MAAMsjC,GAFhBomC,EAAeF,EAInB,MAAMG,EAA8C,GAUpD,OATK51B,GAAuB01B,KACL,iBAARA,EACPE,EAAcn+D,MAAQi+D,GAEtBE,EAAcC,SAAWH,EAAIG,SAC7BD,EAAcn+D,MAAQi+D,EAAIj+D,QAI3BmR,EAAS4sD,UAAUhH,EAAcmH,EAAcC,EAAc,GACrEnzD,EAAS3L,IA47BZg/D,UAz7BJ,SAAmBJ,EAAoC,GAAIjzD,EAAqD3L,GAC5G,OAAOk6D,GAAMC,oBAAmB,KAC5B,MAAM8E,EAAgC,GA2BtC,YAzB4BvlE,IAEPklE,EAFRvc,YAGqB,iBAAnBuc,EAAIvc,WACX4c,EAAY5c,WAAauc,EAAIvc,WACrBnZ,GAAuB01B,EAAIvc,WAAW/qD,MAC9C2nE,EAAY5c,WAAauc,EAAIvc,WAAW/qD,IAEvC4xC,GAAuB01B,EAAItc,qBAC5B2c,EAAY3c,kBAAoBsc,EAAItc,mBAEnCpZ,GAAuB01B,EAAIloB,SAC5BuoB,EAAYvoB,MAAQkoB,EAAIloB,OAEvBxN,GAAuB01B,EAAIjoB,UAC5BsoB,EAAYtoB,OAASioB,EAAIjoB,SAGxBzN,GAAuB01B,EAAIzuB,UAC5B8uB,EAAY9uB,OAASyuB,EAAIzuB,QAG5BjH,GAAuB01B,EAAIM,iBAC5BD,EAAYC,cAAgBN,EAAIM,eAE7BptD,EAASktD,UAAUtH,EAAcuH,EAAY,GACrDtzD,EAAS3L,IA45BZm/D,oBA71BJ,SAA6BC,EAA+BzzD,EAAqD3L,GAC7G,OAAOk6D,GAAMC,oBAAmB,KAC5B,GAAoC,kBAAzBiF,EACP,MAAM,IAAIjqE,MAAM,qDAEpB,OAAO2c,EAASqtD,oBAAoBzH,EAAc0H,EAAqB,GACxEzzD,EAAS3L,IAw1BZq/D,UA90BJ,SAAmBziE,GACf,OAAOkV,EAASutD,UAAU3H,EAAc96D,IA80BxC0iE,cA30BJ,SAAuB1iE,GACnB,OAAOkV,EAASwtD,cAAc5H,EAAapgE,GAAIsF,IA20B/C2iE,cAx0BJ,SAAuBC,GACnB,OAAO1tD,EAASytD,cAAc7H,EAAapgE,GAAIkoE,IAAW,IAw0B1DC,cAzzBJ,SAAuB5F,EAAoBluD,EAAqD3L,GAC5F,OAAOk6D,GAAMC,oBAA4C,KACrD,GAAI/2D,MAAMy2D,GACN,MAAM,IAAI1kE,MAAM,8BAEpB,OAAO2c,EAAS2tD,cAAc/H,EAAcmC,EAAW,GACxDluD,EAAS3L,IAozBZ0/D,OAt0BJ,SAAgB/zD,EAAqD3L,GACjE,OAAOk6D,GAAMC,oBAA4C,IAC9CroD,EAAS4tD,OAAOhI,IACxB/rD,EAAS3L,IAo0BZ2/D,QAj0BJ,SAAiBh0D,EAAqD3L,GAClE,OAAOk6D,GAAMC,oBAA4C,IAC9CroD,EAAS6tD,QAAQjI,IACzB/rD,EAAS3L,IA+zBZ4/D,aAnzBJ,WACI,OAAO9tD,EAAS8tD,aAAalI,IAmzB7BmI,QAhzBJ,SAAiBC,GACb,OAAOhuD,EAAS+tD,QAAQnI,EAAcoI,IAgzBtCC,MA7yBJ,SAAeC,EAA2BvsB,GACtC,MAAMwsB,EAA6B,CAC/BC,aAAa,EACbzsB,KAAM,QAWV,MAR+B,kBAApBusB,IACPC,EAAaC,YAAcF,QAGX,IAATvsB,IACPwsB,EAAaxsB,KAAOA,GAGjB3hC,EAASiuD,MAAMrI,EAAcuI,IAgyBpCE,UA1mCJ,SAAmBrH,EAAmBntD,EAAqD3L,GACvF,OAAOk6D,GAAMC,oBAAmB,KAC5B,GAAwB,kBAAbrB,EACP,MAAM,IAAI3jE,MAAM,yCAEpB,OAAO2c,EAASquD,UAAUzI,EAAcoB,EAAS,GAClDntD,EAAS3L,IAqmCZogE,MA9xBJ,SAAeC,GACX,OAAOvuD,EAASsuD,MAAM1I,EAAc2I,IA8xBpCC,WA3xBJ,SAAoBC,GAChB,OAAOzuD,EAASwuD,WAAW5I,EAAc6I,IA2xBzCC,MAtwBJ,SAAezG,GACX,OAAOjoD,EAAS0uD,MAAM9I,EAAcqC,IAswBpC0G,QAzxBJ,SAAiBC,GACb,OAAO,IAAInxE,SAAQ,CAACC,EAASC,KACzB,MAAMkxE,EAAiBtG,GACnB,CAACvwB,EAA8B82B,EAAgCC,KACvDvpE,IAAOwyC,EAAIxyC,KACXqpE,IACAnxE,EAAQkoE,OAIpB5lD,EAAS2uD,QAAQ/I,EAAcgJ,GAC1BzoE,OAAOnI,IACJ6wE,IACAlxE,EAAOK,EAAE,GACX,KA4wBV8jC,QApwBJ,SAAiBktC,GACb,OAAOhvD,EAAS8hB,QAAQ8jC,EAAcoJ,IAowBtCC,SAjwBJ,SAAkB7kD,EAAa8kD,GAC3B,OAAOlvD,EAASivD,SAASrJ,EAAcx7C,EAAK8kD,IAiwB5CC,UA9vBJ,SAAmB5/D,GACf,OAAOyQ,EAASovD,gBAAgBxJ,EAAcr2D,IA8vB9C8/D,WAAY3lB,gBAER,wBADmBgc,IAAc4J,uBAAuB,CAAE/2B,UAAW,CAACxE,MAC1D,yBAAIw7B,OAAO,EAG3BC,QAxvBJ,SAAiBphE,GACb,IAAK2qC,GAAgB3qC,GACjB,MAAM,IAAI/K,MAAM,iCAKpB,YAHWuE,IAAPpC,GACA4I,EAASw3D,GAEN1yD,EAAU/E,IAAI,UAAWC,IAkvBhCqhE,aA/uBJ,SAAsBrhE,GAClB,OAAOo6D,EAAY,eAAgBp6D,IA+uBnCshE,eA9vBJ,SAAwBthE,GACpB,OAAOo6D,EAAY,iBAAkBp6D,EAAU,CAACw3D,EAAaj9D,MAAOi9D,KA8vBpE+J,mBA7uBJ,SAA4BvhE,GACxB,OAAOo6D,EAAY,qBAAsBp6D,IA6uBzCwhE,qBA1uBJ,SAA8BxhE,GAC1B,OAAOo6D,EAAY,uBAAwBp6D,IA0uB3CyhE,qBAvuBJ,SAA8BzhE,GAC1B,OAAOo6D,EAAY,uBAAwBp6D,IAuuB3C0hE,YApuBJ,SAAqB1hE,GACjB,IAAK2qC,GAAgB3qC,GACjB,MAAM,IAAI/K,MAAM,iCAKpB,OAHI4jE,GACA74D,EAASw3D,GAEN1yD,EAAU/E,IAAI,YAAaC,IA8tBlC2hE,WA3tBJ,SAAoB3hE,GAChB,IAAK2qC,GAAgB3qC,GACjB,MAAM,IAAI/K,MAAM,iCAKpB,OAHK4jE,GACD74D,EAASw3D,GAEN1yD,EAAU/E,IAAI,WAAYC,IAqtBjC4hE,YA1sBJ,SAAqB5hE,GACjB,MAAqB,cAAjB+4D,EACOqB,EAAY,YAAap6D,EAAU,CAACw3D,IAEpC4C,EAAY,YAAap6D,IAusBpC6hE,YAntBJ,SAAqB7hE,GACjB,MAAqB,cAAjB+4D,EACOqB,EAAY,YAAap6D,EAAU,CAACw3D,IAEpC4C,EAAY,YAAap6D,IAgtBpC8hE,SApsBJ,SAAkB9hE,GACd,MAAqB,WAAjB+4D,EACOqB,EAAY,SAAUp6D,EAAU,CAACw3D,IAEjC4C,EAAY,SAAUp6D,IAisBjColD,WA7rBJ,SAAoBplD,GAChB,OAAOo6D,EAAY,WAAYp6D,IA6rB/BgtC,WA1rBJ,SAAoBhtC,GAChB,OAAOo6D,EAAY,WAAYp6D,IA0rB/B+hE,oBAvrBJ,SAA6B/hE,GACzB,OAAOo6D,EAAY,qBAAsBp6D,IAurBzCgiE,iBAprBJ,SAA0BhiE,GACtB,OAAOo6D,EAAY,kBAAmBp6D,IAorBtCiiE,iBAjrBJ,SAA0BjiE,GACtB,OAAOo6D,EAAY,eAAgBp6D,IAirBnCkiE,gBA9qBJ,SAAyBliE,GACrB,OAAOo6D,EAAY,iBAAkBp6D,IA8qBrC+9C,oBAnqBJ,SAA6B/9C,GACzB,OAAOo6D,EAAY,sBAAuBp6D,IAmqB1CmiE,eA5qBJ,SAAwBniE,GACpB,OAAOo6D,EAAY,gBAAiBp6D,IA4qBpCoiE,gBAzqBJ,SAAyBpiE,GACrB,OAAOo6D,EAAY,iBAAkBp6D,IAyqBrCm6D,iBACAkI,iBA/pBJ,SAA0BriE,GACtB,OAAOo6D,EAAY,kBAAmBp6D,IA+pBtCsiE,iBA5pBJ,SAA0BtiE,GACtB,OAAOo6D,EAAY,kBAAmBp6D,IA4pBtCuiE,sBArpBJ,SAA+BviE,GAC3B,OAAOo6D,EAAY,wBAAyBp6D,IAqpB5CwiE,6BAtqBJ,SAAsCxiE,GAClC,OAAOo6D,EAAY,gCAAiCp6D,IAsqBpDyiE,UAnpBJ,SAAmBziE,GACf,IAAK2qC,GAAgB3qC,GACjB,MAAM,IAAI/K,MAAM,+BAYpB,OAAO2c,EAAS6wD,WARgB,CAACh3D,EAAqB3L,KAClD,MAAM2D,EAAUzD,IACZyD,GAAWA,EAAQzT,KACnByT,EAAQzT,KAAKyb,GAAS1T,MAAM+H,GAE5B2L,MAGgCrU,IAsoBxCsrE,aAnoBJ,SAAsB1iE,GAClB,IAAK2qC,GAAgB3qC,GACjB,MAAM,IAAI/K,MAAM,+BAYpB,OAAO2c,EAAS8wD,cARuB,CAACj3D,EAAqB3L,EAAmB6uD,KAC5E,MAAMlrD,EAAUzD,EAAS2uD,GACrBlrD,GAAWA,EAAQzT,KACnByT,EAAQzT,KAAKyb,GAAS1T,MAAM+H,GAE5B2L,MAGmCrU,IAsnB3CurE,oBAnnBJ,SAA6B3iE,GACzB,OAAOo6D,EAAY,sBAAuBp6D,IAmnB1C4iE,2BAhnBJ,SAAoC5iE,GAChC,OAAOo6D,EAAY,2BAA4Bp6D,IAgnB/C6iE,oBA7mBJ,SAA6B7iE,GACzB,OAAOo6D,EAAY,qBAAsBp6D,IA6mBzC8iE,aAlmBJ,SAAsB9iE,GAClB,IAAK2qC,GAAgB3qC,GACjB,MAAM,IAAI/K,MAAM,+BAYpB,OAAO2c,EAASkxD,cARc,CAACr3D,EAAqB3L,EAAmB6uD,EAAqB/8B,KACxF,MAAMnuB,EAAUzD,EAAS4xB,GACrBnuB,GAAWA,EAAQzT,KACnByT,EAAQzT,KAAKyb,GAAS1T,MAAM+H,GAE5B2L,MAGmCrU,IAslBvC2rE,WACA,OArUR,WACI,MAAMC,EAAavI,GAAYle,KAC/B,MAA4B,QAAxBkb,EAAMp9D,cACC,GAEE3M,OAAO2E,KAAK2wE,GAAY1wE,QAAmB,CAACC,EAAMq3C,KAC3D,MAAMnvC,EAAwBuoE,EAAWp5B,GAQzC,OAPInvC,GACGA,EAAO64B,IAAI2lC,iBACsB,IAA1Bx+D,EAAO64B,IAAI2lC,iBACiB,IAA5BzB,EAAayB,YACpBx+D,EAAO64B,IAAI2lC,aAAezB,EAAayB,YAC1C1mE,EAAKnB,KAAKqJ,EAAO64B,KAEd/gC,CAAI,GACZ,IACS6B,MAAK,CAAC6uE,EAAIC,KAClB,GAAID,EAAG9J,WAAa+J,EAAG/J,SAAU,CAC7B,IAAqB,IAAjB8J,EAAG9J,SACH,OAAOn2D,OAAOmgE,iBAElB,IAAqB,IAAjBD,EAAG/J,SACH,OAAOn2D,OAAOogE,iBAGtB,OAAOH,EAAG9J,SAAW+J,EAAG/J,QAAQ,IA4SzBkK,IAGP/K,yBACA,OAAOD,GAGPG,oBACA,OAAOD,GAIX+K,OAAM,IACKj0E,QAAQC,QAAQsoE,GAG3B2L,SAAQ,IACGl0E,QAAQC,QAAQ08D,GAG3B5c,UAAS,IACE//C,QAAQC,QAAQqoE,GAG3B9K,WAAU,IACCx9D,QAAQC,QAAQ27C,GAG3BW,WAAW/4C,GACP,GAAIm2C,GAAuBn2C,GACvB,MAAM,IAAIoC,MAAM,6FAGpB,OAAO2c,EAASk6B,cAAc0rB,EAAc3kE,GAAS,IAGzD2wE,WAAU,IACapM,IACDqM,cAAcrsE,GAGpCssE,SAAQ,CAACltB,EAAgBC,IACdsjB,EAAW,CAAEvjB,QAAOC,WAG/BktB,OAAM,CAACjvD,EAAcmH,IACVk+C,EAAW,CAAErlD,MAAKmH,SAG7By/B,8BACI,MAAMsoB,EAAcnL,EAAkBoL,iBACtC,GAAKD,EAGL,iBAAOnJ,GAAYle,KAAKqnB,yBAAatwC,KAGzCgoB,gBAAqB,SACV5tD,OAAO2E,KAAKooE,GAAYle,MAC1BhgD,KAAK/J,GAAQioE,GAAYle,KAAK/pD,GAAK8gC,MACnC17B,QAAQqxC,GACaA,EAAE9nC,SAAiB0iE,mBACjBzsE,IAIhC0sE,YAAchxE,GACHwkE,IAAcrkE,KAAKH,EAAMsE,GAGpC2sE,aAAc,IACHzM,IAAcrrD,MAAM7U,IAwCnC,MAAO,CACHk8B,IAAKkkC,EACLwM,OAlCyB,CACzBC,aAhqBJ,SAAsBrkD,GAClBg4C,EAAOh4C,EAAQ5D,IACfgwC,EAASpsC,EAAQrlB,MACjB0wC,EAAWrrB,EAAQ/sB,SAAW,GAC9B8kE,EAAU/3C,EAAQqwB,OAClB4nB,EAAcj4C,EAAQwqB,WACtB0tB,EAASl4C,EAAQkwB,MACjBioB,EAAcn4C,EAAQo4C,YAAc,GACpCC,EAAWr4C,EAAQs4C,QACnBC,EAAwBv4C,EAAQw4C,qBAChCC,EAAsBz4C,EAAQ04C,mBAC9BC,EAAiB34C,EAAQ44C,cACzBC,EAAY74C,EAAQze,SACpBu3D,EAAa94C,EAAQ+vB,UACrBgpB,EAAY/4C,EAAQg5C,SACpBC,EAAej5C,EAAQk5C,YACvBC,EAAen5C,EAAQvrB,MACvB2kE,EAAcp5C,EAAQq5C,WACtBG,EAAWx5C,EAAQy5C,QACnBC,EAAY15C,EAAQ25C,SAGpBG,EAAc95C,EAAQ+5C,WACtBC,EAAqBh6C,EAAQi6C,mBA2oB7BqK,kBAzmBJ,gBACe1qE,IAAPpC,IAGJ0N,EAAUpE,QAAQ,UAAW82D,GAC7BpgE,OAAKoC,IAqmBL2qE,wBAvjBJ7oB,eAAuCjnD,GACrB,cAAVA,EACAwkE,GAAe,EACE,aAAVxkE,EACPwkE,GAAe,EAEfE,EAAe1kE,QAEbud,EAASwyD,SACft/D,EAAUpE,QAAQrM,EAAOmjE,IA+iBzB6M,mBA1oBJ,SAA4B9H,GACxBvQ,EAASuQ,EACT3qD,EAASwyD,SACJE,SAAQ,KACLx/D,EAAUpE,QAAQ,iBAAkB67D,EAAU/E,EAAa,KAuoBnE+M,wBA9nBJ,SAAiC50B,GACzBA,IAAc+oB,IAGlBA,EAAa/oB,EACb7qC,EAAUpE,QAAQ,qBAAsB82D,KA0nBxCgN,iBApoBJ,SAA0BtH,GACtBtF,EAAOsF,EACPp4D,EAAUpE,QAAQ,eAAgBw8D,EAAQ1F,IAmoB1CiN,4BAxnBJ,SAAqCtjE,GACjCs3D,EAAYt3D,EACZ2D,EAAUpE,QAAQ,mBAAoB82D,IAunBtCkN,qBApnBJ,SAA8B7xE,GAC1Bo4C,EAAWp4C,EACXiS,EAAUpE,QAAQ,kBAAmBuqC,EAAUusB,IAmnB/CmN,2BAjjBJ,SAAoCpL,GAChCD,EAAYC,EACZz0D,EAAUpE,QAAQ,eAAgB82D,IAgjBlCoN,oBA7iBJ,SAA6B30B,GACrB0nB,EAAQjjD,MAAQu7B,EAAOv7B,KAAOijD,EAAQ97C,OAASo0B,EAAOp0B,MAAQ87C,EAAQnhB,QAAUvG,EAAOuG,OAASmhB,EAAQlhB,SAAWxG,EAAOwG,SAG9HkhB,EAAU1nB,EACVnrC,EAAUpE,QAAQ,iBAAkB82D,KAyiBpCqN,mBAtiBJ,SAA4BzJ,GACxBtD,EAASsD,EACTt2D,EAAUpE,QAAQ,gBAAiB82D,IAqiBnCsN,uBA3mBJ,SAAgCC,GAC5B,MAAMC,EAAuC,CAAC,WAAY,cAAe,QAAS,WAAW1yE,QAAO,CAACC,EAAWf,KAC5Ge,EAAKf,GAAKuzE,EAAYvzE,GACfe,IACR,KAMoD,IAJ/BinE,EAAcj9D,KAAK0oE,GAChCA,EAAI3H,WAGKn0D,QAAQ47D,EAAYzH,WACpC9D,EAAcpoE,KAAK4zE,GAGvBlgE,EAAUpE,QAAQ,qBAAsBskE,EAAWxN,IA8lBnD0N,yBA3lBJ,SAAkCC,GAC9B,IAAIC,EACJ5L,EAAgBA,EAAclnE,QAAO,CAACC,EAAM0yE,KACpCA,EAAI3H,WAAa6H,EACjBC,EAASH,EAET1yE,EAAKnB,KAAK6zE,GAEP1yE,IACR,SAEYiH,IAAX4rE,GACAtgE,EAAUpE,QAAQ,uBAAwB0kE,EAAQ5N,IAglBtD6N,yBA5kBJ,SAAkCN,GAC9B,MAAMK,EAAS5L,EAAc5hE,QAAQqtE,GAC1BA,EAAI3H,WAAayH,EAAYzH,WAGpC8H,EAAOv2E,OAAS,GAChBiW,EAAUpE,QAAQ,uBAAwB0kE,EAAO,GAAI5N,IAukBzD8N,wBAhiBJ,SAAiCl7B,GAC7BytB,EAAcztB,EACdtlC,EAAUpE,QAAQ,sBAAuB82D,IA+hBzC+N,oBA5hBJ,SAA6BtM,EAAoBI,EAAiBf,GAC9DU,EAAcC,EACdG,EAAWC,EACXhB,EAAsBC,EACtBxzD,EAAUpE,QAAQ,iBAAkB82D,IAyhBpCgO,4BArgBJlqB,eAA2CmqB,EAAmBC,GAC1D,IAAIC,EACAF,IAAcruE,GACdmhE,GAAiB,EACjBoN,EAAiBnO,IAEjBe,GAAiB,EACjBoN,EAAiBlL,GAAYplE,IAAIowE,GAAahL,GAAYplE,IAAIowE,GAAWnyC,SAAM95B,GAEnF,MAAMosE,EAAiBnL,GAAYplE,IAAIqwE,GAAcjL,GAAYplE,IAAIqwE,GAAYpyC,SAAM95B,QACjFoY,EAASwyD,SACft/D,EAAUpE,QAAQ,wBAAyBilE,EAAgBC,EAAgBpO,IA2f3EqO,yBAvhBJ,SAAkCxxE,GAC9B0jE,EAAc1jE,EAAMyxE,WAAa,GACjC5M,EAAY7kE,EAAMoM,MAClBqE,EAAUpE,QAAQ,qBAAsBq3D,EAAaP,IAqhBrDuO,mCAlhBJ,SAA4C3N,GACxCD,EAAwBC,GAkhBxB4N,iCA/gBJ,SAA0C1N,GAClCD,IAAwBC,IACxBD,EAAsBC,EACtBxzD,EAAUpE,QAAQ,gCAAiC82D,KA6gBvDyO,mBArbJ,SAA4BvF,EAAgCC,GACxDjJ,EAASgJ,EACTzI,EAAWyI,eAAAA,EAAUtpE,GAEhB4xC,GAAuB03B,IAAc13B,GAAuB23B,IAC7D77D,EAAUpE,QAAQ,gBAAiB82D,EAAckJ,EAAUC,IAib/DuF,eA5fJ5qB,eAA8B6qB,EAAuBC,EAAoBC,EAA2B9M,EAAmB+M,GACnHtN,EAAcmN,EACd9N,EAAsBgO,EACtBjN,EAAWgN,OACa,IAAb7M,IACPD,EAAYC,SAEV3nD,EAASwyD,SACfkC,EAAiB9xE,SAASy0C,IACtBA,EAAE+6B,OAAOuC,qBAAqB/O,EAAa,IAE/C1yD,EAAUpE,QAAQ,WAAY82D,IAkf9BgP,eA3eJlrB,eAA8Bie,EAAmB+M,GAC7CtN,OAAcx/D,EACd++D,GAAiB,OACO,IAAbgB,IACPD,EAAYC,SAEV3nD,EAASwyD,SACfkC,EAAiB9xE,SAASy0C,IACtBA,EAAE+6B,OAAOyC,qBAAqBjP,EAAa,IAE/C1yD,EAAUpE,QAAQ,WAAY82D,IAke9B+O,qBAhfJ,SAA8B38B,GAC1B9kC,EAAUpE,QAAQ,kBAAmBkpC,IAgfrC68B,qBAheJ,SAA8B78B,GAC1B9kC,EAAUpE,QAAQ,kBAAmBkpC,IAgerC88B,wBA7dJ,SAAiC/M,GAC7BD,EAAcC,EACd70D,EAAUpE,QAAQ,sBAAuB82D,IA4dzCmP,sBAjjBJ,SAA+B/N,GAC3BD,EAAYC,EACZ9zD,EAAUpE,QAAQ,iBAAkBk4D,EAAUpB,IAgjB9CoP,+BA1dJ,SAAwC/M,GACpC,IAAIp2D,EACJ,MAAMojE,EAAOhN,EACb,GAAKgN,EAAKhR,QAEH,CACH,MAAMiR,EAAa1P,IACnB,GAAK0P,EAGE,CACH,MAAMrmE,EAAQomE,EAAKhR,QAAU,EAC7BpyD,EAAU,IAAIpU,SAAQ,CAACC,EAASC,KAC5Bu3E,EAAW72D,MAAMjgB,MAAMulE,IACnB,MAAMM,EAAUN,EAASp+C,MAAM3pB,GAAMA,EAAEiT,QAAUA,IACjDnR,EAAQumE,EAAQ,IACjB99D,MAAMxI,EAAO,SAPpBkU,EAAUpU,QAAQC,aAAQkK,QAL9BiK,EAAUpU,QAAQC,aAAQkK,GAiB9BiK,EAAQzT,MAAMxC,IACVq5E,EAAKhR,QAAUroE,EACfosE,EAAqBiN,EACrB/hE,EAAUpE,QAAQ,2BAA4B82D,EAAa,MAwclE,SC3kBU,UAl2BfrpE,cAGYD,eAA8BsmE,KAC9BtmE,eAA2BmB,QAAQC,UAEhCwrE,mBACP,OAAO5sE,KAAK64E,UAGL3C,eACP,OAAOl2E,KAAK84E,UAGT3tE,KAAKkrC,EAAyBrmC,GACjChQ,KAAKq2C,IAAMA,EACXr2C,KAAK64E,UAAY7oE,EAGd+oE,YAAYxkE,GACfvU,KAAK4W,UAAUpE,QAAQ,QAAS+B,GAG7B64C,WAAWliD,GACd,IAAI8tE,EACJh5E,KAAK84E,UAAY,IAAI33E,SAASC,IAC1B43E,EAAkB53E,CAAO,IAE7B,IACI,MAAMQ,QAAe5B,KAAKq2C,IAAIjnB,OAAuB,iBAAkBlkB,EAASlL,KAAK64E,WACrF,QAAwBvtE,IAApB1J,EAAOk7B,SACP,MAAM,IAAI/1B,MAAM,qDAGpB,MAAMmC,EAAKtH,EAAOk7B,SAAS5zB,GACrBwyC,QAAY6wB,GAAYvF,QAAQ99D,GAStC,OARAqE,YAAW,KACoB,aAAvBmuC,EAAItW,IAAIgU,YAIRsC,EAAIo6B,OAAOQ,iBAAiB56B,EAAItW,IAAItX,OAEzC,GACI4tB,EAAItW,IACb,MAAOxzB,GACL,MAAMA,UAENonE,KAID5rB,YAAYrS,GAEf,aADM/6C,KAAKwS,QAAQ,QAAS,CAAE0U,SAAU6zB,EAAE7xC,IAAM,UACzC6xC,EAGJqS,eAAerS,EAA4Bi0B,GAE9C,aADMhvE,KAAKwS,QAAQ,WAAY,CAAE0U,SAAU6zB,EAAE7xC,GAAIgC,QAAS,CAAE4iB,IAAKkhD,IAAY,cACtEj0B,EAGJqS,eAAerS,EAA4B2gB,SAC9C,MAAMud,EAAqC,GACrCC,EAAQ3jE,GAA0B0jE,EAAc/1E,KAAKqS,GAO3D,GALK4iC,GAAkBujB,EAAM9Z,QAAW7G,EAAEmyB,WACtCgM,EAAKn+B,EAAE6G,UAINzJ,GAAkBujB,EAAM3B,QAAS,CAClC,MAAMiS,GAAetQ,EAAM3B,OAC3Bmf,EAAKn+B,EAAEyG,WAAWwqB,IAOtB,GAJK7zB,GAAkBujB,EAAMgT,QACzBwK,EAAKn+B,EAAE0zB,SAAS/S,EAAMgT,SAGrBt2B,GAAmBsjB,EAAMyd,cAAgB/gC,GAAoBsjB,EAAc0d,YAAa,CACzF,MAAMC,YAAU3d,EAAMyd,0BAAezd,EAAc0d,WACnDF,EAAKn+B,EAAEq1B,cAAciJ,IAGpBjhC,GAAmBsjB,EAAM4d,WAC1BJ,EAAKl5E,KAAKwS,QAAQ,cAAe,CAAE0U,SAAU6zB,EAAE7xC,GAAIgC,QAAS,CAAEouE,SAAU5d,EAAM4d,aAGlF,MAAMrM,SACFA,EAAQF,UAAEA,EAASC,SAAEA,EAAQF,UAAEA,EAASyM,WACxCA,EAAUC,cAAEA,EAAaC,gBAAEA,EAAeC,cAAEA,EAAaC,cAAEA,GAC3Dje,EAOJ,OALAwd,EAAKn+B,EAAE8zB,mBAAmB,CAAE5B,WAAUF,YAAWC,WAAUF,eAC3DoM,EAAKn+B,EAAE4zB,aAAa,CAAE4K,aAAYC,gBAAeC,kBAAiBC,gBAAeC,yBAE3Ex4E,QAAQ4gB,IAAIk3D,GAEXl+B,EAGJqS,yBAAyBrS,EAA4B+zB,GAExD,aADM9uE,KAAKwS,QAAQ,qBAAsB,CAAE0U,SAAU6zB,EAAE7xC,GAAIgC,QAAS4jE,IAC7D/zB,EAGJqS,oBAAoBrS,EAA4Bo+B,GAEnD,aADMn5E,KAAKwS,QAAQ,gBAAiB,CAAE0U,SAAU6zB,EAAE7xC,GAAIgC,QAAS,CAAEiuE,gBAC1Dp+B,EAGJqS,mBAAmBrS,EAA4B6+B,GAElD,aADM55E,KAAKwS,QAAQ,eAAgB,CAAE0U,SAAU6zB,EAAE7xC,GAAIgC,QAAS0uE,IACvD7+B,EAGJqS,eAAerS,EAA4B2zB,GAE9C,aADM1uE,KAAKwS,QAAQ,WAAY,CAAE0U,SAAU6zB,EAAE7xC,GAAIgC,QAAS,CAAEwjE,WACrD3zB,EAGJqS,eAAerS,EAA4BszB,GAC9C,MAAMnjE,EAAU,CACZgc,SAAU6zB,EAAE7xC,GACZgC,QAAS,CACLmB,MAAOgiE,IAIf,aADMruE,KAAKwS,QAAQ,WAAYtH,EAAS,gBACjC6vC,EAGJqS,gBAAgBrS,EAA4B2vB,GAC/C,MAAMx/D,EAAU,CACZgc,SAAU6zB,EAAE7xC,GACZgC,QAAS,CACLw/D,aAIR,aADM1qE,KAAKwS,QAAQ,YAAatH,GACzB6vC,EAGJqS,iBAAiBrS,EAA4BgH,GAChD,MAAsB,oBAAXx1C,QAA2BA,OAAOoI,YAAoBklE,WAAa,MACnE,IAAI14E,SAAQisD,MAAOhrC,EAAK03D,KAC3B,MAAMC,EAAqB/5E,KAAKg6E,eAAej4B,EAAQhH,GACvD,IAAI13B,GAAS,EACb,MAAMxhB,EAAO,KACLwhB,IAGJA,GAAS,EAEL42D,IACAA,IACAA,OAA2B3uE,GAE/B8W,EAAI24B,GACAm/B,IACAp4D,aAAao4D,GACbA,OAAiB5uE,KAGzB,IAAI4uE,EACAD,EACCF,IACDE,EAA2Bl/B,EAAEi5B,iBAAiBt4B,IACrC17C,KAAKg6E,eAAej4B,EAAQrG,IAGjC75C,GAAM,KAId,UAEU7B,KAAKwS,QAAQ,aAAc,CAAE0U,SAAU6zB,EAAE7xC,GAAIgC,QAAS,CAAE62C,YAChE,MAAOnwC,GAEL,YADAkoE,EAAIloE,GAKJmoE,EACAl4E,IAKJq4E,EAAiB3sE,YAAW,KACxB1L,GAAM,GACP,IAAK,WAGN7B,KAAKwS,QAAQ,aAAc,CAAE0U,SAAU6zB,EAAE7xC,GAAIgC,QAAS,CAAE62C,YAE3DhH,GAGJqS,qBAAqBrS,EAA4Bo0B,GAEpD,aADMnvE,KAAKwS,QAAQ,YAAa,CAAE0U,SAAU6zB,EAAE7xC,GAAIgC,QAASikE,GAAc,eAClEp0B,EAGJqS,wBAAwBrS,EAA4Bq0B,GAEvD,aADMpvE,KAAKwS,QAAQ,eAAgB,CAAE0U,SAAU6zB,EAAE7xC,GAAIgC,QAASkkE,GAAY,iBACnEr0B,EAGJqS,eAAerS,GAClB,IAAI1kB,EACJ,IACI,MAAMx0B,EAAO,IAAIV,SAAc,CAACC,EAASC,KACrCg1B,EAAK0kB,EAAEk5B,gBAAe,KAClB7yE,GAAS,GACX,IAGN,aADMD,QAAQ4gB,IAAI,CAAC/hB,KAAKwS,QAAQ,WAAY,CAAE0U,SAAU6zB,EAAE7xC,IAAM,gBAAiBrH,IAC1Ek5C,EACT,MAAOnpC,GACL,MAAMA,UAEFykB,GACAA,KAKL+2B,YAAYrS,GACf,IAAI1kB,EACJ,IACI,MAAMx0B,EAAO,IAAIV,SAAc,CAACC,EAASC,KACrCg1B,EAAK0kB,EAAEk5B,gBAAe,KAClB7yE,GAAS,GACX,IAGN,aADMD,QAAQ4gB,IAAI,CAAC/hB,KAAKwS,QAAQ,QAAS,CAAE0U,SAAU6zB,EAAE7xC,IAAM,gBAAiBrH,IACvEk5C,EACT,MAAOnpC,GACL,MAAMA,UAEFykB,GACAA,KAKL+2B,sBAAsBrS,GAEzB,aADM/6C,KAAKwS,QAAQ,kBAAmB,CAAE0U,SAAU6zB,EAAE7xC,IAAM,gBACnD6xC,EAGJqS,eAAerS,GAElB,aADM/6C,KAAKwS,QAAQ,WAAY,CAAE0U,SAAU6zB,EAAE7xC,IAAM,gBAC5C6xC,EAGJqS,cAAcrS,GAEjB,aADM/6C,KAAKwS,QAAQ,UAAW,CAAE0U,SAAU6zB,EAAE7xC,IAAM,gBAC3C6xC,EAGJqS,eAAerS,GAElB,aADM/6C,KAAKwS,QAAQ,WAAY,CAAE0U,SAAU6zB,EAAE7xC,IAAM,gBAC5C6xC,EAGJqS,eAAerS,GAElB,aADM/6C,KAAKwS,QAAQ,WAAY,CAAE0U,SAAU6zB,EAAE7xC,IAAM,gBAC5C6xC,EAGJqS,aAAarS,GAEhB,aADM/6C,KAAKwS,QAAQ,SAAU,CAAE0U,SAAU6zB,EAAE7xC,IAAM,gBAC1C6xC,EAGJqS,qBAAqBrS,GAExB,aADM/6C,KAAKwS,QAAQ,iBAAkB,CAAE0U,SAAU6zB,EAAE7xC,IAAM,gBAClD6xC,EAGJqS,WAAWrS,EAA4Bo/B,EAAuC9N,GACjF,MAAM3oC,EAAY,CACd02C,eAAgBD,EAAajxE,IAOjC,OAJImjE,IACA3oC,EAAK22C,aAAehO,SAElBrsE,KAAKwS,QAAQ,OAAQ,CAAE0U,SAAU6zB,EAAE7xC,GAAIgC,QAASw4B,GAAQ,qBAAsB,sBAAsBy2C,EAAajxE,MAChH6xC,EAGJqS,gBAAgBrS,EAA4B01B,EAAuCvlE,GAStF,aARMlL,KAAKwS,QAAQ,YAAa,CAC5B0U,SAAU6zB,EAAE7xC,GACZgC,QAAS,CACLqH,MAAOrH,EACPovE,eAAgB7J,EAAavnE,GAC7BkxE,eAAgBr/B,EAAE7xC,KAEvB,oBAAoBunE,EAAavnE,KAAM,sBAAsBunE,EAAavnE,MACtE6xC,EAGJqS,gBAAgBrS,EAA4B7vC,GAC/C,MAAMqvE,EAAsB,CAAC,qBAAsB,oBAQnD,OAPKpiC,GAAkBjtC,eAAAA,EAAS+oD,YAI5BsmB,EAAUr3E,KAAK,kBAHfq3E,EAAUr3E,KAAK,sBACfq3E,EAAUr3E,KAAK,sBAAsBgI,EAAQ+oD,qBAI3Cj0D,KAAKwS,QAAQ,YAAa,CAAE0U,SAAU6zB,EAAE7xC,GAAIgC,cAAcqvE,GACzDx/B,EAGJqS,iBAAiBrS,EAA4BixB,GAAuB,GACvE,IAAI56C,EAQJ,OANIA,EADA46C,EACU,OAEA,aAGRhsE,KAAKwS,QAAQ4e,EAAS,CAAElK,SAAU6zB,EAAE7xC,IAAM,qBACzC6xC,EAGJqS,iBAAiBrS,EAA4B80B,GAEhD,aADM7vE,KAAKwS,QAAQ,uBAAwB,CAAE0U,SAAU6zB,EAAE7xC,GAAIgC,QAAS2kE,IAC/D90B,EAGJqS,iBAAiBrS,GAEpB,aADM/6C,KAAKwS,QAAQ,uBAAwB,CAAE0U,SAAU6zB,EAAE7xC,KAClD6xC,EAGJqS,oBAAoBrS,EAA4Bp2C,EAAc61E,GACjE,IAAInkD,EACJ,IAGI,MAAMokD,EAAgCz6E,KAAK06E,oBAAoB/1E,GAEzD9C,EAAO,IAAIV,SAAc,CAACC,EAASC,KACrCg1B,EAAK0kB,EAAE+4B,kBAAiB,KACpB1yE,GAAS,GACX,IAKN,aAHMD,QAAQ4gB,IAAI,CAAC/hB,KAAKwS,QAAQ,gBAAiB,CAC7C0U,SAAU6zB,EAAE7xC,GAAIvE,QAAS81E,EAA+BD,YACxD34E,IACGk5C,EACT,MAAOnpC,GACL,MAAMA,UAEFykB,GACAA,KAKL+2B,WAAWrS,GAEd,aADM/6C,KAAKwS,QAAQ,aAAc,CAAE0U,SAAU6zB,EAAE7xC,GAAIgC,QAAS,CAAE6kE,MAAM,IAAU,wBACvEh1B,EAGJqS,aAAarS,GAEhB,aADM/6C,KAAKwS,QAAQ,aAAc,CAAE0U,SAAU6zB,EAAE7xC,GAAIgC,QAAS,CAAE6kE,MAAM,IAAW,wBACxEh1B,EAGJqS,cAAcrS,GAKjB,aAJqB/6C,KAAKwS,QAAQ,UAAW,CACzC0U,SAAU6zB,EAAE7xC,GACZgC,QAAS,MAECuvD,KAGXrN,cAAcrS,EAA4Bo1B,GAO7C,aANMnwE,KAAKwS,QAAQ,UAAW,CAC1B0U,SAAU6zB,EAAE7xC,GACZgC,QAAS,CACLyvE,QAASxK,KAGVp1B,EAGJqS,oBAAoBrS,EAA4BmB,GAEnD,aADMl8C,KAAKwS,QAAQ,gBAAiB,CAAE0U,SAAU6zB,EAAE7xC,GAAIgC,QAAS,CAAEgxC,eAAgB,qBAC1EnB,EAGJqS,0BAA0BrS,EAA4Bi2B,GAOzD,aANMhxE,KAAKwS,QAAQ,sBAAuB,CACtC0U,SAAU6zB,EAAE7xC,GACZgC,QAAS,CACL0vE,OAAQ5J,IAEb,8BACIj2B,EAGJqS,gBAAgB+sB,EAAuCjvE,GAC1D,IAAKA,EACD,MAAM,IAAInE,MAAM,oCAGpB,MAAM8zE,EAAc,IAAK3vE,GAEpB2vE,EAAYC,iBACbD,EAAYC,eAAiB,UAGjC,MAAMC,EAAmE,IAClEF,EACHG,YAAaH,EAAYI,KACzBC,SAAUf,EAAajxE,GACvBiyE,QAASN,EAAY3zD,UAQzB,aALMlnB,KAAKwS,QAAQ,kBAAmB,CAClC0U,SAAUizD,EAAajxE,GACvBgC,QAAS6vE,IAGNZ,EAGJ/sB,oBAAoBlmC,EAAkBhc,GACzC,IAAKA,EACD,MAAM,IAAInE,MAAM,oCAGpB,MAAM8zE,EAAc,IAAK3vE,GAEpB2vE,EAAYO,mBACbP,EAAYO,iBAAmB,GAG9BP,EAAYQ,iBACbR,EAAYQ,eAAiB,GAGjC,MAAMC,EAA0Ht7E,KAAKu7E,uBAAuBr0D,EAAU2zD,GAEtK,OAAO76E,KAAKwS,QAAQ,iBAAkB,CAAE0U,WAAUhc,QAASowE,IAAex5E,MAAK,KAC3E,MAAM05E,EAAUF,EAAYG,MAAMptE,KAAKqtE,GAAMA,EAAExyE,KA8B/C,OA5BAoyE,EAAYG,MAAMn1E,SAASo1E,IACvB,IAAI5pE,EAA+D,mBAAnB4pE,EAAa,YACzDA,EAAEC,YAAc,IAAMD,EAAEC,YAExBzwE,EAAQ+vE,gBAAgB/a,UAAYwb,EAAEC,cACtC7pE,EAAWs7C,MAAO74C,EAAsCqnE,KACpD,IAAIh6E,EAUJ,OANIsJ,EAAQ+vE,gBAAgB/a,WACxBt+D,QAAesJ,EAAQ+vE,KAAK1mE,EAAMqnE,IAKlCF,EAAEC,uBAAuBzb,UAAYwb,EAAEC,cAAgBzwE,EAAQ+vE,WAClDS,EAAEC,YAAYpnE,EAAMqnE,IAAWh6E,EAIzCA,GAAU85E,EAAEC,WAAW,GAGtC37E,KAAK4W,UAAU/D,SAAS,GAAGyoE,EAAYJ,YAAYQ,EAAExyE,MACrDlJ,KAAK4W,UAAU/E,IAAI,GAAGypE,EAAYJ,YAAYQ,EAAExyE,KAAM4I,EAAS,IAG5D,CACHmlB,QAAS,IAAMj3B,KAAK67E,iBAAiBP,EAAYJ,SAAUM,GAC3DtwE,QAAS2vE,EACZ,IAIFztB,oBAAoBlmC,EAAkBkqD,GACzC,OAAOpxE,KAAKwS,QAAQ,gBAAiB,CAAE0U,WAAUhc,QAAS,CAAEkmE,aAGzDhkB,mCAAmC8tB,EAAkB3mE,GACxD,MAEMunE,EAA+C,CACjDC,OAAQxnE,EAAKynE,UACbC,oBAAqB1nE,EAAK0nE,oBAC1BC,gBAAiB3nE,EAAK2nE,iBAGpBC,QAAkBh7E,QAAQ4gB,IAAI/hB,KAAK4W,UAAUpE,QAAQ,GAAG0oE,KAAY3mE,EAAKynE,YAAaF,GARrE,IAAMvnE,EAAKqnE,QAAS,KAU3C,GAAyB,IAArBO,EAAUx7E,OAAc,CACxB,MAAMy7E,EAAkB,CAAE7zB,OAAQ,EAAGD,MAAO,EAAG9hC,IAAK,EAAGmH,KAAM,GACvD2jB,EAAqC,iBAAlB6qC,EAAU,IAAqBx8E,MAAMgG,QAAQw2E,EAAU,IAAqBC,EAAfD,EAAU,GAGhG,MAFyC,IAAK5nE,EAAM0nE,oBAAqB3qC,IAM1E8b,aAAa7gD,GAIhB,aAHMvM,KAAKwS,QAAQ,SAAU,CACzB0U,SAAU3a,EAAOrD,KAEdqD,EAGJ6gD,cAAc7gD,GAIjB,aAHMvM,KAAKwS,QAAQ,UAAW,CAC1B0U,SAAU3a,EAAOrD,KAEdqD,EAGJ6gD,oBAAoB7gD,EAAiCk/D,GAOxD,aANMzrE,KAAKwS,QAAQ,gBAAiB,CAChC0U,SAAU3a,EAAOrD,GACjBgC,QAAS,CACLugE,gBAGDl/D,EAGJ6gD,mBAAmB7gD,GAKtB,aAJMvM,KAAKwS,QAAQ,eAAgB,CAC/B0U,SAAU3a,EAAOrD,KAGdqD,EAGJ6gD,cAAc7gD,EAAiCrB,GAMlD,aALgClL,KAAKwS,QACjC,oBACA,CAAE0U,SAAU3a,EAAOrD,GAAIgC,QAAS,IAAKA,MACtCqJ,KAKA64C,mBAAmBnR,EAAqB/wC,GAM3C,aALwClL,KAAKwS,QACzC,yBACA,CAAE0U,SAAU+0B,EAAU,GAAI/wC,QAAS,CAAEmxE,eAAgBpgC,KAAc/wC,MACpEqJ,KAKA64C,YAAYkc,EAAuCp+D,GAMtD,aALMlL,KAAKwS,QACP,QACA,CAAE0U,SAAUoiD,EAAapgE,GAAIgC,QAAS,IAAKA,KAGxCo+D,EAGJlc,gBAAgBlmC,EAAkBhc,GACrC,OAAOlL,KAAKwS,QACR,YACA,CAAE0U,WAAUhc,QAAS,IAAKA,KAI3BkiD,YAAYkc,EAAuCp+D,GAKtD,aAJMlL,KAAKwS,QACP,QACA,CAAE0U,SAAUoiD,EAAapgE,GAAIgC,QAAS,IAAKA,KAExCo+D,EAGJlc,iBAAiBkc,EAAuCp+D,GAM3D,aALgClL,KAAKwS,QACjC,aACA,CAAE0U,SAAUoiD,EAAapgE,GAAIgC,QAAS,IAAKA,MAC5CoxE,SAKAlvB,YAAY7gD,EAAiCrB,GAChD,MAAMytE,EAAO,IAAKztE,GAOlB,OANKA,EAAQy8D,SAA+B,YAApBz8D,EAAQy8D,UAC5BgR,EAAKhR,cAAgBp7D,EAAO+oE,cAIhCqD,EAAKhR,QAAUgR,EAAKhR,QAAQp1D,MAAQ,EAC7BvS,KAAKwS,QACR,QACA,CAAE0U,SAAU3a,EAAOrD,GAAIgC,QAAS,IAAKytE,KAItCvrB,cAAckc,EAAuCoJ,GAExD,aADM1yE,KAAKwS,QAAQ,UAAW,CAAE0U,SAAUoiD,EAAapgE,GAAIgC,QAAS,CAAEwnE,iBAC/DpJ,EAGJlc,eAAekc,EAAuCx7C,EAAa5iB,EAA4E,IAClJA,EAAQqxE,mBAAqBrxE,EAAQsxE,OACrC,MAAM56E,QAAyE5B,KAAKwS,QAAQ,cAAe,CAAE0U,SAAUoiD,EAAapgE,GAAIgC,QAAS,CAAE4iB,MAAK5iB,aACxJ,MAAO,CACH4iB,MACAhpB,KAAMlD,EAAO66E,SACbxB,KAAMr5E,EAAO86E,UAIdtvB,sBAAsBkc,EAAuCp+D,GAEhE,aADMlL,KAAKwS,QAAQ,kBAAmB,CAAE0U,SAAUoiD,EAAapgE,GAAIgC,YAC5Do+D,EAUJlc,cAAch8B,EAAiBlmB,KAAwCqvE,GAC1E,MAAMrvC,EAAS,IACRhgC,EACHkmB,WAEJ,IAAI4nD,EACJh5E,KAAK84E,UAAY,IAAI33E,SAASC,IAC1B43E,EAAkB53E,CAAO,IAE7B,IACI,MAAsB,oBAAXmL,QAA2BA,OAAOoI,YAAoBklE,WAAa,YAC7D75E,KAAK28E,oBAAoBzxC,KAAWqvC,SAEpCv6E,KAAK48E,iBAAiB1xC,GAEzC,MAAOt5B,GACL,MAAMA,UAENonE,KAID5rB,cAAcrS,EAA4B7vC,GAC7C,MAAMw4B,EAAO,CACTxc,SAAU6zB,EAAE7xC,GACZgC,WAGJ,aADMlL,KAAKwS,QAAQ,UAAWkxB,GACvBqX,EAGJqS,qBAAqBlmC,EAAkBhc,GAC1C,MAAMw4B,EAAO,CACTxc,WACAhc,iBAEElL,KAAKwS,QAAQ,iBAAkBkxB,GAGlC0pB,kBAAkBlmC,GACrB,MAAMwc,EAAO,CACTxc,YAGJ,aADqBlnB,KAAKwS,QAAQ,cAAekxB,GAI9C6wC,UAAUziE,EAA4D5I,GACzE,MAAM4D,EAA6B,oBAAXP,QAA2BA,OAAeO,SAClE,GAAIA,EACA,OAAOA,EAAS+vE,gBAAgB/qE,EAAU5I,GAI3CsrE,aAAa1iE,EAAiF5I,GACjG,MAAM4D,EAA6B,oBAAXP,QAA2BA,OAAeO,SAClE,GAAIA,EACA,OAAOA,EAAS+2C,kBAAkB/xC,EAAU5I,GAI7C0rE,aAAa9iE,EAA4F5I,GAC5G,MAAM4D,EAA6B,oBAAXP,QAA2BA,OAAeO,SAClE,GAAIA,EACA,OAAOA,EAASi3C,uBAAuBjyC,EAAU5I,GAIjDqyE,uBAAuBr0D,EAAkBhc,GAC7C,MAAM4xE,EAA4B,CAACC,EAAkCl+C,KACjE,GAAI3zB,EAAQ2zB,UAAyBvzB,IAAfyxE,EAAKl+C,IAAsC,OAAfk+C,EAAKl+C,IAAiB,CACpE,MAAMm+C,EAAmB9xE,EAAQ2zB,GAChCk+C,EAAKl+C,GAAgBm+C,IAIxBvB,EAA2CvwE,EAAQuwE,MAAMptE,KAAKqtE,IAChEoB,EAA0BpB,EAAG,YAC7BoB,EAA0BpB,EAAG,mBAEzBxwE,EAAQ+vE,WAA2B3vE,IAAlBowE,EAAEC,aAA+C,OAAlBD,EAAEC,cAClDD,EAAEC,YAAczwE,EAAQ+vE,MAG3BS,EAA4BuB,cAAgBvB,EAAEC,YAC9CD,EAA4BM,UAAYN,EAAEx0D,SAEtCw0D,EAAEZ,iBACHY,EAAEZ,eAAiB,UAGhBY,KAGX,MAAO,IACAxwE,EACHuwE,QACAP,SAAUh0D,EACV+1D,cAAe/xE,EAAQ+vE,KACvBiC,kBAAmBhyE,EAAQiyE,YAI3BtB,iBAAiB30D,EAAkBk2D,GACvC,OAAOp9E,KAAKwS,QAAQ,yBAA0B,CAC1C0U,WACAhc,QAAS,KACVpJ,MAAK,KACJs7E,EAAQ92E,SAAS4C,IACblJ,KAAK4W,UAAU/D,SAAS,GAAGqU,KAAYhe,IAAK,GAC9C,IAIFyzE,oBAAoBzxC,KAAiCqvC,GACzD,MAAM8C,EAA6B,GAC7BC,EAAW/C,eAAAA,EAAW7wE,QAAQpG,IAAO60C,GAAkB70C,KAAI+K,KAAK/J,GAC3D,IAAInD,SAAekC,IACtB,MAAOQ,EAAMqjB,EAAWgkB,EAAOhkB,UAAY5iB,EAAI+U,MAAM,KACrDgkE,EAAIn6E,KAAKlD,KAAK4W,UAAU/E,IAAI,SAAU0C,IAC9BA,EAAK1Q,OAASA,GAAQ0Q,EAAK2S,WAAaA,GACxC7jB,OAEL,MAGLuN,EAAS,IAAIzP,SAAa,CAACC,EAASC,KACtCrB,KAAKq2C,IAAIjnB,OAAY,kBAAmB8b,EAAQlrC,KAAK64E,WAChD/2E,MAAMtB,IACCA,EAAEs8B,UAAYt8B,EAAEs8B,SAASjf,SACzBxc,EAAOb,GAEPY,EAAQZ,EAAEs8B,aAGjBjzB,OAAOnI,GAAML,EAAOK,IAAG,IAEhC,OAAOP,QAAQ4gB,IAAI,CAACnR,KAAW0sE,IAC1Bx7E,MAAMuB,GACIA,EAAE,KAEZ+yE,SAAQ,KACLiH,EAAI/2E,SAAS+vB,GAAOA,KAAK,IAI7B+2B,uBAAuBliD,GAC3B,IAAImrB,EACJ,IACI,MAAMpW,EAAQ/D,GAAQN,WAChB2L,EAAQ,IAAIpmB,SAAekC,IAC7BgzB,EAAKr2B,KAAK4W,UAAU/E,IAAI,SAAU0C,IAC1BA,EAAK0L,QAAUA,GACf5c,MAEN,IAEAmP,EAAU,IAAIrR,SAAa,CAACC,EAASC,KACvC6J,EAAQ+U,MAAQA,EAChBjgB,KAAKq2C,IAAIjnB,OAAY,kBAAmBlkB,EAASlL,KAAK64E,WACjD/2E,MAAMtB,IACCA,EAAEs8B,UAAYt8B,EAAEs8B,SAASjf,SACzBxc,EAAOb,GAEPY,EAAQZ,EAAEs8B,aAGjBjzB,OAAOrJ,IACJa,EAAOb,EAAE,GACX,IAIV,aADqBW,QAAQ4gB,IAAI,CAACvP,EAAS+U,KAC7B,GAChB,MAAO3V,GACL,MAAMA,UAEFykB,GACAA,KAKJ2jD,eAAeuD,EAA2CxiC,GAC9D,MAAMvb,EAAUub,EAAEgH,OACZ9uC,EAAW8nC,EAAE9nC,SACnB,IAAIs1C,EAASg1B,EAAUh1B,OACnBD,EAAQi1B,EAAUj1B,MAClBi1B,EAAUh1B,OAASt1C,EAAS65D,YAC5BvkB,EAASt1C,EAAS65D,WAElByQ,EAAUh1B,OAASt1C,EAAS85D,YAC5BxkB,EAASt1C,EAAS85D,WAElBwQ,EAAUj1B,MAAQr1C,EAAS+5D,WAC3B1kB,EAAQr1C,EAAS+5D,UAEjBuQ,EAAUj1B,MAAQr1C,EAASg6D,WAC3B3kB,EAAQr1C,EAASg6D,UAGrB,MAAMuQ,GAAkBj1B,GAAS/oB,EAAQ+oB,SAAWA,EAC9Ck1B,GAAiBn1B,GAAQ9oB,EAAQ8oB,QAAUA,EAC3Co1B,GAAgBH,EAAU5vD,MAAO6R,EAAQ7R,OAAS4vD,EAAU5vD,KAC5DgwD,GAAeJ,EAAU/2D,KAAMgZ,EAAQhZ,MAAQ+2D,EAAU/2D,IAE/D,OAAOg3D,GAAmBC,GAAkBC,GAAiBC,EAGzDjD,oBAAoB/1E,GACxB,IAEI,MAAMg0E,EAAY,GAClB,IAAK,MAAMr0E,KAAO9E,OAAO2E,KAAKQ,GAAU,CACpC,IAAIpD,EAAQoD,EAAQL,QACC,IAAV/C,IACPA,EAAQ,MAEZo3E,EAAKr0E,GAAO/C,EAEhB,OAAOo3E,EACT,MACE,OAAOh0E,cCn2BHi5E,GAAuB12D,EAAkB6jD,GACrD,MAAMvxB,EAAU+yB,GAAYle,KAC5B,OAAO7uD,OAAO2E,KAAKq1C,GAASp1C,QAAO,CAACC,EAAM6E,KACtC,MAAMwyC,EAAMlC,EAAQtwC,GAIpB,OAHIwyC,EAAItW,IAAI2lC,aAAeA,GAAcrvB,EAAItW,IAAIl8B,KAAOge,GACpD7iB,EAAKnB,KAAKw4C,GAEPr3C,CAAI,GACZ,GACP,OCYqBw5E,GAYjB59E,YAAYo2C,EAAyBnjC,EAA+B+1D,EAA+CC,EAA6CC,EAA0Cn5D,EAAoC8tE,GAVtO99E,eAA8BsmE,KAG9BtmE,kBAAuB,IAQ3BA,KAAKi9C,KAAO5G,EACZr2C,KAAK4zB,QAAU1gB,EAAO+N,UAAU,UAChCjhB,KAAKm+D,aAAen+D,KAAK+9E,kBAAkB/tE,GAC3ChQ,KAAKg+E,UAAYF,EACjB99E,KAAKi+E,kBAAoBhV,EACzBjpE,KAAKk+E,kBAAoBhV,EACzBlpE,KAAKm+E,mBAAqBhV,EAGvBh+D,OACH,OAAO,IAAIhK,SAAQ,CAACC,EAASC,UAGQ,IAAtBrB,KAAKm+D,eACZn+D,KAAKm+D,aAAe,QAGxBn+D,KAAKi9C,KAAKpZ,cAAc,+BAA+B,CAACH,EAAMyiC,EAAQ5oD,EAASpL,KAC3EnS,KAAKo+E,eAAe16C,GAAa5hC,KAAKyb,GAAS1T,MAAMsI,EAAI,IAGvC,IAAIhR,SAAc,CAACk9E,EAAeC,KACpDt+E,KAAKi9C,KAAK/mB,UAAU,kBAAmB,CACnC8D,cAAeh6B,KAAKu+E,aACpBzyE,OAAQ9L,KAAKm+D,aACb9yB,OAAS02B,IACL/hE,KAAKw+E,aAAazc,EAAWxtD,KAAMnT,GACnCsiB,GAASq1D,YAAYhX,EAAWxtD,KAAK,EAEzCq3B,YAAc57B,IACVhQ,KAAKm+D,aAAen+D,KAAK+9E,kBAAkB/tE,GAE3C0T,GAASvY,KAAKnL,KAAKi9C,KAAMj9C,KAAKm+D,aAAa,IAEhDt0D,OAAOsI,IACN9Q,EAAO,sDAAwD8Q,EAAI,GACrE,OAKHuR,eACP,OAAOA,GAGJ1P,KAAKpP,EAAckpB,EAAa5iB,GACnCA,EAAUA,GAAW,GACrB,MAAMuzE,EAAc,IAAKvzE,GAczB,YAZ+BI,IAA3BmzE,EAAYxqB,YAA8D,iBAA3BwqB,EAAYxqB,aAC3DwqB,EAAYxqB,WAAawqB,EAAYxqB,WAAW/qD,IAAM,IAG1Du1E,EAAY75E,KAAOA,EACnB65E,EAAY3wD,IAAMA,EAGlB2wD,EAAYC,YAAcxzE,EAAQwzE,aAAexzE,EAAQ/E,aAElDs4E,EAAYt4E,MAEZnG,KAAK0jB,SAAS1P,KAAKyqE,GAGvBvN,cAAchqD,EAAkBhc,GACnC,OAAOlL,KAAK0jB,SAASwtD,cAAchqD,EAAUhc,GAG1CkiD,gBAAgBlmC,EAAkBhc,GACrC,MAAMqB,EAASggE,GAAYplE,IAAI+f,SACzBlnB,KAAK0jB,SAASutD,UAAU1kE,EAAO64B,IAAKl6B,GAGvCyzE,YAAY7sE,GACf,OAAO9R,KAAK4W,UAAU/E,IAAI,eAAgBC,GAGvC8sE,YAAY9sE,GACf,OAAO9R,KAAK4W,UAAU/E,IAAI,eAAgBC,GAGvC+8C,0BAA0B/8C,GAC7B,OAAO9R,KAAK4W,UAAU/E,IAAI,sBAAuBC,GAG9C+sE,QAAQ/sE,GACX,OAAO9R,KAAK4W,UAAU/E,IAAI,eAAgBC,GAGvCqzC,KACH,OAAOnlD,KAAKg+E,UAGTxrE,QAAW4e,EAAiBlK,EAAkBhc,GACjD,OAAOlL,KAAKi9C,KAAK7tB,OAAU,kBAAmB,CAC1CgC,UACAlmB,UACAgc,aAKD43D,qBAAqBhtE,GACxB,OAAO9R,KAAK4W,UAAU/E,IAAI,sBAAuBC,GAG9CitE,+BAA+BjtE,GAClC,OAAO9R,KAAK4W,UAAU/E,IAAI,uBAAwBC,GAG/CktE,iBAAiBltE,GACpB,OAAO9R,KAAK4W,UAAU/E,IAAI,YAAaC,GAGpCmtE,kBAAkBntE,GACrB,OAAO9R,KAAK4W,UAAU/E,IAAI,aAAcC,GAIpCisE,kBAAkB/tE,GACtB,GAAKA,EAGL,MAAO,CACHsI,YAAatI,EAASsI,YACtBstB,QAAS51B,EAAS41B,QAClBF,KAAM11B,EAAS01B,MAGf04C,eAAe16C,GACnB,MAAkB,+BAAdA,EAAK7/B,KACE7D,KAAK0jB,SAASw7D,6BAA6Bx7C,EAAKnvB,KAAK2S,SAAUwc,EAAKnvB,MAGxEpT,QAAQE,OAAO,6BAA6BqiC,EAAK7/B,QAGpD26E,aAAaW,EAAyBC,GAC1C,MAAMC,EAAsBr/E,KAAKs/E,uBAAuBH,GAGxD,GAAwB,aAApBA,EAAWt7E,KAAqB,CAahC,OAZiCs7E,EACT3lC,QAAQlzC,SAASy0C,IACrC,MAAMwkC,EAAiBhT,GAAYplE,IAAI4zC,EAAE7xC,IACzC,GAAIq2E,EACAA,EAAezJ,OAAOC,aAAa/1E,KAAKw/E,8BAA8BzkC,QACnE,CACH,MAAMW,EAAM17C,KAAK45C,aAAamB,EAAE7xC,GAAI6xC,GACpCwxB,GAAYzF,gBAAgBprB,EAAItW,IAAIl8B,IAExClJ,KAAK4W,UAAUpE,QAAQ,eAAgB6sE,EAAoB,SAE/DD,EAAap/E,MAKjB,GAAwB,oBAApBm/E,EAAWt7E,KAEX,YADA7D,KAAK4W,UAAUpE,QAAQ,eAAgB6sE,GAK3C,GAAwB,YAApBF,EAAWt7E,KAAoB,CAC/B,MAAM47E,EAA0BN,EAC1BzjC,EAAM17C,KAAK45C,aAAa6lC,EAAuBv4D,SAAUu4D,EAAuBlrE,MAAQ,IAG9F,OAFAg4D,GAAY3F,cAAclrB,EAAItW,IAAIl8B,SAClClJ,KAAK4W,UAAUpE,QAAQ,eAAgB6sE,GAK3C,MAAMK,EAAuCnT,GAAYplE,IAAKg4E,EAA2Bj4D,UACzF,IAAKw4D,EAED,YADA1/E,KAAK4zB,QAAQhiB,MAAM,iDAAiD9D,KAAKC,UAAUoxE,EAAY,KAAM,MAIzG,MAAMQ,EAAqCD,EAAsBt6C,IAC3Dw6C,EAAgCF,EAAsB5J,OAG5D,GAAwB,kBAApBqJ,EAAWt7E,KAA0B,CACrC,MAAMg8E,EAAgCV,EACtCS,EAAgBlJ,oBAAoBmJ,EAA6BtrE,MAIrE,GAAwB,eAApB4qE,EAAWt7E,KAAuB,CAClC,MAAMi8E,EAA6BX,EACnC5S,GAAYxF,mBAAmB+Y,EAA0B54D,UACzD04D,EAAgBtJ,iBAAiBwJ,EAA0BvrE,MAI/D,GAAwB,iBAApB4qE,EAAWt7E,KAAyB,CACpC,MAAMk8E,EAA0BZ,EAChCS,EAAgBzJ,mBAAmB4J,EAAuBxrE,MAI9D,GAAwB,oBAApB4qE,EAAWt7E,KAA4B,CACvC,MAAMm8E,EAAoCb,EAC1CS,EAAgBnH,sBAAsBuH,EAAiCzrE,MAyB3E,GArBwB,sBAApB4qE,EAAWt7E,MACX+7E,EAAgBvJ,wBAAwB8I,EAAW5qE,MAI/B,mBAApB4qE,EAAWt7E,MACX+7E,EAAgBpJ,qBAAqB2I,EAAW5qE,MAI5B,iBAApB4qE,EAAWt7E,MACX+7E,EAAgB3J,wBAAwBkJ,EAAW5qE,MAI/B,sBAApB4qE,EAAWt7E,OACX+7E,EAAgBxI,wBAAwB+H,EAAW5qE,MACnDvU,KAAK4W,UAAUpE,QAAQ,sBAAuBmtE,IAI1B,uBAApBR,EAAWt7E,KAA+B,CAC1C,MAAMo8E,EAA+Bd,EACrCS,EAAgBjI,yBAAyBsI,EAA6B1rE,MACtEvU,KAAK4W,UAAUpE,QAAQ,sBAAuBytE,EAA6B1rE,MAG/E,GAAwB,iCAApB4qE,EAAWt7E,KAAyC,CACpD,MAAMmT,EAAOmoE,EACbS,EAAgB/H,mCAAmC7gE,EAAKzC,KAAK2rE,oBAC7DlgF,KAAK4W,UAAUpE,QAAQ,uBAAwBwE,EAAKzC,MAIxD,GAAwB,iBAApB4qE,EAAWt7E,KAAyB,CACpC,MAAMs8E,EAA0BhB,EAChCn/E,KAAKogF,aAAaR,EAAiBD,EAAWQ,EAAuB5rE,MAQzE,GALwB,uBAApB4qE,EAAWt7E,OACX+7E,EAAgBvI,oBAAoB8H,EAAW5qE,KAAK42D,QAASgU,EAAW5qE,KAAK42D,QAASgU,EAAW5qE,KAAK61D,oBACtGpqE,KAAK4W,UAAUpE,QAAQ,kBAGH,qBAApB2sE,EAAWt7E,KAA6B,CACxC,MAAMu0E,EAAmBwF,GAAuB+B,EAAUz2E,GAAIi2E,EAAW5qE,KAAK42D,SACxE52D,EAAO4qE,EAAW5qE,KACxBqrE,EAAgB5H,eAAezjE,EAAK42D,QAAS52D,EAAK42D,QAAS52D,EAAK61D,mBAAoB71D,EAAK82D,SAAU+M,GAC9Ft2E,MAAKsrD,UAEEgrB,EAAiBz3E,OAAS,UACpB+iB,GAASwyD,SACfl2E,KAAK4W,UAAUpE,QAAQ,eAAgBmtE,EAAWR,EAAW5qE,KAAK42D,QAASgU,EAAW5qE,KAAK61D,wBAK3G,GAAwB,uBAApB+U,EAAWt7E,KAA+B,CAE1C,MAAMw8E,EAAgBV,EAAU5U,WAC1BqN,EAAmBwF,GAAuB+B,EAAUz2E,GAAIm3E,GAC9DT,EAAgBtH,eAAe6G,EAAW5qE,KAAK82D,SAAU+M,GACpDt2E,MAAKsrD,UAEEgrB,EAAiBz3E,OAAS,UACpB+iB,GAASwyD,SACfl2E,KAAK4W,UAAUpE,QAAQ,eAAgBmtE,EAAWR,EAAW5qE,KAAK42D,QAASwU,EAAU5U,gBAK7E,+BAApBoU,EAAWt7E,MACX+7E,EAAgB9H,iCAAiCqH,EAAW5qE,KAAK61D,oBAG7C,0BAApB+U,EAAWt7E,MACX+7E,EAAgBtI,4BAA4B6H,EAAW5qE,KAAK+rE,YAAanB,EAAW5qE,KAAKgsE,cAGrE,kBAApBpB,EAAWt7E,MACX+7E,EAAgBzI,yBAAyBgI,EAAW5qE,MAGhC,gBAApB4qE,EAAWt7E,MACX+7E,EAAgBhJ,uBAAuBuI,EAAW5qE,MAG9B,kBAApB4qE,EAAWt7E,MACX+7E,EAAgB5I,yBAAyBmI,EAAW5qE,MAGhC,4BAApB4qE,EAAWt7E,MACX+7E,EAAgBpH,wBAAwB2G,EAAW5qE,MAI/B,WAApB4qE,EAAWt7E,OACX0oE,GAAYlpC,OAAOq8C,GACnBE,EAAgB5J,qBAGI,yBAApBmJ,EAAWt7E,MACX+7E,EAAgBnJ,2BAA2B0I,EAAW5qE,MAGlC,6BAApB4qE,EAAWt7E,MACX+7E,EAAgBlH,+BAA+ByG,EAAW5qE,MAI9DvU,KAAK4W,UAAUpE,QAAQ,eAAgB6sE,GAGnCzlC,aAAa1yB,EAAkBhc,GACnC,MAAMs1E,EAAoCC,GAAcv5D,EAAUlnB,KAAKw/E,8BAA8Bt0E,GAAUwY,GAAU1jB,KAAK4zB,QAAS5zB,KAAKi+E,kBAAmBj+E,KAAKk+E,kBAAmBl+E,KAAKm+E,mBAAoBn+E,KAAKi9C,MAErN,OADAsvB,GAAY16D,IAAI2uE,GACTA,EAGHJ,aAAaR,EAA+BD,EAAoC/9B,GACpFg+B,EAAgBjJ,mBAAmB/0B,GAC/BA,EACA5hD,KAAK4W,UAAUpE,QAAQ,YAAamtE,GAEpC3/E,KAAK4W,UAAUpE,QAAQ,aAAcmtE,GAIrCH,8BAA8B97C,GAElC,MAAO,CACH9+B,KAAM8+B,EAAK9+B,KACXD,QAAS++B,EAAK/+B,QACdo9C,OAAQre,EAAKqe,OACbj0B,IAAK4V,EAAK5V,IACVzhB,MAAOq3B,EAAKr3B,MACZo1C,UAAW/d,EAAK+d,UAChBG,MAAOle,EAAKwpC,UACZ/mE,MAAOu9B,EAAKv9B,MACZ+1C,WAAYxY,EAAKwY,WACjB8tB,QAAStmC,EAAKsmC,QACdF,WAAYpmC,EAAKk0C,UACjB1K,UAAWxpC,EAAKwpC,UAChBhD,qBAAsBxmC,EAAKw8C,mBAC3BtV,YAAalnC,EAAKknC,YAClBG,WAAYrnC,EAAKynC,QACjBA,QAASznC,EAAKynC,QACd9lB,KAAM3hB,EAAK2hB,KACX+kB,mBAAoB1mC,EAAK0mC,mBACzBE,cAAe5mC,EAAKg9C,YACpBztE,SAAUywB,EAAKzwB,SACfmmC,WAAY1V,EAAK0V,WACjBqyB,WAAY/nC,EAAK+nC,WAEjBJ,SAAU3nC,EAAK2nC,SACfM,kBAAmBjoC,EAAKioC,kBACxBjB,SAAUhnC,EAAKgnC,SACfO,SAAUvnC,EAAKunC,SAEfM,aAAc7nC,EAAK6nC,aACnBoV,gBAAiBj9C,EAAKkqC,UAItB0R,uBAAuBsB,GAC3B,IAEI,IAAKA,EAAY15D,SACb,OAAO05D,EAIX,MAAMr0E,EAASggE,GAAYplE,IAAIy5E,EAAY15D,UAC3C,IAAK3a,EACD,OAAOq0E,EAGX,MAAMh/E,EAA8B,CAChCuE,MAAOy6E,EAAY/8E,KACnBogD,WAAY13C,EAAO64B,IAAIxgC,QACpBg8E,GAmBP,MAhBqB,qBAAjBh/E,EAAOuE,QACPvE,EAAOuE,MAAQ,eAGE,iBAAjBvE,EAAOuE,QACPvE,EAAOuE,MAAQvE,EAAO2S,KAAKssE,OAAO,GAAGC,cAAgBl/E,EAAO2S,KAAK9N,MAAM,IAGtD,gBAAjB7E,EAAOuE,QACPvE,EAAOuE,MAAQ,oBAGE,kBAAjBvE,EAAOuE,QACPvE,EAAOuE,MAAQ,sBAGZvE,EACT,MAAOgQ,GACL,OAAOgvE,WCvbJ,CAAC13E,EAAYwa,KAExB,MAAM9M,EAA8BmqE,KAE9BC,EAAuB,GAqD7B5zB,eAAe56C,EAAQ4e,EAAiBlmB,KAAwC/G,GAE5E,aADMuf,EAASlR,QAA8B4e,EAASlmB,KAAY/G,GAC3D88E,EAeX,SAASC,IACL,MAAMC,EAAwC,GAS9C,OAPAH,EAAW16E,SAASgmE,IAChB,MAAM8U,EAAeC,EAAmB/U,QACZ,IAAjB8U,GACPD,EAAWj+E,KAAKk+E,MAIjBD,EAGX,SAASE,EAAmBn6D,GACxB,OAAOqlD,GAAYplE,IAAI+f,GAAYqlD,GAAYplE,IAAI+f,GAAUke,SAAM95B,EA+BvE,MAAM21E,EAAoC,CACtC/3E,KACIswC,cACA,OAzER,SAAiBj8B,GACb,MAAM+jE,EAA2CJ,IAIjD,MAHuB,mBAAZ3jE,GACPA,EAAQ+jE,GAELA,EAoEI9nC,IAEXvwB,KAhGJ,SAAc1c,EAA0CgR,EAAqD3L,GACzG,IAAI06D,EACkB,iBAAX//D,EACP+/D,EAAQ//D,EACA4rC,GAAkB5rC,KAC1B+/D,EAAQ//D,EAAOrD,IAGnB,MAAMwyC,EAAM2lC,EAAmB/U,GAC/B,GAAI5wB,EAIA,MAHuB,mBAAZn+B,GACPA,EAAQm+B,GAELA,EAEc,mBAAV9pC,GACPA,EAAM,sBAAsB06D,MAiFhCiV,sBACA,YAhCqDj2E,IAD1B41E,IAAsBj4D,MAAM8xB,IAAOA,EAAEmvB,wBAmCpEsX,WAAY,CAACjkE,EAAS3L,IACXk6D,GAAMC,oBAAmB,IACrBv5D,EAAQ,2BAA4B,CAAE0U,SAAU85D,EAAW,GAAI91E,QAAS,CAAE0vE,QAAQ,OAAaoG,EAAW3yE,KAAK0sC,GAAM,gCAAgCA,QAC7Jx9B,EAAS3L,GAEhB6vE,WAAY,CAAClkE,EAAS3L,IACXk6D,GAAMC,oBAAmB,IACrBv5D,EAAQ,2BAA4B,CAAE0U,SAAU85D,EAAW,GAAI91E,QAAS,CAAE0vE,QAAQ,OAAcoG,EAAW3yE,KAAK0sC,GAAM,gCAAgCA,QAC9Jx9B,EAAS3L,GAEhByjE,SAAUjoB,gBACU1pC,EAASlR,QAA2B,gBAAiB,CAAE0U,SAAU85D,EAAW,MACnF30E,MAEb+hE,SAAUhhB,MAAO/gD,IACb,GAAI+rC,GAAmB/rC,GACnB,MAAM,IAAItF,MAAM,0CAEpB,OAAOyL,EAAQ,gBAAiB,CAAE0U,SAAU85D,EAAW,GAAI91E,QAAS,CAAEmB,UAAU,EAEpFolE,QAAUC,GACChuD,EAASg+D,aAAaV,EAAYtP,GAE7C7D,SAAU,CAACtwD,EAAS3L,IACTk6D,GAAMC,oBAAmB,IACrBv5D,EAAQ,gBAAiB,CAAE0U,SAAU85D,EAAW,OAASA,EAAW3yE,KAAK0sC,GAAM,gBAAgBA,QACvGx9B,EAAS3L,GAEhBk8D,QAAS,CAACvwD,EAAS3L,IACRk6D,GAAMC,oBAAmB,IACrBv5D,EAAQ,eAAgB,CAAE0U,SAAU85D,EAAW,OAASA,EAAW3yE,KAAK0sC,GAAM,gBAAgBA,QACtGx9B,EAAS3L,GAEhB+vE,0BA1DJ,SAAmC7vE,GAC/B,OAAO8E,EAAU/E,IAAI,4BAA6BC,IA0DlDysD,cAvDJ,SAAuBzsD,GACnB,OAAO8E,EAAU/E,IAAI,eAAgBC,IAuDrC8vE,gBApDJ,SAAyB9vE,GACrB,OAAO8E,EAAU/E,IAAI,iBAAkBC,KA+D3C,MAAO,CACH+vE,SAAUZ,EACVa,cAX4B,CACxBtoC,cACA,OAAOwnC,GAEX5jC,UAlKJgQ,eAAyBkf,GACrB,IAAmC,IAA/B0U,EAAW/lE,QAAQqxD,GAAe,CAClC0U,EAAW99E,KAAKopE,GAChB,MAAM5wB,EAAqB6wB,GAAYplE,IAAImlE,GAC3C5wB,EAAIo6B,OAAOiC,mBAAmBkJ,OAAa31E,SACrCoY,EAASwyD,SACft/D,EAAUpE,QAAQ,eAAgByuE,EAAavlC,EAAItW,OA6JvD28C,aAzJJ30B,eAA4B1R,GACxB,MAAMnpC,EAAgByuE,EAAW/lE,QAAQygC,EAAItW,IAAIl8B,KAClC,IAAXqJ,IACAyuE,EAAWjnE,OAAOxH,EAAO,GACzBmpC,EAAIo6B,OAAOiC,wBAAmBzsE,EAAW21E,SACnCv9D,EAASwyD,SACft/D,EAAUpE,QAAQ,iBAAkByuE,EAAavlC,EAAItW,OAoJzDyyC,mCA1GJ,SAA4CsH,GACxCvoE,EAAUpE,QAAQ,4BAA6ByuE,KA+GlD,KC1KU,CAACp7C,EAA0B3yB,KACtC,MAAM0D,EAA8BmqE,KAC9BiB,EAA2C,GACjD,IAAIC,GAAkC,EAGtC,MAAMzoC,EAAU+yB,GAAYle,KA0D5B,SAAS6zB,EAAkB5V,EAAyC/uD,EAAiD3L,GACjH,IAAIsV,EACiB,iBAAVolD,EACPplD,EAAWolD,EACHn0B,GAAkBm0B,KAC1BplD,EAAWolD,EAAMpjE,IAErB,MAAMtH,EAASpC,OAAO0E,OAAO89E,GAAS/4D,MAAMk5D,GACJA,EAASN,SAC1BroC,QAAQ9vC,QAAQqxC,GAAMA,EAAE7xC,KAAOge,IACtCvmB,SAEhB,GAAIiB,EAIA,MAHuB,mBAAZ2b,GACPA,EAAQ3b,EAAOigF,UAEZjgF,EAAOigF,SAEO,mBAAVjwE,GACPA,EAAM,wCA6BlB,SAASwrC,EAAU4sB,EAAiBsC,GAChC,MAAMc,EAlBV,SAAqBpD,GACjB,GAAKgY,EAAQniF,eAAemqE,GAKxB,OAAOgY,EAAQhY,GALmB,CAClC,MAAMoY,EAA6BC,GAAarY,EAASnkC,EAAYniB,UAErE,OADAs+D,EAAQhY,GAAWoY,EACZA,GAcGE,CAAYtY,GAE1B,OADAoD,EAAM0U,cAAc1kC,UAAUkvB,GACvBc,EAGX,SAAS2U,EAAa3U,EAAqB1xB,GAClC0xB,IAGLA,EAAM0U,cAAcC,aAAarmC,GAjBrC,SAAuB0xB,GACmB,IAAlCA,EAAMyU,SAASroC,QAAQ74C,eAChBqhF,EAAQ5U,EAAMyU,SAAS34E,IAgBlCq5E,CAAcnV,IAqClB,SAASoV,EAAyBlW,GAC9B,IAAIplD,EAMJ,MALqB,iBAAVolD,EACPplD,EAAWolD,EACHn0B,GAAkBm0B,KAC1BplD,EAAWolD,EAAMpjE,IAEd1J,OAAO0E,OAAO89E,GAAS/4D,MAAMk5D,GACVA,EAASL,cACJtoC,QAAQ9vC,QAAQR,GAAOA,IAAOge,IAC7CvmB,SAnKpBnB,OAAO2E,KAAKq1C,GAASlzC,SAAShD,IAC1B,MAAMo4C,EAAMlC,EAAQl2C,GACd0mE,EAAUtuB,EAAItW,IAAI4kC,QAClBsC,EAAQ5wB,EAAItW,IAAIl8B,GAEjBkvC,GAAmB4xB,IACpB5sB,EAAU4sB,EAASsC,MAI3BC,GAAYtP,WAAWliB,IAEnBgnC,EADcS,EAAyBznC,EAAE3V,KACrB2V,EAAE,IAG1BlV,EAAYi5C,sBAAsBK,KAwGlC,SAAkCh5E,GAC9B,MAAM6jE,EAAU7jE,EAAM6jE,QAChB9iD,EAAW/gB,EAAM+gB,SACjBw0B,EAAM6wB,GAAYplE,IAAI+f,GAC5B,IAAKw0B,EACD,OAEJ,MAAM+mC,EAAeD,EAAyB9mC,EAAItW,KAGlD,GAAI+S,GAAkB6xB,GAElB,YADA+X,EAAaU,EAAc/mC,GAI/B,GAAIvD,GAAkBsqC,KAAkBtqC,GAAkB6xB,GAEtD,YADA5sB,EAAU4sB,EAAStuB,EAAItW,IAAIl8B,IAI3Bu5E,EAAaZ,SAAS34E,KAAO8gE,GAKrC,SAAoBtuB,EAAoBt6B,EAAciX,GAClD,MAAMi0C,EAAQ5wB,EAAItW,IAAIl8B,GAChBw5E,EAAYV,EAAQ5gE,GAC1B2gE,EAAaW,EAAWhnC,GACxB,MAAMinC,EAAUvlC,EAAU/kB,EAAIi0C,GAC9B5wB,EAAIo6B,OAAOiC,mBAAmB4K,EAAQd,SAAUa,EAAUb,UAC1DjrE,EAAUpE,QAAQ,eAAgB85D,EAAOlrD,EAAMiX,GAV3CuqD,CAAWlnC,EAAK+mC,EAAaZ,SAAS34E,GAAI8gE,GA5H9C2N,CAAyBwH,EAAW,IAGxCt5C,EAAYk5C,gCAAgCI,IACxC,MACM/R,EAA8B8U,EADnB/C,EAAWj4D,UAE5B,QAAqB,IAAVkmD,EAAuB,CAC9B,MAAMyV,EAA4Bb,EAAQ5U,EAAMlkE,KAEhB,IAA5B+4E,IACAA,EAAyB7U,EAAM5zB,QAAQ74C,QAG3CshF,IAC+B,IAA3BA,IACAA,GAA0B,EAC1BY,EAAYf,cAAcjK,mCAAmCsH,QAqJzE,MAAO,CACH2D,UAbW,CACP39B,SACA,OAnIG+8B,EAAkBr8C,EAAYsf,OAqIrCkJ,KAlIJ,SAAc9wC,GACV,MAAM3b,EAAiCpC,OAAO2E,KAAK69E,GAAS3zE,KAAK27D,IAC7D,GAAIgY,EAAQhY,GACR,OAAOgY,EAAQhY,GAAS6X,YAQhC,MAHuB,mBAAZtkE,GACPA,EAAQ3b,GAELA,GAwHPsgF,qBASAa,aAJ2B,CAAEC,cAjGjC,SAAuBlxE,GACnB,OAAO8E,EAAU/E,IAAI,eAAgBC,KAqGxC,KCjMU,CAACukC,EAAyBnjC,EAA+B+1D,EAA+CC,EAA6C+Z,EAAuCrrB,KACvM,MAAMhhD,EAA8B0vD,KAC9B1yC,EAAU1gB,EAChB,IAAIgwE,EACAr9C,EAEJ0mC,GAAYphE,KAAKyoB,GAEjB,MAAMuvD,EAAU,IAAIhiF,SAAc,CAACC,EAASC,KChBjC,EAACg1C,EAAyBnjC,EAA+B+1D,EAA+CC,EAA6CC,EAA0CvR,KAC1M,MAAMhkC,EAAU1gB,EAChB,OAAO,IAAI/R,SAAQ,CAACC,EAASC,KACzB,GAAuB,IAAnBu2D,EAGA,MADAhkC,EAAQ7H,MAAM,iBACR,IAAIhlB,MAAM,qBACb,GAAI6wD,GAAkB,EAGzBhkC,EAAQ7H,MAAM,mBACH,IAAIq3D,GAAG/sC,EAAKziB,EAASq1C,EAAkBC,EAAkBC,OAAmB79D,EAAWiB,OAAOO,SAASoa,UAC/G/b,OACErJ,KAAKV,GACLyI,MAAMxI,OACR,CAGH,MAAMgiF,EAAY,IAAID,GAAG/sC,EAAKziB,EAASq1C,EAAkBC,EAAkBC,GAAmBh+D,OACxF+tE,EAAQ5/C,GAAe,IAAIn4B,SAAQ,CAACihB,EAAK03D,IAAQvsE,YAAW,KAAQusE,EAAI,8BAA8B,GAAKxgD,KACjHn4B,QAAQ+7B,KAAK,CAACmmD,EAAWnK,EAAK,OACzBp3E,KAAKV,GACLyI,MAAMxI,MAEjB,EDPEiiF,CAAYjtC,EAAKziB,EAASq1C,EAAkBC,EAAkB+Z,EAAgBrrB,GACzE91D,MAAM8wC,IACH/M,EAAc+M,EACdswC,EAASK,GAAc3wC,GACvB81B,GAAgBv9D,KAAKynC,EAAIlvB,SAAU2yB,EAAKziB,GACxCxyB,GAAS,IAEZyI,OAAOnI,IACJ,MAAMyQ,EAAM,oCAAoCzQ,IAChDkyB,EAAQhiB,MAAMO,GACd9Q,EAAO8Q,EAAI,GACb,IAOV,SAASgzC,IACL,MAAMq+B,EAAWjX,GAAY/F,WAAW3gC,EAAYsf,MACpD,OAAOq+B,EAAWA,EAASp+C,SAAM95B,EAyGrC,SAASm4E,EAAY3xE,GACjB,OAAO8E,EAAU/E,IAAI,eAAgBC,GAGzC,SAAS4xE,EAAc5xE,GACnB,OAAO8E,EAAU/E,IAAI,iBAAkBC,GAmI3C,OAJAy6D,GAAYrF,eARZ,SAA2BnsB,GACvBnkC,EAAUpE,QAAQ,eAAgBuoC,EAAE3V,QAQxCmnC,GAAYtP,WALZ,SAA6BliB,GACzBnkC,EAAUpE,QAAQ,iBAAkBuoC,EAAE3V,QAOnC,CACH+f,KACAnxC,KAhPJ,SAAcpP,EAAckpB,EAAa5iB,EAAyCqS,EAAqD3L,GACnI,OAAOk6D,GAAMC,oBAAmB,KAC5B,GAAIkD,GAAwBrqE,GACxB,MAAM,IAAImC,MAAM,+BAEpB,GAAIkoE,GAAwBnhD,GACxB,MAAM,IAAI/mB,MAAM,8BAGpB,IAAK+zC,GAAuB5vC,GAAU,CAClC,MAAMy4E,EAAez4E,EACrB,IAAK,MAAM2zB,IAAQ,CAAC,YAAa,YAAa,WAAY,WAAY,QAAS,SAAU,MAAO,QAC5F,GAAIA,KAAQ8kD,EAAc,CACtB,MAAMpiF,EAAQoiF,EAAa9kD,GAC3B,GAAIic,GAAuBv5C,GAAQ,QACxBoiF,EAAa9kD,GACpB,SAEJ,IAAK2vC,GAAcjtE,GAAQ,CAEvB,MAAM,IAAIwF,MADS,GAAG83B,sBAG1B,IAA2B,UAAvB8kD,EAAa9kD,IAA4C,WAAvB8kD,EAAa9kD,KAC3Ct9B,GAAS,EAAG,CAEZ,MAAM,IAAIwF,MADS,GAAG83B,iCAO1C,OAAOgH,EAAY7xB,KAAKpP,EAAMkpB,EAAK5iB,EAAQ,GAC5CqS,EAAS3L,IAiNZqX,KA9MJ,SAAcrkB,EAAc2Y,EAAqD3L,GAC7E,MAAM4nC,EAA4C+yB,GAAYle,KAExDu1B,EAA+CpkF,OAAO2E,KAAKq1C,GAASp1C,QAAO,CAACC,EAAMioE,WACpF,MAAM//D,EAAwBitC,EAAQ8yB,GAItC,iBAHI//D,eAAAA,EAAQ64B,0BAAKxgC,QAASA,GACtBP,EAAKnB,KAAKqJ,EAAO64B,KAEd/gC,CAAI,GACZ,IAGH,GADYu/E,EAAkB,GAK1B,MAHuB,mBAAZrmE,GACPA,EAAQqmE,EAAkB,IAEvBA,EAAkB,GAEJ,mBAAVhyE,GACPA,EAAM,gCAAkChN,IA4LhDi/E,SAvLJ,SAAkB36E,EAAYqU,EAAqD3L,GAC/E,MAAM4nC,EAA4C+yB,GAAYle,KACxDu1B,EAA+CpkF,OAAO2E,KAAKq1C,GAASp1C,QAAO,CAACC,EAAMioE,KACpF,MAAM//D,EAAwBitC,EAAQ8yB,GAItC,YAHsB,IAAX//D,GAA0BA,EAAO64B,IAAIl8B,KAAOA,GACnD7E,EAAKnB,KAAKqJ,EAAO64B,KAEd/gC,CAAI,GACZ,IAEH,GADYu/E,EAAkB,GAK1B,MAHuB,mBAAZrmE,GACPA,EAAQqmE,EAAkB,IAEvBA,EAAkB,GAEJ,mBAAVhyE,GACPA,EAAM,mCAAqC1I,IAuKnDmlD,KAlKJ,SAAc9wC,GACV,MAAMi8B,EAA4C+yB,GAAYle,KAExDu1B,EAA+CpkF,OAAO2E,KAAKq1C,GAC5DnrC,KAAK/K,GACKk2C,EAAQl2C,GAAG8hC,MAG1B,GAAuB,mBAAZ7nB,EACP,OAAOqmE,EAGXrmE,EAAQqmE,IAuJRh2D,MA7PJ,WACI,OAAOu1D,GA6PP5kB,cAAeklB,EACfA,cACA7B,gBAAiB8B,EACjBA,gBACAI,cA3IJ,SAAqBhyE,GACjB,IAAIiyE,EACAC,GAAe,EAQnB,OAPAb,EAAQrhF,MAAK,KACLkiF,IAGJD,EAAYl+C,EAAY84C,YAAY7sE,GAAS,IAG1C,KACHkyE,GAAe,EACXD,GACAA,MA+HRE,cA1HJ,SAAqBnyE,GACjB,IAAIiyE,EACAC,GAAe,EAQnB,OAPAb,EAAQrhF,MAAK,KACLkiF,IAGJD,EAAYl+C,EAAY+4C,YAAY9sE,GAAS,IAG1C,KACHkyE,GAAe,EACXD,GACAA,MA8GRl1B,0BAzGJ,SAAmC/8C,GAC/B,IAAIiyE,EACAC,GAAe,EAQnB,OAPAb,EAAQrhF,MAAK,KACLkiF,IAGJD,EAAYl+C,EAAYgpB,0BAA0B/8C,GAAS,IAGxD,KACHkyE,GAAe,EACXD,GACAA,MA8FJb,aACA,OAAOA,EAAOJ,WAElB9D,iBA5FJ,SAA0BltE,GACtB,IAAIiyE,EACAC,GAAe,EAQnB,OAPAb,EAAQrhF,MAAK,KACLkiF,IAGJD,EAAYl+C,EAAYm5C,iBAAiBltE,GAAS,IAG/C,KACHkyE,GAAe,EACXD,GACAA,MAgFR9E,kBA3EJ,SAA2BntE,GACvB,IAAIiyE,EACAC,GAAe,EAQnB,OAPAb,EAAQrhF,MAAK,KACLkiF,IAGJD,EAAYl+C,EAAYo5C,kBAAkBntE,GAAS,IAGhD,KACHkyE,GAAe,EACXD,GACAA,MA+DRlF,QA1DJ,SAAiB/sE,GACb,IAAIiyE,EACAC,GAAe,EAQnB,OAPAb,EAAQrhF,MAAK,KACLkiF,IAGJD,EAAYl+C,EAAYg5C,QAAQ/sE,GAAS,IAGtC,KACHkyE,GAAe,EACXD,GACAA,MA8CR7S,cAzCJ,SAAuBgK,EAAkB1sE,GACrC,OAAOq3B,EAAYqrC,cAAcgK,EAAU1sE,IAyC3CyiE,UAtCJ,SAAmBiK,EAAkB1sE,GACjC,OAAOq3B,EAAYorC,UAAUiK,EAAU1sE,IAsCvCqkE,UArKJ,SAAmB3nE,GACf,MAAMwwC,EAAMyJ,IACNmnB,EAAQ5wB,EAAMA,EAAIxyC,GAAK,GAC7B,OAAOwa,GAASmvD,UAAUvG,EAAOphE,IAmKpC,SExRU,UAxBfjL,cACYD,aAAmC,GAEpCkkF,YAAYC,GACfnkF,KAAKokF,QAAUpkF,KAAKokF,QAAQ16E,OAAOy6E,GAGhCtyE,IAAIyH,GACPtZ,KAAKokF,QAAQlhF,KAAKoW,GAGXyI,UACP,OAAO/hB,KAAKokF,QAGTC,MAAMF,GACT,OAAOnkF,KAAKokF,QAAQ16E,OAAOy6E,GAGxBG,MAAMH,GACT,OAAOnkF,KAAKqkF,MAAMF,GAAW,WCbhBI,GAIjBtkF,YAAoBuO,EAAyCg2E,EAAuDlzE,EAAqC4B,GAArIlT,YAAAwO,EAAyCxO,sBAAAwkF,EAAuDxkF,eAAAsR,EAAqCtR,YAAAkT,EACrJlT,KAAKgvB,QAAUxgB,EAAO6nC,IACtBr2C,KAAKykF,yBAGFC,gBAAgB5yE,GACnB,OAAO9R,KAAKsR,UAAUO,IAAI,gBAAiBC,GAGvC0rD,kBAEJ,GAA6B,oBAAlB5pB,cAA+B,CACtC,MAAMjvC,EAAUivC,cAAc+qB,aAC9B,OAAOh6D,GAAWA,EAAQ+nE,MAAQ/nE,EAAQ+nE,KAAKiY,gBAInD,MAAMxvC,EAAan1C,KAAKwkF,mBACxB,IAAKrvC,EACD,OAAO,EAGX,IAAKA,EAAWoiB,WACZ,OAAO,EAGX,MAAMisB,EAAWruC,EAAWgQ,GAAG54C,OACzBwjD,EAAa5a,EAAWgQ,GAAGzL,SAEjC,SAAKqW,IAAeyzB,IAIbzzB,EAAW5S,MAAMj0C,KAAOs6E,EAASt6E,GAGpCu7E,yBACJzkF,KAAKgvB,QAAQsU,SA/CS,yBA+C2DI,IAC7E,MAAMkhD,EAAW5kF,KAAKsR,UAAUkB,QAAQ,gBAAiBkxB,IACrDkhD,eAAAA,EAAUjkF,QAAS,GACnBX,KAAKkT,OAAO4K,KAAK,+FAErB,MAAM+mE,EAAgBD,EAAS,GACzBE,EAAwB9kF,KAAKwO,OAAOs2E,sBAE1C,GAAqC,kBAA1BA,GAAuCA,EAC9C,MAAO,CAAEA,yBACN,GAAInlF,MAAMgG,QAAQm/E,IAA0BA,EAAsBnkF,OAAS,EAC9E,MAAO,CAAEmkF,yBAGb,MAAMljF,EAA6C,CAAEmjF,cAAeF,eAAAA,EAAeE,cAAeC,qBAAiB15E,GAOnH,OAJItL,KAAKw9D,oBACL57D,EAAOojF,gBAAkBH,eAAAA,EAAeG,iBAGrCpjF,CAAM,cCpEDqjF,GAAmBC,GACvC,IAAKA,EACD,OAAOA,EAGX,GAAIvlF,MAAMgG,QAAQu/E,GACd,OAAOA,EAAU72E,KAAKiL,GACX2rE,GAAmB3rE,KAIlC,GAAyB,iBAAd4rE,GAA+C,iBAAdA,GAA+C,kBAAdA,EACzE,OAAOA,EAIX,OAAO1lF,OAAO2E,KAAK+gF,GAAW9gF,QAAO,CAAC+gF,EAAa3lD,KAC/C,MACM4lD,EAAiBH,GADTC,EAAU1lD,IAGxB,IAAIl7B,EAAMk7B,EAMV,OALIA,EAAQ,GAAGrzB,gBAAkBqzB,EAAQ,KACrCl7B,EAAMk7B,EAAQ,GAAGrzB,cAAgBqzB,EAAQzqB,OAAO,IAGpDowE,EAAY7gF,GAAO8gF,EACZD,CAAW,GAXkB,GAa5C,OC9BqBE,GAsBjBplF,YAAYsU,GACRvU,KAAK4E,KAAO2P,EAAK3P,KACjB5E,KAAK6D,KAAO0Q,EAAK1Q,KACjB7D,KAAKslF,WAAa/wE,EAAK+wE,WACvBtlF,KAAK2E,QAAU4P,EAAK5P,QACpB3E,KAAK28B,SAAWpoB,EAAKooB,SACrB38B,KAAK4U,QAAUL,EAAKK,QACpB5U,KAAKqnE,SAAW9yD,EAAK8yD,gBCnBRke,GAIjBtlF,YAAoBuO,EAAyCorB,EAA+BtoB,EAA6B4B,GAArGlT,YAAAwO,EAAyCxO,YAAA45B,EAA+B55B,eAAAsR,EACxFtR,KAAKmhE,WAAa3yD,EAAO2yD,WACzBnhE,KAAK6+E,QAAUjlD,EAAOilD,QACtB7+E,KAAK2gB,SAAW,IAAI4jE,GAAgB/1E,EAAQA,EAAOg3E,eAAgBl0E,EAAW4B,GAC9E0mB,EAAO1D,YAGJk3B,uBAAuBxoD,SACpB5E,KAAKwO,OAAO6nC,IAAIjnB,OAAO,8BAA+B,CAAExqB,SAI3DwoD,iCACGptD,KAAKwO,OAAO6nC,IAAIjnB,OAAO,iCAI1Bg+B,yBACH,MACM/E,SADeroD,KAAKwO,OAAO6nC,IAAIjnB,OAAO,6BACtB0N,SACtB,GAAKurB,EAGL,OAAIroD,KAAKylF,aACEp9B,EAEJroD,KAAKquD,OAAOplC,MAAMy8D,GAAMA,EAAE9gF,OAASyjD,EAAOzjD,MAAmB,WAAX8gF,EAAE7hF,OAGxD+pB,QACH,MAAyB,qBAArB5tB,KAAKwO,OAAO62C,KACLrlD,KAAK45B,OAAO+rD,YAEhB3lF,KAAK45B,OAAOhM,MAGhBg4D,KAAKv9B,GACR,OAAO,IAAIlnD,SAA+B,CAACC,EAASC,aAIhD,GAFArB,KAAK6lF,oBAED1tC,GAAkBkQ,GAClB,OAAOhnD,EAAO,IAAI0F,MAAM,uBAG5B,GAAIqxC,GAAmBiQ,EAAOzjD,MAC1B,OAAOvD,EAAO,IAAI0F,MAAM,qCAGxBqxC,GAAmBiQ,EAAOxkD,QAC1BwkD,EAAOxkD,KAAO,UAGbu0C,GAAmBiQ,EAAOx3B,cAC3Bw3B,EAAOxkD,KAAO,YAGlB,MAAMiiF,EAAqC,CACvClhF,KAAMyjD,EAAOzjD,KACbf,KAAMwkD,EAAOxkD,KACbc,kBAAS0jD,EAAO1jD,uBAAW,GAC3Bg4B,mBAAU0rB,EAAO1rB,wBAAY,GAC7BzxB,QAAS,IAGb,GAAoB,aAAhBm9C,EAAOxkD,KAAqB,CAC5B,IAAIuwD,EAAQ/L,EAAOx3B,WACnB,IAAKujC,EAAO,CACR,IAAKp0D,KAAKmhE,WAAW4B,WAAWxL,WAC5B,OAAOl2D,EAAO,IAAI0F,MAAM,gFAE5BqtD,EAAQp0D,KAAKmhE,WAAW4B,WAAWlyC,WAEvCi1D,EAAaj1D,WAAaujC,MACvB,IAAoB,WAAhB/L,EAAOxkD,KAQd,OAAOxC,EAAO,IAAI0F,MAAM,eAAeshD,EAAOxkD,0BAP1ClE,MAAMgG,QAAQ0iD,EAAO09B,mBACrBD,EAAa56E,QAAQ66E,gBAAkB19B,EAAO09B,iBAE9CpmF,MAAMgG,QAAQ0iD,EAAO4O,aACrB6uB,EAAa56E,QAAQ+rD,UAAY5O,EAAO4O,WAMhDj3D,KAAKgmF,qBAAqB,qBAAsBF,EAAc1kF,EAASC,EAAO,IAI/EysE,QAAQ5iE,GACX,OAAO,IAAI/J,SAAc,CAACC,EAASC,aAG/B,GAFArB,KAAK6lF,oBAED1tC,GAAkBjtC,GAClB,OAAO7J,EAAO,IAAI0F,MAAM,iCAG5B,GAAIqxC,GAAmBltC,EAAQtG,MAC3B,OAAOvD,EAAO,IAAI0F,MAAM,sCAW5B,GARIqxC,GAAmBltC,EAAQrH,QAC3BqH,EAAQrH,KAAO,UAGdu0C,GAAmBltC,EAAQ+6E,oBAC5B/6E,EAAQrH,KAAO,YAGE,aAAjBqH,EAAQrH,KAAqB,CAI7B,GAHIs0C,GAAkBjtC,EAAQyyC,sBAC1BzyC,EAAQyyC,oBAAqB,GAES,kBAA/BzyC,EAAQyyC,mBACf,OAAOt8C,EAAO,IAAI0F,MAAM,oDAE5BmE,EAAQ+6E,2BAAmB/6E,EAAQ+6E,gCAAoBjmF,KAAKmhE,WAAW4B,WAAWlyC,WAYtF,GARKsnB,GAAkBjtC,EAAQg7E,wBAC3Bh7E,EAAQi7E,sBAAwBj7E,EAAQg7E,sBAGxC/tC,GAAkBjtC,EAAQi7E,yBAC1Bj7E,EAAQi7E,uBAAwB,IAG/B7tC,GAAUptC,EAAQi7E,uBACnB,OAAO9kF,EAAO,IAAI0F,MAAM,uDAO5B,GAJIoxC,GAAkBjtC,EAAQk7E,WAC1Bl7E,EAAQk7E,QAAUl7E,EAAQi7E,wBAGzB7tC,GAAUptC,EAAQk7E,SACnB,OAAO/kF,EAAO,IAAI0F,MAAM,yCAG5B,IAAKoxC,GAAkBjtC,EAAQvG,WAAaszC,GAAS/sC,EAAQvG,SACzD,OAAOtD,EAAO,IAAI0F,MAAM,yCAG5B,IAAKoxC,GAAkBjtC,EAAQ2Y,UAAuC,iBAApB3Y,EAAQ2Y,QACtD,OAAOxiB,EAAO,IAAI0F,MAAM,yCAG5BmE,EAAQvG,kBAAUuG,EAAQvG,uBAAW,GAErC,MAAM0hF,EAA2C,CAC7CC,eAAgBp7E,EAAQ+6E,iBACxBtoC,mBAAoBzyC,EAAQyyC,mBAC5B4oC,0BAA2Br7E,EAAQq7E,0BAInCC,qBAAsBt7E,EAAQu7E,aAE9BN,sBAAuBj7E,EAAQi7E,sBAC/BO,mBAAoBx7E,EAAQk7E,QAAU,GAAK,CAACpmF,KAAKmhE,WAAW4B,WAAW75D,KAGrE6uC,EAAyB,CAC3Bl0C,KAAMqH,EAAQrH,KACde,KAAMsG,EAAQtG,KACdD,QAASuG,EAAQvG,QACjBuG,QAASm7E,GAETn7E,EAAQ2Y,UACRk0B,EAAIl0B,QAAU3Y,EAAQ2Y,SAG1B7jB,KAAKgmF,qBAAqB,wBAAyBjuC,EAAK32C,EAASC,GAAQ,EAAK,IAI/EgiC,OAAOx/B,EAAce,GACxB,OAAO,IAAIzD,SAAc,CAACC,EAASC,KAG/B,GAFArB,KAAK6lF,qBAEAjhF,EACD,OAAOvD,EAAO,IAAI0F,MAAM,8BAG5B,IAAKlD,EACD,OAAOxC,EAAO,IAAI0F,MAAM,8BAG5B,MAAMV,EAA8B,CAChCxC,OACAe,QAGJ5E,KAAKgmF,qBAAqB,uBAAwB3/E,EAAKjF,EAASC,EAAO,IAIxEgtD,OAEH,OADAruD,KAAK6lF,oBACEc,GAAM5kE,IAGV6+C,OAAOwjB,EAAkC/+B,GAC5C,OAAO,IAAIlkD,SAAc,CAACC,EAASC,KAE/B,GADArB,KAAK6lF,qBACA1tC,GAAkBkN,IACN,UAATA,GAA6B,YAATA,EACpB,OAAOhkD,EAAO,IAAI0F,MAAM,GAAGs+C,oDAGnC,MAAMh/C,EAAwB,CAC1Bg/C,KAAMA,GAAQ,UACd++B,WAGJpkF,KAAKgmF,qBAAqB,wBAAyB3/E,EAAKjF,EAASC,GAAQ,EAAK,IAI/Ey/D,OAAO8lB,GACV,OAAO,IAAIzlF,SAAiC,CAACC,EAASC,KASlDrB,KAAKgmF,qBAAqB,wBAAyB,IAR7BpkF,IAClB,IAAIwiF,EAAmCpkF,KAAK6mF,gBAAgBjlF,EAAOklF,SAASz4E,KAAK/N,GAAM,IAAI+kF,GAAWJ,GAAmB3kF,MACrHsmF,IACAxC,EAAUA,EAAQ16E,QAAQg8E,GAAMA,EAAE7hF,OAAS+iF,KAE/CxlF,EAAQgjF,EAAQ,GAGiD/iF,GAAQ,EAAK,IAInF0lF,OAAO1+B,EAA+B2+B,GACzC,OAAO,IAAI7lF,SAAc,CAACC,EAASC,KAG/B,GAFArB,KAAK6lF,qBAEAx9B,EACD,OAAOhnD,EAAO,IAAI0F,MAAM,gCAG5B,IAAKshD,EAAOzjD,KACR,OAAOvD,EAAO,IAAI0F,MAAM,8BAG5B,IAAKshD,EAAOxkD,KACR,OAAOxC,EAAO,IAAI0F,MAAM,8BAG5B,MAAMV,EAAwB,CAAExC,KAAMwkD,EAAOxkD,KAAMojF,QAAS5+B,EAAOzjD,KAAMoiF,WAEzEhnF,KAAKgmF,qBAAqB,uBAAwB3/E,EAAKjF,EAASC,EAAO,IAIxE6lF,eAAe7+B,GAClB,OAAO,IAAIlnD,SAAQ,CAACC,EAASC,KACzB,IAAKgnD,EACD,OAAOhnD,EAAO,IAAI0F,MAAM,gCAG5B,IAAKshD,EAAOzjD,KACR,OAAOvD,EAAO,IAAI0F,MAAM,8BAG5B,IAAKshD,EAAOxkD,KACR,OAAOxC,EAAO,IAAI0F,MAAM,8BAG5B,IAAKshD,EAAO1rB,SACR,OAAOt7B,EAAO,IAAI0F,MAAM,kCAG5B,MAAM++E,EAAoB,CACtBlhF,KAAMyjD,EAAOzjD,KACbf,KAAMwkD,EAAOxkD,KACb84B,SAAU0rB,EAAO1rB,UAGrB38B,KAAKgmF,qBAAqB,yBAA0BF,EAAc1kF,EAASC,GAAQ,EAAK,IAIzF8lF,UAAUviF,EAAcsG,GAC3B,OAAO,IAAI/J,SAAQ,CAACC,EAASC,KACzB,IAAKuD,EACD,OAAOvD,EAAO,IAAI0F,MAAM,yBAG5B,MAAM4gB,EAAoC,CACtC/iB,OACAf,KAAM,SACNc,SAJJuG,EAAUA,GAAW,IAIAvG,SAAW,GAC5Bg4B,SAAUzxB,EAAQyxB,UAAY,IAElC38B,KAAKgmF,qBAAqB,0BAA2Br+D,EAASvmB,EAASC,GAAQ,EAAK,IAIrF+lF,OAAOxiF,EAAcD,EAAeuG,GACvC,OAAO,IAAI/J,SAAQ,CAACC,EAASC,KACzB,IAAKuD,EACD,OAAOvD,EAAO,IAAI0F,MAAM,yBAE5B,MAAM4gB,EAAoC,CACtC/iB,OACAf,KAAM,SACNc,aACGuG,GAEPlL,KAAKgmF,qBAAqB,uBAAwBr+D,EAASvmB,EAASC,GAAQ,EAAK,IAIlF+rD,yBAEH,IAAI/E,SADiBroD,KAAKwO,OAAO6nC,IAAIjnB,OAAO,2BAA4B,GAAI,OAAQ,CAAEmN,wBAAyB,QAC3FO,SAASurB,OAC7B,GAAKA,EAOL,OAJKroD,KAAKylF,eAENp9B,EAASroD,KAAKquD,OAAOplC,MAAMy8D,GAAMA,EAAE9gF,OAASyjD,EAAOzjD,MAAQ8gF,EAAE7hF,OAASwkD,EAAOxkD,QAE1EwkD,EAGJ8e,QAAQr1D,GACX,MAAMlQ,EAAS5B,KAAKsR,UAAUO,IAAI,QAASC,GAU3C,OARI60E,GAAM5kE,IAAIphB,OAAS,GACnBgmF,GAAM5kE,IAAIzb,SAAS+hD,IACf,IACIv2C,EAASu2C,GACX,MAAOl2C,QAIVvQ,EAGJq7D,UAAUnrD,GACb,OAAO9R,KAAKsR,UAAUO,IAAI,UAAWC,GAGlCkrD,UAAUlrD,GACb,OAAO9R,KAAKsR,UAAUO,IAAI,UAAWC,GAGlCu1E,WAAWv1E,GACd,OAAO9R,KAAKsR,UAAUO,IAAI,WAAYC,GAGnCw1E,UAAUx1E,GACb,OAAO9R,KAAKsR,UAAUO,IAAI,UAAWC,GAGlC+sE,QAAQ/sE,GACX,OAAO9R,KAAK45B,OAAOilD,QAAQ/sE,GAGxB4yE,gBAAgB5yE,GACnB,OAAO9R,KAAK2gB,SAAS+jE,gBAAgB5yE,GAGlCy1E,0BAA0B5iF,GAC7B,OAAO,IAAIxD,SAAQ,CAACC,EAASC,KACzB,GAAIsD,GAA8B,iBAAZA,EAClB,OAAOtD,EAAO,IAAI0F,MAAM,8BAG5B,MAAM4gB,EAA+C,CACjDhjB,QAFJA,EAAUA,QAAAA,EAAW,IAIrB3E,KAAKgmF,qBAAqB,uCAAwCr+D,EAASvmB,EAASC,GAAQ,EAAK,IAIlGmmF,qBAAqB7iF,GACxB,OAAO,IAAIxD,SAAQ,CAACC,EAASC,KACzB,GAAIsD,GAA8B,iBAAZA,EAClB,OAAOtD,EAAO,IAAI0F,MAAM,8BAG5B,MAAM4gB,EAA+C,CACjDhjB,QAFJA,EAAUA,QAAAA,EAAW,IAIrB3E,KAAKgmF,qBAAqB,+BAAgCr+D,EAASvmB,EAASC,GAAQ,EAAK,IAI1F+rD,UAAUxoD,EAAcf,GAC3B,MAAM4F,EAAWzJ,KAAKquD,OAAOplC,MAAMy8D,GAAMA,EAAE9gF,OAASA,GAAQ8gF,EAAE7hF,OAASA,IACvE,IAAK4F,EACD,MAAM,IAAI1C,MAAM,gCAAgCnC,cAAiBf,KAErE,OAAO4F,EAGJ2jD,aAAavpD,GAEhB,OADiB7D,KAAKquD,OAAO3kD,QAAQg8E,GAAM7hF,IAAS6hF,EAAE7hF,OAIlD4hF,aACJ,MAA4B,SAArBzlF,KAAKwO,OAAO62C,KAGfwgC,oBACJ,GAAI7lF,KAAKylF,aACL,MAAM1+E,MAAM,yDAIZi/E,qBAAqBrhD,EAAoBjB,EAAkBtiC,EAAgCC,EAA4BomF,GAC3H,IACIC,EADAC,EAAsBF,EAG1B,MAAMxnE,EAAQrE,KACd8nB,EAAKzjB,MAAQA,EAEb,MAAM2nE,EAAe,KACbD,GAAuBD,GACvBtmF,EAAQsmF,IAIXD,GACDznF,KAAK45B,OAAOotC,QAAQ/mD,GACfne,MAAK,KACF6lF,GAAsB,EACtBC,GAAc,IAEjB/9E,OAAOsI,IACJ9Q,EAAO8Q,EAAI,IAiBvBnS,KAAKwO,OAAO6nC,IAAIjnB,OAAOuV,EAAYjB,EAAM,OAAQ,CAAEnH,wBAAyB,OACvEz6B,MAdoBF,GAChBA,EAAOk7B,SAIRl7B,EAAOk7B,SAAStkB,QAAsC,YAA3B5W,EAAOk7B,SAAStkB,QAAmD,mBAA3B5W,EAAOk7B,SAAStkB,OAC5EnX,EAAO,IAAI0F,MAAMnF,EAAOk7B,YAGnC4qD,EAAY9lF,EAAOk7B,cACnB8qD,KARWvmF,EAAO,IAAI0F,MAAM,yBAA2B49B,MAatD96B,OAAOsI,GAAa9Q,EAAO8Q,KAG5B00E,gBAAgBh1D,GACpB,OAAKA,EAIEryB,OAAO2E,KAAK0tB,GAAKxjB,KAAK/K,GAAMuuB,EAAIvuB,KAH5B,UC/cEukF,GAWjB5nF,YAAoBo2C,EAAiC/kC,GAAjCtR,SAAAq2C,EAAiCr2C,eAAAsR,EAEjDtR,KAAK4tB,MAAQ,IAAIzsB,SAAc,CAACC,EAASC,KACrCrB,KAAK8nF,aAAe1mF,EACpBpB,KAAK+nF,YAAc1mF,CAAM,IAG7BrB,KAAK2lF,YAAc,IAAIxkF,SAAc,CAACC,EAASC,KAC3CrB,KAAKgoF,mBAAqB5mF,EAC1BpB,KAAKioF,kBAAoB5mF,CAAM,IAIhC60B,UAAUgyD,GACb,MAAMC,EAAat2D,GACR7xB,KAAK6mF,gBAAgBh1D,GAAKxjB,KAAK/N,GAAM2kF,GAAmB3kF,KAI9DN,KAAKooF,4BAWNpoF,KAAKq2C,IAAIngB,UAAU,wBAAyB,CAAE8D,cAAe,MACxDl4B,MAAM4gB,IACHA,EAAK2oB,QAAQ3H,IACT,MAAMnvB,EAAOmvB,EAAKnvB,KACdA,EAAK8zE,YACLroF,KAAKgoF,qBAGThoF,KAAKsoF,WAAWH,EAAU5zE,EAAKg0E,gBAC/BvoF,KAAKwoF,cAAcL,EAAU5zE,EAAKk0E,kBAClCzoF,KAAK0oF,cAAcP,EAAU5zE,EAAKo0E,kBAClC3oF,KAAK4oF,cAAcT,EAAU5zE,EAAKs0E,kBAClC7oF,KAAK8oF,eAAeX,EAAU5zE,EAAKw0E,mBACnC/oF,KAAKsR,UAAUkB,QAAQ,cAAe+B,EAAK,IAG/CmO,EAAKipB,UAAUx5B,IACX,MAAM9L,EAAM,8CAAgD8L,EAC5DnS,KAAK+nF,YAAY1hF,GACjBrG,KAAKioF,kBAAkB5hF,EAAI,IAG/BrG,KAAK8nF,cAAc,IAEtBj+E,OAAOsI,IACJ,MAAM9L,EAAM,4DAA8D8L,EAC1EnS,KAAK+nF,YAAY1hF,GACjBrG,KAAKioF,kBAAkB5hF,EAAI,KApC/B6hF,GACAloF,KAAK8nF,eAITv6E,YAAW,KACPvN,KAAKk2B,WAAU,EAAK,GACrB,MAkCJ2oD,QAAQ/sE,GACX,OAAO9R,KAAKsR,UAAUO,IAAI,cAAeC,GAGtCk1D,QAAQ/mD,EAAe4D,GAI1B,OAHKA,IACDA,EAAU,KAEP,IAAI1iB,SAAc,CAACC,EAASC,KAC/B,IAAIQ,GAAO,EACX,MAAMy0B,EAAct2B,KAAK6+E,SAAS+B,IAC1BA,EAAYoI,QAAU/oE,IACtBpe,GAAO,EACPy0B,IACAl1B,QAIRmM,YAAW,KACF1L,GACDR,EAAO,eAEZwiB,EAAQ,IAIXukE,4BACJ,IACI,OAG2C,IAHpCpoF,KAAKq2C,IACPnnB,UACA7gB,KAAK9H,GAAMA,EAAE3B,OACbqW,QAAQ,yBACf,MAAOvZ,GACL,OAAO,GAIP4mF,WAAWW,GACVA,GAILA,EAAY3iF,SAAS4iF,IACjB,MAAM7gC,EAAS,IAAIg9B,GAAW6D,GAC9BvC,GAAM90E,IAAIw2C,GACVroD,KAAKsR,UAAUkB,QAAQ,QAAS61C,EAAO,IAIvCmgC,cAAcW,GACbA,GAGLA,EAAe7iF,SAAS8iF,IACpBzC,GAAMzC,aAAamF,IAAoBrpF,KAAKspF,eAAeD,EAAgBD,KAE3EppF,KAAKsR,UAAUkB,QAAQ,UAAW42E,EAAc,IAIhDV,cAAca,GACbA,GAILA,EAAejjF,SAASkjF,IAEpB7C,GAAMzC,aAAamF,IAAoBrpF,KAAKspF,eAAeD,EAAgBG,KAC3E7C,GAAM90E,IAAI,IAAIwzE,GAAWmE,IAEzBxpF,KAAKsR,UAAUkB,QAAQ,UAAWg3E,EAAc,IAKhDZ,cAAca,GACbA,GAILA,EAAenjF,SAASojF,IACpB,MAAML,EAAiB1C,GAAMrC,OAAO9kD,GAAYx/B,KAAKspF,eAAe9pD,EAAS,CAAE37B,KAAM6lF,EAAc7lF,KAAMe,KAAM8kF,EAAczC,YAE7H,IAAKoC,EACD,MAAMtiF,MAAM,sDAAwD2iF,EAAc7lF,KAAO,aAAe6lF,EAAczC,SAG1HoC,EAAezkF,KAAO8kF,EAAc1C,QAEpChnF,KAAKsR,UAAUkB,QAAQ,UAAW62E,EAAe,IAIjDC,eAAeK,EAAyCC,GAC5D,OAAOD,EAAQ/kF,OAASglF,EAAQhlF,MAAQ+kF,EAAQ9lF,OAAS+lF,EAAQ/lF,KAG7DgjF,gBAAgBh1D,GACpB,OAAKA,EAIEryB,OAAO2E,KAAK0tB,GAAKxjB,KAAK/K,GAAMuuB,EAAIvuB,KAH5B,GAMPwlF,eAAee,GAEdA,GAILA,EAAgBvjF,SAASwiF,IACrB,MAAMO,EAAiB1C,GAAMrC,OAAO9kD,GAAYx/B,KAAKspF,eAAe9pD,EAAS,CAAE37B,KAAMilF,EAAejlF,KAAMe,KAAMkkF,EAAelkF,SAC/H5E,KAAKsR,UAAUkB,QAAQ,WAAY62E,EAAe,iBChMtC76E,GAEpB,IAAKA,EAAO6nC,IACR,MAAMtvC,MAAM,0BAGhB,IAAKyH,EAAO0E,OACR,MAAMnM,MAAM,6BAIhByH,EAAO62C,KAAO72C,EAAO62C,MAAQ,OAE7B,MAAMnyC,EAAS1E,EAAO0E,OAChB5B,EAA8ByvE,KAEpC,IAAI+I,EAQJ,OANIt7E,EAAO62C,KACPykC,EAAY,IAAIjC,GAAUr5E,EAAO6nC,IAAK/kC,GAKnC,IAAIw1E,GAAQt4E,EAAQs7E,EAAWx4E,EAAW4B,EACrD,OCvBqB62E,GAIjB9pF,YACYg9C,EACArpB,GADA5zB,UAAAi9C,EACAj9C,aAAA4zB,EALJ5zB,eAA8BsmE,KAC9BtmE,kBAAc,EASfA,SAAMotD,gBACcptD,KAAKgqF,OAAkCC,GAAeC,OAAQ,KACrE77E,IAAIrO,KAAKmqF,iBAGtBnqF,SAAMotD,MAAOlkD,IAChB,MAAMy+D,QAAgB3nE,KAAKgqF,OAAgCC,GAAetpC,IAAK,CAAEz3C,OACjF,OAAOlJ,KAAKmqF,gBAAgBxiB,EAAQ,EAGjC3nE,gBAAaotD,gBACOptD,KAAK+hB,OAAOkH,MAAM3pB,GAAMA,EAAE8qF,YAS9CpqF,aAAUotD,MAAOliD,SACKlL,KAAKgqF,OAAeC,GAAeI,QAAS,IAAKn/E,IAIvElL,gBAAaotD,MAAOliD,SACGlL,KAAKgqF,OAA0BC,GAAeK,WAAY,IAAKp/E,IAItFlL,sBAAmBotD,eACFptD,KAAKgqF,OAA8BC,GAAeM,kBASlEvqF,YAASotD,MAAUh8B,EAAiBlmB,WAETlL,KAAKi9C,KAAK7tB,OAxDvB,uBAwDiD,CAAElkB,QAAS,IAAKA,GAAWkmB,aACtE0L,SAASvoB,KAG7BvU,qBAAmBwqF,IACvB,MAAMC,EAAmB,IAClBD,EACH/Y,QAAUwJ,GAAsBj7E,KAAKyxE,QAAQ,CAAEvoE,GAAIshF,EAASthF,GAAI+xE,UAE9DyP,EAAgBD,EAAiBE,SAGvC,OAFAD,EAAch4D,EAAIg4D,EAAc/8D,KAChC+8D,EAAcxoF,EAAIuoF,EAAiBE,SAASnkE,IACrCikE,CAAgB,EAvCpBlV,cAAcrsE,GAEjB,OADgBlJ,KAAKgqF,OAAgCC,GAAeW,cAAe,CAAE1hF,OAmBlF2hF,iBAAiBtuC,GAEpB,OADAv8C,KAAKsjC,WACEtjC,KAAK4W,UAAU/E,IAAI,qBAAsB0qC,GAoB5CjZ,WACAtjC,KAAKkmE,cAGTlmE,KAAKkmE,aAAc,EACnBlmE,KAAKi9C,KAAK3Z,SA3EQ,wBA2EoB,CAACI,EAAMyiC,KACzC,MAAM5+C,EAAQmc,EAAKnc,MACbhT,EAAOmvB,EAAKnvB,KAClB,GACS,oBADDgT,EAEAvnB,KAAK4W,UAAUpE,QAAQ,qBAAsB+B,EAAK8yD,SAASh5D,IAAIrO,KAAKmqF,uBAGpEnqF,KAAK4zB,QAAQ9V,KAAK,mBAAmByJ,UASzD,IAAK0iE,GC/FL,IAAIj7D,GACA9H,GA6CGkmC,eAAe09B,GAAc7X,EAAkB/pE,GAClD8lB,GAAQI,OAAO,wBAAyB,CACpC27D,KAAM7hF,QAAAA,EAAMge,GACZkK,QAAS,gBACT7c,KAAM,CAAEy2E,WAAY/X,IAE5B,ED2CA,SAAKgX,GACDA,oBACAA,0BACAA,kBACAA,YACAA,gCACAA,qCACH,CAPD,CAAKA,KAAAA,QEhGL,MAAMgB,GAAiB,gBACjBC,GAAmB,yBAEZC,GAITlrF,YAAoBo0C,GAAAr0C,cAAAq0C,EAGbne,UAAUpkB,GACb9R,KAAK8R,SAAWA,EAGbs5E,aAAaxmF,EAAckN,GAC9B,IAAK9R,KAAKqrF,UAAUzmF,GAChB,OAAOzD,QAAQE,OAAO,IAAI0F,MAAM,sBAAsBnC,qBAG1D,MAAMiwB,EAAc70B,KAAKsrF,kBAAkB1mF,GAE3C,OAAO5E,KAAKq0C,SAASne,UAAUrB,GAAa,CAACtgB,EAAMnS,EAAGrC,EAAIwrF,EAAKr0D,KAC3DplB,EAASyC,EAAKA,KAAMA,EAAM2iB,eAAAA,EAAWxB,UAAU,IAKhD03B,oBAAoBxoD,GACvB5E,KAAKs2B,cACL,MAAMzB,EAAc70B,KAAKsrF,kBAAkB1mF,GAC3C5E,KAAKunC,sBAAwBvnC,KAAKq0C,SAASne,UAAUrB,GAAa,CAACtgB,EAAMnS,EAAGrC,EAAIwrF,EAAKr0D,KAC7El3B,KAAK8R,UACL9R,KAAK8R,SAASyC,EAAKA,KAAMA,EAAM2iB,eAAAA,EAAWxB,cAK/C3X,QACC/d,KAAK8R,UACL9R,KAAK8R,SAAS,QAAIxG,GAEtBtL,KAAKs2B,cAGFvU,MAIH,OAHqB/hB,KAAKq0C,SAAStyB,MACMrY,QAAQmrB,GAAgBA,EAAY22D,WAAWP,MAC/C58E,KAAKo9E,GAAuBA,EAAmB12E,OAAOk2E,GAAetqF,UAI3G+qF,eAAe9mF,GAClB,OAAO,IAAIzD,SAAQ,CAACC,EAASC,KACzB,IAAKrB,KAAKqrF,UAAUzmF,GAChB,OAAOvD,EAAO,IAAI0F,MAAM,wBAAwBnC,qBAGpD,MAAMiwB,EAAc70B,KAAKsrF,kBAAkB1mF,GAE3C5E,KAAKq0C,SAASne,UAAUrB,GAActgB,IAClC,GAAIA,EAAqB,iBAAG,CACxB,MAAMo3E,iBAAEA,KAAqBC,GAASr3E,EAEtCnT,EAAQwqF,GAGZxqF,EAAQmT,EAAK,IACdzS,MAAMylC,GAAoBA,KAAkB,IAIhDskD,cAAcjnF,EAAc2P,GAC/B,MAAMsgB,EAAc70B,KAAKsrF,kBAAkB1mF,GAC3C,OAAO5E,KAAKq0C,SAAS7sC,OAAOqtB,EAAatgB,GAGtCu3E,WAAWlnF,EAAc2P,GAC5B,MAAMsgB,EAAc70B,KAAKsrF,kBAAkB1mF,GACrCmnF,EAAW/rF,KAAKgsF,YAAYz3E,GAElC,GAAIvU,KAAKq0C,SAASze,iBAAkB,CAChC,MAAME,EAA0Ct2B,OAAO2E,KAAKoQ,GAAMlG,KAAK/J,IAC5D,CACHQ,KAAM,QAAUR,EAChB/C,MAAOgT,EAAKjQ,OAQpB,OAJIynF,GACAj2D,EAAW5yB,KAAK,CAAE4B,KAAMomF,GAAkB3pF,MAAOwqF,IAG9C/rF,KAAKq0C,SAASxe,SAAShB,EAAaiB,GAO3C,OALIi2D,IACAx3E,EAAqB,iBAAIw3E,GAItB/rF,KAAKq0C,SAAS7sC,OAAOqtB,EAAa,CAAEtgB,SAI5C82E,UAAUzmF,GACb,OAAO5E,KAAK+hB,MAAMihB,MAAMipD,GAAgBA,IAAgBrnF,IAGpD0xB,cACAt2B,KAAKunC,iBACLvnC,KAAKunC,kBAIL+jD,kBAAkB1mF,GACtB,OAAOqmF,GAAiBrmF,EAGpBonF,YAAYz3E,GAChB,MAAM23E,EAAe1sF,OAAO2E,KAAKoQ,GAAM7K,QAAQpF,GAAyC,IAAzBA,EAAI2W,QAAQ,WAE3E,GAA4B,IAAxBixE,EAAavrF,OAAjB,CAIA,GAAIurF,EAAavrF,OAAS,EACtB,MAAM,IAAIoG,MAAM,2DAGpB,OAAOmlF,EAAa,GAAG7yE,MAAM,KAAK5S,MAAM,GAAG1B,KAAK,aC7H3ConF,GAQTlsF,YAAoBmsF,EAAyCp9D,EAAqCyqB,EAA8CvmC,GAA5HlT,YAAAosF,EAAyCpsF,aAAAgvB,EAAqChvB,gBAAAy5C,EAA8Cz5C,YAAAkT,EAPxIlT,aAAU,OACVA,gBAAa,UACbA,oBAAgB,EAEhBA,cAA6B64D,KAIjC74D,KAAKosF,OAAOl2D,UAAUl2B,KAAKotB,QAAQlL,KAAKliB,OAElB,oBAAXuM,aAAqD,IAApBA,OAAOO,WAC/C9M,KAAKo1B,eAAkB7oB,OAAOO,SAAiBu/E,eAC3CrsF,KAAKo1B,gBACLp1B,KAAKssF,qBAAqBtsF,KAAKo1B,iBAKpCc,UAAUpkB,GACb,GAAwB,mBAAbA,EACP,MAAM,IAAI/K,MAAM,8CAEpB,OAAO/G,KAAKmT,SAAStB,IAAI7R,KAAKusF,QAASz6E,GAGpCs7C,mBAAmBxoD,EAAckN,GACpC,GAAoB,iBAATlN,EACP,MAAM,IAAImC,MAAM,wCAEpB,GAAwB,mBAAb+K,EACP,MAAM,IAAI/K,MAAM,8CAGpB,aAD8B/G,KAAKosF,OAAOhB,aAAaxmF,EAAMkN,GAI1Ds7C,cAAc74C,EAAc3P,GAC/B,GAAoB,iBAAT2P,EACP,MAAM,IAAIxN,MAAM,yCAGpB,GAAInC,EAAM,CACN,GAAoB,iBAATA,EACP,MAAM,IAAImC,MAAM,wCAGpB,OAAK/G,KAAKosF,OAAOf,UAAUzmF,GAIpB5E,KAAKosF,OAAON,WAAWlnF,EAAM2P,GAHzBpT,QAAQE,OAAO,IAAI0F,MAAM,wBAAwBnC,qBAMhE,IAAK5E,KAAKo1B,eACN,MAAM,IAAIruB,MAAM,8BAEpB,OAAO/G,KAAKosF,OAAON,WAAW9rF,KAAKo1B,eAAgB7gB,GAGhDwN,MACH,MAAMyqE,EAAexsF,KAAKosF,OAAOrqE,MACjC,OAAO5gB,QAAQC,QAAQorF,GAGpBp/B,aACH,MAAMo/B,QAAqBxsF,KAAK+hB,MAEhC,aAD8B5gB,QAAQ4gB,IAAIyqE,EAAan+E,KAAK49E,GAAgBjsF,KAAKmH,IAAI8kF,MAIlF9kF,IAAIvC,GACP,MAAoB,iBAATA,EACAzD,QAAQE,OAAO,IAAI0F,MAAM,iDAG7B/G,KAAKosF,OAAOV,eAAe9mF,GAI/B6nF,QACH,OAAKzsF,KAAKo1B,eAGHp1B,KAAKmH,IAAInH,KAAKo1B,gBAFVj0B,QAAQC,aAAQkK,GAKxB8hD,WAAWxoD,EAAcsiB,GAC5B,OAAIA,EACO4jE,GAAclmF,EAAMsiB,GAExBlnB,KAAK0sF,SAAS9nF,GAGlBwoD,2BAA2BxoD,GAC9B,OAAO5E,KAAK0sF,SAAS9nF,GAAM,GAGxBmZ,MAAMmJ,GACT,OAAIA,EACO4jE,QAAcx/E,EAAW4b,GAE7BlnB,KAAK2sF,YAGTC,wBACH,OAAO5sF,KAAK2sF,WAAU,GAGnBntD,UACH,OAAOx/B,KAAKo1B,eAGT+vB,KACH,OAAOnlD,KAAKw/B,UAGTqtD,QAAQ/6E,GACX,GAAwB,mBAAbA,EACP,MAAM,IAAI/K,MAAM,8CAGpB,OAAO/G,KAAKmT,SAAStB,IAAI7R,KAAK8sF,WAAYh7E,GAGvCkrD,UAAUlrD,GACb,OAAO9R,KAAK6sF,QAAQ/6E,GAGjBs7C,UAAUp2C,GACb,GAAoB,iBAATA,EACP,MAAM,IAAIjQ,MAAM,yCAEpB,QAAyB,IAAdiQ,EAAKpS,KACZ,MAAM,IAAImC,MAAM,yBAEpB,GAAyB,iBAAdiQ,EAAKpS,KACZ,MAAM,IAAImC,MAAM,6CAEpB,QAAyB,IAAdiQ,EAAK64B,KACZ,MAAM,IAAI9oC,MAAM,yBAEpB,GAAyB,iBAAdiQ,EAAK64B,KACZ,MAAM,IAAI9oC,MAAM,8CAEpB,QAA+B,IAApBiQ,EAAK64B,KAAK0P,MACjB,MAAM,IAAIx4C,MAAM,+BAEpB,GAA+B,iBAApBiQ,EAAK64B,KAAK0P,MACjB,MAAM,IAAIx4C,MAAM,mDAGpB,MAAMpC,EAA0C,CAC5CC,KAAMoS,EAAKpS,KACXirC,KAAM74B,EAAK64B,MAAQ,GACnBt7B,KAAMyC,EAAKzC,MAAQ,IAMvB,aAFMvU,KAAKosF,OAAOP,cAAc70E,EAAKpS,KAAMD,GAEpCA,EAGJyoD,0BAA0B6lB,GAE7B,aAD0BjzE,KAAKgzE,uBAAuB,CAAE3J,SAAU,CAAC4J,MAChD5kE,KAAK0sC,GAAMA,EAAExuC,SAG7B6gD,6BAA6B1jD,SAChC,IACI,MAAMsN,QAAahX,KAAKgvB,QAAQI,OAAuF,wBAAyB,CAAEgC,QAAS,kBAAmB7c,KAAM,CAAE7K,YAChL8vC,EAAUx5C,KAAKy5C,aACrB,aAAIziC,eAAAA,EAAM8lB,+BAAU0c,QAChB,OAAOxiC,EAAK8lB,SAAS0c,QAAQnrC,KAAK8wE,IAEvB,CACH5yE,OAFWitC,EAAQqqC,SAAS1E,EAAWj4D,UAGvC+rD,QAASkM,EAAWlM,QACpB36D,YAAa6mE,EAAW7mE,gBAItC,MAAOy0E,GACL/sF,KAAKkT,OAAOtB,MAAM,wFAAyFm7E,GAE/G,MAAO,GAGH3/D,QAAQ7Y,EAAc5P,EAAyC+wB,GACnE11B,KAAKmT,SAASX,QAAQxS,KAAKusF,QAASh4E,EAAM5P,EAAS+wB,GAG/C03B,eAAexoD,EAAcooF,GAA0B,GAC3D,GAAoB,iBAATpoF,EACP,MAAM,IAAImC,MAAM,gDAGpB,IAAK/G,KAAKitF,eAAiBroF,IAAS5E,KAAKo1B,eAErC,OAEJp1B,KAAKitF,eAAgB,EAGrB,MAAMC,EAAoBjB,GACDjsF,KAAKosF,OAAOrqE,MACb7P,SAAS+5E,GAIjC,IAAKiB,EAAiBtoF,GAAO,CACzB,MAAMuoF,EAAuB,IAAIhsF,SAAc,CAACC,EAASC,KACrD,IAAI6qC,EAGJ,MAAMkhD,EAAa3/E,aAAY,KACvBy/E,EAAiBtoF,KACjBkd,aAAaoqB,GACb9jB,cAAcglE,GACdhsF,OAEL,KAEH8qC,EAAY3+B,YAAW,KACnB6a,cAAcglE,GAEP/rF,EAAO,IAAI0F,MAAM,wBAAwBnC,uBACjD,IAAK,UAGNuoF,EAGVntF,KAAKo1B,eAAiBxwB,QAChB5E,KAAKosF,OAAOtB,cAAclmF,GAC5BooF,GACAlC,GAAclmF,GAElB5E,KAAKmT,SAASX,QAAQxS,KAAK8sF,WAAYloF,GAGnC+nF,UAAUK,GAAiB,GAO/B,OANAhtF,KAAKo1B,oBAAiB9pB,EACtBtL,KAAKmT,SAASX,QAAQxS,KAAK8sF,gBAAYxhF,GACvCtL,KAAKosF,OAAOruE,QACRivE,GACAlC,KAEG3pF,QAAQC,oBCzPPolD,GAAQnS,EAA+BgC,EAAqBoD,EAAsCvmC,GAC9G,MAAMm6E,EAAiB,IAAIlC,GAAwB92C,GAC7Cg1B,EAAW,IAAI8iB,GAAakB,EAAgBh3C,EAAKoD,EAAYvmC,GAInE,OHLGk6C,eAAwBkgC,EAAgCjkB,GAC3Dr6C,GAAUs+D,EAEY,oBAAX/gF,QACHA,OAAOO,WACPoa,GAAW3a,OAAOO,SAASoa,UAI9BA,WAKC8H,GAAQsU,SAAS,wBAAyBI,IAC5C,MAAMtS,EAAUsS,EAAKtS,QACrB,IAAKA,EACD,MAAM,IAAIrqB,MAAM,4BAEpB,GAAgB,SAAZqqB,EAAJ,CASA,GAAgB,UAAZA,EAAJ,CAIA,GAAgB,QAAZA,EAEA,MAAO,CAAEloB,GADEmgE,EAAS7pC,WAGxB,MAAM,IAAIz4B,MAAM,mBAAmBqqB,KAP/Bi4C,EAASujB,4BAVb,CACI,MAAM1jF,EAAKw6B,EAAKuvC,QAChB,IAAK/pE,EACD,MAAM,IAAInC,MAAM,uBAGpBsiE,EAASijB,qBAAqBpjF,GAWW,IAIjD8lB,GAAQI,OAAO,wBAAyB,CAAE27D,KAAM7jE,GAAUlX,SAAUgf,GAAQhf,SAASA,WACzF,CGtCIu9E,CAASl3C,EAAKgzB,GAEP,CACHnzC,UAAWmzC,EAASnzC,UAAUhU,KAAKmnD,GACnC+hB,aAAc/hB,EAAS+hB,aAAalpE,KAAKmnD,GACzCr4B,QAASq4B,EAASr4B,QAAQ9uB,KAAKmnD,GAC/BtnD,IAAKsnD,EAAStnD,IAAIG,KAAKmnD,GACvBhb,KAAMgb,EAAShb,KAAKnsC,KAAKmnD,GACzBliE,IAAKkiE,EAASliE,IAAI+a,KAAKmnD,GACvBtkE,KAAMskE,EAAStkE,KAAKmd,KAAKmnD,GACzBtrD,MAAOsrD,EAAStrD,MAAMmE,KAAKmnD,GAE3B7pC,QAAS6pC,EAAS7pC,QAAQtd,KAAKmnD,GAC/BlkB,GAAIkkB,EAASlkB,GAAGjjC,KAAKmnD,GAErBwjB,QAASxjB,EAASwjB,QAAQ3qE,KAAKmnD,GAC/BrM,UAAWqM,EAASrM,UAAU96C,KAAKmnD,GAEnCx3D,IAAKw3D,EAASx3D,IAAIqQ,KAAKmnD,GACvBmkB,oBAAqBnkB,EAASmkB,oBAAoBtrE,KAAKmnD,GACvD2J,uBAAwB3J,EAAS2J,uBAAuB9wD,KAAKmnD,GAC7DojB,MAAOpjB,EAASojB,MAAMvqE,KAAKmnD,GAC3Bz7C,MAAO,IAAOymB,EAAiBzmB,QAEvC,CC9BA,MAAM6/D,GAAgB,4BAOTC,GAMTztF,YAAoBo2C,GAAAr2C,SAAAq2C,EAJZr2C,cAA6B64D,KAC7B74D,kBAAc,EACdA,aAAU,IAAIoyB,IAKfg7B,eAAep2C,EAA0ClF,GAC5D,QAAoB,IAATkF,EACP,MAAM,IAAIjQ,MAAM,4BAGpB,GAAoB,iBAATiQ,EACPA,EAAO,CACH22E,OAAQ32E,OAET,CACH,IAAKA,EAAK22E,OACN,MAAM,IAAI5mF,MAAM,mCAGpBiQ,EAAO,CACH22E,OAAQ32E,EAAK22E,OACbjpF,YAAasS,EAAKtS,aAI1B,MAAMkpF,EAAY5tF,KAAK6tF,aAAa72E,EAAK22E,QACzC,GAAI3tF,KAAK8tF,QAAQ71E,IAAI21E,GACjB,MAAM,IAAI7mF,MAAM,gBAAgB6mF,wBAIhC5tF,KAAK+tF,cACL/tF,KAAK+tF,aAAc,QACb/tF,KAAKguF,2BAGfhuF,KAAKmT,SAAStB,IAAI+7E,EAAW97E,SAGvB9R,KAAKq2C,IAAIjnB,OAAOq+D,GAAe,CAAEr8D,QA/CvB,WA+CiDu8D,OAAQC,EAAWlpF,YAAasS,EAAKtS,cAEtG1E,KAAK8tF,QAAQ37D,IAAIy7D,EAAW52E,GAGzBo2C,iBAAiBugC,GACpB,QAAsB,IAAXA,EACP,MAAM,IAAI5mF,MAAM,4BAGpB,GAAsB,iBAAX4mF,EACP,MAAM,IAAI5mF,MAAM,mCAGpB,MAAM6mF,EAAY5tF,KAAK6tF,aAAaF,SAC9B3tF,KAAKq2C,IAAIjnB,OAAOq+D,GAAe,CAAEr8D,QA7DrB,aA6DiDu8D,OAAQC,IAC3E5tF,KAAK8tF,QAAQ7nB,OAAO2nB,GACpB5tF,KAAKmT,SAASN,SAAS+6E,GAGpBxgC,4BACGptD,KAAKq2C,IAAIjnB,OAAOq+D,GAAe,CAAEr8D,QAlElB,kBAmErBpxB,KAAK8tF,QAAQl7E,QACb5S,KAAKmT,SAASP,QAOXq7E,aAAaN,GAChB,MAAMC,EAAY5tF,KAAK6tF,aAAaF,GACpC,OAAO3tF,KAAK8tF,QAAQ71E,IAAI21E,GAGpBI,0BACJhuF,KAAKq2C,IAAI/S,SArFI,sBAqFoBI,IAG7B,MAAMkqD,EAAYlqD,EAAKp/B,IAAI6H,cACrB6K,EAAOhX,KAAK8tF,QAAQ3mF,IAAIymF,GAC9B5tF,KAAKmT,SAASX,QAAQo7E,EAAW52E,EAAK,IAItC62E,aAAaF,GACjB,GAAIA,EACA,OAAOA,EAAOnT,QAAQ,MAAO,IAAIruE,kCC5F7BjB,IAyBZ,SAASgjF,EAAgD3sF,EAAuB4sF,EAA+BC,GAG3G,GAAqB,kBAAV7sF,IAAwBA,EAC/B,OAIJ,MAAM8jD,EAAOgpC,EAAgB9sF,EAAO4sF,EAAaC,GAIjD,MAAqB,iBAAV7sF,GACPA,EAAM8jD,KAAOA,EACN9jD,GAGJ,CACH8jD,QAWR,SAASgpC,EAAgB9sF,EAAuB4sF,EAA+BC,GAE3E,MAAqB,iBAAV7sF,EAEA8sF,EAAgB9sF,EAAM8jD,KAAM8oC,EAAaC,GAAY,QACpC,IAAV7sF,EAEa,kBAAhB4sF,GAA8BA,EAI9BA,EAAc,QAFrB,EAIoB,kBAAV5sF,EAEVA,QAEsB+J,IAAb8iF,EAA0BD,EAAcC,GAAY,QAG7D,EAID7sF,EAAQ,GAUnB,MAAO,CACH6iF,QAAS8J,EAAqChjF,EAAQk5E,QAH/B,QAIvBjvC,WAAY+4C,EAAwChjF,EAAQiqC,WANlC,iCAO1BgsB,WAAY+sB,EAAwChjF,EAAQi2D,YAVzC,EACI,aAUvB3nB,QAAS00C,EAAsChjF,EAAQsuC,SAAS,GAChE6vB,SAAU6kB,EAAsChjF,EAAQm+D,WAAY,GAAO,GAC3EhC,SAAU6mB,EAAsChjF,EAAQm8D,UAAU,GACrE,QCpGQinB,GAyBTruF,YAA0BiL,GAAAlL,aAAAkL,EAFlBlL,eAA8B+gF,KAGlC/gF,KAAK2kE,QAAUz5D,EAAQy5D,QACvB3kE,KAAKgC,KAAOkJ,EAAQlJ,KACpBhC,KAAKuuF,MAAQrjF,EAAQqjF,MACrBvuF,KAAKuU,KAAOrJ,EAAQqJ,KACpBvU,KAAKwuF,IAAMtjF,EAAQsjF,IACnBxuF,KAAKy6D,KAAOvvD,EAAQuvD,KACpBz6D,KAAKyuF,MAAQvjF,EAAQujF,MACrBzuF,KAAK0uF,KAAOxjF,EAAQwjF,KACpB1uF,KAAK2uF,SAAWzjF,EAAQyjF,SACxB3uF,KAAK4uF,mBAAqB1jF,EAAQ0jF,mBAClC5uF,KAAKw8E,OAAStxE,EAAQsxE,OACtBx8E,KAAKyd,IAAMvS,EAAQuS,IACnBzd,KAAKiM,UAAYf,EAAQe,UACzBjM,KAAKqM,MAAQnB,EAAQmB,MAGlB0H,QACH,MAAM,IAAIhN,MAAM,2BAIb0F,iBAAiB5I,EAAWmuD,EAAe9mD,GAC9ClL,KAAKsR,UAAUO,IAAIhO,EAAMmuD,GAItB68B,oBAAoBhrF,EAAWmuD,EAAe9mD,IAG9C4jF,cAAcvnE,GAEjB,OADAvnB,KAAKsR,UAAUkB,QAAQ+U,EAAM1jB,KAAM0jB,IAC5B,SC1DFwnE,GACT9uF,YAAoB+uB,GAAAhvB,aAAAgvB,EAGbggE,SACH,OAAOhvF,KAAKgvB,QAAQI,OAAO,0BAExBmgD,OACH,OAAOvvE,KAAKgvB,QAAQI,OAAO,yBAA0B,CAAEmgD,MAAM,IAE1DC,OACH,OAAOxvE,KAAKgvB,QAAQI,OAAO,0BAExBqyB,YACH,MAAM,IAAI16C,MAAM,kCCTXkoF,GASThvF,YAAoB+uB,GAAAhvB,aAAAgvB,EANZhvB,wBAA6B,EAC7BA,yCAAsC,8BAC7BA,oBAAiB,6BAA+B4b,KACzD5b,YAAS,EACTA,mBAAsD,GAG1DA,KAAKkvF,MAAQ,IAAIH,GAAS//D,GAGnBmgE,iBACP,OAAO,EAGJ/hC,YAAYliD,eACf,IAAKA,EACD,MAAM,IAAInE,MAAM,yCAEpB,IAAKmE,EAAQmB,MACT,MAAM,IAAItF,MAAM,uCAEpB,IAAK/G,KAAKovF,kBAAmB,CACzB,MAAMC,EAAkB,GACxB,IAAK,IAAI98E,EA5BE,EA4BsBA,EAAQvS,KAAKmvF,WAAY58E,IACtD88E,EAAgBnsF,KACZlD,KAAKgvB,QAAQsU,SAAStjC,KAAKsvF,eAAiB,IAAM/8E,EAAOvS,KAAKuvF,yBAAyBrtE,KAAKliB,cAI9FmB,QAAQ4gB,IAAIstE,GAClBrvF,KAAKovF,mBAAoB,EAI7B,MAAMlmF,EAAKg2B,OAAOl/B,KAAKmoC,UACjBtkC,YAAOqH,EAAQrH,oBAAQ,eACvB2rF,EAAwC,CAC1CnjF,MAAOnB,EAAQmB,MACfxI,OACA4rF,mBAAUvkF,EAAQukF,wBAAY,OAC9B/qF,YAAawG,EAAQlJ,KACrB0tF,4BAA6B1vF,KAAKsvF,eAALtvF,KAC7B2kE,QAAS,GACTgrB,SAAUzmF,EACVkgB,OAAQle,EAAQke,QAGpB,GAAIle,EAAQy5D,QAAS,CACjB,MAAMirB,EAAe1kF,EAAQy5D,QAAQl+D,MAAM,EAAGzG,KAAKmvF,YAEnD,IAAI58E,EAvDO,EAwDX,IAAK,MAAM3B,KAAUg/E,EAAc,CAC/B,MAAMlsD,EAAqC,CACvCmsD,kBAAmB3mF,EACnB4mF,UAAWl/E,EAAOA,OAClBm/E,2BAAkBn/E,EAAOoe,8BAASvO,OAClCuvE,2BAAkBp/E,EAAOoe,8BAASljB,QAGhC6vC,EAAan8C,OAAO2E,KAAKu/B,GAAMr1B,KAAK/J,IAE/B,CACHM,KAAMN,EACN/C,MAAO,CACH0uF,YAJOvsD,EAAap/B,QAS1B4rF,EAA4C,CAC9CtrF,KAAM5E,KAAKsvF,eAAiB,IAAM/8E,EAClC7N,YAAakM,EAAOvE,MACpB21B,YAAapxB,EAAOvE,MACpBsvC,cAGJ6zC,EAAa7qB,QAAQzhE,KAAKgtF,GAC1B39E,KAWR,GAPIrH,EAAQuvD,OACR+0B,EAAaW,WAAaX,EAAaW,YAAc,GACrDX,EAAaW,WAAWjtF,KACpB,CAAEoB,IAAK,OAAQ/C,MAAO,CAAE0uF,YAAa/kF,EAAQuvD,SAIjDvvD,EAAQqJ,KAAM,CACdi7E,EAAaW,WAAaX,EAAaW,YAAc,GACrD,MAAMC,EAAetiF,KAAKC,UAAU7C,EAAQqJ,MAC5Ci7E,EAAaW,WAAWjtF,KACpB,CAAEoB,IAAK,OAAQ/C,MAAO,CAAE0uF,YAAaG,KAIV,iBAAxBllF,EAAQmlF,cACfb,EAAaW,WAAaX,EAAaW,YAAc,GACrDX,EAAaW,WAAWjtF,KACpB,CAAEoB,IAAK,cAAe/C,MAAO,CAAE0uF,YAAa/kF,EAAQmlF,YAAc,OAIvC,iBAAxBnlF,EAAQolF,cACfd,EAAaW,WAAaX,EAAaW,YAAc,GACrDX,EAAaW,WAAWjtF,KACpB,CAAEoB,IAAK,cAAe/C,MAAO,CAAE0uF,YAAa/kF,EAAQolF,YAAc,aAIpEtwF,KAAKgvB,QAAQI,OAAO,oCAAqC,CAAEogE,iBAEjE,MAAMe,EAAkB,IAAIjC,GAAmBpjF,GAE/C,OADAlL,KAAKwwF,cAActnF,GAAMqnF,EAClBA,EAGJnjC,gBAAgB1jD,GAEnB,aADqB1J,KAAKgvB,QAAQI,OAAO,2BAA4B1lB,IACvDozB,SAGXswB,kBAEH,aADqBptD,KAAKgvB,QAAQI,OAAO,6BAC3B0N,SAGXswB,gBAAgBliD,GACnB,IAAKA,GAAWvL,MAAMgG,QAAQuF,GAC1B,MAAM,IAAInE,MAAM,0CAGpB,GAAsC,IAAlCvH,OAAO0E,OAAOgH,GAASvK,OACvB,MAAM,IAAIoG,MAAM,4CAGpBvH,OAAO0E,OAAOgH,GAAS5E,SAAS/E,IAC5B,QAAqB+J,WAAV/J,GAAwC,kBAAVA,EACrC,MAAM,IAAIwF,MAAM,gDAKxB,aADqB/G,KAAKgvB,QAAQI,OAAOpvB,KAAKywF,oCAAqCvlF,IACrE4xB,SAGVyyD,yBAAyB7rD,GAC7B,GAAIA,EAAKmsD,kBAAmB,CAExB,MAAMh/E,EAAwC6yB,EACxCx6B,EAAK2H,EAAQg/E,kBACbL,EAAexvF,KAAKwwF,cAActnF,GACxC,IAAKsmF,EACD,OAIJ,MAAMjoE,EAA2C,CAC7C1jB,KAAM,WACN+M,OAAQC,EAAQi/E,WAGhBN,EAAakB,UACblB,EAAakB,SAASnpE,GAI1B,MACMopE,GADoBnB,EAAa7qB,SAAW,IAAI17C,MAAM3P,GAASA,EAAK1I,SAAWC,EAAQi/E,YACtD9gE,QACnC2hE,GACA3wF,KAAKgvB,QAAQI,OAAOuhE,EAAclwE,OAAQkwE,EAAcjwF,WAAa,GAAIiwF,EAAc7kF,QAAU,QAIrG0jF,EAAaV,cAAcvnE,QACxB,GAAImc,EAAK8rD,cAAgB9rD,EAAK8rD,aAAaoB,qBAAsB,CAEpE,MAAM1nF,EAAKw6B,EAAK8rD,aAAaoB,qBACvBpB,EAAexvF,KAAKwwF,cAActnF,GACxC,IAAKsmF,EACD,OAIJ,MAAMjoE,EAAQ,CAAE1jB,KAAM,WAClB2rF,EAAaqB,SACbrB,EAAaqB,QAAQtpE,GAIzB,MAAMupE,EAAetB,EAAatkF,QAAQ4lF,aACtCA,GACA9wF,KAAKgvB,QAAQI,OAAO0hE,EAAarwE,OAAQqwE,EAAapwF,WAAa,GAAIowF,EAAahlF,QAAU,QAIlG0jF,EAAaV,cAAcvnE,WC/L1BwpE,GAOT9wF,YAAoB+wF,GAAAhxF,UAAAgxF,EANZhxF,cAA6B64D,KAI7B74D,mBAAe,EAGnBA,KAAKixF,mBAGF7jC,aAEH,SADMptD,KAAKixF,oBACNjxF,KAAKkxF,cACN,MAAM,IAAInqF,MAAM,iBAEpB,aAAc/G,KAAKmxF,UAAUr0D,SAAS/a,IAGnCqrC,mBAEH,SADMptD,KAAKixF,oBACNjxF,KAAKkxF,cACN,MAAM,IAAInqF,MAAM,iBAEpB,MAAMgb,QAAY/hB,KAAKmxF,SACvB,OAAOpvE,EAAI+a,SAAS/a,IAAIkH,MAAM3oB,GAAMA,EAAEsE,OAASmd,EAAI+a,SAAS6zC,WAGzDvjB,aAAagkC,GAEhB,SADMpxF,KAAKixF,oBACNjxF,KAAKqxF,cACN,MAAM,IAAItqF,MAAM,uBAGd/G,KAAKgxF,KAAKhiE,QAAQI,OAAOpvB,KAAKqxF,cAAe,CAAED,UAGlDp0B,UAAUlrD,GAEb,OADA9R,KAAKk2B,YACEl2B,KAAKmT,SAAStB,IAAI,UAAWC,GAGhCs7C,yBACJ,IACI,GAAIptD,KAAKsxF,kBACL,OAEJ,MAAM9iF,QAAexO,KAAKgxF,KAAKhiE,QAAQI,OA1Db,4BA2D1BpvB,KAAKsxF,kBAAoB9iF,EAAOsuB,SAASw0D,kBACzCtxF,KAAKkxF,cAAgB1iF,EAAOsuB,SAASy0D,oBACrCvxF,KAAKqxF,cAAgB7iF,EAAOsuB,SAAS00D,oBACvC,MAAO5/E,GACL,QAIAw7C,eAEJ,aADMptD,KAAKixF,yBACEjxF,KAAKgxF,KAAKhiE,QAAQI,OAAkBpvB,KAAKkxF,eAGlD9jC,wBACEptD,KAAKixF,mBACPjxF,KAAKyxF,eAGTzxF,KAAKyxF,cAAe,EACpBzxF,KAAKgxF,KAAK38C,SAASne,UAAUl2B,KAAKsxF,mBAAoB/8E,IAC9CA,GAAQA,EAAKwN,KAAOxN,EAAKo8D,UACzB3wE,KAAKmT,SAASX,QAAQ,UAAW+B,EAAKwN,IAAIkH,MAAM3oB,GAAMA,EAAEsE,OAAS2P,EAAKo8D,iBCjFtF,MAAM+gB,GAAoC,6BAE7BC,GAGT1xF,YAAoB+uB,EAAqCwqB,EAAqCtmC,GAA1ElT,aAAAgvB,EAAqChvB,aAAAw5C,EAAqCx5C,YAAAkT,EAFtFlT,eAAY,IAAIgyB,IAKjBo7B,WAAWwkC,GACd,IAAIC,QAAgB7xF,KAAK+hB,MACzB,QAA4B,IAAjB6vE,EACP,OAAOC,EAGX,GAA4B,iBAAjBD,EACP,OAAOC,EAAQnoF,QAAQooF,GAAWA,EAAOltF,OAASgtF,IAGtD,GAA4B,iBAAjBA,EACP,MAAM,IAAI7qF,MAAM,6DAGpB,GAAI6qF,EAAaG,YAAa,CAC1B,MAAMC,EAAYJ,EAAaG,YAAY5lF,cAC3C0lF,EAAUA,EAAQnoF,QAAQooF,GAAWA,EAAO5kE,SAAS8V,MAAM5V,2BAAYA,EAAQ6kE,mCAAcjvD,MAAMkvD,GAAOA,EAAG/lF,gBAAkB6lF,SAOnI,OAJIJ,EAAahtF,OACbitF,EAAUA,EAAQnoF,QAAQooF,GAAWA,EAAOltF,OAASgtF,EAAahtF,QAG/DitF,EAGJzkC,YAAY0kC,GACf,GAAuB,iBAAXA,GAAyC,iBAAXA,GAA2C,iBAAXA,GAAgD,iBAAlBA,EAAOA,OAC3G,MAAM,IAAI/qF,MAAM,+EAGE,iBAAX+qF,IACPA,EAAS,CACLA,WAIR,MAAMK,EAAaL,EAAOA,OACpBM,QAAkBpyF,KAAKmH,IAAIgrF,GAEjC,QAAyB,IAAdC,EACP,MAAM,IAAIrrF,MAAM,UAAUorF,gBAG9B,MAAME,GAAmBD,EAAUllE,SAAS8V,MAAMsvD,GAA+C,QAA1BA,EAAiBzuF,OAGlFiI,EAASgmF,EAAOhmF,SAAWumF,EAAkB,QAAU,YAE7D,IAAIjlE,EACJ,MAAMmlE,EAAeH,EAAUllE,SAASjE,MAAMupE,GAAyC,QAAvBA,EAAc3uF,OAC9E,GAAe,aAAXiI,EACAshB,EAAUmlE,OACP,GAAe,UAAXzmF,EAAoB,CAE3BshB,EAD0BglE,EAAUllE,SAASjE,MAAMupE,GAAyC,aAAvBA,EAAc3uF,QACpD0uF,OAC5B,GAAIzmF,EAAOkE,SACdod,EAAUglE,EAAUllE,SAASjE,MAAMupE,GAAyC,aAAvBA,EAAc3uF,MAAuB2uF,EAAcr/C,aAAernC,EAAOkE,eAC3H,KAAIlE,EAAOmtD,IAGd,MAAM,IAAIlyD,MAAM,0BAA0B+G,KAAKC,UAAUjC,MAFzDshB,EAAUglE,EAAUllE,SAASjE,MAAMupE,GAAyC,QAAvBA,EAAc3uF,MAAkB2uF,EAAc5pE,kBAAoB9c,EAAOmtD,MAKlI,IAAK7rC,EACD,MAAM,IAAIrmB,MAAM,oCAAoC+G,KAAKC,UAAU+jF,qCAGvE,IAAI3+C,EAAa/lB,EAAQ+lB,WACJ,QAAjB/lB,EAAQvpB,OACRsvC,QAAmBnzC,KAAKyyF,SAASrlE,EAAQxE,gBAAiBkpE,EAAO5mF,UAGrE,MAAMtJ,QAAqD5B,KAAK0yF,sBAAsBv/C,EAAYg/C,EAAYL,EAAOntF,SAIrH,OAHA/C,EAAO+lB,QAAUmqE,EACjBlwF,EAAOwrB,QAAUA,EAEVxrB,EAGJwrD,YAKH,IAAIyT,EACJ,IACI,MAAMj/D,QAAe5B,KAAKgvB,QAAQI,OAA0C,0BAA2B,CAAEujE,iBAAiB,IAC1H9xB,EAAOj/D,EAAOk7B,SAASwkC,aACzB,MAAO5/D,GAEL,OADA1B,KAAKkT,OAAOtB,MAAM,kCAAmClQ,GAC9C,GAEX,MAAMmwF,EAAoD,GACpDe,EAAkB/xB,EAAKn3D,QAAQuvD,GAAQA,EAAI44B,SAAW54B,EAAI44B,QAAQlxF,OAAS,IAEjF,IAAK,MAAMs4D,KAAO25B,EACd,IAAK,MAAMR,KAAan5B,EAAI44B,QAAS,CACjC,IAAIC,EAASD,EAAQO,EAAUxtF,MAC1BktF,IACDA,EAAS,CACLltF,KAAMwtF,EAAUxtF,KAChBsoB,SAAU,IAEd2kE,EAAQO,EAAUxtF,MAAQktF,GAG9B,MAAM1kE,EAAwC,CAC1CxE,gBAAiBqwC,EAAIr0D,KACrBiuF,iBAAkB55B,EAAI5sD,OAAS,GAC/BymF,uBAAwB75B,EAAIY,QAC5B73B,YAAaowD,EAAUpwD,YACvBiwD,aAAcG,EAAU/9C,SACxB0+C,gBAAiB95B,EAAIwB,KACrB52D,KAAM,OAGViuF,EAAO5kE,SAAShqB,KAAKkqB,GAI7B,MAAMqN,EAAUz6B,KAAKgvB,QAAQyL,UACvBu4D,EAAkBv4D,EAAQpsB,KAAKysB,GAAWA,EAAO5T,WAAUxd,QAAQupF,QAA6C,IAAnBA,IAE7FC,EAAgB,kBAGtB,IAAIC,EAEJ,GAJwCnzF,KAAKgvB,QAAQE,UAAU8T,MAAMviB,GAAWA,EAAO7b,OAASsuF,IAK5F,IACI,MAAMtxF,QAAe5B,KAAKgvB,QAAQI,OAA6B8jE,EAAe,CAAEvoE,IAAKqoE,IACrFG,EAAevxF,EAAOk7B,SAAS0c,QACjC,MAAO93C,IAMb,IAAK,MAAMo5B,KAAUL,QACXt5B,QAAQ4gB,IAAI+Y,EAAOC,aACpBrxB,QAAQ+W,GAAWA,EAAO7b,KAAK4mF,WAAWkG,MAC1CrjF,KAAI++C,MAAO3sC,IACR,MAAM0xE,EAAa1xE,EAAO7b,KAAK41E,QAAQkX,GAAmC,IAC1E,IAAII,EAASD,EAAQM,GAChBL,IACDA,EAAS,CACLltF,KAAMutF,EACNjlE,SAAU,IAEd2kE,EAAQM,GAAcL,GAE1B,MAAM96E,EAAOyJ,EAAOyR,MAAM4/D,OAEpB74B,EAAM4H,EAAK53C,MAAMmqE,GAAmBA,EAAexuF,OAASk2B,EAAOxiB,cACzE,IAAI+6E,EACAp6B,GAAOA,EAAI44B,UACXwB,EAAYp6B,EAAI44B,QAAQ5oE,MAAMqqE,GAAiBA,EAAa1uF,OAASutF,KAGzE,MAAM9lF,QAAcrM,KAAKuzF,iBAAiBz4D,EAAO5T,SAAUisE,GACrD/lE,EAAwC,CAC1C+lB,WAAYrY,EAAO9qB,SACnB4Y,gBAAiBkS,EAAOxiB,YACxBy6E,gBAAiB/7E,EAAKyjD,OAAQxB,eAAAA,EAAKwB,MACnCo4B,kBAAkB55B,eAAAA,EAAK5sD,QAAS,GAChCymF,uBAAwB97E,EAAKtS,cAAeu0D,eAAAA,EAAKY,SACjD73B,YAAahrB,EAAKgrB,cAAeqxD,eAAAA,EAAWrxD,aAC5CiwD,aAAcj7E,EAAKi7E,eAAgBoB,eAAAA,EAAWh/C,UAC9Cm/C,cAAennF,EACfxI,KAAM,YAEViuF,EAAO5kE,SAAShqB,KAAKkqB,EAAQ,KAIzC,OAAO5tB,OAAO0E,OAAO2tF,GAGlB4B,kBAAkB3B,EAA0D1kE,GAC/E,GAAuB,iBAAX0kE,GAAyC,iBAAXA,GAA2C,iBAAXA,GAAgD,iBAAlBA,EAAOA,OAC3G,MAAM,IAAI/qF,MAAM,+EAEpB,GAAuB,mBAAZqmB,EACP,MAAM,IAAIrmB,MAAM,6CAKpB,MAAMorF,EAA+B,iBAAXL,EAAsBA,EAASA,EAAOA,OAC1DntD,EAAa,uBAAuCwtD,IAC1D,IACIuB,EADAC,EAAsE,GAK1E,GAF0B3zF,KAAK4zF,UAAU37E,IAAIk6E,GAGzC,MAAM,IAAIprF,MAAM,8BAA8BorF,yBAGlDnyF,KAAK4zF,UAAU/hF,IAAIsgF,GAEnB,MAAMvwF,EAAS,CACX00B,YAAa,KACTt2B,KAAK4zF,UAAU3tB,OAAOksB,GAEtBuB,EACK5xF,MAAK,IAAM9B,KAAKgvB,QAAQkT,WAAWyC,KACnC96B,OAAOsI,GAAQnS,KAAKkT,OAAO6Y,MAAM,wCAAwC4Y,yBAAkCxyB,MAAO,GAI/H,GAAsB,iBAAX2/E,EAAqB,CAC5B,MAAQA,OAAQngE,KAAYi6D,GAASkG,EACrC6B,EAAa/H,EAejB,OAZA8H,EAAkB1zF,KAAKgvB,QAAQsU,SAAS,CAAE1+B,KAAM+/B,EAAYzS,MAAO,CAAE4/D,OAAQ6B,KAAiBjwD,IAC1F,GAAI1jC,KAAK4zF,UAAU37E,IAAIk6E,GACnB,OAAO/kE,EAAQsW,MAIvBgwD,EAAgB7pF,OAAOsI,IACnBnS,KAAK4zF,UAAU3tB,OAAOksB,GAEtBnyF,KAAKkT,OAAO4K,KAAK,sCAAsC6mB,yBAAkCxyB,IAAM,IAG5FvQ,EAGHwrD,UAAU0kC,GACd,aAAc9xF,KAAK+hB,OAAOkH,MAAM4qE,GAAqBA,EAAiBjvF,OAASktF,IAG3E1kC,eAAe90C,EAAqBpN,GAExC,aADqBlL,KAAKgvB,QAAQI,OAAqC,2BAA4B,CAAEysC,KAAMvjD,EAAapN,aAC1G4xB,SAAS2/B,GAGnBrP,4BAA4Bja,EAAoB2+C,EAAgBntF,GACpE,MAAMggC,EAAa,uBAAuCmtD,IAC1D,IAAIgC,EAAgB9zF,KAAKgvB,QAAQyL,UAAUxR,MAAM6R,GAAWA,EAAO9qB,WAAamjC,IAC3E2gD,aAEU3yF,SAAc,CAACC,EAASC,KAC/B,IAAI6qC,EAEJ,MAAMxe,EAAQ1tB,KAAKgvB,QAAQsM,aAAaR,IAChCA,EAAO9qB,WAAamjC,IACpB2gD,EAAgBh5D,EAChB15B,IACA0gB,aAAaoqB,GACbxe,QAIRwe,EAAY3+B,YAAW,KACnBmgB,IACArsB,EAAO,IAAI0F,MAAM,4CAA4CosC,KAAc,GAC5E,IAAU,IAIN2gD,EAAc/4D,aAAa9R,MAAM8qE,GAAqBA,EAAiBnvF,OAAS+/B,eAGhFxjC,SAAc,CAACC,EAASC,KAC/B,IAAI6qC,EAEJ,MAAMxe,EAAQ1tB,KAAKgvB,QAAQkM,aAAa84D,IAChCA,EAAYpvF,OAAS+/B,IACrBvjC,IACA0gB,aAAaoqB,GACbxe,QAIRwe,EAAY3+B,YAAW,KACnBmgB,IACArsB,EAAO,IAAI0F,MAAM,+BAA+B49B,kBAA2BwO,KAAc,GAC1F,IAAU,IAMrB,MAAO,CACHvxC,cAHiB5B,KAAKgvB,QAAQI,OAAOuV,EAAYhgC,EAAS,CAAEqL,SAAUmjC,KAGvDrW,UAIfswB,uBAAuBlkD,EAAYiqF,WACvC,QAA4B,IAAjBA,EACP,iBAAOA,EAAalqE,MAAMgrE,GAAgBA,EAAY/qF,KAAOA,0BAAKmD,MAItE,MAAME,YAASvM,KAAKw5C,8BAASqqC,SAAS36E,GAEtC,aADoBqD,eAAAA,EAAQ8oE,mBC7SvB6e,GAKTj0F,YAAoB8M,EAAyBiiB,GAAzBhvB,aAAA+M,EAAyB/M,aAAAgvB,EAHrChvB,cAA6B64D,KAC7B74D,8BAA0B,EAK3BotD,UAAU6L,GAEb,aADoBj5D,KAAKgvB,QAAQI,OAAO,gBAAiB,CAAE6pC,IAAKA,QAAAA,EAAOj5D,KAAK+M,WAChE+vB,SAGTswB,UAAU74C,EAAWrJ,SACxBlL,KAAKm0F,iBAAiB5/E,SAChBvU,KAAKgvB,QAAQI,OAAO,gBAAiB,CAAE6pC,cAAK/tD,eAAAA,EAAS+tD,mBAAOj5D,KAAK+M,QAASwH,OAAM41C,OAAO,IAG1FiD,aAAa6L,EAAa1kD,GAG7B,OAFAvU,KAAKo0F,UAAUn7B,GACfj5D,KAAKm0F,iBAAiB5/E,GACfvU,KAAKmyB,IAAI5d,EAAM,CAAE0kD,QAGrB7L,aAAa74C,EAAWrJ,SAC3BlL,KAAKm0F,iBAAiB5/E,SAChBvU,KAAKgvB,QAAQI,OAAO,gBAAiB,CAAE6pC,cAAK/tD,eAAAA,EAAS+tD,mBAAOj5D,KAAK+M,QAASwH,OAAM41C,OAAO,IAG1FiD,gBAAgB6L,EAAa1kD,GAGhC,OAFAvU,KAAKo0F,UAAUn7B,GACfj5D,KAAKm0F,iBAAiB5/E,GACfvU,KAAKwH,OAAO+M,EAAM,CAAE0kD,QAGxB7L,YAAY6L,SACTj5D,KAAKgvB,QAAQI,OAAO,gBAAiB,CAAE6pC,IAAKA,QAAAA,EAAOj5D,KAAK+M,QAAS6F,OAAO,IAG3Ew6C,eAAe6L,GAClBj5D,KAAKo0F,UAAUn7B,SACTj5D,KAAKgvB,QAAQI,OAAO,gBAAiB,CAAE6pC,MAAKrmD,OAAO,IAGtDw6C,eAEH,aADoBptD,KAAKgvB,QAAQI,OAAO,kBAC5B0N,SAGTswB,uBACGptD,KAAKgvB,QAAQI,OAAO,gBAAiB,CAAExc,OAAO,IAGjDsjB,UAAUpkB,GAEb,OADA9R,KAAKq0F,eAAeviF,GACb9R,KAAKorF,aAAaprF,KAAK+M,QAAS+E,GAGpCs5E,aAAanyB,EAAannD,GAC7B9R,KAAKo0F,UAAUn7B,GACfj5D,KAAKq0F,eAAeviF,GACpB,MAAMwiF,EAAgBt0F,KAAKmT,SAAStB,IAAIonD,EAAKnnD,GAQ7C,OALA9R,KAAKu0F,0BACAzyF,MAAK,KACF9B,KAAKgvB,QAAQI,OAAO,gBAAiB,CAAE6pC,MAAK/iC,WAAW,GAAO,IAG/D,KACHo+D,GAAe,EAIflnC,gCACAptD,KAAKw0F,0BAGTx0F,KAAKw0F,yBAA0B,QAEzBx0F,KAAKgvB,QAAQsU,SAAS,oBAAqBI,IAC7C1jC,KAAKmT,SAASX,QAAQkxB,EAAKu1B,IAAKv1B,EAAK,KAIrC0wD,UAAUn7B,GACd,IAAKA,EACD,MAAM,IAAIlyD,MAAM,yBAEpB,IAAKixC,GAASihB,GACV,MAAM,IAAIlyD,MAAM,0BAGhBotF,iBAAiB5/E,GACrB,IAAKA,EACD,MAAM,IAAIxN,MAAM,0BAEpB,IAAKkxC,GAAS1jC,GACV,MAAM,IAAIxN,MAAM,4BAIhBstF,eAAeviF,GACnB,IAAKymC,GAAWzmC,GACZ,MAAM,IAAI/K,MAAM,qCCzGf0tF,GAETx0F,YAAoB0kC,EAA4B3V,GAA5BhvB,gBAAA2kC,EAA4B3kC,aAAAgvB,EAGzCo+B,UAAU1jD,GAEb,aADqB1J,KAAKovB,qBAAkE,CAAE1lB,YAChFozB,SAAS43D,QAGpBtnC,UAAUunC,GACb30F,KAAK40F,mBAAmBD,SAClB30F,KAAKovB,oBAAoDulE,GAG5DvnC,aAAat/B,EAAalpB,GAC7B,IAAKozC,GAASlqB,GACV,MAAM,IAAI/mB,MAAM,0BAEpB,IAAKixC,GAASpzC,GACV,MAAM,IAAImC,MAAM,iCAEd/G,KAAKovB,uBAAuD,CAAEtB,MAAKlpB,SAGrEwqB,OAAUgC,EAAmB7c,GACjC,OAAOvU,KAAKgvB,QAAQI,OAAUpvB,KAAK2kC,WAAY,CAAEvT,UAASsS,KAAMnvB,IAG5DqgF,mBAAmBD,GACvB,IAAKA,EACD,MAAM,IAAI5tF,MAAM,4BAEpB,IAAKkxC,GAAS08C,GACV,MAAM,IAAI5tF,MAAM,+BCrB5B,MAAM8tF,GAA4B,UCflC50F,cAGWD,kBAAc,EACdA,aAAyB,GACzBA,YAAiC,OACjCA,aAAmE,OAEnEmL,KAAKqD,GACRxO,KAAK80F,aAAc,EACnB90F,KAAK+0F,QAAQvmF,GACbxO,KAAKuV,QAAU,IAAIpU,SAAQ,CAACC,EAASC,KACjCrB,KAAKoB,QAAUA,EACfpB,KAAKqB,OAASA,CAAM,IAIrB0zF,QAAQvmF,GACXxO,KAAKghE,QAAQ99D,KAAK,CAAEosB,KAAM,IAAIvrB,KAAQyK,WAGnC3M,KAAKM,GACRnC,KAAKoB,QAAQe,GAGVyP,MAAMlQ,GACT1B,KAAKqB,OAAOK,KDTd8kD,GAAU4G,MAAOliD,IACnB,IAAI8pF,GAAW,EACVH,GAASC,cACVE,GAAW,EACXH,GAAS1pF,KAAKD,IAIlB,MAAM4B,EAA8C,oBAAXP,QAA0BA,OAAOO,SAC1E,GAAIA,IACKkoF,EAED,OADAH,GAASE,QAAQ7pF,GACV2pF,GAASt/E,QAGxB,MAAMpT,QAAU8yF,GAAY/pF,EAAS4B,GAErC,OADA+nF,GAASzzF,QAAQe,GACVA,CAAC,EAGN8yF,GAAc7nC,MAAOliD,EAAwB4B,KAC/C,MACM8qD,EAAiBnjD,GAAMC,oBAMvB6hC,EAAa/B,GADnBtpC,EAAUA,GAAW,IAIrB,IAAI0tD,EACAje,EACA4I,EACA2xC,EACAC,EAgLJ,SAASC,EAAarmE,EAAoB7b,EAA+B1E,GACrE,MAAM6mF,EAAYniF,EAAO+N,UAAU8N,GAEnC,GAAIvgB,GAAUA,EAAO0E,OAAQ,CACzB,MAAMoiF,EAAe9mF,EAAO0E,OACxBoiF,EAAa3jF,SACb0jF,EAAU1mE,aAAa2mE,EAAa3jF,SAEpC2jF,EAAatkD,SACbqkD,EAAU7mE,aAAa8mE,EAAatkD,SAQ5C,OAAOqkD,EAvMXnqF,EAAQmoC,QAAUnoC,EAAQmoC,SAAW,GA0MrC,MAAMrB,EAA4B,CAE9BsC,KAAM,CACF,CAAE1vC,KAAM,UAAWzE,OAhM3B,SAAuB6wF,GACnB,GAAIz6C,EAAWiD,QAAS,CAEpB,MAAM+7C,EAAgBH,EAAa,UAAWpE,EAAK99E,OAAQqjC,EAAWiD,SAgBtE,OAdA+J,EAAWiyC,GACPxE,EAAK36C,IACLk/C,GACA,IACW38B,IAEX,IACWs8B,IAEX,IACWC,GAEXv9B,GACJ69B,EAASlyC,GACFA,KA8KP,CAAE3+C,KAAM,aAAczE,OA1K9B,SAA0B6wF,SACtB,GAAIz6C,EAAWpB,YACPsiB,GAAeK,+BAAiCL,GAAeK,8BAA8Bk5B,EAAKziF,YAAa,CAE/G,MAAMmnF,EAAiBN,EAAa,WAAYpE,EAAK99E,OAAQqjC,EAAWpB,YAqBxE,OAnBAwF,EAAY,IAAI8c,GAAe,CAC3BlpD,WAAYyiF,EAAKziF,WACjB8lC,SAAU28C,EAAK38C,SACfgC,IAAK26C,EAAK36C,IACVnjC,OAAQwiF,EACRh+B,SAAU,OACVM,qBAAqB,EACrB9S,uBAAwB,OACxB6D,iBAAkB,KAClBvP,QAAS+J,EACT0lB,iBAAkB,IACPrQ,EAEXvT,KAAM9O,EAAWpB,WAAWkQ,KAC5BE,aAAchP,EAAWpB,WAAWoQ,aACpC10B,qBAAY/jB,eAAAA,EAAU82C,mCAAc/yB,WACpC+mC,mBACD1qD,IACHuoF,EAAS96C,GACFA,KAkJX,CAAE/1C,KAAM,aAAczE,OA7I9B,SAA0B6wF,GACtB,IAAKz6C,EAAW4qB,WACZ,OAGJ,MAAMjuD,EAASkiF,EAAa,aAAcpE,EAAK99E,OAAQqjC,EAAW4qB,YAYlE,OATAvI,EAAc+8B,GAAkB,CAC5Bt/C,IAAK26C,EAAK36C,IACVmD,QAAS+J,EACTrwC,SACAiiC,WAAYwF,EACZ0K,KAAM9O,EAAW4qB,WAAW9b,KAC5BuS,mBAEJ69B,EAAS78B,GACFA,IA6HH,CAAEh0D,KAAM,UAAWzE,OA1H3B,SAAuB6wF,SACnB,IAAKz6C,EAAW6tC,QACZ,OAGJ,MAAMlxE,EAASkiF,EAAa,UAAWpE,EAAK99E,OAAQqjC,EAAW6tC,SACzDwR,EAAgBr/C,EAAW6tC,QAC3ByR,EAAMC,GAAe,CACvBz/C,IAAK26C,EAAK36C,IACV8qB,WAAYvI,EACZ4sB,eAAgB,IAAM7qC,EACtBznC,SACAmyC,KAAMuwC,EAAcvwC,KACpBy/B,gCAAuB8Q,EAAc9Q,sCACrCltB,mBAGJ,OADA69B,EAASI,GACFA,IA0GH,CAAEjxF,KAAM,WAAYzE,OAvG5B,SAAwB6wF,GACpB,IAAKz6C,EAAW8yB,SACZ,OAGJ,IAAK2nB,EAAK38C,SAEN,OAIJ,MAAMnhC,EAASkiF,EAAa,WAAYpE,EAAK99E,OAAQqjC,EAAW8yB,UAKhE,OAHA8rB,EAAY9rB,GAAS2nB,EAAK38C,SAAU28C,EAAK36C,KAAK,IAAMkN,GAAUrwC,GAE9DuiF,EAASN,GACFA,IAwFH,CAAEvwF,KAAM,UAAWzE,OArF3B,SAAuB6wF,GACnB,MAAM+E,WEhLU1/C,GACpB,MAAMy3C,EAAU,IAAIJ,GAAYr3C,GAEhC,MAAO,CACH/S,SAAUwqD,EAAQxqD,SAASphB,KAAK4rE,GAChC5rD,WAAY4rD,EAAQ5rD,WAAWhgB,KAAK4rE,GACpCkI,cAAelI,EAAQkI,cAAc9zE,KAAK4rE,GAC1CG,aAAcH,EAAQG,aAAa/rE,KAAK4rE,GAExClgE,MAAO,IAAMzsB,QAAQC,UAE7B,CFqK2B0sF,CAAQkD,EAAK36C,KAGhC,OADAo/C,EAASM,GACFA,IAkFH,CAAEnxF,KAAM,WAAYzE,OAjE5B,SAA2B6wF,GACvB,GAAIz6C,EAAW8wB,SAAU,CACrB,MAAM4uB,EAAiBb,EAAa,WAAYpE,EAAK99E,OAAQqjC,EAAW8wB,UAIxE,OAFA6tB,EAAY,IAAInL,GAAeiH,EAAK36C,IAAK4/C,GACzCR,EAASP,GACFA,KA4DP,CAAEtwF,KAAM,UAAWzE,OAhF3B,SAAuB6wF,GACnB,MAAMkF,EAAa,IAAIvE,GAAQX,EAAK36C,IAAKkN,EAAUytC,EAAK99E,OAAO+N,UAAU,YAGzE,OADAw0E,EAASS,GACFA,IA6EH,CAAEtxF,KAAM,gBAAiBzE,OA1EjC,SAA6B6wF,GACzB,MAAMmF,EAAmB,IAAIlH,GAAc+B,EAAKhiE,SAGhD,OADAymE,EAASU,GACFA,IAuEH,CAAEvxF,KAAM,SAAUzE,OA1D1B,SAAsB6wF,GAClB,IAAKA,EAAK38C,SAEN,OAEJ,MAAM+hD,WGlNUpF,GACpB,MAAMqF,EAAS,IAAItF,GAAWC,GAE9B,MAAO,CACH3iC,KAAMgoC,EAAOhoC,KAAKnsC,KAAKm0E,GACvBC,WAAYD,EAAOC,WAAWp0E,KAAKm0E,GACnCE,OAAQF,EAAOE,OAAOr0E,KAAKm0E,GAC3Br5B,UAAWq5B,EAAOr5B,UAAU96C,KAAKm0E,GACjCzoE,MAAO,IAAMzsB,QAAQC,UAE7B,CHwM0Bi1F,CAAOrF,GAGzB,OADAyE,EAASW,GACFA,IAmDH,CAAExxF,KAAM,QAASzE,OAhDzB,SAAqB6wF,WACjB,MAAMjkF,sBAAU7B,EAAQoN,2BAAexL,eAAAA,EAAUwL,2BAAe04E,EAAKhiE,QAAQhf,SAASsI,YAChFk+E,EAAQ,IAAItC,GAAMnnF,EAASikF,EAAKhiE,SAGtC,OADAymE,EAASe,GACFA,IA4CH,CAAE5xF,KAAM,UAAWzE,OAzC3B,SAAuB6wF,GACnB,MAAM9jF,WIlOUmpC,EAAqB1R,GACzC,MAAM+vD,EAAU,IAAID,GAAQ9vD,EAAY0R,GAExC,MAAO,CACHlvC,IAAKutF,EAAQvtF,IAAI+a,KAAKwyE,GACtBrxD,OAAQqxD,EAAQrxD,OAAOnhB,KAAKwyE,GAC5BviE,IAAKuiE,EAAQviE,IAAIjQ,KAAKwyE,GACtB9mE,MAAO,IAAMzsB,QAAQC,UAE7B,CJyNoBszF,CAAQ1D,EAAKhiE,QAxLF,kBA2LvB,OADAymE,EAASvoF,GACFA,KAwCP0H,WAEAiiC,WAAaX,IAETA,EAAK1nC,OAAO2mC,WAAaoB,EAAWpB,WACpCe,EAAK1nC,OAAOgrC,QAAUjD,EAAWiD,QACjCtD,EAAK1nC,OAAO2yD,WAAa5qB,EAAW4qB,WACpCjrB,EAAK1nC,OAAO41E,QAAU7tC,EAAW6tC,QACjCluC,EAAK1nC,OAAO66D,SAAW9yB,EAAW8yB,SAClCnzB,EAAK1nC,OAAO64D,SAAW9wB,EAAW8wB,QAAQ,GAI5CovB,EAAoB,GAQ1B,SAAShB,EAASn4E,GACdm5E,EAAWvzF,KAAKoa,GARE,oBAAX/Q,SACDA,OAAemqF,iBAChBnqF,OAAemqF,eAAiB,IAEpCnqF,OAAemqF,eAAexzF,KAAKuzF,IAOxC,MAAME,QAAiBC,GAAY1rF,EAAS8mC,GAO5C,OAJIryC,MAAMgG,QAAQuF,eAAAA,EAAS2rF,YAAc3rF,EAAQ2rF,UAAUl2F,cACjDQ,QAAQ4gB,IAAI7W,EAAQ2rF,UAAUxoF,KAAK0E,GAAQA,EAAI4jF,EAASzrF,MAG3DyrF,CAAO,EAGlBnwC,GAAQvQ,YAAe2gD,GAAoBhiF,QAC3C4xC,GAAQ5xC,QAAUA,GAClB4xC,GAAQswC,MAAQjC,GKnThB,IAAIkC,GAAeC,GACfC,IAAoB,EAExB,GAAsB,oBAAX1qF,OAAwB,CAE/B,MAAMO,EAAYP,OAAeO,SAC7BA,GAAYA,EAASoqF,eACrBH,GAAgBxqF,OAAe4qF,KAE/BF,IAAoB,GAGpBA,KACC1qF,OAAe4qF,KAAOJ,WAInBxqF,OAAeulC,gBAG1BilD,GAAqBjkF,QAAUikF,GAEjBA"}